import {
  easing,
  require_jsx_runtime
} from "./chunk-D2ORLU7K.js";
import {
  Composer,
  MeshLineGeometry,
  MeshLineMaterial,
  Text,
  preloadFont,
  react_merge_refs_esm_default,
  require_lodash,
  require_lodash2,
  require_stats_min
} from "./chunk-GG4QYLFF.js";
import {
  require_client
} from "./chunk-JZN3HKVP.js";
import {
  ArcballControls,
  DRACOLoader,
  DecalGeometry,
  DeviceOrientationControls,
  EffectComposer,
  FBXLoader,
  FirstPersonControls,
  Flow,
  FlyControls,
  FontLoader,
  FullScreenQuad,
  GLTFLoader,
  GammaCorrectionShader,
  HorizontalBlurShader,
  KTX2Loader,
  Line2,
  LineGeometry,
  LineMaterial,
  LineSegments2,
  LineSegmentsGeometry,
  MapControls,
  MarchingCubes,
  MeshoptDecoder,
  OrbitControls,
  PointerLockControls,
  RenderPass,
  SVGLoader,
  ShaderPass,
  SimplexNoise,
  SkeletonUtils,
  Sky,
  TextGeometry,
  TrackballControls,
  TransformControls,
  VerticalBlurShader,
  mergeVertices,
  toCreasedNormals
} from "./chunk-SD6CSSXR.js";
import {
  require_lodash as require_lodash3
} from "./chunk-SJB2NZBD.js";
import {
  Canvas,
  _extends,
  addAfterEffect,
  addEffect,
  addTail,
  applyProps,
  clear,
  context,
  createPortal,
  extend,
  preload,
  suspend,
  useFrame,
  useLoader,
  useThree
} from "./chunk-JLFIAEVS.js";
import {
  AdditiveBlending,
  AlwaysStencilFunc,
  AudioListener,
  AudioLoader,
  BackSide,
  Box3,
  BufferAttribute,
  BufferGeometry,
  ByteType,
  Camera,
  CameraHelper,
  CatmullRomCurve3,
  Color,
  CubeTextureLoader,
  CubicBezierCurve3,
  CustomBlending,
  CylinderGeometry,
  DataTexture,
  DefaultLoadingManager,
  DepthFormat,
  DepthTexture,
  DoubleSide,
  DynamicDrawUsage,
  EdgesGeometry,
  Euler,
  EventDispatcher,
  Float32BufferAttribute,
  FloatType,
  FrontSide,
  Frustum,
  Group,
  HalfFloatType,
  IntType,
  Line3,
  LinearFilter,
  LinearMipmapLinearFilter,
  Material,
  MathUtils,
  Matrix4,
  Mesh,
  MeshBasicMaterial,
  MeshDepthMaterial,
  MeshLambertMaterial,
  MeshNormalMaterial,
  MeshPhysicalMaterial,
  MeshStandardMaterial,
  NearestFilter,
  NoBlending,
  NoToneMapping,
  NormalBlending,
  Object3D,
  OneFactor,
  OrthographicCamera,
  PerspectiveCamera,
  Plane,
  PlaneGeometry,
  Points,
  PointsMaterial,
  QuadraticBezierCurve3,
  Quaternion,
  RGBAFormat,
  RGBAIntegerFormat,
  RGFormat,
  RGIntegerFormat,
  Ray,
  Raycaster,
  RedFormat,
  RedIntegerFormat,
  ReplaceStencilOp,
  Scene,
  ShaderMaterial,
  Shape,
  ShortType,
  Sphere,
  Spherical,
  SrcAlphaFactor,
  TextureLoader,
  Triangle,
  Uniform,
  UniformsUtils,
  UnsignedByteType,
  UnsignedIntType,
  UnsignedShortType,
  Vector2,
  Vector3,
  Vector4,
  VideoTexture,
  WebGLRenderTarget
} from "./chunk-KRTSOPLI.js";
import {
  require_react
} from "./chunk-YN3MIK7E.js";
import {
  __commonJS,
  __toESM
} from "./chunk-4EOJPDL2.js";

// node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js
var require_use_sync_external_store_shim_development = __commonJS({
  "node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js"(exports3) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var React120 = require_react();
        var ReactSharedInternals = React120.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        function error(format) {
          {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format, args);
            }
          }
        }
        function printWarning(level, format, args) {
          {
            var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame.getStackAddendum();
            if (stack !== "") {
              format += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return String(item);
            });
            argsWithFormat.unshift("Warning: " + format);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        function is(x2, y2) {
          return x2 === y2 && (x2 !== 0 || 1 / x2 === 1 / y2) || x2 !== x2 && y2 !== y2;
        }
        var objectIs = typeof Object.is === "function" ? Object.is : is;
        var useState55 = React120.useState, useEffect58 = React120.useEffect, useLayoutEffect48 = React120.useLayoutEffect, useDebugValue3 = React120.useDebugValue;
        var didWarnOld18Alpha = false;
        var didWarnUncachedGetSnapshot = false;
        function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
          {
            if (!didWarnOld18Alpha) {
              if (React120.startTransition !== void 0) {
                didWarnOld18Alpha = true;
                error("You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release.");
              }
            }
          }
          var value = getSnapshot();
          {
            if (!didWarnUncachedGetSnapshot) {
              var cachedValue = getSnapshot();
              if (!objectIs(value, cachedValue)) {
                error("The result of getSnapshot should be cached to avoid an infinite loop");
                didWarnUncachedGetSnapshot = true;
              }
            }
          }
          var _useState = useState55({
            inst: {
              value,
              getSnapshot
            }
          }), inst = _useState[0].inst, forceUpdate = _useState[1];
          useLayoutEffect48(function() {
            inst.value = value;
            inst.getSnapshot = getSnapshot;
            if (checkIfSnapshotChanged(inst)) {
              forceUpdate({
                inst
              });
            }
          }, [subscribe, value, getSnapshot]);
          useEffect58(function() {
            if (checkIfSnapshotChanged(inst)) {
              forceUpdate({
                inst
              });
            }
            var handleStoreChange = function() {
              if (checkIfSnapshotChanged(inst)) {
                forceUpdate({
                  inst
                });
              }
            };
            return subscribe(handleStoreChange);
          }, [subscribe]);
          useDebugValue3(value);
          return value;
        }
        function checkIfSnapshotChanged(inst) {
          var latestGetSnapshot = inst.getSnapshot;
          var prevValue = inst.value;
          try {
            var nextValue = latestGetSnapshot();
            return !objectIs(prevValue, nextValue);
          } catch (error2) {
            return true;
          }
        }
        function useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {
          return getSnapshot();
        }
        var canUseDOM = !!(typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined");
        var isServerEnvironment = !canUseDOM;
        var shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;
        var useSyncExternalStore$2 = React120.useSyncExternalStore !== void 0 ? React120.useSyncExternalStore : shim;
        exports3.useSyncExternalStore = useSyncExternalStore$2;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/use-sync-external-store/shim/index.js
var require_shim = __commonJS({
  "node_modules/use-sync-external-store/shim/index.js"(exports3, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_use_sync_external_store_shim_development();
    }
  }
});

// node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js
var require_with_selector_development = __commonJS({
  "node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js"(exports3) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var React120 = require_react();
        var shim = require_shim();
        function is(x2, y2) {
          return x2 === y2 && (x2 !== 0 || 1 / x2 === 1 / y2) || x2 !== x2 && y2 !== y2;
        }
        var objectIs = typeof Object.is === "function" ? Object.is : is;
        var useSyncExternalStore = shim.useSyncExternalStore;
        var useRef75 = React120.useRef, useEffect58 = React120.useEffect, useMemo67 = React120.useMemo, useDebugValue3 = React120.useDebugValue;
        function useSyncExternalStoreWithSelector2(subscribe, getSnapshot, getServerSnapshot, selector, isEqual) {
          var instRef = useRef75(null);
          var inst;
          if (instRef.current === null) {
            inst = {
              hasValue: false,
              value: null
            };
            instRef.current = inst;
          } else {
            inst = instRef.current;
          }
          var _useMemo = useMemo67(function() {
            var hasMemo = false;
            var memoizedSnapshot;
            var memoizedSelection;
            var memoizedSelector = function(nextSnapshot) {
              if (!hasMemo) {
                hasMemo = true;
                memoizedSnapshot = nextSnapshot;
                var _nextSelection = selector(nextSnapshot);
                if (isEqual !== void 0) {
                  if (inst.hasValue) {
                    var currentSelection = inst.value;
                    if (isEqual(currentSelection, _nextSelection)) {
                      memoizedSelection = currentSelection;
                      return currentSelection;
                    }
                  }
                }
                memoizedSelection = _nextSelection;
                return _nextSelection;
              }
              var prevSnapshot = memoizedSnapshot;
              var prevSelection = memoizedSelection;
              if (objectIs(prevSnapshot, nextSnapshot)) {
                return prevSelection;
              }
              var nextSelection = selector(nextSnapshot);
              if (isEqual !== void 0 && isEqual(prevSelection, nextSelection)) {
                return prevSelection;
              }
              memoizedSnapshot = nextSnapshot;
              memoizedSelection = nextSelection;
              return nextSelection;
            };
            var maybeGetServerSnapshot = getServerSnapshot === void 0 ? null : getServerSnapshot;
            var getSnapshotWithSelector = function() {
              return memoizedSelector(getSnapshot());
            };
            var getServerSnapshotWithSelector = maybeGetServerSnapshot === null ? void 0 : function() {
              return memoizedSelector(maybeGetServerSnapshot());
            };
            return [getSnapshotWithSelector, getServerSnapshotWithSelector];
          }, [getSnapshot, getServerSnapshot, selector, isEqual]), getSelection = _useMemo[0], getServerSelection = _useMemo[1];
          var value = useSyncExternalStore(subscribe, getSelection, getServerSelection);
          useEffect58(function() {
            inst.hasValue = true;
            inst.value = value;
          }, [value]);
          useDebugValue3(value);
          return value;
        }
        exports3.useSyncExternalStoreWithSelector = useSyncExternalStoreWithSelector2;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/use-sync-external-store/shim/with-selector.js
var require_with_selector = __commonJS({
  "node_modules/use-sync-external-store/shim/with-selector.js"(exports3, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_with_selector_development();
    }
  }
});

// node_modules/eventemitter3/index.js
var require_eventemitter3 = __commonJS({
  "node_modules/eventemitter3/index.js"(exports3, module) {
    "use strict";
    var has = Object.prototype.hasOwnProperty;
    var prefix = "~";
    function Events() {
    }
    if (Object.create) {
      Events.prototype = /* @__PURE__ */ Object.create(null);
      if (!new Events().__proto__)
        prefix = false;
    }
    function EE(fn, context10, once) {
      this.fn = fn;
      this.context = context10;
      this.once = once || false;
    }
    function addListener(emitter, event, fn, context10, once) {
      if (typeof fn !== "function") {
        throw new TypeError("The listener must be a function");
      }
      var listener = new EE(fn, context10 || emitter, once), evt = prefix ? prefix + event : event;
      if (!emitter._events[evt])
        emitter._events[evt] = listener, emitter._eventsCount++;
      else if (!emitter._events[evt].fn)
        emitter._events[evt].push(listener);
      else
        emitter._events[evt] = [emitter._events[evt], listener];
      return emitter;
    }
    function clearEvent(emitter, evt) {
      if (--emitter._eventsCount === 0)
        emitter._events = new Events();
      else
        delete emitter._events[evt];
    }
    function EventEmitter2() {
      this._events = new Events();
      this._eventsCount = 0;
    }
    EventEmitter2.prototype.eventNames = function eventNames() {
      var names = [], events, name;
      if (this._eventsCount === 0)
        return names;
      for (name in events = this._events) {
        if (has.call(events, name))
          names.push(prefix ? name.slice(1) : name);
      }
      if (Object.getOwnPropertySymbols) {
        return names.concat(Object.getOwnPropertySymbols(events));
      }
      return names;
    };
    EventEmitter2.prototype.listeners = function listeners(event) {
      var evt = prefix ? prefix + event : event, handlers = this._events[evt];
      if (!handlers)
        return [];
      if (handlers.fn)
        return [handlers.fn];
      for (var i3 = 0, l2 = handlers.length, ee = new Array(l2); i3 < l2; i3++) {
        ee[i3] = handlers[i3].fn;
      }
      return ee;
    };
    EventEmitter2.prototype.listenerCount = function listenerCount(event) {
      var evt = prefix ? prefix + event : event, listeners = this._events[evt];
      if (!listeners)
        return 0;
      if (listeners.fn)
        return 1;
      return listeners.length;
    };
    EventEmitter2.prototype.emit = function emit(event, a1, a22, a3, a4, a5) {
      var evt = prefix ? prefix + event : event;
      if (!this._events[evt])
        return false;
      var listeners = this._events[evt], len = arguments.length, args, i3;
      if (listeners.fn) {
        if (listeners.once)
          this.removeListener(event, listeners.fn, void 0, true);
        switch (len) {
          case 1:
            return listeners.fn.call(listeners.context), true;
          case 2:
            return listeners.fn.call(listeners.context, a1), true;
          case 3:
            return listeners.fn.call(listeners.context, a1, a22), true;
          case 4:
            return listeners.fn.call(listeners.context, a1, a22, a3), true;
          case 5:
            return listeners.fn.call(listeners.context, a1, a22, a3, a4), true;
          case 6:
            return listeners.fn.call(listeners.context, a1, a22, a3, a4, a5), true;
        }
        for (i3 = 1, args = new Array(len - 1); i3 < len; i3++) {
          args[i3 - 1] = arguments[i3];
        }
        listeners.fn.apply(listeners.context, args);
      } else {
        var length = listeners.length, j2;
        for (i3 = 0; i3 < length; i3++) {
          if (listeners[i3].once)
            this.removeListener(event, listeners[i3].fn, void 0, true);
          switch (len) {
            case 1:
              listeners[i3].fn.call(listeners[i3].context);
              break;
            case 2:
              listeners[i3].fn.call(listeners[i3].context, a1);
              break;
            case 3:
              listeners[i3].fn.call(listeners[i3].context, a1, a22);
              break;
            case 4:
              listeners[i3].fn.call(listeners[i3].context, a1, a22, a3);
              break;
            default:
              if (!args)
                for (j2 = 1, args = new Array(len - 1); j2 < len; j2++) {
                  args[j2 - 1] = arguments[j2];
                }
              listeners[i3].fn.apply(listeners[i3].context, args);
          }
        }
      }
      return true;
    };
    EventEmitter2.prototype.on = function on(event, fn, context10) {
      return addListener(this, event, fn, context10, false);
    };
    EventEmitter2.prototype.once = function once(event, fn, context10) {
      return addListener(this, event, fn, context10, true);
    };
    EventEmitter2.prototype.removeListener = function removeListener(event, fn, context10, once) {
      var evt = prefix ? prefix + event : event;
      if (!this._events[evt])
        return this;
      if (!fn) {
        clearEvent(this, evt);
        return this;
      }
      var listeners = this._events[evt];
      if (listeners.fn) {
        if (listeners.fn === fn && (!once || listeners.once) && (!context10 || listeners.context === context10)) {
          clearEvent(this, evt);
        }
      } else {
        for (var i3 = 0, events = [], length = listeners.length; i3 < length; i3++) {
          if (listeners[i3].fn !== fn || once && !listeners[i3].once || context10 && listeners[i3].context !== context10) {
            events.push(listeners[i3]);
          }
        }
        if (events.length)
          this._events[evt] = events.length === 1 ? events[0] : events;
        else
          clearEvent(this, evt);
      }
      return this;
    };
    EventEmitter2.prototype.removeAllListeners = function removeAllListeners(event) {
      var evt;
      if (event) {
        evt = prefix ? prefix + event : event;
        if (this._events[evt])
          clearEvent(this, evt);
      } else {
        this._events = new Events();
        this._eventsCount = 0;
      }
      return this;
    };
    EventEmitter2.prototype.off = EventEmitter2.prototype.removeListener;
    EventEmitter2.prototype.addListener = EventEmitter2.prototype.on;
    EventEmitter2.prefixed = prefix;
    EventEmitter2.EventEmitter = EventEmitter2;
    if ("undefined" !== typeof module) {
      module.exports = EventEmitter2;
    }
  }
});

// node_modules/r3f-perf/node_modules/zustand/esm/vanilla.mjs
var createStoreImpl = (createState) => {
  let state;
  const listeners = /* @__PURE__ */ new Set();
  const setState = (partial, replace) => {
    const nextState = typeof partial === "function" ? partial(state) : partial;
    if (!Object.is(nextState, state)) {
      const previousState = state;
      state = (replace != null ? replace : typeof nextState !== "object") ? nextState : Object.assign({}, state, nextState);
      listeners.forEach((listener) => listener(state, previousState));
    }
  };
  const getState = () => state;
  const subscribe = (listener) => {
    listeners.add(listener);
    return () => listeners.delete(listener);
  };
  const destroy = () => listeners.clear();
  const api = { setState, getState, subscribe, destroy };
  state = createState(setState, getState, api);
  return api;
};
var createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;

// node_modules/r3f-perf/node_modules/zustand/esm/index.mjs
var import_react = __toESM(require_react(), 1);
var import_with_selector = __toESM(require_with_selector(), 1);
var { useSyncExternalStoreWithSelector } = import_with_selector.default;
function useStore(api, selector = api.getState, equalityFn) {
  const slice = useSyncExternalStoreWithSelector(
    api.subscribe,
    api.getState,
    api.getServerState || api.getState,
    selector,
    equalityFn
  );
  (0, import_react.useDebugValue)(slice);
  return slice;
}
var createImpl = (createState) => {
  const api = typeof createState === "function" ? createStore(createState) : createState;
  const useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);
  Object.assign(useBoundStore, api);
  return useBoundStore;
};
var create = (createState) => createState ? createImpl(createState) : createImpl;

// node_modules/r3f-perf/node_modules/zustand/esm/shallow.mjs
function shallow(objA, objB) {
  if (Object.is(objA, objB)) {
    return true;
  }
  if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) {
    return false;
  }
  if (objA instanceof Map && objB instanceof Map) {
    if (objA.size !== objB.size)
      return false;
    for (const [key, value] of objA) {
      if (!Object.is(value, objB.get(key))) {
        return false;
      }
    }
    return true;
  }
  if (objA instanceof Set && objB instanceof Set) {
    if (objA.size !== objB.size)
      return false;
    for (const value of objA) {
      if (!objB.has(value)) {
        return false;
      }
    }
    return true;
  }
  const keysA = Object.keys(objA);
  if (keysA.length !== Object.keys(objB).length) {
    return false;
  }
  for (let i3 = 0; i3 < keysA.length; i3++) {
    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i3]) || !Object.is(objA[keysA[i3]], objB[keysA[i3]])) {
      return false;
    }
  }
  return true;
}

// node_modules/r3f-perf/dist/store.mjs
var setCustomData = (customData) => {
  setPerf({ customData });
};
var getCustomData = () => {
  return getPerf().customData;
};
var usePerfImpl = create((set, get) => {
  function getReport() {
    var _a;
    const { accumulated, startTime, infos } = get();
    const maxMemory = (_a = get().log) == null ? void 0 : _a.maxMemory;
    const { totalFrames, log, gl, max } = accumulated;
    const glAverage = {
      calls: gl.calls / totalFrames,
      triangles: gl.triangles / totalFrames,
      points: gl.points / totalFrames,
      lines: gl.lines / totalFrames
    };
    const logAverage = {
      gpu: log.gpu / totalFrames,
      cpu: log.cpu / totalFrames,
      mem: log.mem / totalFrames,
      fps: log.fps / totalFrames
    };
    const sessionTime = (window.performance.now() - startTime) / 1e3;
    return {
      sessionTime,
      infos,
      log: logAverage,
      gl: glAverage,
      max,
      maxMemory,
      totalFrames
    };
  }
  return {
    log: null,
    paused: false,
    triggerProgramsUpdate: 0,
    startTime: 0,
    customData: 0,
    fpsLimit: 60,
    overclockingFps: false,
    accumulated: {
      totalFrames: 0,
      gl: {
        calls: 0,
        triangles: 0,
        points: 0,
        lines: 0,
        counts: 0
      },
      log: {
        gpu: 0,
        cpu: 0,
        mem: 0,
        fps: 0
      },
      max: {
        gl: {
          calls: 0,
          triangles: 0,
          points: 0,
          lines: 0,
          counts: 0
        },
        log: {
          gpu: 0,
          cpu: 0,
          mem: 0,
          fps: 0
        }
      }
    },
    chart: {
      data: {
        fps: [],
        cpu: [],
        gpu: [],
        mem: []
      },
      circularId: 0
    },
    gl: void 0,
    objectWithMaterials: null,
    scene: void 0,
    programs: /* @__PURE__ */ new Map(),
    sceneLength: void 0,
    tab: "infos",
    getReport
  };
});
var usePerf = (sel) => usePerfImpl(sel, shallow);
Object.assign(usePerf, usePerfImpl);
var { getState: getPerf, setState: setPerf } = usePerfImpl;

// node_modules/r3f-perf/dist/components/Perf.mjs
var import_jsx_runtime5 = __toESM(require_jsx_runtime(), 1);
var import_react28 = __toESM(require_react(), 1);

// node_modules/r3f-perf/dist/components/Graph.mjs
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
var import_react25 = __toESM(require_react(), 1);

// node_modules/r3f-perf/dist/components/PerfHeadless.mjs
var import_react4 = __toESM(require_react(), 1);

// node_modules/r3f-perf/dist/internal.mjs
var overLimitFps = {
  value: 0,
  fpsLimit: 60,
  isOverLimit: 0
};
var average = (arr) => (arr == null ? void 0 : arr.reduce((a3, b2) => a3 + b2, 0)) / arr.length;
var GLPerf = class {
  constructor(settings = {}) {
    this.names = [""];
    this.finished = [];
    this.paused = false;
    this.overClock = false;
    this.queryHasResult = false;
    this.queryCreated = false;
    this.isWebGL2 = true;
    this.memAccums = [];
    this.gpuAccums = [];
    this.activeAccums = [];
    this.logsAccums = {
      mem: [],
      gpu: [],
      cpu: [],
      fps: [],
      fpsFixed: []
    };
    this.fpsChart = [];
    this.gpuChart = [];
    this.cpuChart = [];
    this.memChart = [];
    this.paramLogger = () => {
    };
    this.glFinish = () => {
    };
    this.chartLogger = () => {
    };
    this.chartLen = 60;
    this.logsPerSecond = 10;
    this.maxMemory = 1500;
    this.chartHz = 10;
    this.startCpuProfiling = false;
    this.lastCalculateFixed = 0;
    this.chartFrame = 0;
    this.gpuTimeProcess = 0;
    this.chartTime = 0;
    this.activeQueries = 0;
    this.circularId = 0;
    this.detected = 0;
    this.frameId = 0;
    this.rafId = 0;
    this.idleCbId = 0;
    this.checkQueryId = 0;
    this.uuid = void 0;
    this.currentCpu = 0;
    this.currentMem = 0;
    this.paramFrame = 0;
    this.paramTime = 0;
    this.now = () => {
    };
    this.t0 = 0;
    window.GLPerf = window.GLPerf || {};
    Object.assign(this, settings);
    this.fpsChart = new Array(this.chartLen).fill(0);
    this.gpuChart = new Array(this.chartLen).fill(0);
    this.cpuChart = new Array(this.chartLen).fill(0);
    this.memChart = new Array(this.chartLen).fill(0);
    this.now = () => window.performance && window.performance.now ? window.performance.now() : Date.now();
    this.initGpu();
    this.is120hz();
  }
  initGpu() {
    this.uuid = MathUtils.generateUUID();
    if (this.gl) {
      this.isWebGL2 = true;
      if (!this.extension) {
        this.extension = this.gl.getExtension("EXT_disjoint_timer_query_webgl2");
      }
      if (this.extension === null) {
        this.isWebGL2 = false;
      }
    }
  }
  /**
   * 120hz device detection
   */
  is120hz() {
    let n2 = 0;
    const loop = (t2) => {
      if (++n2 < 20) {
        this.rafId = window.requestAnimationFrame(loop);
      } else {
        this.detected = Math.ceil(1e3 * n2 / (t2 - this.t0) / 70);
        window.cancelAnimationFrame(this.rafId);
      }
      if (!this.t0)
        this.t0 = t2;
    };
    this.rafId = window.requestAnimationFrame(loop);
  }
  /**
   * Explicit UI add
   * @param { string | undefined } name
   */
  addUI(name) {
    if (this.names.indexOf(name) === -1) {
      this.names.push(name);
      this.gpuAccums.push(0);
      this.activeAccums.push(false);
    }
  }
  nextFps(d2) {
    const goal = 1e3 / 60;
    const elapsed = goal - d2.timeRemaining();
    const fps = goal * overLimitFps.fpsLimit / 10 / elapsed;
    if (fps < 0)
      return;
    overLimitFps.value = fps;
    if (overLimitFps.isOverLimit < 25) {
      overLimitFps.isOverLimit++;
    } else {
      setPerf({ overclockingFps: true });
    }
  }
  /**
   * Increase frameID
   * @param { any | undefined } now
   */
  nextFrame(now) {
    this.frameId++;
    const t2 = now || this.now();
    let duration = t2 - this.paramTime;
    let gpu = 0;
    if (this.frameId <= 1) {
      this.paramFrame = this.frameId;
      this.paramTime = t2;
    } else {
      if (t2 >= this.paramTime) {
        this.maxMemory = window.performance.memory ? window.performance.memory.jsHeapSizeLimit / 1048576 : 0;
        const frameCount = this.frameId - this.paramFrame;
        const fpsFixed = frameCount * 1e3 / duration;
        const fps = getPerf().overclockingFps ? overLimitFps.value : fpsFixed;
        gpu = this.isWebGL2 ? this.gpuAccums[0] : this.gpuAccums[0] / duration;
        if (this.isWebGL2) {
          this.gpuAccums[0] = 0;
        } else {
          Promise.all(this.finished).then(() => {
            this.gpuAccums[0] = 0;
            this.finished = [];
          });
        }
        this.currentMem = Math.round(
          window.performance && window.performance.memory ? window.performance.memory.usedJSHeapSize / 1048576 : 0
        );
        if (window.performance && this.startCpuProfiling) {
          window.performance.mark("cpu-finished");
          const cpuMeasure = performance.measure("cpu-duration", "cpu-started", "cpu-finished");
          this.currentCpu = cpuMeasure.duration;
          this.logsAccums.cpu.push(this.currentCpu);
          this.startCpuProfiling = false;
        }
        this.logsAccums.mem.push(this.currentMem);
        this.logsAccums.fpsFixed.push(fpsFixed);
        this.logsAccums.fps.push(fps);
        this.logsAccums.gpu.push(gpu);
        if (this.overClock && typeof window.requestIdleCallback !== "undefined") {
          if (overLimitFps.isOverLimit > 0 && fps > fpsFixed) {
            overLimitFps.isOverLimit--;
          } else if (getPerf().overclockingFps) {
            setPerf({ overclockingFps: false });
          }
        }
        if (t2 >= this.paramTime + 1e3 / this.logsPerSecond) {
          this.paramLogger({
            cpu: average(this.logsAccums.cpu),
            gpu: average(this.logsAccums.gpu),
            mem: average(this.logsAccums.mem),
            fps: average(this.logsAccums.fps),
            duration: Math.round(duration),
            maxMemory: this.maxMemory,
            frameCount
          });
          this.logsAccums.mem = [];
          this.logsAccums.fps = [];
          this.logsAccums.gpu = [];
          this.logsAccums.cpu = [];
          this.paramFrame = this.frameId;
          this.paramTime = t2;
        }
        if (this.overClock) {
          if (t2 - this.lastCalculateFixed >= 2 * 1e3) {
            this.lastCalculateFixed = now;
            overLimitFps.fpsLimit = Math.round(average(this.logsAccums.fpsFixed) / 10) * 100;
            setPerf({ fpsLimit: overLimitFps.fpsLimit / 10 });
            this.logsAccums.fpsFixed = [];
            this.paramFrame = this.frameId;
            this.paramTime = t2;
          }
        }
      }
    }
    if (!this.detected || !this.chartFrame) {
      this.chartFrame = this.frameId;
      this.chartTime = t2;
      this.circularId = 0;
    } else {
      const timespan = t2 - this.chartTime;
      let hz = this.chartHz * timespan / 1e3;
      while (--hz > 0 && this.detected) {
        const frameCount = this.frameId - this.chartFrame;
        const fpsFixed = frameCount / timespan * 1e3;
        const fps = getPerf().overclockingFps ? overLimitFps.value : fpsFixed;
        this.fpsChart[this.circularId % this.chartLen] = fps;
        const memS = 1e3 / this.currentMem;
        const cpuS = this.currentCpu;
        const gpuS = (this.isWebGL2 ? this.gpuAccums[1] * 2 : Math.round(this.gpuAccums[1] / duration * 100)) + 4;
        if (gpuS > 0) {
          this.gpuChart[this.circularId % this.chartLen] = gpuS;
        }
        if (cpuS > 0) {
          this.cpuChart[this.circularId % this.chartLen] = cpuS;
        }
        if (memS > 0) {
          this.memChart[this.circularId % this.chartLen] = memS;
        }
        for (let i3 = 0; i3 < this.names.length; i3++) {
          this.chartLogger({
            i: i3,
            data: {
              fps: this.fpsChart,
              gpu: this.gpuChart,
              cpu: this.cpuChart,
              mem: this.memChart
            },
            circularId: this.circularId
          });
        }
        this.circularId++;
        this.chartFrame = this.frameId;
        this.chartTime = t2;
      }
    }
  }
  startGpu() {
    const gl = this.gl;
    const ext = this.extension;
    if (!gl || !ext)
      return;
    if (this.isWebGL2) {
      let available = false;
      let disjoint, ns;
      if (this.query) {
        this.queryHasResult = false;
        let query = this.query;
        available = gl.getQueryParameter(query, gl.QUERY_RESULT_AVAILABLE);
        disjoint = gl.getParameter(ext.GPU_DISJOINT_EXT);
        if (available && !disjoint) {
          ns = gl.getQueryParameter(this.query, gl.QUERY_RESULT);
          const ms = ns * 1e-6;
          if (available || disjoint) {
            gl.deleteQuery(this.query);
            query = null;
          }
          if (available && ms > 0) {
            if (!disjoint) {
              this.activeAccums.forEach((_active, i3) => {
                this.gpuAccums[i3] = ms;
              });
            }
          }
        }
      }
      if (available || !this.query) {
        this.queryCreated = true;
        this.query = gl.createQuery();
        gl.beginQuery(ext.TIME_ELAPSED_EXT, this.query);
      }
    }
  }
  endGpu() {
    const ext = this.extension;
    const gl = this.gl;
    if (this.isWebGL2 && this.queryCreated && gl.getQuery(ext.TIME_ELAPSED_EXT, gl.CURRENT_QUERY)) {
      gl.endQuery(ext.TIME_ELAPSED_EXT);
    }
  }
  /**
   * Begin named measurement
   * @param { string | undefined } name
   */
  begin(name) {
    this.startGpu();
    this.updateAccums(name);
  }
  /**
   * End named measure
   * @param { string | undefined } name
   */
  end(name) {
    this.endGpu();
    this.updateAccums(name);
  }
  updateAccums(name) {
    let nameId = this.names.indexOf(name);
    if (nameId === -1) {
      nameId = this.names.length;
      this.addUI(name);
    }
    const t2 = this.now();
    this.activeAccums[nameId] = !this.activeAccums[nameId];
    this.t0 = t2;
  }
};

// node_modules/r3f-perf/dist/helpers/countGeoDrawCalls.mjs
var countGeoDrawCalls = (programs) => {
  programs.forEach((program, _pkey) => {
    const { meshes } = program;
    if (!meshes) {
      return;
    }
    let drawCounts2 = {
      total: 0,
      type: "Triangle",
      data: []
    };
    Object.keys(meshes).forEach((key) => {
      const mesh = meshes[key];
      const { geometry, material } = mesh;
      let index = geometry.index;
      const position2 = geometry.attributes.position;
      if (!position2)
        return;
      let rangeFactor = 1;
      if (material.wireframe === true) {
        rangeFactor = 0;
      }
      const dataCount = index !== null ? index.count : position2.count;
      const rangeStart = geometry.drawRange.start * rangeFactor;
      const rangeCount = geometry.drawRange.count * rangeFactor;
      const drawStart = rangeStart;
      const drawEnd = Math.min(dataCount, rangeStart + rangeCount) - 1;
      let countInstanceRatio = 1;
      const instanceCount = mesh.count || 1;
      let type = "Triangle";
      let mostDrawCalls = 0;
      if (mesh.isMesh) {
        if (material.wireframe === true) {
          type = "Line";
          countInstanceRatio = countInstanceRatio / 2;
        } else {
          type = "Triangle";
          countInstanceRatio = countInstanceRatio / 3;
        }
      } else if (mesh.isLine) {
        type = "Line";
        if (mesh.isLineSegments) {
          countInstanceRatio = countInstanceRatio / 2;
        } else if (mesh.isLineLoop) {
          countInstanceRatio = countInstanceRatio;
        } else {
          countInstanceRatio = countInstanceRatio - 1;
        }
      } else if (mesh.isPoints) {
        type = "Point";
        countInstanceRatio = countInstanceRatio;
      } else if (mesh.isSprite) {
        type = "Triangle";
        countInstanceRatio = countInstanceRatio / 3;
      }
      const drawCount = Math.round(Math.max(0, drawEnd - drawStart + 1) * (countInstanceRatio * instanceCount));
      if (drawCount > mostDrawCalls) {
        mostDrawCalls = drawCount;
        drawCounts2.type = type;
      }
      drawCounts2.total += drawCount;
      drawCounts2.data.push({ drawCount, type });
      mesh.userData.drawCount = {
        type,
        count: drawCount
      };
    });
    program.drawCounts = drawCounts2;
  });
};

// node_modules/@utsubo/events/dist/react.mjs
var import_react2 = __toESM(require_react(), 1);

// node_modules/@utsubo/events/dist/vanilla.mjs
var import_eventemitter3 = __toESM(require_eventemitter3(), 1);
var eventEmitter = new import_eventemitter3.default();
function onEvent(eventName, handler, options) {
  return (options == null ? void 0 : options.once) ? eventEmitter.once(eventName, handler) : eventEmitter.on(eventName, handler);
}
function offEvent(eventName, handler, options) {
  var _a;
  eventEmitter.removeListener(eventName, handler, (_a = options == null ? void 0 : options.context) != null ? _a : null, options == null ? void 0 : options.once);
}
function emitEvent(eventName, payload) {
  eventEmitter.emit(eventName, payload);
}

// node_modules/@utsubo/events/dist/react.mjs
function useEvent(eventName, handler, deps = [], options) {
  const handlerRef = (0, import_react2.useRef)(handler);
  (0, import_react2.useEffect)(() => void (handlerRef.current = handler), [handler]);
  (0, import_react2.useEffect)(() => {
    const handler2 = (event) => {
      var _a;
      return (_a = handlerRef.current) == null ? void 0 : _a.call(handlerRef, event);
    };
    const context10 = onEvent(eventName, handler2, options);
    return () => offEvent(eventName, handler2, { ...options, context: context10 });
  }, [eventName, options == null ? void 0 : options.once, ...deps]);
}

// node_modules/r3f-perf/dist/components/PerfHeadless.mjs
var updateMatrixWorldTemp = Object3D.prototype.updateMatrixWorld;
var updateWorldMatrixTemp = Object3D.prototype.updateWorldMatrix;
var updateMatrixTemp = Object3D.prototype.updateMatrix;
var maxGl = ["calls", "triangles", "points", "lines"];
var maxLog = ["gpu", "cpu", "mem", "fps"];
var matriceWorldCount = {
  value: 0
};
var matriceCount = {
  value: 0
};
var isUUID = (uuid) => {
  let s2 = "" + uuid;
  s2 = s2.match("^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$");
  if (s2 === null) {
    return false;
  }
  return true;
};
var addMuiPerfID = (material, currentObjectWithMaterials) => {
  if (!material.defines) {
    material.defines = {};
  }
  if (material.defines && !material.defines.muiPerf) {
    material.defines = Object.assign(material.defines || {}, {
      muiPerf: material.uuid
    });
  }
  const uuid = material.uuid;
  if (!currentObjectWithMaterials[uuid]) {
    currentObjectWithMaterials[uuid] = {
      meshes: {},
      material
    };
    material.needsUpdate = true;
  }
  material.needsUpdate = false;
  return uuid;
};
var getMUIIndex = (muid) => muid === "muiPerf";
var PerfHeadless = ({ overClock, logsPerSecond, chart, deepAnalyze, matrixUpdate }) => {
  const { gl, scene } = useThree();
  setPerf({ gl, scene });
  const PerfLib = (0, import_react4.useMemo)(() => {
    const PerfLib2 = new GLPerf({
      trackGPU: true,
      overClock,
      chartLen: chart ? chart.length : 120,
      chartHz: chart ? chart.hz : 60,
      logsPerSecond: logsPerSecond || 10,
      gl: gl.getContext(),
      chartLogger: (chart2) => {
        setPerf({ chart: chart2 });
      },
      paramLogger: (logger) => {
        const log = {
          maxMemory: logger.maxMemory,
          gpu: logger.gpu,
          cpu: logger.cpu,
          mem: logger.mem,
          fps: logger.fps,
          totalTime: logger.duration,
          frameCount: logger.frameCount
        };
        setPerf({
          log
        });
        const { accumulated } = getPerf();
        const glRender = gl.info.render;
        accumulated.totalFrames++;
        accumulated.gl.calls += glRender.calls;
        accumulated.gl.triangles += glRender.triangles;
        accumulated.gl.points += glRender.points;
        accumulated.gl.lines += glRender.lines;
        accumulated.log.gpu += logger.gpu;
        accumulated.log.cpu += logger.cpu;
        accumulated.log.mem += logger.mem;
        accumulated.log.fps += logger.fps;
        for (let i3 = 0; i3 < maxGl.length; i3++) {
          const key = maxGl[i3];
          const value = glRender[key];
          if (value > accumulated.max.gl[key]) {
            accumulated.max.gl[key] = value;
          }
        }
        for (let i3 = 0; i3 < maxLog.length; i3++) {
          const key = maxLog[i3];
          const value = logger[key];
          if (value > accumulated.max.log[key]) {
            accumulated.max.log[key] = value;
          }
        }
        setPerf({ accumulated });
        emitEvent("log", [log, gl]);
      }
    });
    const ctx = gl.getContext();
    let glRenderer = null;
    let glVendor = null;
    const rendererInfo = ctx.getExtension("WEBGL_debug_renderer_info");
    const glVersion = ctx.getParameter(ctx.VERSION);
    if (rendererInfo != null) {
      glRenderer = ctx.getParameter(rendererInfo.UNMASKED_RENDERER_WEBGL);
      glVendor = ctx.getParameter(rendererInfo.UNMASKED_VENDOR_WEBGL);
    }
    if (!glVendor) {
      glVendor = "Unknown vendor";
    }
    if (!glRenderer) {
      glRenderer = ctx.getParameter(ctx.RENDERER);
    }
    setPerf({
      startTime: window.performance.now(),
      infos: {
        version: glVersion,
        renderer: glRenderer,
        vendor: glVendor
      }
    });
    const callbacks = /* @__PURE__ */ new Map();
    const callbacksAfter = /* @__PURE__ */ new Map();
    Object.defineProperty(Scene.prototype, "onBeforeRender", {
      get() {
        return (...args) => {
          var _a;
          if (PerfLib2) {
            PerfLib2.begin("profiler");
          }
          (_a = callbacks.get(this)) == null ? void 0 : _a(...args);
        };
      },
      set(callback) {
        callbacks.set(this, callback);
      },
      configurable: true
    });
    Object.defineProperty(Scene.prototype, "onAfterRender", {
      get() {
        return (...args) => {
          var _a;
          if (PerfLib2) {
            PerfLib2.end("profiler");
          }
          (_a = callbacksAfter.get(this)) == null ? void 0 : _a(...args);
        };
      },
      set(callback) {
        callbacksAfter.set(this, callback);
      },
      configurable: true
    });
    return PerfLib2;
  }, []);
  (0, import_react4.useEffect)(() => {
    if (PerfLib) {
      PerfLib.overClock = overClock || false;
      if (overClock === false) {
        setPerf({ overclockingFps: false });
        overLimitFps.value = 0;
        overLimitFps.isOverLimit = 0;
      }
      PerfLib.chartHz = (chart == null ? void 0 : chart.hz) || 60;
      PerfLib.chartLen = (chart == null ? void 0 : chart.length) || 120;
    }
  }, [overClock, PerfLib, chart == null ? void 0 : chart.length, chart == null ? void 0 : chart.hz]);
  (0, import_react4.useEffect)(() => {
    if (matrixUpdate) {
      Object3D.prototype.updateMatrixWorld = function() {
        if (this.matrixWorldNeedsUpdate || arguments[0]) {
          matriceWorldCount.value++;
        }
        updateMatrixWorldTemp.apply(this, arguments);
      };
      Object3D.prototype.updateWorldMatrix = function() {
        matriceWorldCount.value++;
        updateWorldMatrixTemp.apply(this, arguments);
      };
      Object3D.prototype.updateMatrix = function() {
        matriceCount.value++;
        updateMatrixTemp.apply(this, arguments);
      };
    }
    gl.info.autoReset = false;
    let effectSub = null;
    let afterEffectSub = null;
    if (!gl.info)
      return;
    effectSub = addEffect(function preRafR3FPerf() {
      if (getPerf().paused) {
        setPerf({ paused: false });
      }
      if (window.performance) {
        window.performance.mark("cpu-started");
        PerfLib.startCpuProfiling = true;
      }
      matriceCount.value -= 1;
      matriceWorldCount.value = 0;
      matriceCount.value = 0;
      if (gl.info) {
        gl.info.reset();
      }
    });
    afterEffectSub = addAfterEffect(function postRafR3FPerf() {
      var _a, _b;
      if (PerfLib && !PerfLib.paused) {
        PerfLib.nextFrame(window.performance.now());
        if (overClock && typeof window.requestIdleCallback !== "undefined") {
          PerfLib.idleCbId = requestIdleCallback(PerfLib.nextFps);
        }
      }
      if (deepAnalyze) {
        const currentObjectWithMaterials = {};
        const programs = /* @__PURE__ */ new Map();
        scene.traverse(function deepAnalyzeR3FPerf(object) {
          if (object instanceof Mesh || object instanceof Points) {
            if (object.material) {
              let uuid = object.material.uuid;
              const isTroika = Array.isArray(object.material) && object.material.length > 1;
              if (isTroika) {
                uuid = addMuiPerfID(object.material[1], currentObjectWithMaterials);
              } else {
                uuid = addMuiPerfID(object.material, currentObjectWithMaterials);
              }
              currentObjectWithMaterials[uuid].meshes[object.uuid] = object;
            }
          }
        });
        (_b = (_a = gl == null ? void 0 : gl.info) == null ? void 0 : _a.programs) == null ? void 0 : _b.forEach((program) => {
          const cacheKeySplited = program.cacheKey.split(",");
          const muiPerfTracker = cacheKeySplited[cacheKeySplited.findIndex(getMUIIndex) + 1];
          if (isUUID(muiPerfTracker) && currentObjectWithMaterials[muiPerfTracker]) {
            const { material, meshes } = currentObjectWithMaterials[muiPerfTracker];
            programs.set(muiPerfTracker, {
              program,
              material,
              meshes,
              drawCounts: {
                total: 0,
                type: "triangle",
                data: []
              },
              expand: false,
              visible: true
            });
          }
        });
        if (programs.size !== getPerf().programs.size) {
          countGeoDrawCalls(programs);
          setPerf({
            programs,
            triggerProgramsUpdate: getPerf().triggerProgramsUpdate++
          });
        }
      }
    });
    return () => {
      if (PerfLib) {
        if (typeof window.cancelIdleCallback !== "undefined") {
          window.cancelIdleCallback(PerfLib.idleCbId);
        }
        window.cancelAnimationFrame(PerfLib.rafId);
        window.cancelAnimationFrame(PerfLib.checkQueryId);
      }
      if (matrixUpdate) {
        Object3D.prototype.updateMatrixWorld = updateMatrixTemp;
      }
      effectSub();
      afterEffectSub();
    };
  }, [PerfLib, gl, chart, matrixUpdate]);
  (0, import_react4.useEffect)(() => {
    const unsub = addTail(function postRafTailR3FPerf() {
      if (PerfLib) {
        PerfLib.paused = true;
        matriceCount.value = 0;
        matriceWorldCount.value = 0;
        setPerf({
          paused: true,
          log: {
            maxMemory: 0,
            gpu: 0,
            mem: 0,
            cpu: 0,
            fps: 0,
            totalTime: 0,
            frameCount: 0
          }
        });
      }
      return false;
    });
    return () => {
      unsub();
    };
  }, []);
  return null;
};

// node_modules/@stitches/react/dist/index.mjs
var import_react5 = __toESM(require_react(), 1);
var e = "colors";
var t = "sizes";
var r = "space";
var n = { gap: r, gridGap: r, columnGap: r, gridColumnGap: r, rowGap: r, gridRowGap: r, inset: r, insetBlock: r, insetBlockEnd: r, insetBlockStart: r, insetInline: r, insetInlineEnd: r, insetInlineStart: r, margin: r, marginTop: r, marginRight: r, marginBottom: r, marginLeft: r, marginBlock: r, marginBlockEnd: r, marginBlockStart: r, marginInline: r, marginInlineEnd: r, marginInlineStart: r, padding: r, paddingTop: r, paddingRight: r, paddingBottom: r, paddingLeft: r, paddingBlock: r, paddingBlockEnd: r, paddingBlockStart: r, paddingInline: r, paddingInlineEnd: r, paddingInlineStart: r, top: r, right: r, bottom: r, left: r, scrollMargin: r, scrollMarginTop: r, scrollMarginRight: r, scrollMarginBottom: r, scrollMarginLeft: r, scrollMarginX: r, scrollMarginY: r, scrollMarginBlock: r, scrollMarginBlockEnd: r, scrollMarginBlockStart: r, scrollMarginInline: r, scrollMarginInlineEnd: r, scrollMarginInlineStart: r, scrollPadding: r, scrollPaddingTop: r, scrollPaddingRight: r, scrollPaddingBottom: r, scrollPaddingLeft: r, scrollPaddingX: r, scrollPaddingY: r, scrollPaddingBlock: r, scrollPaddingBlockEnd: r, scrollPaddingBlockStart: r, scrollPaddingInline: r, scrollPaddingInlineEnd: r, scrollPaddingInlineStart: r, fontSize: "fontSizes", background: e, backgroundColor: e, backgroundImage: e, borderImage: e, border: e, borderBlock: e, borderBlockEnd: e, borderBlockStart: e, borderBottom: e, borderBottomColor: e, borderColor: e, borderInline: e, borderInlineEnd: e, borderInlineStart: e, borderLeft: e, borderLeftColor: e, borderRight: e, borderRightColor: e, borderTop: e, borderTopColor: e, caretColor: e, color: e, columnRuleColor: e, fill: e, outline: e, outlineColor: e, stroke: e, textDecorationColor: e, fontFamily: "fonts", fontWeight: "fontWeights", lineHeight: "lineHeights", letterSpacing: "letterSpacings", blockSize: t, minBlockSize: t, maxBlockSize: t, inlineSize: t, minInlineSize: t, maxInlineSize: t, width: t, minWidth: t, maxWidth: t, height: t, minHeight: t, maxHeight: t, flexBasis: t, gridTemplateColumns: t, gridTemplateRows: t, borderWidth: "borderWidths", borderTopWidth: "borderWidths", borderRightWidth: "borderWidths", borderBottomWidth: "borderWidths", borderLeftWidth: "borderWidths", borderStyle: "borderStyles", borderTopStyle: "borderStyles", borderRightStyle: "borderStyles", borderBottomStyle: "borderStyles", borderLeftStyle: "borderStyles", borderRadius: "radii", borderTopLeftRadius: "radii", borderTopRightRadius: "radii", borderBottomRightRadius: "radii", borderBottomLeftRadius: "radii", boxShadow: "shadows", textShadow: "shadows", transition: "transitions", zIndex: "zIndices" };
var i = (e2, t2) => "function" == typeof t2 ? { "()": Function.prototype.toString.call(t2) } : t2;
var o = () => {
  const e2 = /* @__PURE__ */ Object.create(null);
  return (t2, r2, ...n2) => {
    const o2 = ((e3) => JSON.stringify(e3, i))(t2);
    return o2 in e2 ? e2[o2] : e2[o2] = r2(t2, ...n2);
  };
};
var l = Symbol.for("sxs.internal");
var s = (e2, t2) => Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t2));
var a2 = (e2) => {
  for (const t2 in e2)
    return true;
  return false;
};
var { hasOwnProperty: c } = Object.prototype;
var d = (e2) => e2.includes("-") ? e2 : e2.replace(/[A-Z]/g, (e3) => "-" + e3.toLowerCase());
var g = /\s+(?![^()]*\))/;
var p = (e2) => (t2) => e2(..."string" == typeof t2 ? String(t2).split(g) : [t2]);
var u = { appearance: (e2) => ({ WebkitAppearance: e2, appearance: e2 }), backfaceVisibility: (e2) => ({ WebkitBackfaceVisibility: e2, backfaceVisibility: e2 }), backdropFilter: (e2) => ({ WebkitBackdropFilter: e2, backdropFilter: e2 }), backgroundClip: (e2) => ({ WebkitBackgroundClip: e2, backgroundClip: e2 }), boxDecorationBreak: (e2) => ({ WebkitBoxDecorationBreak: e2, boxDecorationBreak: e2 }), clipPath: (e2) => ({ WebkitClipPath: e2, clipPath: e2 }), content: (e2) => ({ content: e2.includes('"') || e2.includes("'") || /^([A-Za-z]+\([^]*|[^]*-quote|inherit|initial|none|normal|revert|unset)$/.test(e2) ? e2 : `"${e2}"` }), hyphens: (e2) => ({ WebkitHyphens: e2, hyphens: e2 }), maskImage: (e2) => ({ WebkitMaskImage: e2, maskImage: e2 }), maskSize: (e2) => ({ WebkitMaskSize: e2, maskSize: e2 }), tabSize: (e2) => ({ MozTabSize: e2, tabSize: e2 }), textSizeAdjust: (e2) => ({ WebkitTextSizeAdjust: e2, textSizeAdjust: e2 }), userSelect: (e2) => ({ WebkitUserSelect: e2, userSelect: e2 }), marginBlock: p((e2, t2) => ({ marginBlockStart: e2, marginBlockEnd: t2 || e2 })), marginInline: p((e2, t2) => ({ marginInlineStart: e2, marginInlineEnd: t2 || e2 })), maxSize: p((e2, t2) => ({ maxBlockSize: e2, maxInlineSize: t2 || e2 })), minSize: p((e2, t2) => ({ minBlockSize: e2, minInlineSize: t2 || e2 })), paddingBlock: p((e2, t2) => ({ paddingBlockStart: e2, paddingBlockEnd: t2 || e2 })), paddingInline: p((e2, t2) => ({ paddingInlineStart: e2, paddingInlineEnd: t2 || e2 })) };
var h = /([\d.]+)([^]*)/;
var f = (e2, t2) => e2.length ? e2.reduce((e3, r2) => (e3.push(...t2.map((e4) => e4.includes("&") ? e4.replace(/&/g, /[ +>|~]/.test(r2) && /&.*&/.test(e4) ? `:is(${r2})` : r2) : r2 + " " + e4)), e3), []) : t2;
var m = (e2, t2) => e2 in b && "string" == typeof t2 ? t2.replace(/^((?:[^]*[^\w-])?)(fit-content|stretch)((?:[^\w-][^]*)?)$/, (t3, r2, n2, i3) => r2 + ("stretch" === n2 ? `-moz-available${i3};${d(e2)}:${r2}-webkit-fill-available` : `-moz-fit-content${i3};${d(e2)}:${r2}fit-content`) + i3) : String(t2);
var b = { blockSize: 1, height: 1, inlineSize: 1, maxBlockSize: 1, maxHeight: 1, maxInlineSize: 1, maxWidth: 1, minBlockSize: 1, minHeight: 1, minInlineSize: 1, minWidth: 1, width: 1 };
var S = (e2) => e2 ? e2 + "-" : "";
var k = (e2, t2, r2) => e2.replace(/([+-])?((?:\d+(?:\.\d*)?|\.\d+)(?:[Ee][+-]?\d+)?)?(\$|--)([$\w-]+)/g, (e3, n2, i3, o2, l2) => "$" == o2 == !!i3 ? e3 : (n2 || "--" == o2 ? "calc(" : "") + "var(--" + ("$" === o2 ? S(t2) + (l2.includes("$") ? "" : S(r2)) + l2.replace(/\$/g, "-") : l2) + ")" + (n2 || "--" == o2 ? "*" + (n2 || "") + (i3 || "1") + ")" : ""));
var y = /\s*,\s*(?![^()]*\))/;
var B = Object.prototype.toString;
var $ = (e2, t2, r2, n2, i3) => {
  let o2, l2, s2;
  const a3 = (e3, t3, r3) => {
    let c2, g2;
    const p2 = (e4) => {
      for (c2 in e4) {
        const R2 = 64 === c2.charCodeAt(0), z2 = R2 && Array.isArray(e4[c2]) ? e4[c2] : [e4[c2]];
        for (g2 of z2) {
          const e5 = /[A-Z]/.test($2 = c2) ? $2 : $2.replace(/-[^]/g, (e6) => e6[1].toUpperCase()), z3 = "object" == typeof g2 && g2 && g2.toString === B && (!n2.utils[e5] || !t3.length);
          if (e5 in n2.utils && !z3) {
            const t4 = n2.utils[e5];
            if (t4 !== l2) {
              l2 = t4, p2(t4(g2)), l2 = null;
              continue;
            }
          } else if (e5 in u) {
            const t4 = u[e5];
            if (t4 !== s2) {
              s2 = t4, p2(t4(g2)), s2 = null;
              continue;
            }
          }
          if (R2 && (b2 = c2.slice(1) in n2.media ? "@media " + n2.media[c2.slice(1)] : c2, c2 = b2.replace(/\(\s*([\w-]+)\s*(=|<|<=|>|>=)\s*([\w-]+)\s*(?:(<|<=|>|>=)\s*([\w-]+)\s*)?\)/g, (e6, t4, r4, n3, i4, o3) => {
            const l3 = h.test(t4), s3 = 0.0625 * (l3 ? -1 : 1), [a4, c3] = l3 ? [n3, t4] : [t4, n3];
            return "(" + ("=" === r4[0] ? "" : ">" === r4[0] === l3 ? "max-" : "min-") + a4 + ":" + ("=" !== r4[0] && 1 === r4.length ? c3.replace(h, (e7, t5, n4) => Number(t5) + s3 * (">" === r4 ? 1 : -1) + n4) : c3) + (i4 ? ") and (" + (">" === i4[0] ? "min-" : "max-") + a4 + ":" + (1 === i4.length ? o3.replace(h, (e7, t5, r5) => Number(t5) + s3 * (">" === i4 ? -1 : 1) + r5) : o3) : "") + ")";
          })), z3) {
            const e6 = R2 ? r3.concat(c2) : [...r3], n3 = R2 ? [...t3] : f(t3, c2.split(y));
            void 0 !== o2 && i3(x(...o2)), o2 = void 0, a3(g2, n3, e6);
          } else
            void 0 === o2 && (o2 = [[], t3, r3]), c2 = R2 || 36 !== c2.charCodeAt(0) ? c2 : `--${S(n2.prefix)}${c2.slice(1).replace(/\$/g, "-")}`, g2 = z3 ? g2 : "number" == typeof g2 ? g2 && e5 in I ? String(g2) + "px" : String(g2) : k(m(e5, null == g2 ? "" : g2), n2.prefix, n2.themeMap[e5]), o2[0].push(`${R2 ? `${c2} ` : `${d(c2)}:`}${g2}`);
        }
      }
      var b2, $2;
    };
    p2(e3), void 0 !== o2 && i3(x(...o2)), o2 = void 0;
  };
  a3(e2, t2, r2);
};
var x = (e2, t2, r2) => `${r2.map((e3) => `${e3}{`).join("")}${t2.length ? `${t2.join(",")}{` : ""}${e2.join(";")}${t2.length ? "}" : ""}${Array(r2.length ? r2.length + 1 : 0).join("}")}`;
var I = { animationDelay: 1, animationDuration: 1, backgroundSize: 1, blockSize: 1, border: 1, borderBlock: 1, borderBlockEnd: 1, borderBlockEndWidth: 1, borderBlockStart: 1, borderBlockStartWidth: 1, borderBlockWidth: 1, borderBottom: 1, borderBottomLeftRadius: 1, borderBottomRightRadius: 1, borderBottomWidth: 1, borderEndEndRadius: 1, borderEndStartRadius: 1, borderInlineEnd: 1, borderInlineEndWidth: 1, borderInlineStart: 1, borderInlineStartWidth: 1, borderInlineWidth: 1, borderLeft: 1, borderLeftWidth: 1, borderRadius: 1, borderRight: 1, borderRightWidth: 1, borderSpacing: 1, borderStartEndRadius: 1, borderStartStartRadius: 1, borderTop: 1, borderTopLeftRadius: 1, borderTopRightRadius: 1, borderTopWidth: 1, borderWidth: 1, bottom: 1, columnGap: 1, columnRule: 1, columnRuleWidth: 1, columnWidth: 1, containIntrinsicSize: 1, flexBasis: 1, fontSize: 1, gap: 1, gridAutoColumns: 1, gridAutoRows: 1, gridTemplateColumns: 1, gridTemplateRows: 1, height: 1, inlineSize: 1, inset: 1, insetBlock: 1, insetBlockEnd: 1, insetBlockStart: 1, insetInline: 1, insetInlineEnd: 1, insetInlineStart: 1, left: 1, letterSpacing: 1, margin: 1, marginBlock: 1, marginBlockEnd: 1, marginBlockStart: 1, marginBottom: 1, marginInline: 1, marginInlineEnd: 1, marginInlineStart: 1, marginLeft: 1, marginRight: 1, marginTop: 1, maxBlockSize: 1, maxHeight: 1, maxInlineSize: 1, maxWidth: 1, minBlockSize: 1, minHeight: 1, minInlineSize: 1, minWidth: 1, offsetDistance: 1, offsetRotate: 1, outline: 1, outlineOffset: 1, outlineWidth: 1, overflowClipMargin: 1, padding: 1, paddingBlock: 1, paddingBlockEnd: 1, paddingBlockStart: 1, paddingBottom: 1, paddingInline: 1, paddingInlineEnd: 1, paddingInlineStart: 1, paddingLeft: 1, paddingRight: 1, paddingTop: 1, perspective: 1, right: 1, rowGap: 1, scrollMargin: 1, scrollMarginBlock: 1, scrollMarginBlockEnd: 1, scrollMarginBlockStart: 1, scrollMarginBottom: 1, scrollMarginInline: 1, scrollMarginInlineEnd: 1, scrollMarginInlineStart: 1, scrollMarginLeft: 1, scrollMarginRight: 1, scrollMarginTop: 1, scrollPadding: 1, scrollPaddingBlock: 1, scrollPaddingBlockEnd: 1, scrollPaddingBlockStart: 1, scrollPaddingBottom: 1, scrollPaddingInline: 1, scrollPaddingInlineEnd: 1, scrollPaddingInlineStart: 1, scrollPaddingLeft: 1, scrollPaddingRight: 1, scrollPaddingTop: 1, shapeMargin: 1, textDecoration: 1, textDecorationThickness: 1, textIndent: 1, textUnderlineOffset: 1, top: 1, transitionDelay: 1, transitionDuration: 1, verticalAlign: 1, width: 1, wordSpacing: 1 };
var R = (e2) => String.fromCharCode(e2 + (e2 > 25 ? 39 : 97));
var z = (e2) => ((e3) => {
  let t2, r2 = "";
  for (t2 = Math.abs(e3); t2 > 52; t2 = t2 / 52 | 0)
    r2 = R(t2 % 52) + r2;
  return R(t2 % 52) + r2;
})(((e3, t2) => {
  let r2 = t2.length;
  for (; r2; )
    e3 = 33 * e3 ^ t2.charCodeAt(--r2);
  return e3;
})(5381, JSON.stringify(e2)) >>> 0);
var W = ["themed", "global", "styled", "onevar", "resonevar", "allvar", "inline"];
var j = (e2) => {
  if (e2.href && !e2.href.startsWith(location.origin))
    return false;
  try {
    return !!e2.cssRules;
  } catch (e3) {
    return false;
  }
};
var E = (e2) => {
  let t2;
  const r2 = () => {
    const { cssRules: e3 } = t2.sheet;
    return [].map.call(e3, (r3, n3) => {
      const { cssText: i3 } = r3;
      let o2 = "";
      if (i3.startsWith("--sxs"))
        return "";
      if (e3[n3 - 1] && (o2 = e3[n3 - 1].cssText).startsWith("--sxs")) {
        if (!r3.cssRules.length)
          return "";
        for (const e4 in t2.rules)
          if (t2.rules[e4].group === r3)
            return `--sxs{--sxs:${[...t2.rules[e4].cache].join(" ")}}${i3}`;
        return r3.cssRules.length ? `${o2}${i3}` : "";
      }
      return i3;
    }).join("");
  }, n2 = () => {
    if (t2) {
      const { rules: e3, sheet: r3 } = t2;
      if (!r3.deleteRule) {
        for (; 3 === Object(Object(r3.cssRules)[0]).type; )
          r3.cssRules.splice(0, 1);
        r3.cssRules = [];
      }
      for (const t3 in e3)
        delete e3[t3];
    }
    const i3 = Object(e2).styleSheets || [];
    for (const e3 of i3)
      if (j(e3)) {
        for (let i4 = 0, o3 = e3.cssRules; o3[i4]; ++i4) {
          const l3 = Object(o3[i4]);
          if (1 !== l3.type)
            continue;
          const s2 = Object(o3[i4 + 1]);
          if (4 !== s2.type)
            continue;
          ++i4;
          const { cssText: a3 } = l3;
          if (!a3.startsWith("--sxs"))
            continue;
          const c2 = a3.slice(14, -3).trim().split(/\s+/), d2 = W[c2[0]];
          d2 && (t2 || (t2 = { sheet: e3, reset: n2, rules: {}, toString: r2 }), t2.rules[d2] = { group: s2, index: i4, cache: new Set(c2) });
        }
        if (t2)
          break;
      }
    if (!t2) {
      const i4 = (e3, t3) => ({ type: t3, cssRules: [], insertRule(e4, t4) {
        this.cssRules.splice(t4, 0, i4(e4, { import: 3, undefined: 1 }[(e4.toLowerCase().match(/^@([a-z]+)/) || [])[1]] || 4));
      }, get cssText() {
        return "@media{}" === e3 ? `@media{${[].map.call(this.cssRules, (e4) => e4.cssText).join("")}}` : e3;
      } });
      t2 = { sheet: e2 ? (e2.head || e2).appendChild(document.createElement("style")).sheet : i4("", "text/css"), rules: {}, reset: n2, toString: r2 };
    }
    const { sheet: o2, rules: l2 } = t2;
    for (let e3 = W.length - 1; e3 >= 0; --e3) {
      const t3 = W[e3];
      if (!l2[t3]) {
        const r3 = W[e3 + 1], n3 = l2[r3] ? l2[r3].index : o2.cssRules.length;
        o2.insertRule("@media{}", n3), o2.insertRule(`--sxs{--sxs:${e3}}`, n3), l2[t3] = { group: o2.cssRules[n3 + 1], index: n3, cache: /* @__PURE__ */ new Set([e3]) };
      }
      v(l2[t3]);
    }
  };
  return n2(), t2;
};
var v = (e2) => {
  const t2 = e2.group;
  let r2 = t2.cssRules.length;
  e2.apply = (e3) => {
    try {
      t2.insertRule(e3, r2), ++r2;
    } catch (e4) {
    }
  };
};
var T = Symbol();
var w = o();
var M = (e2, t2) => w(e2, () => (...r2) => {
  let n2 = { type: null, composers: /* @__PURE__ */ new Set() };
  for (const t3 of r2)
    if (null != t3)
      if (t3[l]) {
        null == n2.type && (n2.type = t3[l].type);
        for (const e3 of t3[l].composers)
          n2.composers.add(e3);
      } else
        t3.constructor !== Object || t3.$$typeof ? null == n2.type && (n2.type = t3) : n2.composers.add(C(t3, e2));
  return null == n2.type && (n2.type = "span"), n2.composers.size || n2.composers.add(["PJLV", {}, [], [], {}, []]), P(e2, n2, t2);
});
var C = ({ variants: e2, compoundVariants: t2, defaultVariants: r2, ...n2 }, i3) => {
  const o2 = `${S(i3.prefix)}c-${z(n2)}`, l2 = [], s2 = [], d2 = /* @__PURE__ */ Object.create(null), g2 = [];
  for (const e3 in r2)
    d2[e3] = String(r2[e3]);
  if ("object" == typeof e2 && e2)
    for (const t3 in e2) {
      p2 = d2, u2 = t3, c.call(p2, u2) || (d2[t3] = "undefined");
      const r3 = e2[t3];
      for (const e3 in r3) {
        const n3 = { [t3]: String(e3) };
        "undefined" === String(e3) && g2.push(t3);
        const i4 = r3[e3], o3 = [n3, i4, !a2(i4)];
        l2.push(o3);
      }
    }
  var p2, u2;
  if ("object" == typeof t2 && t2)
    for (const e3 of t2) {
      let { css: t3, ...r3 } = e3;
      t3 = "object" == typeof t3 && t3 || {};
      for (const e4 in r3)
        r3[e4] = String(r3[e4]);
      const n3 = [r3, t3, !a2(t3)];
      s2.push(n3);
    }
  return [o2, n2, l2, s2, d2, g2];
};
var P = (e2, t2, r2) => {
  const [n2, i3, o2, a3] = L(t2.composers), c2 = "function" == typeof t2.type || t2.type.$$typeof ? ((e3) => {
    function t3() {
      for (let r3 = 0; r3 < t3[T].length; r3++) {
        const [n3, i4] = t3[T][r3];
        e3.rules[n3].apply(i4);
      }
      return t3[T] = [], null;
    }
    return t3[T] = [], t3.rules = {}, W.forEach((e4) => t3.rules[e4] = { apply: (r3) => t3[T].push([e4, r3]) }), t3;
  })(r2) : null, d2 = (c2 || r2).rules, g2 = `.${n2}${i3.length > 1 ? `:where(.${i3.slice(1).join(".")})` : ""}`, p2 = (l2) => {
    l2 = "object" == typeof l2 && l2 || A;
    const { css: s2, ...p3 } = l2, u2 = {};
    for (const e3 in o2)
      if (delete p3[e3], e3 in l2) {
        let t3 = l2[e3];
        "object" == typeof t3 && t3 ? u2[e3] = { "@initial": o2[e3], ...t3 } : (t3 = String(t3), u2[e3] = "undefined" !== t3 || a3.has(e3) ? t3 : o2[e3]);
      } else
        u2[e3] = o2[e3];
    const h2 = /* @__PURE__ */ new Set([...i3]);
    for (const [n3, i4, o3, l3] of t2.composers) {
      r2.rules.styled.cache.has(n3) || (r2.rules.styled.cache.add(n3), $(i4, [`.${n3}`], [], e2, (e3) => {
        d2.styled.apply(e3);
      }));
      const t3 = O(o3, u2, e2.media), s3 = O(l3, u2, e2.media, true);
      for (const i5 of t3)
        if (void 0 !== i5)
          for (const [t4, o4, l4] of i5) {
            const i6 = `${n3}-${z(o4)}-${t4}`;
            h2.add(i6);
            const s4 = (l4 ? r2.rules.resonevar : r2.rules.onevar).cache, a4 = l4 ? d2.resonevar : d2.onevar;
            s4.has(i6) || (s4.add(i6), $(o4, [`.${i6}`], [], e2, (e3) => {
              a4.apply(e3);
            }));
          }
      for (const t4 of s3)
        if (void 0 !== t4)
          for (const [i5, o4] of t4) {
            const t5 = `${n3}-${z(o4)}-${i5}`;
            h2.add(t5), r2.rules.allvar.cache.has(t5) || (r2.rules.allvar.cache.add(t5), $(o4, [`.${t5}`], [], e2, (e3) => {
              d2.allvar.apply(e3);
            }));
          }
    }
    if ("object" == typeof s2 && s2) {
      const t3 = `${n2}-i${z(s2)}-css`;
      h2.add(t3), r2.rules.inline.cache.has(t3) || (r2.rules.inline.cache.add(t3), $(s2, [`.${t3}`], [], e2, (e3) => {
        d2.inline.apply(e3);
      }));
    }
    for (const e3 of String(l2.className || "").trim().split(/\s+/))
      e3 && h2.add(e3);
    const f3 = p3.className = [...h2].join(" ");
    return { type: t2.type, className: f3, selector: g2, props: p3, toString: () => f3, deferredInjector: c2 };
  };
  return s(p2, { className: n2, selector: g2, [l]: t2, toString: () => (r2.rules.styled.cache.has(n2) || p2(), n2) });
};
var L = (e2) => {
  let t2 = "";
  const r2 = [], n2 = {}, i3 = [];
  for (const [o2, , , , l2, s2] of e2) {
    "" === t2 && (t2 = o2), r2.push(o2), i3.push(...s2);
    for (const e3 in l2) {
      const t3 = l2[e3];
      (void 0 === n2[e3] || "undefined" !== t3 || s2.includes(t3)) && (n2[e3] = t3);
    }
  }
  return [t2, r2, n2, new Set(i3)];
};
var O = (e2, t2, r2, n2) => {
  const i3 = [];
  e:
    for (let [o2, l2, s2] of e2) {
      if (s2)
        continue;
      let e3, a3 = 0, c2 = false;
      for (e3 in o2) {
        const n3 = o2[e3];
        let i4 = t2[e3];
        if (i4 !== n3) {
          if ("object" != typeof i4 || !i4)
            continue e;
          {
            let e4, t3, o3 = 0;
            for (const l3 in i4) {
              if (n3 === String(i4[l3])) {
                if ("@initial" !== l3) {
                  const e5 = l3.slice(1);
                  (t3 = t3 || []).push(e5 in r2 ? r2[e5] : l3.replace(/^@media ?/, "")), c2 = true;
                }
                a3 += o3, e4 = true;
              }
              ++o3;
            }
            if (t3 && t3.length && (l2 = { ["@media " + t3.join(", ")]: l2 }), !e4)
              continue e;
          }
        }
      }
      (i3[a3] = i3[a3] || []).push([n2 ? "cv" : `${e3}-${o2[e3]}`, l2, c2]);
    }
  return i3;
};
var A = {};
var N = o();
var D = (e2, t2) => N(e2, () => (...r2) => {
  const n2 = () => {
    for (let n3 of r2) {
      n3 = "object" == typeof n3 && n3 || {};
      let r3 = z(n3);
      if (!t2.rules.global.cache.has(r3)) {
        if (t2.rules.global.cache.add(r3), "@import" in n3) {
          let e3 = [].indexOf.call(t2.sheet.cssRules, t2.rules.themed.group) - 1;
          for (let r4 of [].concat(n3["@import"]))
            r4 = r4.includes('"') || r4.includes("'") ? r4 : `"${r4}"`, t2.sheet.insertRule(`@import ${r4};`, e3++);
          delete n3["@import"];
        }
        $(n3, [], [], e2, (e3) => {
          t2.rules.global.apply(e3);
        });
      }
    }
    return "";
  };
  return s(n2, { toString: n2 });
});
var H = o();
var V = (e2, t2) => H(e2, () => (r2) => {
  const n2 = `${S(e2.prefix)}k-${z(r2)}`, i3 = () => {
    if (!t2.rules.global.cache.has(n2)) {
      t2.rules.global.cache.add(n2);
      const i4 = [];
      $(r2, [], [], e2, (e3) => i4.push(e3));
      const o2 = `@keyframes ${n2}{${i4.join("")}}`;
      t2.rules.global.apply(o2);
    }
    return n2;
  };
  return s(i3, { get name() {
    return i3();
  }, toString: i3 });
});
var G = class {
  constructor(e2, t2, r2, n2) {
    this.token = null == e2 ? "" : String(e2), this.value = null == t2 ? "" : String(t2), this.scale = null == r2 ? "" : String(r2), this.prefix = null == n2 ? "" : String(n2);
  }
  get computedValue() {
    return "var(" + this.variable + ")";
  }
  get variable() {
    return "--" + S(this.prefix) + S(this.scale) + this.token;
  }
  toString() {
    return this.computedValue;
  }
};
var F = o();
var J = (e2, t2) => F(e2, () => (r2, n2) => {
  n2 = "object" == typeof r2 && r2 || Object(n2);
  const i3 = `.${r2 = (r2 = "string" == typeof r2 ? r2 : "") || `${S(e2.prefix)}t-${z(n2)}`}`, o2 = {}, l2 = [];
  for (const t3 in n2) {
    o2[t3] = {};
    for (const r3 in n2[t3]) {
      const i4 = `--${S(e2.prefix)}${t3}-${r3}`, s3 = k(String(n2[t3][r3]), e2.prefix, t3);
      o2[t3][r3] = new G(r3, s3, t3, e2.prefix), l2.push(`${i4}:${s3}`);
    }
  }
  const s2 = () => {
    if (l2.length && !t2.rules.themed.cache.has(r2)) {
      t2.rules.themed.cache.add(r2);
      const i4 = `${n2 === e2.theme ? ":root," : ""}.${r2}{${l2.join(";")}}`;
      t2.rules.themed.apply(i4);
    }
    return r2;
  };
  return { ...o2, get className() {
    return s2();
  }, selector: i3, toString: s2 };
});
var U = o();
var X;
var Y = o();
var q = (e2) => {
  const t2 = ((e3) => {
    let t3 = false;
    const r2 = U(e3, (e4) => {
      t3 = true;
      const r3 = "prefix" in (e4 = "object" == typeof e4 && e4 || {}) ? String(e4.prefix) : "", i3 = "object" == typeof e4.media && e4.media || {}, o2 = "object" == typeof e4.root ? e4.root || null : globalThis.document || null, l2 = "object" == typeof e4.theme && e4.theme || {}, s2 = { prefix: r3, media: i3, theme: l2, themeMap: "object" == typeof e4.themeMap && e4.themeMap || { ...n }, utils: "object" == typeof e4.utils && e4.utils || {} }, a3 = E(o2), c2 = { css: M(s2, a3), globalCss: D(s2, a3), keyframes: V(s2, a3), createTheme: J(s2, a3), reset() {
        a3.reset(), c2.theme.toString();
      }, theme: {}, sheet: a3, config: s2, prefix: r3, getCssText: a3.toString, toString: a3.toString };
      return String(c2.theme = c2.createTheme(l2)), c2;
    });
    return t3 || r2.reset(), r2;
  })(e2);
  return t2.styled = (({ config: e3, sheet: t3 }) => Y(e3, () => {
    const r2 = M(e3, t3);
    return (...e4) => {
      const t4 = r2(...e4), n2 = t4[l].type, i3 = import_react5.default.forwardRef((e5, r3) => {
        const i4 = e5 && e5.as || n2, { props: o2, deferredInjector: l2 } = t4(e5);
        return delete o2.as, o2.ref = r3, l2 ? import_react5.default.createElement(import_react5.default.Fragment, null, import_react5.default.createElement(i4, o2), import_react5.default.createElement(l2, null)) : import_react5.default.createElement(i4, o2);
      });
      return i3.className = t4.className, i3.displayName = `Styled.${n2.displayName || n2.name || n2}`, i3.selector = t4.selector, i3.toString = () => t4.selector, i3[l] = t4[l], i3;
    };
  }))(t2), t2;
};
var K = () => X || (X = q());
var re = (...e2) => K().styled(...e2);

// node_modules/r3f-perf/dist/styles.mjs
var PerfS = re("div", {
  position: "fixed",
  top: 0,
  right: 0,
  zIndex: 9999,
  fontFamily: `-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif`,
  backgroundColor: "rgba(36, 36, 36, .9)",
  color: "#fff",
  margin: 0,
  minHeight: "100px",
  padding: "4px 0",
  "-webkit-font-smoothing": "antialiased",
  "-moz-osx-font-smoothing": "grayscale",
  userSelect: "none",
  "&.top-left": {
    right: "initial",
    left: 0
  },
  "&.bottom-left": {
    right: "initial",
    top: "initial",
    bottom: 0,
    left: 0,
    ".__perf_toggle": {
      top: "-20px",
      bottom: "initial"
    }
  },
  "&.bottom-right": {
    top: "initial",
    bottom: 0,
    ".__perf_toggle": {
      top: "-20px",
      bottom: "initial"
    }
  },
  "&.minimal": {
    backgroundColor: "rgba(36, 36, 36, .75)"
  },
  "*": {
    margin: "0",
    padding: "0",
    border: "0",
    fontSize: "100%",
    lineHeight: "1",
    verticalAlign: "baseline"
  }
});
var PerfSmallI = re("small", {
  position: "absolute",
  right: 0,
  fontSize: "10px"
});
var PerfI = re("div", {
  display: "inline-flex",
  fontStyle: "normal",
  padding: 0,
  lineHeight: "13px",
  fontSize: "14px",
  width: "62px",
  position: "relative",
  pointerEvents: "auto",
  cursor: "default",
  fontWeight: 500,
  letterSpacing: "0px",
  textAlign: "left",
  height: "29px",
  whiteSpace: "nowrap",
  justifyContent: "space-evenly",
  fontVariantNumeric: "tabular-nums",
  small: {
    paddingLeft: "12px"
  },
  svg: {
    padding: 0,
    color: "rgba(145, 145, 145, 0.3)",
    fontSize: "40px",
    position: "absolute",
    zIndex: 1,
    maxHeight: "20px",
    left: " 50%",
    marginLeft: "-23px",
    top: "4px"
  }
});
var PerfB = re("span", {
  verticalAlign: "bottom",
  position: "absolute",
  bottom: "5px",
  color: "rgba(101, 197, 188, 1)",
  textAlign: "right",
  letterSpacing: "1px",
  fontSize: "8px",
  fontWeight: "500",
  width: "60px"
});
var PerfIContainer = re("div", {
  display: "flex"
  // justifyContent: 'space-between',
});
var ProgramHeader = re("div", {
  backgroundColor: "#404040",
  padding: "6px",
  display: "block",
  fontSize: "12px",
  marginBottom: "6px",
  cursor: "pointer",
  "*": {
    cursor: "pointer !important"
  },
  "> span": {},
  small: {
    fontSize: "9px"
  },
  "> b": {
    marginRight: "4px",
    cursor: "pointer"
  }
});
var Graph = re("div", {
  height: "66px",
  overflow: "hidden",
  position: "absolute",
  pointerEvents: "none",
  display: "flex",
  top: "0px",
  justifyContent: "center",
  width: "100%",
  minWidth: "310px",
  margin: "0 auto",
  canvas: {
    background: "transparent !important",
    position: "absolute !important"
  }
});
var Graphpc = re("div", {
  textAlign: "center",
  fontWeight: 700,
  fontSize: "12px",
  lineHeight: "12px",
  display: "flex",
  justifyContent: "center",
  alignItems: "center",
  verticalAlign: "middle",
  color: "#f1f1f1",
  padding: "7px",
  width: "100%",
  backgroundColor: "rgba(36, 36, 37, 0.8)",
  zIndex: 1,
  position: "absolute",
  height: "100%"
});
var Toggle = re("div", {
  pointerEvents: "auto",
  justifyContent: "center",
  cursor: "pointer",
  fontSize: "12px",
  backgroundColor: "rgb(41, 43, 45)",
  marginTop: "6px",
  width: "auto",
  margin: "0",
  color: "rgba(145, 145, 145, 1)",
  textAlign: "center",
  display: "inline-block",
  verticalAlign: "middle",
  padding: "4px 6px",
  "&.__perf_toggle_tab_active": {
    backgroundColor: "rgb(31 31 31)"
  },
  svg: {
    width: "12px",
    height: "12px",
    float: "left"
  }
});
var ToggleVisible = re("div", {
  pointerEvents: "auto",
  justifyContent: "center",
  cursor: "pointer",
  fontSize: "12px",
  float: "right",
  backgroundColor: "rgb(41, 43, 45)",
  width: "auto",
  margin: "0",
  color: "rgba(145, 145, 145, 1)",
  textAlign: "center",
  display: "inline-block",
  verticalAlign: "middle",
  padding: "4px 6px",
  "&.__perf_toggle_tab_active": {
    backgroundColor: "rgb(31 31 31)"
  },
  svg: {
    width: "12px",
    height: "12px",
    float: "left"
  }
});
var ProgramGeo = re("div", {
  padding: "4px 6px",
  fontSize: "12px",
  pointerEvents: "auto"
});
var ProgramTitle = re("span", {
  fontWeight: "bold",
  letterSpacing: "0.08em",
  maxWidth: "145px",
  overflow: "hidden",
  textOverflow: "ellipsis",
  display: "inline-block",
  verticalAlign: "middle",
  fontSize: "11px",
  marginRight: "10px"
});
var ContainerScroll = re("div", {
  maxHeight: "50vh",
  overflowY: "auto",
  marginTop: "38px"
});
var ProgramsContainer = re("div", {
  marginTop: "0"
});
var ProgramsULHeader = re("div", {
  display: "flex",
  position: "relative",
  fontWeight: "bold",
  color: "#fff",
  lineHeight: "14px",
  svg: {
    marginRight: "4px",
    display: "inline-block"
  }
});
var ProgramsUL = re("ul", {
  display: "block",
  position: "relative",
  paddingLeft: "10px",
  margin: "6px 6px",
  img: {
    maxHeight: "60px",
    maxWidth: "100%",
    margin: "6px auto",
    display: "block"
  },
  "&:after": {
    content: "",
    position: "absolute",
    left: "0px",
    top: "0px",
    width: "1px",
    height: "100%",
    backgroundColor: "grey",
    transform: "translateX(-50%)",
    maxHeight: "50vh",
    overflowY: "auto"
  },
  li: {
    borderBottom: "1px solid #313131",
    display: "block",
    padding: "4px",
    margin: 0,
    lineHeight: 1,
    verticalAlign: "middle",
    height: "24px"
  },
  b: {
    fontWeight: "bold"
  },
  small: {
    textAlign: "revert",
    letterSpacing: "1px",
    fontSize: "10px",
    fontWeight: "500",
    marginLeft: "2px",
    color: "rgb(101, 197, 188)"
  }
});
var ProgramConsole = re("button", {
  fontWeight: "bold",
  letterSpacing: "0.02em",
  backgroundColor: "rgb(41, 43, 45)",
  color: "rgb(211, 211, 211)",
  overflow: "hidden",
  textOverflow: "ellipsis",
  cursor: "pointer",
  display: "block",
  verticalAlign: "middle",
  fontSize: "11px",
  padding: "5px",
  margin: "4px auto"
});
var ToggleContainer = re("div", {
  display: "flex",
  justifyContent: "center",
  cursor: "pointer",
  fontSize: "12px",
  backgroundColor: "rgb(41, 43, 45)",
  marginTop: "6px",
  width: "auto",
  margin: "0 auto",
  color: "rgba(145, 145, 145, 1)",
  textAlign: "center",
  position: "absolute",
  right: 0,
  bottom: " -20px",
  svg: {
    width: "12px",
    height: "12px",
    float: "left"
  }
});
var ProgramsGeoLi = re("li", {
  display: "flex !important",
  height: "auto !important",
  span: {
    height: "40px",
    display: "block",
    position: "relative"
  },
  b: {
    paddingLeft: "12px"
  }
});

// node_modules/@radix-ui/react-icons/dist/react-icons.esm.js
var import_react7 = __toESM(require_react());
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target2 = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target2[key] = source[key];
  }
  return target2;
}
var _excluded = ["color"];
var AccessibilityIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M0.877197 7.49984C0.877197 3.84216 3.84234 0.877014 7.50003 0.877014C11.1577 0.877014 14.1229 3.84216 14.1229 7.49984C14.1229 11.1575 11.1577 14.1227 7.50003 14.1227C3.84234 14.1227 0.877197 11.1575 0.877197 7.49984ZM7.50003 1.82701C4.36702 1.82701 1.8272 4.36683 1.8272 7.49984C1.8272 10.6328 4.36702 13.1727 7.50003 13.1727C10.633 13.1727 13.1729 10.6328 13.1729 7.49984C13.1729 4.36683 10.633 1.82701 7.50003 1.82701ZM7.12457 9.00001C7.06994 9.12735 6.33165 11.9592 6.33165 11.9592C6.26018 12.226 5.98601 12.3843 5.71928 12.3128C5.45255 12.2413 5.29425 11.9672 5.36573 11.7004C5.36573 11.7004 6.24661 8.87268 6.24661 8.27007V6.80099L4.28763 6.27608C4.0209 6.20461 3.86261 5.93045 3.93408 5.66371C4.00555 5.39698 4.27972 5.23869 4.54645 5.31016C4.54645 5.31016 6.20042 5.87268 6.84579 5.87268H8.15505C8.80042 5.87268 10.4534 5.31042 10.4534 5.31042C10.7202 5.23895 10.9943 5.39724 11.0658 5.66397C11.1373 5.93071 10.979 6.20487 10.7122 6.27635L8.74661 6.80303V8.27007C8.74661 8.87268 9.62663 11.6971 9.62663 11.6971C9.6981 11.9639 9.5398 12.238 9.27307 12.3095C9.00634 12.381 8.73217 12.2227 8.6607 11.956C8.6607 11.956 7.91994 9.12735 7.86866 9.00001C7.81994 8.87268 7.65006 8.87268 7.65006 8.87268H7.34317C7.34317 8.87268 7.16994 8.87268 7.12457 9.00001ZM7.50043 5.12007C8.12175 5.12007 8.62543 4.61639 8.62543 3.99507C8.62543 3.37375 8.12175 2.87007 7.50043 2.87007C6.87911 2.87007 6.37543 3.37375 6.37543 3.99507C6.37543 4.61639 6.87911 5.12007 7.50043 5.12007Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1 = ["color"];
var ActivityLogIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M0 1.5C0 1.22386 0.223858 1 0.5 1H2.5C2.77614 1 3 1.22386 3 1.5C3 1.77614 2.77614 2 2.5 2H0.5C0.223858 2 0 1.77614 0 1.5ZM4 1.5C4 1.22386 4.22386 1 4.5 1H14.5C14.7761 1 15 1.22386 15 1.5C15 1.77614 14.7761 2 14.5 2H4.5C4.22386 2 4 1.77614 4 1.5ZM4 4.5C4 4.22386 4.22386 4 4.5 4H11.5C11.7761 4 12 4.22386 12 4.5C12 4.77614 11.7761 5 11.5 5H4.5C4.22386 5 4 4.77614 4 4.5ZM0 7.5C0 7.22386 0.223858 7 0.5 7H2.5C2.77614 7 3 7.22386 3 7.5C3 7.77614 2.77614 8 2.5 8H0.5C0.223858 8 0 7.77614 0 7.5ZM4 7.5C4 7.22386 4.22386 7 4.5 7H14.5C14.7761 7 15 7.22386 15 7.5C15 7.77614 14.7761 8 14.5 8H4.5C4.22386 8 4 7.77614 4 7.5ZM4 10.5C4 10.2239 4.22386 10 4.5 10H11.5C11.7761 10 12 10.2239 12 10.5C12 10.7761 11.7761 11 11.5 11H4.5C4.22386 11 4 10.7761 4 10.5ZM0 13.5C0 13.2239 0.223858 13 0.5 13H2.5C2.77614 13 3 13.2239 3 13.5C3 13.7761 2.77614 14 2.5 14H0.5C0.223858 14 0 13.7761 0 13.5ZM4 13.5C4 13.2239 4.22386 13 4.5 13H14.5C14.7761 13 15 13.2239 15 13.5C15 13.7761 14.7761 14 14.5 14H4.5C4.22386 14 4 13.7761 4 13.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2 = ["color"];
var AlignBaselineIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M10.5 1.75003C10.7107 1.75003 10.8988 1.88217 10.9703 2.08042L13.9703 10.4C14.064 10.6598 13.9293 10.9463 13.6696 11.04C13.4098 11.1336 13.1233 10.999 13.0296 10.7392L12.0477 8.01606H8.95227L7.97031 10.7392C7.87664 10.999 7.59012 11.1336 7.33035 11.04C7.07058 10.9463 6.93593 10.6598 7.0296 10.4L10.0296 2.08042C10.1011 1.88217 10.2892 1.75003 10.5 1.75003ZM10.5 3.72402L11.7411 7.16606H9.25877L10.5 3.72402ZM2.49949 2.09997C2.7204 2.09997 2.89949 2.27906 2.89949 2.49997L2.89949 9.53428L4.21664 8.21713C4.37285 8.06092 4.62612 8.06092 4.78233 8.21713C4.93854 8.37334 4.93854 8.6266 4.78233 8.78281L2.78233 10.7828C2.70732 10.8578 2.60557 10.9 2.49949 10.9C2.3934 10.9 2.29166 10.8578 2.21664 10.7828L0.216645 8.78281C0.0604349 8.6266 0.0604349 8.37334 0.216645 8.21713C0.372854 8.06092 0.62612 8.06092 0.78233 8.21713L2.09949 9.53428L2.09949 2.49997C2.09949 2.27906 2.27857 2.09997 2.49949 2.09997ZM0.0999695 13.5001C0.0999695 13.2791 0.279056 13.1001 0.499969 13.1001H14.5C14.7209 13.1001 14.9 13.2791 14.9 13.5001C14.9 13.721 14.7209 13.9001 14.5 13.9001H0.499969C0.279056 13.9001 0.0999695 13.721 0.0999695 13.5001Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3 = ["color"];
var AlignBottomIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M9 3C9 2.44772 8.55229 2 8 2H7C6.44772 2 6 2.44772 6 3L6 14H1.5C1.22386 14 1 14.2239 1 14.5C1 14.7761 1.22386 15 1.5 15L6 15H9H13.5C13.7761 15 14 14.7761 14 14.5C14 14.2239 13.7761 14 13.5 14H9V3Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4 = ["color"];
var AlignCenterHorizontallyIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1.99988 6C1.44759 6 0.999877 6.44772 0.999877 7L0.999877 8C0.999877 8.55228 1.44759 9 1.99988 9L6.99988 9L6.99988 13.5C6.99988 13.7761 7.22374 14 7.49988 14C7.77602 14 7.99988 13.7761 7.99988 13.5L7.99988 9L12.9999 9C13.5522 9 13.9999 8.55228 13.9999 8L13.9999 7C13.9999 6.44772 13.5522 6 12.9999 6L7.99988 6L7.99988 1.5C7.99988 1.22386 7.77602 1 7.49988 1C7.22373 1 6.99988 1.22386 6.99988 1.5L6.99988 6L1.99988 6Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$5 = ["color"];
var AlignCenterVerticallyIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$5);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M6.99988 1C6.44759 1 5.99988 1.44772 5.99988 2V7H1.49988C1.22374 7 0.999878 7.22386 0.999878 7.5C0.999878 7.77614 1.22374 8 1.49988 8H5.99988V13C5.99988 13.5523 6.44759 14 6.99988 14H7.99988C8.55216 14 8.99988 13.5523 8.99988 13V8H13.4999C13.776 8 13.9999 7.77614 13.9999 7.5C13.9999 7.22386 13.776 7 13.4999 7H8.99988V2C8.99988 1.44772 8.55216 1 7.99988 1L6.99988 1Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$6 = ["color"];
var AlignLeftIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$6);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M0.499995 0.999995C0.223855 0.999995 -5.58458e-07 1.22385 -5.46388e-07 1.49999L-2.18554e-08 13.4999C-9.78492e-09 13.776 0.223855 13.9999 0.499995 13.9999C0.776136 13.9999 0.999991 13.776 0.999991 13.4999L0.999991 8.99993L12 8.99993C12.5523 8.99993 13 8.55222 13 7.99993L13 6.99994C13 6.44766 12.5523 5.99995 12 5.99995L0.999991 5.99995L0.999991 1.49999C0.999991 1.22385 0.776135 0.999995 0.499995 0.999995Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$7 = ["color"];
var AlignRightIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$7);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M14.4999 1C14.2237 1 13.9999 1.22386 13.9999 1.5L13.9999 6L2.99988 6C2.44759 6 1.99988 6.44772 1.99988 7L1.99988 8C1.99988 8.55228 2.44759 9 2.99988 9L13.9999 9L13.9999 13.5C13.9999 13.7761 14.2237 14 14.4999 14C14.776 14 14.9999 13.7761 14.9999 13.5L14.9999 9L14.9999 6L14.9999 1.5C14.9999 1.22386 14.776 1 14.4999 1Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$8 = ["color"];
var AlignTopIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$8);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1.5 0C1.22386 0 1 0.223858 1 0.5C1 0.776142 1.22386 1 1.5 1H6V12C6 12.5523 6.44772 13 7 13H8C8.55228 13 9 12.5523 9 12V1H13.5C13.7761 1 14 0.776142 14 0.5C14 0.223858 13.7761 0 13.5 0H9H6H1.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$9 = ["color"];
var AllSidesIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$9);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.5 0.75L9.75 3H5.25L7.5 0.75ZM7.5 14.25L9.75 12H5.25L7.5 14.25ZM3 5.25L0.75 7.5L3 9.75V5.25ZM14.25 7.5L12 5.25V9.75L14.25 7.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$a = ["color"];
var AngleIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$a);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M8.8914 2.1937C9.1158 2.35464 9.16725 2.66701 9.00631 2.89141L2.47388 12H13.5C13.7761 12 14 12.2239 14 12.5C14 12.7762 13.7761 13 13.5 13H1.5C1.31254 13 1.14082 12.8952 1.0552 12.7284C0.969578 12.5616 0.984438 12.361 1.09369 12.2086L8.19369 2.30862C8.35462 2.08422 8.667 2.03277 8.8914 2.1937ZM11.1 6.50001C11.1 6.22387 11.3238 6.00001 11.6 6.00001C11.8761 6.00001 12.1 6.22387 12.1 6.50001C12.1 6.77615 11.8761 7.00001 11.6 7.00001C11.3238 7.00001 11.1 6.77615 11.1 6.50001ZM10.4 4.00001C10.1239 4.00001 9.90003 4.22387 9.90003 4.50001C9.90003 4.77615 10.1239 5.00001 10.4 5.00001C10.6762 5.00001 10.9 4.77615 10.9 4.50001C10.9 4.22387 10.6762 4.00001 10.4 4.00001ZM12.1 8.50001C12.1 8.22387 12.3238 8.00001 12.6 8.00001C12.8761 8.00001 13.1 8.22387 13.1 8.50001C13.1 8.77615 12.8761 9.00001 12.6 9.00001C12.3238 9.00001 12.1 8.77615 12.1 8.50001ZM13.4 10C13.1239 10 12.9 10.2239 12.9 10.5C12.9 10.7761 13.1239 11 13.4 11C13.6762 11 13.9 10.7761 13.9 10.5C13.9 10.2239 13.6762 10 13.4 10Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$b = ["color"];
var ArchiveIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$b);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.30902 1C2.93025 1 2.58398 1.214 2.41459 1.55279L1.05279 4.27639C1.01807 4.34582 1 4.42238 1 4.5V13C1 13.5523 1.44772 14 2 14H13C13.5523 14 14 13.5523 14 13V4.5C14 4.42238 13.9819 4.34582 13.9472 4.27639L12.5854 1.55281C12.416 1.21403 12.0698 1.00003 11.691 1.00003L7.5 1.00001L3.30902 1ZM3.30902 2L7 2.00001V4H2.30902L3.30902 2ZM8 4V2.00002L11.691 2.00003L12.691 4H8ZM7.5 5H13V13H2V5H7.5ZM5.5 7C5.22386 7 5 7.22386 5 7.5C5 7.77614 5.22386 8 5.5 8H9.5C9.77614 8 10 7.77614 10 7.5C10 7.22386 9.77614 7 9.5 7H5.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$c = ["color"];
var ArrowBottomLeftIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$c);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M11.3536 3.64644C11.5488 3.8417 11.5488 4.15828 11.3536 4.35354L4.70711 11L9 11C9.27614 11 9.5 11.2239 9.5 11.5C9.5 11.7761 9.27614 12 9 12L3.5 12C3.36739 12 3.24021 11.9473 3.14645 11.8536C3.05268 11.7598 3 11.6326 3 11.5L3 5.99999C3 5.72385 3.22386 5.49999 3.5 5.49999C3.77614 5.49999 4 5.72385 4 5.99999V10.2929L10.6464 3.64643C10.8417 3.45117 11.1583 3.45117 11.3536 3.64644Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$d = ["color"];
var ArrowBottomRightIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$d);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.64645 3.64644C3.45118 3.8417 3.45118 4.15828 3.64645 4.35354L10.2929 11L6 11C5.72386 11 5.5 11.2239 5.5 11.5C5.5 11.7761 5.72386 12 6 12L11.5 12C11.6326 12 11.7598 11.9473 11.8536 11.8536C11.9473 11.7598 12 11.6326 12 11.5L12 5.99999C12 5.72385 11.7761 5.49999 11.5 5.49999C11.2239 5.49999 11 5.72385 11 5.99999V10.2929L4.35355 3.64643C4.15829 3.45117 3.84171 3.45117 3.64645 3.64644Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$e = ["color"];
var ArrowDownIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$e);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.5 2C7.77614 2 8 2.22386 8 2.5L8 11.2929L11.1464 8.14645C11.3417 7.95118 11.6583 7.95118 11.8536 8.14645C12.0488 8.34171 12.0488 8.65829 11.8536 8.85355L7.85355 12.8536C7.75979 12.9473 7.63261 13 7.5 13C7.36739 13 7.24021 12.9473 7.14645 12.8536L3.14645 8.85355C2.95118 8.65829 2.95118 8.34171 3.14645 8.14645C3.34171 7.95118 3.65829 7.95118 3.85355 8.14645L7 11.2929L7 2.5C7 2.22386 7.22386 2 7.5 2Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$f = ["color"];
var ArrowLeftIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$f);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M6.85355 3.14645C7.04882 3.34171 7.04882 3.65829 6.85355 3.85355L3.70711 7H12.5C12.7761 7 13 7.22386 13 7.5C13 7.77614 12.7761 8 12.5 8H3.70711L6.85355 11.1464C7.04882 11.3417 7.04882 11.6583 6.85355 11.8536C6.65829 12.0488 6.34171 12.0488 6.14645 11.8536L2.14645 7.85355C1.95118 7.65829 1.95118 7.34171 2.14645 7.14645L6.14645 3.14645C6.34171 2.95118 6.65829 2.95118 6.85355 3.14645Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$g = ["color"];
var ArrowRightIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$g);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M8.14645 3.14645C8.34171 2.95118 8.65829 2.95118 8.85355 3.14645L12.8536 7.14645C13.0488 7.34171 13.0488 7.65829 12.8536 7.85355L8.85355 11.8536C8.65829 12.0488 8.34171 12.0488 8.14645 11.8536C7.95118 11.6583 7.95118 11.3417 8.14645 11.1464L11.2929 8H2.5C2.22386 8 2 7.77614 2 7.5C2 7.22386 2.22386 7 2.5 7H11.2929L8.14645 3.85355C7.95118 3.65829 7.95118 3.34171 8.14645 3.14645Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$h = ["color"];
var ArrowTopLeftIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$h);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M11.3536 11.3536C11.5488 11.1583 11.5488 10.8417 11.3536 10.6465L4.70711 4L9 4C9.27614 4 9.5 3.77614 9.5 3.5C9.5 3.22386 9.27614 3 9 3L3.5 3C3.36739 3 3.24021 3.05268 3.14645 3.14645C3.05268 3.24022 3 3.36739 3 3.5L3 9.00001C3 9.27615 3.22386 9.50001 3.5 9.50001C3.77614 9.50001 4 9.27615 4 9.00001V4.70711L10.6464 11.3536C10.8417 11.5488 11.1583 11.5488 11.3536 11.3536Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$i = ["color"];
var ArrowTopRightIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$i);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.64645 11.3536C3.45118 11.1583 3.45118 10.8417 3.64645 10.6465L10.2929 4L6 4C5.72386 4 5.5 3.77614 5.5 3.5C5.5 3.22386 5.72386 3 6 3L11.5 3C11.6326 3 11.7598 3.05268 11.8536 3.14645C11.9473 3.24022 12 3.36739 12 3.5L12 9.00001C12 9.27615 11.7761 9.50001 11.5 9.50001C11.2239 9.50001 11 9.27615 11 9.00001V4.70711L4.35355 11.3536C4.15829 11.5488 3.84171 11.5488 3.64645 11.3536Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$j = ["color"];
var ArrowUpIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$j);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.14645 2.14645C7.34171 1.95118 7.65829 1.95118 7.85355 2.14645L11.8536 6.14645C12.0488 6.34171 12.0488 6.65829 11.8536 6.85355C11.6583 7.04882 11.3417 7.04882 11.1464 6.85355L8 3.70711L8 12.5C8 12.7761 7.77614 13 7.5 13C7.22386 13 7 12.7761 7 12.5L7 3.70711L3.85355 6.85355C3.65829 7.04882 3.34171 7.04882 3.14645 6.85355C2.95118 6.65829 2.95118 6.34171 3.14645 6.14645L7.14645 2.14645Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$k = ["color"];
var AspectRatioIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$k);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M2.5 2H12.5C12.7761 2 13 2.22386 13 2.5V12.5C13 12.7761 12.7761 13 12.5 13H2.5C2.22386 13 2 12.7761 2 12.5V2.5C2 2.22386 2.22386 2 2.5 2ZM1 2.5C1 1.67157 1.67157 1 2.5 1H12.5C13.3284 1 14 1.67157 14 2.5V12.5C14 13.3284 13.3284 14 12.5 14H2.5C1.67157 14 1 13.3284 1 12.5V2.5ZM7.5 4C7.77614 4 8 3.77614 8 3.5C8 3.22386 7.77614 3 7.5 3C7.22386 3 7 3.22386 7 3.5C7 3.77614 7.22386 4 7.5 4ZM8 5.5C8 5.77614 7.77614 6 7.5 6C7.22386 6 7 5.77614 7 5.5C7 5.22386 7.22386 5 7.5 5C7.77614 5 8 5.22386 8 5.5ZM7.5 8C7.77614 8 8 7.77614 8 7.5C8 7.22386 7.77614 7 7.5 7C7.22386 7 7 7.22386 7 7.5C7 7.77614 7.22386 8 7.5 8ZM10 7.5C10 7.77614 9.77614 8 9.5 8C9.22386 8 9 7.77614 9 7.5C9 7.22386 9.22386 7 9.5 7C9.77614 7 10 7.22386 10 7.5ZM11.5 8C11.7761 8 12 7.77614 12 7.5C12 7.22386 11.7761 7 11.5 7C11.2239 7 11 7.22386 11 7.5C11 7.77614 11.2239 8 11.5 8Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$l = ["color"];
var AvatarIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$l);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M0.877014 7.49988C0.877014 3.84219 3.84216 0.877045 7.49985 0.877045C11.1575 0.877045 14.1227 3.84219 14.1227 7.49988C14.1227 11.1575 11.1575 14.1227 7.49985 14.1227C3.84216 14.1227 0.877014 11.1575 0.877014 7.49988ZM7.49985 1.82704C4.36683 1.82704 1.82701 4.36686 1.82701 7.49988C1.82701 8.97196 2.38774 10.3131 3.30727 11.3213C4.19074 9.94119 5.73818 9.02499 7.50023 9.02499C9.26206 9.02499 10.8093 9.94097 11.6929 11.3208C12.6121 10.3127 13.1727 8.97172 13.1727 7.49988C13.1727 4.36686 10.6328 1.82704 7.49985 1.82704ZM10.9818 11.9787C10.2839 10.7795 8.9857 9.97499 7.50023 9.97499C6.01458 9.97499 4.71624 10.7797 4.01845 11.9791C4.97952 12.7272 6.18765 13.1727 7.49985 13.1727C8.81227 13.1727 10.0206 12.727 10.9818 11.9787ZM5.14999 6.50487C5.14999 5.207 6.20212 4.15487 7.49999 4.15487C8.79786 4.15487 9.84999 5.207 9.84999 6.50487C9.84999 7.80274 8.79786 8.85487 7.49999 8.85487C6.20212 8.85487 5.14999 7.80274 5.14999 6.50487ZM7.49999 5.10487C6.72679 5.10487 6.09999 5.73167 6.09999 6.50487C6.09999 7.27807 6.72679 7.90487 7.49999 7.90487C8.27319 7.90487 8.89999 7.27807 8.89999 6.50487C8.89999 5.73167 8.27319 5.10487 7.49999 5.10487Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$m = ["color"];
var BackpackIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$m);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M5 1C5 0.447715 5.44772 0 6 0H9C9.55228 0 10 0.447715 10 1V2H14C14.5523 2 15 2.44772 15 3V6C15 6.8888 14.6131 7.68734 14 8.23608V11.5C14 12.3284 13.3284 13 12.5 13H2.5C1.67157 13 1 12.3284 1 11.5V8.2359C0.38697 7.68721 0 6.88883 0 6V3C0 2.44772 0.447716 2 1 2H5V1ZM9 1V2H6V1H9ZM1 3H5H5.5H9.5H10H14V6C14 6.654 13.6866 7.23467 13.1997 7.6004C12.8655 7.85144 12.4508 8 12 8H8V7.5C8 7.22386 7.77614 7 7.5 7C7.22386 7 7 7.22386 7 7.5V8H3C2.5493 8 2.1346 7.85133 1.80029 7.60022C1.31335 7.23446 1 6.65396 1 6V3ZM7 9H3C2.64961 9 2.31292 8.93972 2 8.82905V11.5C2 11.7761 2.22386 12 2.5 12H12.5C12.7761 12 13 11.7761 13 11.5V8.82915C12.6871 8.93978 12.3504 9 12 9H8V9.5C8 9.77614 7.77614 10 7.5 10C7.22386 10 7 9.77614 7 9.5V9Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$n = ["color"];
var BadgeIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$n);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.5 6H11.5C12.3284 6 13 6.67157 13 7.5C13 8.32843 12.3284 9 11.5 9H3.5C2.67157 9 2 8.32843 2 7.5C2 6.67157 2.67157 6 3.5 6ZM1 7.5C1 6.11929 2.11929 5 3.5 5H11.5C12.8807 5 14 6.11929 14 7.5C14 8.88071 12.8807 10 11.5 10H3.5C2.11929 10 1 8.88071 1 7.5ZM4.5 7C4.22386 7 4 7.22386 4 7.5C4 7.77614 4.22386 8 4.5 8H10.5C10.7761 8 11 7.77614 11 7.5C11 7.22386 10.7761 7 10.5 7H4.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$o = ["color"];
var BarChartIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$o);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M11.5 1C11.7761 1 12 1.22386 12 1.5V13.5C12 13.7761 11.7761 14 11.5 14C11.2239 14 11 13.7761 11 13.5V1.5C11 1.22386 11.2239 1 11.5 1ZM9.5 3C9.77614 3 10 3.22386 10 3.5V13.5C10 13.7761 9.77614 14 9.5 14C9.22386 14 9 13.7761 9 13.5V3.5C9 3.22386 9.22386 3 9.5 3ZM13.5 3C13.7761 3 14 3.22386 14 3.5V13.5C14 13.7761 13.7761 14 13.5 14C13.2239 14 13 13.7761 13 13.5V3.5C13 3.22386 13.2239 3 13.5 3ZM5.5 4C5.77614 4 6 4.22386 6 4.5V13.5C6 13.7761 5.77614 14 5.5 14C5.22386 14 5 13.7761 5 13.5V4.5C5 4.22386 5.22386 4 5.5 4ZM1.5 5C1.77614 5 2 5.22386 2 5.5V13.5C2 13.7761 1.77614 14 1.5 14C1.22386 14 1 13.7761 1 13.5V5.5C1 5.22386 1.22386 5 1.5 5ZM7.5 5C7.77614 5 8 5.22386 8 5.5V13.5C8 13.7761 7.77614 14 7.5 14C7.22386 14 7 13.7761 7 13.5V5.5C7 5.22386 7.22386 5 7.5 5ZM3.5 7C3.77614 7 4 7.22386 4 7.5V13.5C4 13.7761 3.77614 14 3.5 14C3.22386 14 3 13.7761 3 13.5V7.5C3 7.22386 3.22386 7 3.5 7Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$p = ["color"];
var BellIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$p);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M8.60124 1.25086C8.60124 1.75459 8.26278 2.17927 7.80087 2.30989C10.1459 2.4647 12 4.41582 12 6.79999V10.25C12 11.0563 12.0329 11.7074 12.7236 12.0528C12.931 12.1565 13.0399 12.3892 12.9866 12.6149C12.9333 12.8406 12.7319 13 12.5 13H8.16144C8.36904 13.1832 8.49997 13.4513 8.49997 13.75C8.49997 14.3023 8.05226 14.75 7.49997 14.75C6.94769 14.75 6.49997 14.3023 6.49997 13.75C6.49997 13.4513 6.63091 13.1832 6.83851 13H2.49999C2.2681 13 2.06664 12.8406 2.01336 12.6149C1.96009 12.3892 2.06897 12.1565 2.27638 12.0528C2.96708 11.7074 2.99999 11.0563 2.99999 10.25V6.79999C2.99999 4.41537 4.85481 2.46396 7.20042 2.3098C6.73867 2.17908 6.40036 1.75448 6.40036 1.25086C6.40036 0.643104 6.89304 0.150421 7.5008 0.150421C8.10855 0.150421 8.60124 0.643104 8.60124 1.25086ZM7.49999 3.29999C5.56699 3.29999 3.99999 4.86699 3.99999 6.79999V10.25L4.00002 10.3009C4.0005 10.7463 4.00121 11.4084 3.69929 12H11.3007C10.9988 11.4084 10.9995 10.7463 11 10.3009L11 10.25V6.79999C11 4.86699 9.43299 3.29999 7.49999 3.29999Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$q = ["color"];
var BlendingModeIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$q);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3 9C3 6.5 4.5 4.25 7.5 1.5C10.5 4.25 12 6.5 12 9C12 11.4853 9.98528 13.5 7.5 13.5C5.01472 13.5 3 11.4853 3 9ZM10.9524 8.30307C9.67347 7.82121 8.2879 8.46208 6.98956 9.06259C5.9327 9.55142 4.93365 10.0135 4.09695 9.82153C4.03357 9.55804 4 9.28294 4 9C4 7.11203 5.02686 5.27195 7.5 2.87357C9.66837 4.97639 10.725 6.65004 10.9524 8.30307Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$r = ["color"];
var BookmarkIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$r);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3 2.5C3 2.22386 3.22386 2 3.5 2H11.5C11.7761 2 12 2.22386 12 2.5V13.5C12 13.6818 11.9014 13.8492 11.7424 13.9373C11.5834 14.0254 11.3891 14.0203 11.235 13.924L7.5 11.5896L3.765 13.924C3.61087 14.0203 3.41659 14.0254 3.25762 13.9373C3.09864 13.8492 3 13.6818 3 13.5V2.5ZM4 3V12.5979L6.97 10.7416C7.29427 10.539 7.70573 10.539 8.03 10.7416L11 12.5979V3H4Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$s = ["color"];
var BookmarkFilledIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$s);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.5 2C3.22386 2 3 2.22386 3 2.5V13.5C3 13.6818 3.09864 13.8492 3.25762 13.9373C3.41659 14.0254 3.61087 14.0203 3.765 13.924L7.5 11.5896L11.235 13.924C11.3891 14.0203 11.5834 14.0254 11.7424 13.9373C11.9014 13.8492 12 13.6818 12 13.5V2.5C12 2.22386 11.7761 2 11.5 2H3.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$t = ["color"];
var BorderAllIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$t);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M0.25 1C0.25 0.585786 0.585786 0.25 1 0.25H14C14.4142 0.25 14.75 0.585786 14.75 1V14C14.75 14.4142 14.4142 14.75 14 14.75H1C0.585786 14.75 0.25 14.4142 0.25 14V1ZM1.75 1.75V13.25H13.25V1.75H1.75Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("rect", {
    x: "7",
    y: "5",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "7",
    y: "3",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "7",
    y: "7",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "5",
    y: "7",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "3",
    y: "7",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "9",
    y: "7",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "11",
    y: "7",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "7",
    y: "9",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "7",
    y: "11",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }));
});
var _excluded$u = ["color"];
var BorderBottomIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$u);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1 13.25L14 13.25V14.75L1 14.75V13.25Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("rect", {
    x: "7",
    y: "5",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "13",
    y: "5",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "7",
    y: "3",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "13",
    y: "3",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "7",
    y: "7",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "7",
    y: "1",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "13",
    y: "7",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "13",
    y: "1",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "5",
    y: "7",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "5",
    y: "1",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "3",
    y: "7",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "3",
    y: "1",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "9",
    y: "7",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "9",
    y: "1",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "11",
    y: "7",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "11",
    y: "1",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "7",
    y: "9",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "13",
    y: "9",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "7",
    y: "11",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "13",
    y: "11",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "1",
    y: "5",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "1",
    y: "3",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "1",
    y: "7",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "1",
    y: "1",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "1",
    y: "9",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "1",
    y: "11",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }));
});
var _excluded$v = ["color"];
var BorderDashedIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$v);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M0 7.5C0 7.22386 0.223858 7 0.5 7H3C3.27614 7 3.5 7.22386 3.5 7.5C3.5 7.77614 3.27614 8 3 8H0.5C0.223858 8 0 7.77614 0 7.5ZM5.75 7.5C5.75 7.22386 5.97386 7 6.25 7H8.75C9.02614 7 9.25 7.22386 9.25 7.5C9.25 7.77614 9.02614 8 8.75 8H6.25C5.97386 8 5.75 7.77614 5.75 7.5ZM12 7C11.7239 7 11.5 7.22386 11.5 7.5C11.5 7.77614 11.7239 8 12 8H14.5C14.7761 8 15 7.77614 15 7.5C15 7.22386 14.7761 7 14.5 7H12Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$w = ["color"];
var BorderDottedIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$w);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1.5 6.625C1.01675 6.625 0.625 7.01675 0.625 7.5C0.625 7.98325 1.01675 8.375 1.5 8.375C1.98325 8.375 2.375 7.98325 2.375 7.5C2.375 7.01675 1.98325 6.625 1.5 6.625ZM5.5 6.625C5.01675 6.625 4.625 7.01675 4.625 7.5C4.625 7.98325 5.01675 8.375 5.5 8.375C5.98325 8.375 6.375 7.98325 6.375 7.5C6.375 7.01675 5.98325 6.625 5.5 6.625ZM9.5 6.625C9.01675 6.625 8.625 7.01675 8.625 7.5C8.625 7.98325 9.01675 8.375 9.5 8.375C9.98325 8.375 10.375 7.98325 10.375 7.5C10.375 7.01675 9.98325 6.625 9.5 6.625ZM12.625 7.5C12.625 7.01675 13.0168 6.625 13.5 6.625C13.9832 6.625 14.375 7.01675 14.375 7.5C14.375 7.98325 13.9832 8.375 13.5 8.375C13.0168 8.375 12.625 7.98325 12.625 7.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$x = ["color"];
var BorderLeftIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$x);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1.75 1L1.75 14L0.249999 14L0.25 1L1.75 1Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("rect", {
    x: "10",
    y: "7",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(90 10 7)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "10",
    y: "13",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(90 10 13)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "12",
    y: "7",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(90 12 7)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "12",
    y: "13",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(90 12 13)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "8",
    y: "7",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(90 8 7)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "14",
    y: "7",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(90 14 7)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "8",
    y: "13",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(90 8 13)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "14",
    y: "13",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(90 14 13)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "8",
    y: "5",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(90 8 5)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "14",
    y: "5",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(90 14 5)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "8",
    y: "3",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(90 8 3)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "14",
    y: "3",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(90 14 3)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "8",
    y: "9",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(90 8 9)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "14",
    y: "9",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(90 14 9)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "8",
    y: "11",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(90 8 11)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "14",
    y: "11",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(90 14 11)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "6",
    y: "7",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(90 6 7)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "6",
    y: "13",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(90 6 13)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "4",
    y: "7",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(90 4 7)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "4",
    y: "13",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(90 4 13)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "10",
    y: "1",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(90 10 1)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "12",
    y: "1",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(90 12 1)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "8",
    y: "1",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(90 8 1)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "14",
    y: "1",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(90 14 1)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "6",
    y: "1",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(90 6 1)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "4",
    y: "1",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(90 4 1)",
    fill: color
  }));
});
var _excluded$y = ["color"];
var BorderNoneIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$y);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("rect", {
    x: "7",
    y: "5.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "13",
    y: "5.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "7",
    y: "3.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "13",
    y: "3.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "7",
    y: "7.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "7",
    y: "13.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "7",
    y: "1.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "13",
    y: "7.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "13",
    y: "13.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "13",
    y: "1.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "5",
    y: "7.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "5",
    y: "13.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "5",
    y: "1.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "3",
    y: "7.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "3",
    y: "13.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "3",
    y: "1.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "9",
    y: "7.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "9",
    y: "13.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "9",
    y: "1.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "11",
    y: "7.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "11",
    y: "13.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "11",
    y: "1.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "7",
    y: "9.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "13",
    y: "9.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "7",
    y: "11.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "13",
    y: "11.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "1",
    y: "5.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "1",
    y: "3.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "1",
    y: "7.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "1",
    y: "13.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "1",
    y: "1.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "1",
    y: "9.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "1",
    y: "11.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }));
});
var _excluded$z = ["color"];
var BorderRightIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$z);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M13.25 1L13.25 14L14.75 14L14.75 1L13.25 1Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("rect", {
    width: "1",
    height: "1",
    rx: ".5",
    transform: "matrix(0 1 1 0 5 7)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    width: "1",
    height: "1",
    rx: ".5",
    transform: "matrix(0 1 1 0 5 13)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    width: "1",
    height: "1",
    rx: ".5",
    transform: "matrix(0 1 1 0 3 7)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    width: "1",
    height: "1",
    rx: ".5",
    transform: "matrix(0 1 1 0 3 13)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    width: "1",
    height: "1",
    rx: ".5",
    transform: "matrix(0 1 1 0 7 7)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    width: "1",
    height: "1",
    rx: ".5",
    transform: "matrix(0 1 1 0 1 7)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    width: "1",
    height: "1",
    rx: ".5",
    transform: "matrix(0 1 1 0 7 13)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    width: "1",
    height: "1",
    rx: ".5",
    transform: "matrix(0 1 1 0 1 13)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    width: "1",
    height: "1",
    rx: ".5",
    transform: "matrix(0 1 1 0 7 5)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    width: "1",
    height: "1",
    rx: ".5",
    transform: "matrix(0 1 1 0 1 5)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    width: "1",
    height: "1",
    rx: ".5",
    transform: "matrix(0 1 1 0 7 3)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    width: "1",
    height: "1",
    rx: ".5",
    transform: "matrix(0 1 1 0 1 3)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    width: "1",
    height: "1",
    rx: ".5",
    transform: "matrix(0 1 1 0 7 9)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    width: "1",
    height: "1",
    rx: ".5",
    transform: "matrix(0 1 1 0 1 9)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    width: "1",
    height: "1",
    rx: ".5",
    transform: "matrix(0 1 1 0 7 11)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    width: "1",
    height: "1",
    rx: ".5",
    transform: "matrix(0 1 1 0 1 11)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    width: "1",
    height: "1",
    rx: ".5",
    transform: "matrix(0 1 1 0 9 7)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    width: "1",
    height: "1",
    rx: ".5",
    transform: "matrix(0 1 1 0 9 13)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    width: "1",
    height: "1",
    rx: ".5",
    transform: "matrix(0 1 1 0 11 7)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    width: "1",
    height: "1",
    rx: ".5",
    transform: "matrix(0 1 1 0 11 13)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    width: "1",
    height: "1",
    rx: ".5",
    transform: "matrix(0 1 1 0 5 1)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    width: "1",
    height: "1",
    rx: ".5",
    transform: "matrix(0 1 1 0 3 1)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    width: "1",
    height: "1",
    rx: ".5",
    transform: "matrix(0 1 1 0 7 1)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    width: "1",
    height: "1",
    rx: ".5",
    transform: "matrix(0 1 1 0 1 1)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    width: "1",
    height: "1",
    rx: ".5",
    transform: "matrix(0 1 1 0 9 1)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    width: "1",
    height: "1",
    rx: ".5",
    transform: "matrix(0 1 1 0 11 1)",
    fill: color
  }));
});
var _excluded$A = ["color"];
var BorderSolidIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$A);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1.25 7.5C1.25 7.22386 1.47386 7 1.75 7H13.25C13.5261 7 13.75 7.22386 13.75 7.5C13.75 7.77614 13.5261 8 13.25 8H1.75C1.47386 8 1.25 7.77614 1.25 7.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$B = ["color"];
var BorderSplitIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$B);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("rect", {
    x: "7",
    y: "5.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "7",
    y: "3.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "7",
    y: "7.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "7",
    y: "13.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "7",
    y: "1.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "13",
    y: "7.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "5",
    y: "7.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "3",
    y: "7.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "9",
    y: "7.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "11",
    y: "7.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "7",
    y: "9.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "7",
    y: "11.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "1",
    y: "7.025",
    width: "1",
    height: "1",
    rx: ".5",
    fill: color
  }), (0, import_react7.createElement)("path", {
    d: "M1 1.49994C1 1.2238 1.22386 0.999939 1.5 0.999939H6V1.99994H2V5.99994H1V1.49994ZM13 1.99994H9V0.999939H13.5C13.7761 0.999939 14 1.2238 14 1.49994V5.99994H13V1.99994ZM1 13.4999V8.99994H2V12.9999H6V13.9999H1.5C1.22386 13.9999 1 13.7761 1 13.4999ZM13 12.9999V8.99994H14V13.4999C14 13.7761 13.7761 13.9999 13.5 13.9999H9.5V12.9999H13Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$C = ["color"];
var BorderStyleIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$C);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1.5 3C1.22386 3 1 3.22386 1 3.5C1 3.77614 1.22386 4 1.5 4H13.5C13.7761 4 14 3.77614 14 3.5C14 3.22386 13.7761 3 13.5 3H1.5ZM1 7.5C1 7.22386 1.22386 7 1.5 7H3.5C3.77614 7 4 7.22386 4 7.5C4 7.77614 3.77614 8 3.5 8H1.5C1.22386 8 1 7.77614 1 7.5ZM1 11.5C1 11.2239 1.22386 11 1.5 11C1.77614 11 2 11.2239 2 11.5C2 11.7761 1.77614 12 1.5 12C1.22386 12 1 11.7761 1 11.5ZM3 11.5C3 11.2239 3.22386 11 3.5 11C3.77614 11 4 11.2239 4 11.5C4 11.7761 3.77614 12 3.5 12C3.22386 12 3 11.7761 3 11.5ZM5.5 11C5.22386 11 5 11.2239 5 11.5C5 11.7761 5.22386 12 5.5 12C5.77614 12 6 11.7761 6 11.5C6 11.2239 5.77614 11 5.5 11ZM7 11.5C7 11.2239 7.22386 11 7.5 11C7.77614 11 8 11.2239 8 11.5C8 11.7761 7.77614 12 7.5 12C7.22386 12 7 11.7761 7 11.5ZM9.5 11C9.22386 11 9 11.2239 9 11.5C9 11.7761 9.22386 12 9.5 12C9.77614 12 10 11.7761 10 11.5C10 11.2239 9.77614 11 9.5 11ZM11 11.5C11 11.2239 11.2239 11 11.5 11C11.7761 11 12 11.2239 12 11.5C12 11.7761 11.7761 12 11.5 12C11.2239 12 11 11.7761 11 11.5ZM13.5 11C13.2239 11 13 11.2239 13 11.5C13 11.7761 13.2239 12 13.5 12C13.7761 12 14 11.7761 14 11.5C14 11.2239 13.7761 11 13.5 11ZM6.5 7C6.22386 7 6 7.22386 6 7.5C6 7.77614 6.22386 8 6.5 8H8.5C8.77614 8 9 7.77614 9 7.5C9 7.22386 8.77614 7 8.5 7H6.5ZM11 7.5C11 7.22386 11.2239 7 11.5 7H13.5C13.7761 7 14 7.22386 14 7.5C14 7.77614 13.7761 8 13.5 8H11.5C11.2239 8 11 7.77614 11 7.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$D = ["color"];
var BorderTopIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$D);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M14 1.75L1 1.75L1 0.249999L14 0.25L14 1.75Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("rect", {
    x: "8",
    y: "10",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(-180 8 10)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "2",
    y: "10",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(-180 2 10)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "8",
    y: "12",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(-180 8 12)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "2",
    y: "12",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(-180 2 12)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "8",
    y: "8",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(-180 8 8)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "8",
    y: "14",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(-180 8 14)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "2",
    y: "8",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(-180 2 8)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "2",
    y: "14",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(-180 2 14)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "10",
    y: "8",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(-180 10 8)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "10",
    y: "14",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(-180 10 14)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "12",
    y: "8",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(-180 12 8)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "12",
    y: "14",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(-180 12 14)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "6",
    y: "8",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(-180 6 8)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "6",
    y: "14",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(-180 6 14)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "4",
    y: "8",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(-180 4 8)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "4",
    y: "14",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(-180 4 14)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "8",
    y: "6",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(-180 8 6)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "2",
    y: "6",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(-180 2 6)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "8",
    y: "4",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(-180 8 4)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "2",
    y: "4",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(-180 2 4)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "14",
    y: "10",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(-180 14 10)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "14",
    y: "12",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(-180 14 12)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "14",
    y: "8",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(-180 14 8)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "14",
    y: "14",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(-180 14 14)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "14",
    y: "6",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(-180 14 6)",
    fill: color
  }), (0, import_react7.createElement)("rect", {
    x: "14",
    y: "4",
    width: "1",
    height: "1",
    rx: ".5",
    transform: "rotate(-180 14 4)",
    fill: color
  }));
});
var _excluded$E = ["color"];
var BorderWidthIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$E);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1 3H14V4H1V3ZM1 6H14V8H1V6ZM14 10.25H1V12.75H14V10.25Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$F = ["color"];
var BoxIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$F);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M12.5 2H2.5C2.22386 2 2 2.22386 2 2.5V12.5C2 12.7761 2.22386 13 2.5 13H12.5C12.7761 13 13 12.7761 13 12.5V2.5C13 2.22386 12.7761 2 12.5 2ZM2.5 1C1.67157 1 1 1.67157 1 2.5V12.5C1 13.3284 1.67157 14 2.5 14H12.5C13.3284 14 14 13.3284 14 12.5V2.5C14 1.67157 13.3284 1 12.5 1H2.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$G = ["color"];
var BoxModelIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$G);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1.99998 0.999976C1.44769 0.999976 0.999976 1.44769 0.999976 1.99998V13C0.999976 13.5523 1.44769 14 1.99998 14H13C13.5523 14 14 13.5523 14 13V1.99998C14 1.44769 13.5523 0.999976 13 0.999976H1.99998ZM1.99998 1.99998L13 1.99998V13H1.99998V1.99998ZM4.49996 3.99996C4.22382 3.99996 3.99996 4.22382 3.99996 4.49996V10.5C3.99996 10.7761 4.22382 11 4.49996 11H10.5C10.7761 11 11 10.7761 11 10.5V4.49996C11 4.22382 10.7761 3.99996 10.5 3.99996H4.49996ZM4.99996 9.99996V4.99996H9.99996V9.99996H4.99996Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$H = ["color"];
var ButtonIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$H);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M2 5H13C13.5523 5 14 5.44772 14 6V9C14 9.55228 13.5523 10 13 10H2C1.44772 10 1 9.55228 1 9V6C1 5.44772 1.44772 5 2 5ZM0 6C0 4.89543 0.895431 4 2 4H13C14.1046 4 15 4.89543 15 6V9C15 10.1046 14.1046 11 13 11H2C0.89543 11 0 10.1046 0 9V6ZM4.5 6.75C4.08579 6.75 3.75 7.08579 3.75 7.5C3.75 7.91421 4.08579 8.25 4.5 8.25C4.91421 8.25 5.25 7.91421 5.25 7.5C5.25 7.08579 4.91421 6.75 4.5 6.75ZM6.75 7.5C6.75 7.08579 7.08579 6.75 7.5 6.75C7.91421 6.75 8.25 7.08579 8.25 7.5C8.25 7.91421 7.91421 8.25 7.5 8.25C7.08579 8.25 6.75 7.91421 6.75 7.5ZM10.5 6.75C10.0858 6.75 9.75 7.08579 9.75 7.5C9.75 7.91421 10.0858 8.25 10.5 8.25C10.9142 8.25 11.25 7.91421 11.25 7.5C11.25 7.08579 10.9142 6.75 10.5 6.75Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$I = ["color"];
var CalendarIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$I);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M4.5 1C4.77614 1 5 1.22386 5 1.5V2H10V1.5C10 1.22386 10.2239 1 10.5 1C10.7761 1 11 1.22386 11 1.5V2H12.5C13.3284 2 14 2.67157 14 3.5V12.5C14 13.3284 13.3284 14 12.5 14H2.5C1.67157 14 1 13.3284 1 12.5V3.5C1 2.67157 1.67157 2 2.5 2H4V1.5C4 1.22386 4.22386 1 4.5 1ZM10 3V3.5C10 3.77614 10.2239 4 10.5 4C10.7761 4 11 3.77614 11 3.5V3H12.5C12.7761 3 13 3.22386 13 3.5V5H2V3.5C2 3.22386 2.22386 3 2.5 3H4V3.5C4 3.77614 4.22386 4 4.5 4C4.77614 4 5 3.77614 5 3.5V3H10ZM2 6V12.5C2 12.7761 2.22386 13 2.5 13H12.5C12.7761 13 13 12.7761 13 12.5V6H2ZM7 7.5C7 7.22386 7.22386 7 7.5 7C7.77614 7 8 7.22386 8 7.5C8 7.77614 7.77614 8 7.5 8C7.22386 8 7 7.77614 7 7.5ZM9.5 7C9.22386 7 9 7.22386 9 7.5C9 7.77614 9.22386 8 9.5 8C9.77614 8 10 7.77614 10 7.5C10 7.22386 9.77614 7 9.5 7ZM11 7.5C11 7.22386 11.2239 7 11.5 7C11.7761 7 12 7.22386 12 7.5C12 7.77614 11.7761 8 11.5 8C11.2239 8 11 7.77614 11 7.5ZM11.5 9C11.2239 9 11 9.22386 11 9.5C11 9.77614 11.2239 10 11.5 10C11.7761 10 12 9.77614 12 9.5C12 9.22386 11.7761 9 11.5 9ZM9 9.5C9 9.22386 9.22386 9 9.5 9C9.77614 9 10 9.22386 10 9.5C10 9.77614 9.77614 10 9.5 10C9.22386 10 9 9.77614 9 9.5ZM7.5 9C7.22386 9 7 9.22386 7 9.5C7 9.77614 7.22386 10 7.5 10C7.77614 10 8 9.77614 8 9.5C8 9.22386 7.77614 9 7.5 9ZM5 9.5C5 9.22386 5.22386 9 5.5 9C5.77614 9 6 9.22386 6 9.5C6 9.77614 5.77614 10 5.5 10C5.22386 10 5 9.77614 5 9.5ZM3.5 9C3.22386 9 3 9.22386 3 9.5C3 9.77614 3.22386 10 3.5 10C3.77614 10 4 9.77614 4 9.5C4 9.22386 3.77614 9 3.5 9ZM3 11.5C3 11.2239 3.22386 11 3.5 11C3.77614 11 4 11.2239 4 11.5C4 11.7761 3.77614 12 3.5 12C3.22386 12 3 11.7761 3 11.5ZM5.5 11C5.22386 11 5 11.2239 5 11.5C5 11.7761 5.22386 12 5.5 12C5.77614 12 6 11.7761 6 11.5C6 11.2239 5.77614 11 5.5 11ZM7 11.5C7 11.2239 7.22386 11 7.5 11C7.77614 11 8 11.2239 8 11.5C8 11.7761 7.77614 12 7.5 12C7.22386 12 7 11.7761 7 11.5ZM9.5 11C9.22386 11 9 11.2239 9 11.5C9 11.7761 9.22386 12 9.5 12C9.77614 12 10 11.7761 10 11.5C10 11.2239 9.77614 11 9.5 11Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$J = ["color"];
var CameraIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$J);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M2 3C1.44772 3 1 3.44772 1 4V11C1 11.5523 1.44772 12 2 12H13C13.5523 12 14 11.5523 14 11V4C14 3.44772 13.5523 3 13 3H2ZM0 4C0 2.89543 0.895431 2 2 2H13C14.1046 2 15 2.89543 15 4V11C15 12.1046 14.1046 13 13 13H2C0.895431 13 0 12.1046 0 11V4ZM2 4.25C2 4.11193 2.11193 4 2.25 4H4.75C4.88807 4 5 4.11193 5 4.25V5.75454C5 5.89261 4.88807 6.00454 4.75 6.00454H2.25C2.11193 6.00454 2 5.89261 2 5.75454V4.25ZM12.101 7.58421C12.101 9.02073 10.9365 10.1853 9.49998 10.1853C8.06346 10.1853 6.89893 9.02073 6.89893 7.58421C6.89893 6.14769 8.06346 4.98315 9.49998 4.98315C10.9365 4.98315 12.101 6.14769 12.101 7.58421ZM13.101 7.58421C13.101 9.57302 11.4888 11.1853 9.49998 11.1853C7.51117 11.1853 5.89893 9.57302 5.89893 7.58421C5.89893 5.5954 7.51117 3.98315 9.49998 3.98315C11.4888 3.98315 13.101 5.5954 13.101 7.58421Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$K = ["color"];
var CardStackIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$K);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M2 3.5C2 3.22386 2.22386 3 2.5 3H12.5C12.7761 3 13 3.22386 13 3.5V9.5C13 9.77614 12.7761 10 12.5 10H2.5C2.22386 10 2 9.77614 2 9.5V3.5ZM2 10.9146C1.4174 10.7087 1 10.1531 1 9.5V3.5C1 2.67157 1.67157 2 2.5 2H12.5C13.3284 2 14 2.67157 14 3.5V9.5C14 10.1531 13.5826 10.7087 13 10.9146V11.5C13 12.3284 12.3284 13 11.5 13H3.5C2.67157 13 2 12.3284 2 11.5V10.9146ZM12 11V11.5C12 11.7761 11.7761 12 11.5 12H3.5C3.22386 12 3 11.7761 3 11.5V11H12Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$L = ["color"];
var CardStackMinusIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$L);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M2.5 3C2.22386 3 2 3.22386 2 3.5V9.5C2 9.77614 2.22386 10 2.5 10H12.5C12.7761 10 13 9.77614 13 9.5V3.5C13 3.22386 12.7761 3 12.5 3H2.5ZM1 9.5C1 10.1531 1.4174 10.7087 2 10.9146V11.5C2 12.3284 2.67157 13 3.5 13H11.5C12.3284 13 13 12.3284 13 11.5V10.9146C13.5826 10.7087 14 10.1531 14 9.5V3.5C14 2.67157 13.3284 2 12.5 2H2.5C1.67157 2 1 2.67157 1 3.5V9.5ZM12 11.5V11H3V11.5C3 11.7761 3.22386 12 3.5 12H11.5C11.7761 12 12 11.7761 12 11.5ZM5.5 6C5.22386 6 5 6.22386 5 6.5C5 6.77614 5.22386 7 5.5 7H9.5C9.77614 7 10 6.77614 10 6.5C10 6.22386 9.77614 6 9.5 6H5.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$M = ["color"];
var CardStackPlusIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$M);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M2 3.5C2 3.22386 2.22386 3 2.5 3H12.5C12.7761 3 13 3.22386 13 3.5V9.5C13 9.77614 12.7761 10 12.5 10H2.5C2.22386 10 2 9.77614 2 9.5V3.5ZM2 10.9146C1.4174 10.7087 1 10.1531 1 9.5V3.5C1 2.67157 1.67157 2 2.5 2H12.5C13.3284 2 14 2.67157 14 3.5V9.5C14 10.1531 13.5826 10.7087 13 10.9146V11.5C13 12.3284 12.3284 13 11.5 13H3.5C2.67157 13 2 12.3284 2 11.5V10.9146ZM12 11V11.5C12 11.7761 11.7761 12 11.5 12H3.5C3.22386 12 3 11.7761 3 11.5V11H12ZM5 6.5C5 6.22386 5.22386 6 5.5 6H7V4.5C7 4.22386 7.22386 4 7.5 4C7.77614 4 8 4.22386 8 4.5V6H9.5C9.77614 6 10 6.22386 10 6.5C10 6.77614 9.77614 7 9.5 7H8V8.5C8 8.77614 7.77614 9 7.5 9C7.22386 9 7 8.77614 7 8.5V7H5.5C5.22386 7 5 6.77614 5 6.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$N = ["color"];
var CaretDownIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$N);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M4.18179 6.18181C4.35753 6.00608 4.64245 6.00608 4.81819 6.18181L7.49999 8.86362L10.1818 6.18181C10.3575 6.00608 10.6424 6.00608 10.8182 6.18181C10.9939 6.35755 10.9939 6.64247 10.8182 6.81821L7.81819 9.81821C7.73379 9.9026 7.61934 9.95001 7.49999 9.95001C7.38064 9.95001 7.26618 9.9026 7.18179 9.81821L4.18179 6.81821C4.00605 6.64247 4.00605 6.35755 4.18179 6.18181Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$O = ["color"];
var CaretLeftIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$O);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M8.81809 4.18179C8.99383 4.35753 8.99383 4.64245 8.81809 4.81819L6.13629 7.49999L8.81809 10.1818C8.99383 10.3575 8.99383 10.6424 8.81809 10.8182C8.64236 10.9939 8.35743 10.9939 8.1817 10.8182L5.1817 7.81819C5.09731 7.73379 5.0499 7.61933 5.0499 7.49999C5.0499 7.38064 5.09731 7.26618 5.1817 7.18179L8.1817 4.18179C8.35743 4.00605 8.64236 4.00605 8.81809 4.18179Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$P = ["color"];
var CaretRightIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$P);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M6.18194 4.18185C6.35767 4.00611 6.6426 4.00611 6.81833 4.18185L9.81833 7.18185C9.90272 7.26624 9.95013 7.3807 9.95013 7.50005C9.95013 7.6194 9.90272 7.73386 9.81833 7.81825L6.81833 10.8182C6.6426 10.994 6.35767 10.994 6.18194 10.8182C6.0062 10.6425 6.0062 10.3576 6.18194 10.1819L8.86374 7.50005L6.18194 4.81825C6.0062 4.64251 6.0062 4.35759 6.18194 4.18185Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$Q = ["color"];
var CaretSortIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$Q);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M4.93179 5.43179C4.75605 5.60753 4.75605 5.89245 4.93179 6.06819C5.10753 6.24392 5.39245 6.24392 5.56819 6.06819L7.49999 4.13638L9.43179 6.06819C9.60753 6.24392 9.89245 6.24392 10.0682 6.06819C10.2439 5.89245 10.2439 5.60753 10.0682 5.43179L7.81819 3.18179C7.73379 3.0974 7.61933 3.04999 7.49999 3.04999C7.38064 3.04999 7.26618 3.0974 7.18179 3.18179L4.93179 5.43179ZM10.0682 9.56819C10.2439 9.39245 10.2439 9.10753 10.0682 8.93179C9.89245 8.75606 9.60753 8.75606 9.43179 8.93179L7.49999 10.8636L5.56819 8.93179C5.39245 8.75606 5.10753 8.75606 4.93179 8.93179C4.75605 9.10753 4.75605 9.39245 4.93179 9.56819L7.18179 11.8182C7.35753 11.9939 7.64245 11.9939 7.81819 11.8182L10.0682 9.56819Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$R = ["color"];
var CaretUpIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$R);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M4.18179 8.81819C4.00605 8.64245 4.00605 8.35753 4.18179 8.18179L7.18179 5.18179C7.26618 5.0974 7.38064 5.04999 7.49999 5.04999C7.61933 5.04999 7.73379 5.0974 7.81819 5.18179L10.8182 8.18179C10.9939 8.35753 10.9939 8.64245 10.8182 8.81819C10.6424 8.99392 10.3575 8.99392 10.1818 8.81819L7.49999 6.13638L4.81819 8.81819C4.64245 8.99392 4.35753 8.99392 4.18179 8.81819Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$S = ["color"];
var ChatBubbleIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$S);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M12.5 3L2.5 3.00002C1.67157 3.00002 1 3.6716 1 4.50002V9.50003C1 10.3285 1.67157 11 2.5 11H7.50003C7.63264 11 7.75982 11.0527 7.85358 11.1465L10 13.2929V11.5C10 11.2239 10.2239 11 10.5 11H12.5C13.3284 11 14 10.3285 14 9.50003V4.5C14 3.67157 13.3284 3 12.5 3ZM2.49999 2.00002L12.5 2C13.8807 2 15 3.11929 15 4.5V9.50003C15 10.8807 13.8807 12 12.5 12H11V14.5C11 14.7022 10.8782 14.8845 10.6913 14.9619C10.5045 15.0393 10.2894 14.9965 10.1464 14.8536L7.29292 12H2.5C1.11929 12 0 10.8807 0 9.50003V4.50002C0 3.11931 1.11928 2.00003 2.49999 2.00002Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$T = ["color"];
var CheckIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$T);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M11.4669 3.72684C11.7558 3.91574 11.8369 4.30308 11.648 4.59198L7.39799 11.092C7.29783 11.2452 7.13556 11.3467 6.95402 11.3699C6.77247 11.3931 6.58989 11.3355 6.45446 11.2124L3.70446 8.71241C3.44905 8.48022 3.43023 8.08494 3.66242 7.82953C3.89461 7.57412 4.28989 7.55529 4.5453 7.78749L6.75292 9.79441L10.6018 3.90792C10.7907 3.61902 11.178 3.53795 11.4669 3.72684Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$U = ["color"];
var CheckCircledIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$U);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.49991 0.877045C3.84222 0.877045 0.877075 3.84219 0.877075 7.49988C0.877075 11.1575 3.84222 14.1227 7.49991 14.1227C11.1576 14.1227 14.1227 11.1575 14.1227 7.49988C14.1227 3.84219 11.1576 0.877045 7.49991 0.877045ZM1.82708 7.49988C1.82708 4.36686 4.36689 1.82704 7.49991 1.82704C10.6329 1.82704 13.1727 4.36686 13.1727 7.49988C13.1727 10.6329 10.6329 13.1727 7.49991 13.1727C4.36689 13.1727 1.82708 10.6329 1.82708 7.49988ZM10.1589 5.53774C10.3178 5.31191 10.2636 5.00001 10.0378 4.84109C9.81194 4.68217 9.50004 4.73642 9.34112 4.96225L6.51977 8.97154L5.35681 7.78706C5.16334 7.59002 4.84677 7.58711 4.64973 7.78058C4.45268 7.97404 4.44978 8.29061 4.64325 8.48765L6.22658 10.1003C6.33054 10.2062 6.47617 10.2604 6.62407 10.2483C6.77197 10.2363 6.90686 10.1591 6.99226 10.0377L10.1589 5.53774Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$V = ["color"];
var CheckboxIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$V);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3 3H12V12H3L3 3ZM2 3C2 2.44771 2.44772 2 3 2H12C12.5523 2 13 2.44772 13 3V12C13 12.5523 12.5523 13 12 13H3C2.44771 13 2 12.5523 2 12V3ZM10.3498 5.51105C10.506 5.28337 10.4481 4.97212 10.2204 4.81587C9.99275 4.65961 9.6815 4.71751 9.52525 4.94519L6.64048 9.14857L5.19733 7.40889C5.02102 7.19635 4.7058 7.16699 4.49327 7.34329C4.28073 7.5196 4.25137 7.83482 4.42767 8.04735L6.2934 10.2964C6.39348 10.4171 6.54437 10.4838 6.70097 10.4767C6.85757 10.4695 7.00177 10.3894 7.09047 10.2601L10.3498 5.51105Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$W = ["color"];
var ChevronDownIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$W);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.13523 6.15803C3.3241 5.95657 3.64052 5.94637 3.84197 6.13523L7.5 9.56464L11.158 6.13523C11.3595 5.94637 11.6759 5.95657 11.8648 6.15803C12.0536 6.35949 12.0434 6.67591 11.842 6.86477L7.84197 10.6148C7.64964 10.7951 7.35036 10.7951 7.15803 10.6148L3.15803 6.86477C2.95657 6.67591 2.94637 6.35949 3.13523 6.15803Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$X = ["color"];
var ChevronLeftIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$X);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M8.84182 3.13514C9.04327 3.32401 9.05348 3.64042 8.86462 3.84188L5.43521 7.49991L8.86462 11.1579C9.05348 11.3594 9.04327 11.6758 8.84182 11.8647C8.64036 12.0535 8.32394 12.0433 8.13508 11.8419L4.38508 7.84188C4.20477 7.64955 4.20477 7.35027 4.38508 7.15794L8.13508 3.15794C8.32394 2.95648 8.64036 2.94628 8.84182 3.13514Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$Y = ["color"];
var ChevronRightIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$Y);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M6.1584 3.13508C6.35985 2.94621 6.67627 2.95642 6.86514 3.15788L10.6151 7.15788C10.7954 7.3502 10.7954 7.64949 10.6151 7.84182L6.86514 11.8418C6.67627 12.0433 6.35985 12.0535 6.1584 11.8646C5.95694 11.6757 5.94673 11.3593 6.1356 11.1579L9.565 7.49985L6.1356 3.84182C5.94673 3.64036 5.95694 3.32394 6.1584 3.13508Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$Z = ["color"];
var ChevronUpIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$Z);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.13523 8.84197C3.3241 9.04343 3.64052 9.05363 3.84197 8.86477L7.5 5.43536L11.158 8.86477C11.3595 9.05363 11.6759 9.04343 11.8648 8.84197C12.0536 8.64051 12.0434 8.32409 11.842 8.13523L7.84197 4.38523C7.64964 4.20492 7.35036 4.20492 7.15803 4.38523L3.15803 8.13523C2.95657 8.32409 2.94637 8.64051 3.13523 8.84197Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$_ = ["color"];
var CircleIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$_);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M0.877075 7.49991C0.877075 3.84222 3.84222 0.877075 7.49991 0.877075C11.1576 0.877075 14.1227 3.84222 14.1227 7.49991C14.1227 11.1576 11.1576 14.1227 7.49991 14.1227C3.84222 14.1227 0.877075 11.1576 0.877075 7.49991ZM7.49991 1.82708C4.36689 1.82708 1.82708 4.36689 1.82708 7.49991C1.82708 10.6329 4.36689 13.1727 7.49991 13.1727C10.6329 13.1727 13.1727 10.6329 13.1727 7.49991C13.1727 4.36689 10.6329 1.82708 7.49991 1.82708Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$$ = ["color"];
var CircleBackslashIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$$);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.49991 0.877075C3.84222 0.877075 0.877075 3.84222 0.877075 7.49991C0.877075 11.1576 3.84222 14.1227 7.49991 14.1227C11.1576 14.1227 14.1227 11.1576 14.1227 7.49991C14.1227 3.84222 11.1576 0.877075 7.49991 0.877075ZM3.85768 3.15057C4.84311 2.32448 6.11342 1.82708 7.49991 1.82708C10.6329 1.82708 13.1727 4.36689 13.1727 7.49991C13.1727 8.88638 12.6753 10.1567 11.8492 11.1421L3.85768 3.15057ZM3.15057 3.85768C2.32448 4.84311 1.82708 6.11342 1.82708 7.49991C1.82708 10.6329 4.36689 13.1727 7.49991 13.1727C8.88638 13.1727 10.1567 12.6753 11.1421 11.8492L3.15057 3.85768Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$10 = ["color"];
var ClipboardIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$10);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M5 2V1H10V2H5ZM4.75 0C4.33579 0 4 0.335786 4 0.75V1H3.5C2.67157 1 2 1.67157 2 2.5V12.5C2 13.3284 2.67157 14 3.5 14H11.5C12.3284 14 13 13.3284 13 12.5V2.5C13 1.67157 12.3284 1 11.5 1H11V0.75C11 0.335786 10.6642 0 10.25 0H4.75ZM11 2V2.25C11 2.66421 10.6642 3 10.25 3H4.75C4.33579 3 4 2.66421 4 2.25V2H3.5C3.22386 2 3 2.22386 3 2.5V12.5C3 12.7761 3.22386 13 3.5 13H11.5C11.7761 13 12 12.7761 12 12.5V2.5C12 2.22386 11.7761 2 11.5 2H11Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$11 = ["color"];
var ClipboardCopyIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$11);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M5 2V1H10V2H5ZM4.75 0C4.33579 0 4 0.335786 4 0.75V1H3.5C2.67157 1 2 1.67157 2 2.5V12.5C2 13.3284 2.67157 14 3.5 14H7V13H3.5C3.22386 13 3 12.7761 3 12.5V2.5C3 2.22386 3.22386 2 3.5 2H4V2.25C4 2.66421 4.33579 3 4.75 3H10.25C10.6642 3 11 2.66421 11 2.25V2H11.5C11.7761 2 12 2.22386 12 2.5V7H13V2.5C13 1.67157 12.3284 1 11.5 1H11V0.75C11 0.335786 10.6642 0 10.25 0H4.75ZM9 8.5C9 8.77614 8.77614 9 8.5 9C8.22386 9 8 8.77614 8 8.5C8 8.22386 8.22386 8 8.5 8C8.77614 8 9 8.22386 9 8.5ZM10.5 9C10.7761 9 11 8.77614 11 8.5C11 8.22386 10.7761 8 10.5 8C10.2239 8 10 8.22386 10 8.5C10 8.77614 10.2239 9 10.5 9ZM13 8.5C13 8.77614 12.7761 9 12.5 9C12.2239 9 12 8.77614 12 8.5C12 8.22386 12.2239 8 12.5 8C12.7761 8 13 8.22386 13 8.5ZM14.5 9C14.7761 9 15 8.77614 15 8.5C15 8.22386 14.7761 8 14.5 8C14.2239 8 14 8.22386 14 8.5C14 8.77614 14.2239 9 14.5 9ZM15 10.5C15 10.7761 14.7761 11 14.5 11C14.2239 11 14 10.7761 14 10.5C14 10.2239 14.2239 10 14.5 10C14.7761 10 15 10.2239 15 10.5ZM14.5 13C14.7761 13 15 12.7761 15 12.5C15 12.2239 14.7761 12 14.5 12C14.2239 12 14 12.2239 14 12.5C14 12.7761 14.2239 13 14.5 13ZM14.5 15C14.7761 15 15 14.7761 15 14.5C15 14.2239 14.7761 14 14.5 14C14.2239 14 14 14.2239 14 14.5C14 14.7761 14.2239 15 14.5 15ZM8.5 11C8.77614 11 9 10.7761 9 10.5C9 10.2239 8.77614 10 8.5 10C8.22386 10 8 10.2239 8 10.5C8 10.7761 8.22386 11 8.5 11ZM9 12.5C9 12.7761 8.77614 13 8.5 13C8.22386 13 8 12.7761 8 12.5C8 12.2239 8.22386 12 8.5 12C8.77614 12 9 12.2239 9 12.5ZM8.5 15C8.77614 15 9 14.7761 9 14.5C9 14.2239 8.77614 14 8.5 14C8.22386 14 8 14.2239 8 14.5C8 14.7761 8.22386 15 8.5 15ZM11 14.5C11 14.7761 10.7761 15 10.5 15C10.2239 15 10 14.7761 10 14.5C10 14.2239 10.2239 14 10.5 14C10.7761 14 11 14.2239 11 14.5ZM12.5 15C12.7761 15 13 14.7761 13 14.5C13 14.2239 12.7761 14 12.5 14C12.2239 14 12 14.2239 12 14.5C12 14.7761 12.2239 15 12.5 15Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$12 = ["color"];
var ClockIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$12);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.50009 0.877014C3.84241 0.877014 0.877258 3.84216 0.877258 7.49984C0.877258 11.1575 3.8424 14.1227 7.50009 14.1227C11.1578 14.1227 14.1229 11.1575 14.1229 7.49984C14.1229 3.84216 11.1577 0.877014 7.50009 0.877014ZM1.82726 7.49984C1.82726 4.36683 4.36708 1.82701 7.50009 1.82701C10.6331 1.82701 13.1729 4.36683 13.1729 7.49984C13.1729 10.6328 10.6331 13.1727 7.50009 13.1727C4.36708 13.1727 1.82726 10.6328 1.82726 7.49984ZM8 4.50001C8 4.22387 7.77614 4.00001 7.5 4.00001C7.22386 4.00001 7 4.22387 7 4.50001V7.50001C7 7.63262 7.05268 7.7598 7.14645 7.85357L9.14645 9.85357C9.34171 10.0488 9.65829 10.0488 9.85355 9.85357C10.0488 9.65831 10.0488 9.34172 9.85355 9.14646L8 7.29291V4.50001Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$13 = ["color"];
var CodeIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$13);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M9.96424 2.68571C10.0668 2.42931 9.94209 2.13833 9.6857 2.03577C9.4293 1.93322 9.13832 2.05792 9.03576 2.31432L5.03576 12.3143C4.9332 12.5707 5.05791 12.8617 5.3143 12.9642C5.5707 13.0668 5.86168 12.9421 5.96424 12.6857L9.96424 2.68571ZM3.85355 5.14646C4.04882 5.34172 4.04882 5.6583 3.85355 5.85356L2.20711 7.50001L3.85355 9.14646C4.04882 9.34172 4.04882 9.6583 3.85355 9.85356C3.65829 10.0488 3.34171 10.0488 3.14645 9.85356L1.14645 7.85356C0.951184 7.6583 0.951184 7.34172 1.14645 7.14646L3.14645 5.14646C3.34171 4.9512 3.65829 4.9512 3.85355 5.14646ZM11.1464 5.14646C11.3417 4.9512 11.6583 4.9512 11.8536 5.14646L13.8536 7.14646C14.0488 7.34172 14.0488 7.6583 13.8536 7.85356L11.8536 9.85356C11.6583 10.0488 11.3417 10.0488 11.1464 9.85356C10.9512 9.6583 10.9512 9.34172 11.1464 9.14646L12.7929 7.50001L11.1464 5.85356C10.9512 5.6583 10.9512 5.34172 11.1464 5.14646Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$14 = ["color"];
var CodeSandboxLogoIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$14);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.71144 0.796902C7.57741 0.734357 7.42257 0.734357 7.28855 0.796902L1.28855 3.5969C1.11251 3.67905 0.999993 3.85573 0.999993 4.04999V10.95C0.999993 11.1443 1.11251 11.3209 1.28855 11.4031L7.28855 14.2031C7.42257 14.2656 7.57741 14.2656 7.71144 14.2031L13.7114 11.4031C13.8875 11.3209 14 11.1443 14 10.95V4.04999C14 3.85573 13.8875 3.67905 13.7114 3.5969L7.71144 0.796902ZM7.49999 3.15674L5.98039 2.51091L7.49999 1.80176L9.01959 2.51091L7.49999 3.15674ZM7.69556 4.16018L10.2382 3.07958L12.2719 4.02865L7.49999 6.05671L2.72808 4.02865L4.76181 3.07958L7.30442 4.16018C7.42939 4.2133 7.57059 4.2133 7.69556 4.16018ZM7.99999 6.93078L13 4.80578V7.92966L11.0821 8.8119C10.7273 8.97509 10.5 9.32988 10.5 9.72039V11.7982L7.99999 12.9649V6.93078ZM11.5 11.3316L13 10.6316V9.03039L11.5 9.72039V11.3316ZM6.99999 6.93078V12.9649L4.50231 11.7993V9.72036C4.50231 9.32985 4.27499 8.97506 3.92022 8.81187L1.99999 7.92856V4.80578L6.99999 6.93078ZM1.99999 10.6316L3.50231 11.3326L3.50231 9.72036L1.99999 9.02929V10.6316Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$15 = ["color"];
var ColorWheelIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$15);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M0.877075 7.49985C0.877075 3.84216 3.84222 0.877014 7.49991 0.877014C11.1576 0.877014 14.1227 3.84216 14.1227 7.49985C14.1227 11.1575 11.1576 14.1227 7.49991 14.1227C3.84222 14.1227 0.877075 11.1575 0.877075 7.49985ZM3.78135 3.21565C4.68298 2.43239 5.83429 1.92904 7.09998 1.84089V6.53429L3.78135 3.21565ZM3.21567 3.78134C2.43242 4.68298 1.92909 5.83428 1.84095 7.09997H6.5343L3.21567 3.78134ZM6.5343 7.89997H1.84097C1.92916 9.16562 2.43253 10.3169 3.21579 11.2185L6.5343 7.89997ZM3.78149 11.7842C4.6831 12.5673 5.83435 13.0707 7.09998 13.1588V8.46566L3.78149 11.7842ZM7.89998 8.46566V13.1588C9.16559 13.0706 10.3168 12.5673 11.2184 11.7841L7.89998 8.46566ZM11.7841 11.2184C12.5673 10.3168 13.0707 9.16558 13.1588 7.89997H8.46567L11.7841 11.2184ZM8.46567 7.09997H13.1589C13.0707 5.83432 12.5674 4.68305 11.7842 3.78143L8.46567 7.09997ZM11.2185 3.21573C10.3169 2.43246 9.16565 1.92909 7.89998 1.8409V6.53429L11.2185 3.21573Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$16 = ["color"];
var ColumnSpacingIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$16);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M8.00012 1.5C8.00012 1.22386 7.77626 1 7.50012 1C7.22398 1 7.00012 1.22386 7.00012 1.5V13.5C7.00012 13.7761 7.22398 14 7.50012 14C7.77626 14 8.00012 13.7761 8.00012 13.5V1.5ZM3.31812 5.818C3.49386 5.64227 3.49386 5.35734 3.31812 5.18161C3.14239 5.00587 2.85746 5.00587 2.68173 5.18161L0.681729 7.18161C0.505993 7.35734 0.505993 7.64227 0.681729 7.818L2.68173 9.818C2.85746 9.99374 3.14239 9.99374 3.31812 9.818C3.49386 9.64227 3.49386 9.35734 3.31812 9.18161L2.08632 7.9498H5.50017C5.7487 7.9498 5.95017 7.74833 5.95017 7.4998C5.95017 7.25128 5.7487 7.0498 5.50017 7.0498H2.08632L3.31812 5.818ZM12.3181 5.18161C12.1424 5.00587 11.8575 5.00587 11.6817 5.18161C11.506 5.35734 11.506 5.64227 11.6817 5.818L12.9135 7.0498H9.50017C9.25164 7.0498 9.05017 7.25128 9.05017 7.4998C9.05017 7.74833 9.25164 7.9498 9.50017 7.9498H12.9135L11.6817 9.18161C11.506 9.35734 11.506 9.64227 11.6817 9.818C11.8575 9.99374 12.1424 9.99374 12.3181 9.818L14.3181 7.818C14.4939 7.64227 14.4939 7.35734 14.3181 7.18161L12.3181 5.18161Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$17 = ["color"];
var ColumnsIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$17);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M2.14998 14V1H0.849976V14H2.14998ZM6.14998 14V1H4.84998V14H6.14998ZM10.15 1V14H8.84998V1H10.15ZM14.15 14V1H12.85V14H14.15Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$18 = ["color"];
var CommitIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$18);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M9.94969 7.49989C9.94969 8.85288 8.85288 9.94969 7.49989 9.94969C6.14691 9.94969 5.0501 8.85288 5.0501 7.49989C5.0501 6.14691 6.14691 5.0501 7.49989 5.0501C8.85288 5.0501 9.94969 6.14691 9.94969 7.49989ZM10.8632 8C10.6213 9.64055 9.20764 10.8997 7.49989 10.8997C5.79214 10.8997 4.37847 9.64055 4.13662 8H0.5C0.223858 8 0 7.77614 0 7.5C0 7.22386 0.223858 7 0.5 7H4.13659C4.37835 5.35935 5.79206 4.1001 7.49989 4.1001C9.20772 4.1001 10.6214 5.35935 10.8632 7H14.5C14.7761 7 15 7.22386 15 7.5C15 7.77614 14.7761 8 14.5 8H10.8632Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$19 = ["color"];
var Component1Icon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$19);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M4.67129 3.14634C4.47603 3.34161 4.47603 3.65819 4.67129 3.85345L7.14616 6.32833C7.34142 6.52359 7.65801 6.52359 7.85327 6.32833L10.3281 3.85345C10.5234 3.65819 10.5234 3.34161 10.3281 3.14634L7.85327 0.671471C7.65801 0.476209 7.34142 0.476209 7.14616 0.671471L4.67129 3.14634ZM7.49971 5.26766L5.73195 3.4999L7.49971 1.73213L9.26748 3.4999L7.49971 5.26766ZM8.67129 7.14634C8.47603 7.34161 8.47603 7.65819 8.67129 7.85345L11.1462 10.3283C11.3414 10.5236 11.658 10.5236 11.8533 10.3283L14.3281 7.85345C14.5234 7.65819 14.5234 7.34161 14.3281 7.14634L11.8533 4.67147C11.658 4.47621 11.3414 4.47621 11.1462 4.67147L8.67129 7.14634ZM11.4997 9.26766L9.73195 7.4999L11.4997 5.73213L13.2675 7.4999L11.4997 9.26766ZM4.67129 11.8535C4.47603 11.6582 4.47603 11.3416 4.67129 11.1463L7.14616 8.67147C7.34142 8.47621 7.65801 8.47621 7.85327 8.67147L10.3281 11.1463C10.5234 11.3416 10.5234 11.6582 10.3281 11.8535L7.85327 14.3283C7.65801 14.5236 7.34142 14.5236 7.14616 14.3283L4.67129 11.8535ZM5.73195 11.4999L7.49971 13.2677L9.26748 11.4999L7.49971 9.73213L5.73195 11.4999ZM0.671288 7.14649C0.476026 7.34175 0.476026 7.65834 0.671288 7.8536L3.14616 10.3285C3.34142 10.5237 3.65801 10.5237 3.85327 10.3285L6.32814 7.8536C6.5234 7.65834 6.5234 7.34175 6.32814 7.14649L3.85327 4.67162C3.65801 4.47636 3.34142 4.47636 3.14616 4.67162L0.671288 7.14649ZM3.49972 9.26781L1.73195 7.50005L3.49972 5.73228L5.26748 7.50005L3.49972 9.26781Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1a = ["color"];
var Component2Icon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1a);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.87935 1H3.9H11.1H11.1207C11.5231 0.999994 11.8553 0.999989 12.1259 1.0221C12.407 1.04506 12.6653 1.09434 12.908 1.21799C13.2843 1.40973 13.5903 1.7157 13.782 2.09202C13.9057 2.33469 13.9549 2.59304 13.9779 2.87409C14 3.14468 14 3.47686 14 3.87934V3.9V11.1V11.1207C14 11.5231 14 11.8553 13.9779 12.1259C13.9549 12.407 13.9057 12.6653 13.782 12.908C13.5903 13.2843 13.2843 13.5903 12.908 13.782C12.6653 13.9057 12.407 13.9549 12.1259 13.9779C11.8553 14 11.5231 14 11.1207 14H11.1H3.9H3.87934C3.47686 14 3.14468 14 2.87409 13.9779C2.59304 13.9549 2.33469 13.9057 2.09202 13.782C1.7157 13.5903 1.40973 13.2843 1.21799 12.908C1.09434 12.6653 1.04506 12.407 1.0221 12.1259C0.999989 11.8553 0.999994 11.5231 1 11.1207V11.1207V11.1V3.9V3.87935V3.87934C0.999994 3.47686 0.999989 3.14468 1.0221 2.87409C1.04506 2.59304 1.09434 2.33469 1.21799 2.09202C1.40973 1.7157 1.7157 1.40973 2.09202 1.21799C2.33469 1.09434 2.59304 1.04506 2.87409 1.0221C3.14469 0.999989 3.47687 0.999994 3.87935 1ZM2.95552 2.01878C2.73631 2.03669 2.62421 2.06915 2.54601 2.10899C2.35785 2.20487 2.20487 2.35785 2.10899 2.54601C2.06915 2.62421 2.03669 2.73631 2.01878 2.95552C2.00039 3.18056 2 3.47171 2 3.9V7H7V2H3.9C3.47171 2 3.18056 2.00039 2.95552 2.01878ZM7 8H2V11.1C2 11.5283 2.00039 11.8194 2.01878 12.0445C2.03669 12.2637 2.06915 12.3758 2.10899 12.454C2.20487 12.6422 2.35785 12.7951 2.54601 12.891C2.62421 12.9309 2.73631 12.9633 2.95552 12.9812C3.18056 12.9996 3.47171 13 3.9 13H7V8ZM8 8H13V11.1C13 11.5283 12.9996 11.8194 12.9812 12.0445C12.9633 12.2637 12.9309 12.3758 12.891 12.454C12.7951 12.6422 12.6422 12.7951 12.454 12.891C12.3758 12.9309 12.2637 12.9633 12.0445 12.9812C11.8194 12.9996 11.5283 13 11.1 13H8V8ZM13 7H8V2H11.1C11.5283 2 11.8194 2.00039 12.0445 2.01878C12.2637 2.03669 12.3758 2.06915 12.454 2.10899C12.6422 2.20487 12.7951 2.35785 12.891 2.54601C12.9309 2.62421 12.9633 2.73631 12.9812 2.95552C12.9996 3.18056 13 3.47171 13 3.9V7Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1b = ["color"];
var ComponentBooleanIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1b);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.85367 1.48956C7.65841 1.29429 7.34182 1.29429 7.14656 1.48956L1.48971 7.14641C1.29445 7.34167 1.29445 7.65825 1.48971 7.85352L7.14656 13.5104C7.34182 13.7056 7.65841 13.7056 7.85367 13.5104L13.5105 7.85352C13.7058 7.65825 13.7058 7.34167 13.5105 7.14641L7.85367 1.48956ZM7.5 2.55033L2.55037 7.49996L7.5 12.4496V2.55033Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1c = ["color"];
var ComponentInstanceIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1c);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.1465 1.48959C7.34176 1.29432 7.65835 1.29432 7.85361 1.48959L13.5105 7.14644C13.7057 7.3417 13.7057 7.65829 13.5105 7.85355L7.85361 13.5104C7.65835 13.7057 7.34176 13.7057 7.1465 13.5104L1.48965 7.85355C1.29439 7.65829 1.29439 7.3417 1.48965 7.14644L7.1465 1.48959ZM7.50005 2.55025L2.55031 7.49999L7.50005 12.4497L12.4498 7.49999L7.50005 2.55025Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1d = ["color"];
var ComponentNoneIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1d);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.85361 1.48959C7.65835 1.29432 7.34176 1.29432 7.1465 1.48959L1.48965 7.14644C1.29439 7.3417 1.29439 7.65829 1.48965 7.85355L3.9645 10.3284L1.64644 12.6464C1.45118 12.8417 1.45118 13.1583 1.64644 13.3536C1.84171 13.5488 2.15829 13.5488 2.35355 13.3536L4.6716 11.0355L7.1465 13.5104C7.34176 13.7057 7.65835 13.7057 7.85361 13.5104L13.5105 7.85355C13.7057 7.65829 13.7057 7.3417 13.5105 7.14644L11.0356 4.67154L13.3535 2.35355C13.5488 2.15829 13.5488 1.84171 13.3535 1.64645C13.1583 1.45118 12.8417 1.45118 12.6464 1.64645L10.3285 3.96443L7.85361 1.48959ZM9.62135 4.67154L7.50005 2.55025L2.55031 7.49999L4.6716 9.62129L9.62135 4.67154ZM5.37871 10.3284L7.50005 12.4497L12.4498 7.49999L10.3285 5.37865L5.37871 10.3284Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1e = ["color"];
var ComponentPlaceholderIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1e);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M12.8034 7.14644C12.9986 6.95118 13.3152 6.95118 13.5105 7.14644C13.7057 7.3417 13.7057 7.65829 13.5105 7.85355C13.3152 8.04881 12.9986 8.04881 12.8034 7.85355C12.6081 7.65828 12.6081 7.3417 12.8034 7.14644ZM12.0962 8.56065C12.2915 8.75592 12.2915 9.0725 12.0962 9.26776C11.901 9.46302 11.5844 9.46302 11.3891 9.26776C11.1939 9.0725 11.1939 8.75592 11.3891 8.56065C11.5844 8.36539 11.901 8.36539 12.0962 8.56065ZM10.682 9.97487C10.8773 10.1701 10.8773 10.4867 10.682 10.682C10.4868 10.8772 10.1702 10.8772 9.97493 10.682C9.77967 10.4867 9.77967 10.1701 9.97493 9.97487C10.1702 9.7796 10.4868 9.7796 10.682 9.97487ZM9.26782 11.3891C9.46308 11.5843 9.46308 11.9009 9.26782 12.0962C9.07256 12.2915 8.75598 12.2915 8.56071 12.0962C8.36545 11.9009 8.36545 11.5843 8.56072 11.3891C8.75598 11.1938 9.07256 11.1938 9.26782 11.3891ZM7.1465 13.5104C6.95124 13.3151 6.95124 12.9986 7.1465 12.8033C7.17091 12.7789 7.19721 12.7575 7.22494 12.7392C7.41901 12.6111 7.68275 12.6324 7.85361 12.8033C8.04887 12.9986 8.04887 13.3151 7.85361 13.5104C7.65835 13.7057 7.34176 13.7057 7.1465 13.5104Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    d: "M2.90386 8.56065C2.7086 8.75592 2.7086 9.0725 2.90386 9.26776 3.09912 9.46302 3.41571 9.46302 3.61097 9.26776 3.80623 9.0725 3.80623 8.75592 3.61097 8.56065 3.41571 8.36539 3.09912 8.36539 2.90386 8.56065zM4.31807 9.97487C4.12281 10.1701 4.12281 10.4867 4.31807 10.682 4.51334 10.8772 4.82992 10.8772 5.02518 10.682 5.22044 10.4867 5.22044 10.1701 5.02518 9.97487 4.82992 9.7796 4.51334 9.7796 4.31807 9.97487zM5.73229 11.3891C5.53703 11.5843 5.53703 11.9009 5.73229 12.0962 5.92755 12.2914 6.24413 12.2915 6.43939 12.0962 6.63466 11.9009 6.63466 11.5843 6.43939 11.3891 6.24413 11.1938 5.92755 11.1938 5.73229 11.3891zM2.19675 7.85355C2.36761 7.68269 2.38897 7.41895 2.26082 7.22488 2.09046 6.96684 1.71063 6.92546 1.48965 7.14644 1.29439 7.3417 1.29439 7.65829 1.48965 7.85355 1.68491 8.04881 2.00149 8.04881 2.19675 7.85355zM3.61097 5.73223C3.41571 5.53696 3.09912 5.53696 2.90386 5.73223 2.7086 5.92749 2.7086 6.24407 2.90386 6.43933 3.09912 6.6346 3.41571 6.6346 3.61097 6.43933 3.80623 6.24407 3.80623 5.92749 3.61097 5.73223zM5.02518 4.31801C4.82992 4.12275 4.51334 4.12275 4.31807 4.31801 4.12281 4.51328 4.12281 4.82986 4.31807 5.02512 4.51334 5.22038 4.82992 5.22038 5.02518 5.02512 5.22044 4.82986 5.22044 4.51328 5.02518 4.31801zM6.43939 2.9038C6.24413 2.70854 5.92755 2.70854 5.73229 2.9038 5.53703 3.09906 5.53703 3.41564 5.73229 3.61091 5.92755 3.80617 6.24413 3.80617 6.43939 3.61091 6.63466 3.41564 6.63466 3.09906 6.43939 2.9038zM7.85361 1.48959C7.65835 1.29432 7.34176 1.29432 7.1465 1.48959 6.95124 1.68485 6.95124 2.00143 7.1465 2.19669 7.34176 2.39196 7.65835 2.39196 7.85361 2.19669 8.04887 2.00143 8.04887 1.68485 7.85361 1.48959zM9.26782 2.9038C9.07256 2.70854 8.75598 2.70854 8.56071 2.9038 8.36545 3.09906 8.36545 3.41564 8.56071 3.61091 8.75598 3.80617 9.07256 3.80617 9.26782 3.61091 9.46308 3.41564 9.46308 3.09906 9.26782 2.9038zM10.682 4.31801C10.4868 4.12275 10.1702 4.12275 9.97493 4.31801 9.77967 4.51328 9.77967 4.82986 9.97493 5.02512 10.1702 5.22038 10.4868 5.22038 10.682 5.02512 10.8773 4.82986 10.8773 4.51328 10.682 4.31801zM12.0962 5.73223C11.901 5.53696 11.5844 5.53696 11.3891 5.73223 11.1939 5.92749 11.1939 6.24407 11.3891 6.43933 11.5844 6.6346 11.901 6.6346 12.0962 6.43933 12.2915 6.24407 12.2915 5.92749 12.0962 5.73223z",
    fill: color
  }));
});
var _excluded$1f = ["color"];
var ContainerIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1f);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M2 1.5C2 1.77614 1.77614 2 1.5 2C1.22386 2 1 1.77614 1 1.5C1 1.22386 1.22386 1 1.5 1C1.77614 1 2 1.22386 2 1.5ZM5 13H10V2L5 2L5 13ZM4 13C4 13.5523 4.44772 14 5 14H10C10.5523 14 11 13.5523 11 13V2C11 1.44772 10.5523 1 10 1H5C4.44772 1 4 1.44771 4 2V13ZM13.5 2C13.7761 2 14 1.77614 14 1.5C14 1.22386 13.7761 1 13.5 1C13.2239 1 13 1.22386 13 1.5C13 1.77614 13.2239 2 13.5 2ZM2 3.5C2 3.77614 1.77614 4 1.5 4C1.22386 4 1 3.77614 1 3.5C1 3.22386 1.22386 3 1.5 3C1.77614 3 2 3.22386 2 3.5ZM13.5 4C13.7761 4 14 3.77614 14 3.5C14 3.22386 13.7761 3 13.5 3C13.2239 3 13 3.22386 13 3.5C13 3.77614 13.2239 4 13.5 4ZM2 5.5C2 5.77614 1.77614 6 1.5 6C1.22386 6 1 5.77614 1 5.5C1 5.22386 1.22386 5 1.5 5C1.77614 5 2 5.22386 2 5.5ZM13.5 6C13.7761 6 14 5.77614 14 5.5C14 5.22386 13.7761 5 13.5 5C13.2239 5 13 5.22386 13 5.5C13 5.77614 13.2239 6 13.5 6ZM2 7.5C2 7.77614 1.77614 8 1.5 8C1.22386 8 1 7.77614 1 7.5C1 7.22386 1.22386 7 1.5 7C1.77614 7 2 7.22386 2 7.5ZM13.5 8C13.7761 8 14 7.77614 14 7.5C14 7.22386 13.7761 7 13.5 7C13.2239 7 13 7.22386 13 7.5C13 7.77614 13.2239 8 13.5 8ZM2 9.5C2 9.77614 1.77614 10 1.5 10C1.22386 10 1 9.77614 1 9.5C1 9.22386 1.22386 9 1.5 9C1.77614 9 2 9.22386 2 9.5ZM13.5 10C13.7761 10 14 9.77614 14 9.5C14 9.22386 13.7761 9 13.5 9C13.2239 9 13 9.22386 13 9.5C13 9.77614 13.2239 10 13.5 10ZM2 11.5C2 11.7761 1.77614 12 1.5 12C1.22386 12 1 11.7761 1 11.5C1 11.2239 1.22386 11 1.5 11C1.77614 11 2 11.2239 2 11.5ZM13.5 12C13.7761 12 14 11.7761 14 11.5C14 11.2239 13.7761 11 13.5 11C13.2239 11 13 11.2239 13 11.5C13 11.7761 13.2239 12 13.5 12ZM2 13.5C2 13.7761 1.77614 14 1.5 14C1.22386 14 1 13.7761 1 13.5C1 13.2239 1.22386 13 1.5 13C1.77614 13 2 13.2239 2 13.5ZM13.5 14C13.7761 14 14 13.7761 14 13.5C14 13.2239 13.7761 13 13.5 13C13.2239 13 13 13.2239 13 13.5C13 13.7761 13.2239 14 13.5 14Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1g = ["color"];
var CookieIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1g);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M12.0697 1.76746C12.4807 1.21947 11.4605 0.454311 11.0495 1.0023C10.6385 1.55028 11.6588 2.31544 12.0697 1.76746ZM8.39263 1.07811C7.15585 0.950602 5.7823 1.16348 4.58433 1.70937C3.38552 2.25563 2.32735 3.15309 1.78844 4.41832C1.37574 5.38724 1.01715 6.28113 1.00088 7.44354C0.984724 8.59844 1.30522 9.96898 2.13174 11.928C2.61142 13.0649 4.03963 13.5446 5.13895 13.8079C6.40836 14.1119 7.80857 14.1914 8.6644 14.0742C9.36515 13.9782 10.1448 13.8284 10.7987 13.297C11.8977 12.4039 12.9009 11.3955 13.4994 10.3393C14.104 9.27221 14.3256 8.09207 13.7216 6.95324C13.5628 6.65373 13.316 6.57734 13.0412 6.4923C12.9374 6.46016 12.8295 6.42678 12.7209 6.37966C11.6211 5.90234 10.9646 5.34963 10.9135 5.02876C10.8656 4.72808 10.9221 4.51463 10.9811 4.29181C11.0129 4.17199 11.0453 4.04947 11.0626 3.90922C11.0838 3.73737 11.0814 3.33319 10.6996 3.12761C10.4048 2.96888 10.2164 2.65843 10.0407 2.36904C9.99742 2.29775 9.95492 2.22773 9.9118 2.16158C9.62634 1.72367 9.20769 1.16213 8.39263 1.07811ZM4.99899 2.61935C3.96483 3.09058 3.12554 3.83097 2.70846 4.81018C2.29808 5.77368 2.01406 6.50873 2.00079 7.45753C1.98741 8.41385 2.25043 9.6368 3.0531 11.5393C3.39181 12.3421 4.62167 12.6557 5.37186 12.8354C6.5493 13.1174 7.822 13.1802 8.52868 13.0834C9.21271 12.9897 9.74568 12.8642 10.1681 12.5209C11.229 11.6587 12.121 10.7435 12.6293 9.84635C12.9349 9.30709 13.5141 7.7028 12.6292 7.3873C10.7539 6.71875 10.262 6.06669 9.99011 5.41268C9.80915 4.97744 9.82868 4.52282 9.95741 4.07885L9.95741 4.07884C9.97662 4.0126 9.99538 3.94791 10.0334 3.88882C9.81857 3.73676 9.6515 3.55195 9.51464 3.3715C9.42876 3.25828 9.3469 3.12099 9.26197 2.97856C9.01866 2.57052 8.75018 2.12027 8.29008 2.07283C7.22889 1.96343 6.03398 2.14772 4.99899 2.61935ZM13.2081 3.77471C13.441 3.22671 12.4547 2.63606 12.0822 3.10163C11.5817 3.72732 12.9029 4.49281 13.2081 3.77471ZM14.3672 2.26031C14.9668 2.27493 15.1551 1.11603 14.5718 0.949371C13.8076 0.731026 13.5918 2.24139 14.3672 2.26031ZM14.2857 5.09098C14.8644 5.10004 15.0462 4.38222 14.4832 4.27899C13.7455 4.14375 13.5373 5.07927 14.2857 5.09098ZM6.9075 4.28672C6.46898 4.66754 6.0522 4.15185 5.97983 3.7365C5.86848 3.09744 6.33696 2.56856 6.94823 2.91156C7.43344 3.18382 7.26678 3.97471 6.9075 4.28672ZM4.94455 5.88184C5.40885 5.41754 4.59567 4.57013 4.11425 5.05154C3.83338 5.33242 4.00936 5.65376 4.23744 5.88184C4.43271 6.0771 4.74929 6.0771 4.94455 5.88184ZM6.97716 6.71984C7.31181 7.38914 8.48804 6.79159 7.99413 6.14788C7.86519 5.97983 7.68657 5.9494 7.62145 5.94207C7.21217 5.89601 6.76349 6.2925 6.97716 6.71984ZM6.98798 8.72461C7.14066 9.1188 7.51122 9.3187 7.91915 9.1633C8.27434 9.02799 8.33186 8.39689 8.17175 8.07427C8.02331 7.77514 7.63956 7.67793 7.33747 7.79417C6.98512 7.92976 6.85672 8.38708 6.98576 8.71889L6.98798 8.72461ZM10.3885 8.84081C10.7575 8.6566 11.4617 8.82771 11.4617 9.31199C11.4617 9.71286 10.9587 10.2165 10.5634 10.2826C10.1813 10.3465 9.70515 9.97581 9.76648 9.57718C9.81445 9.26539 10.1217 8.97401 10.3885 8.84081ZM7.56704 10.8432C7.33461 10.7502 7.14353 10.8601 7.11437 10.8769L7.11279 10.8778C6.90782 10.9949 6.71383 11.2439 6.6747 11.4842C6.59018 12.0034 7.13199 12.1239 7.52661 12.0987C8.2074 12.0553 8.06547 11.0426 7.56704 10.8432ZM4.8805 10.8932C5.0674 10.7723 5.15658 10.5363 5.08293 10.3153C4.93046 9.79687 4.3246 9.71252 3.96561 10.1297C3.79336 10.3299 3.80749 10.6274 3.99214 10.8105L3.99495 10.814L3.9979 10.8176C4.22025 11.0942 4.63624 11.1857 4.8805 10.8932ZM3.04695 7.81318C3.33147 8.0977 3.60077 8.15067 3.98443 8.05859C4.60826 7.90887 4.13814 6.24299 3.047 6.87296C2.70939 7.06788 2.86716 7.63339 3.04695 7.81318Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1h = ["color"];
var CopyIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1h);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1 9.50006C1 10.3285 1.67157 11.0001 2.5 11.0001H4L4 10.0001H2.5C2.22386 10.0001 2 9.7762 2 9.50006L2 2.50006C2 2.22392 2.22386 2.00006 2.5 2.00006L9.5 2.00006C9.77614 2.00006 10 2.22392 10 2.50006V4.00002H5.5C4.67158 4.00002 4 4.67159 4 5.50002V12.5C4 13.3284 4.67158 14 5.5 14H12.5C13.3284 14 14 13.3284 14 12.5V5.50002C14 4.67159 13.3284 4.00002 12.5 4.00002H11V2.50006C11 1.67163 10.3284 1.00006 9.5 1.00006H2.5C1.67157 1.00006 1 1.67163 1 2.50006V9.50006ZM5 5.50002C5 5.22388 5.22386 5.00002 5.5 5.00002H12.5C12.7761 5.00002 13 5.22388 13 5.50002V12.5C13 12.7762 12.7761 13 12.5 13H5.5C5.22386 13 5 12.7762 5 12.5V5.50002Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1i = ["color"];
var CornerBottomLeftIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1i);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M9.87737 12H9.9H11.5C11.7761 12 12 11.7761 12 11.5C12 11.2239 11.7761 11 11.5 11H9.9C8.77164 11 7.95545 10.9996 7.31352 10.9472C6.67744 10.8952 6.25662 10.7946 5.91103 10.6185C5.25247 10.283 4.71703 9.74753 4.38148 9.08897C4.20539 8.74338 4.10481 8.32256 4.05284 7.68648C4.00039 7.04455 4 6.22836 4 5.1V3.5C4 3.22386 3.77614 3 3.5 3C3.22386 3 3 3.22386 3 3.5V5.1V5.12263C3 6.22359 3 7.08052 3.05616 7.76791C3.11318 8.46584 3.23058 9.0329 3.49047 9.54296C3.9219 10.3897 4.61031 11.0781 5.45704 11.5095C5.9671 11.7694 6.53416 11.8868 7.23209 11.9438C7.91948 12 8.77641 12 9.87737 12Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1j = ["color"];
var CornerBottomRightIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1j);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M5.12263 12H5.1H3.5C3.22386 12 3 11.7761 3 11.5C3 11.2239 3.22386 11 3.5 11H5.1C6.22836 11 7.04455 10.9996 7.68648 10.9472C8.32256 10.8952 8.74338 10.7946 9.08897 10.6185C9.74753 10.283 10.283 9.74753 10.6185 9.08897C10.7946 8.74338 10.8952 8.32256 10.9472 7.68648C10.9996 7.04455 11 6.22836 11 5.1V3.5C11 3.22386 11.2239 3 11.5 3C11.7761 3 12 3.22386 12 3.5V5.1V5.12263C12 6.22359 12 7.08052 11.9438 7.76791C11.8868 8.46584 11.7694 9.0329 11.5095 9.54296C11.0781 10.3897 10.3897 11.0781 9.54296 11.5095C9.0329 11.7694 8.46584 11.8868 7.76791 11.9438C7.08052 12 6.22359 12 5.12263 12Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1k = ["color"];
var CornerTopLeftIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1k);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M9.87737 3H9.9H11.5C11.7761 3 12 3.22386 12 3.5C12 3.77614 11.7761 4 11.5 4H9.9C8.77164 4 7.95545 4.00039 7.31352 4.05284C6.67744 4.10481 6.25662 4.20539 5.91103 4.38148C5.25247 4.71703 4.71703 5.25247 4.38148 5.91103C4.20539 6.25662 4.10481 6.67744 4.05284 7.31352C4.00039 7.95545 4 8.77164 4 9.9V11.5C4 11.7761 3.77614 12 3.5 12C3.22386 12 3 11.7761 3 11.5V9.9V9.87737C3 8.77641 3 7.91948 3.05616 7.23209C3.11318 6.53416 3.23058 5.9671 3.49047 5.45704C3.9219 4.61031 4.61031 3.9219 5.45704 3.49047C5.9671 3.23058 6.53416 3.11318 7.23209 3.05616C7.91948 3 8.77641 3 9.87737 3Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1l = ["color"];
var CornerTopRightIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1l);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M5.12263 3H5.1H3.5C3.22386 3 3 3.22386 3 3.5C3 3.77614 3.22386 4 3.5 4H5.1C6.22836 4 7.04455 4.00039 7.68648 4.05284C8.32256 4.10481 8.74338 4.20539 9.08897 4.38148C9.74753 4.71703 10.283 5.25247 10.6185 5.91103C10.7946 6.25662 10.8952 6.67744 10.9472 7.31352C10.9996 7.95545 11 8.77164 11 9.9V11.5C11 11.7761 11.2239 12 11.5 12C11.7761 12 12 11.7761 12 11.5V9.9V9.87737C12 8.77641 12 7.91948 11.9438 7.23209C11.8868 6.53416 11.7694 5.9671 11.5095 5.45704C11.0781 4.61031 10.3897 3.9219 9.54296 3.49047C9.0329 3.23058 8.46584 3.11318 7.76791 3.05616C7.08052 3 6.22359 3 5.12263 3Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1m = ["color"];
var CornersIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1m);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M5.5 2L4.87935 2C4.47687 1.99999 4.14469 1.99999 3.87409 2.0221C3.59304 2.04506 3.33469 2.09434 3.09202 2.21799C2.7157 2.40973 2.40973 2.7157 2.21799 3.09202C2.09434 3.33469 2.04506 3.59304 2.0221 3.87409C1.99999 4.14468 1.99999 4.47686 2 4.87933V4.87935V5.5C2 5.77614 2.22386 6 2.5 6C2.77614 6 3 5.77614 3 5.5V4.9C3 4.47171 3.00039 4.18056 3.01878 3.95552C3.03669 3.73631 3.06915 3.62421 3.10899 3.54601C3.20487 3.35785 3.35785 3.20487 3.54601 3.10899C3.62421 3.06915 3.73631 3.03669 3.95552 3.01878C4.18056 3.00039 4.47171 3 4.9 3H5.5C5.77614 3 6 2.77614 6 2.5C6 2.22386 5.77614 2 5.5 2ZM13 9.5C13 9.22386 12.7761 9 12.5 9C12.2239 9 12 9.22386 12 9.5V10.1C12 10.5283 11.9996 10.8194 11.9812 11.0445C11.9633 11.2637 11.9309 11.3758 11.891 11.454C11.7951 11.6422 11.6422 11.7951 11.454 11.891C11.3758 11.9309 11.2637 11.9633 11.0445 11.9812C10.8194 11.9996 10.5283 12 10.1 12H9.5C9.22386 12 9 12.2239 9 12.5C9 12.7761 9.22386 13 9.5 13H10.1206C10.5231 13 10.8553 13 11.1259 12.9779C11.407 12.9549 11.6653 12.9057 11.908 12.782C12.2843 12.5903 12.5903 12.2843 12.782 11.908C12.9057 11.6653 12.9549 11.407 12.9779 11.1259C13 10.8553 13 10.5232 13 10.1207V10.1207V10.1207V10.1206V9.5ZM2.5 9C2.77614 9 3 9.22386 3 9.5V10.1C3 10.5283 3.00039 10.8194 3.01878 11.0445C3.03669 11.2637 3.06915 11.3758 3.10899 11.454C3.20487 11.6422 3.35785 11.7951 3.54601 11.891C3.62421 11.9309 3.73631 11.9633 3.95552 11.9812C4.18056 11.9996 4.47171 12 4.9 12H5.5C5.77614 12 6 12.2239 6 12.5C6 12.7761 5.77614 13 5.5 13H4.87935C4.47687 13 4.14469 13 3.87409 12.9779C3.59304 12.9549 3.33469 12.9057 3.09202 12.782C2.7157 12.5903 2.40973 12.2843 2.21799 11.908C2.09434 11.6653 2.04506 11.407 2.0221 11.1259C1.99999 10.8553 1.99999 10.5231 2 10.1207V10.1206V10.1V9.5C2 9.22386 2.22386 9 2.5 9ZM10.1 3C10.5283 3 10.8194 3.00039 11.0445 3.01878C11.2637 3.03669 11.3758 3.06915 11.454 3.10899C11.6422 3.20487 11.7951 3.35785 11.891 3.54601C11.9309 3.62421 11.9633 3.73631 11.9812 3.95552C11.9996 4.18056 12 4.47171 12 4.9V5.5C12 5.77614 12.2239 6 12.5 6C12.7761 6 13 5.77614 13 5.5V4.87935V4.87934C13 4.47686 13 4.14468 12.9779 3.87409C12.9549 3.59304 12.9057 3.33469 12.782 3.09202C12.5903 2.7157 12.2843 2.40973 11.908 2.21799C11.6653 2.09434 11.407 2.04506 11.1259 2.0221C10.8553 1.99999 10.5231 1.99999 10.1206 2L10.1 2H9.5C9.22386 2 9 2.22386 9 2.5C9 2.77614 9.22386 3 9.5 3H10.1Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1n = ["color"];
var CountdownTimerIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1n);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M13.15 7.49998C13.15 4.66458 10.9402 1.84998 7.50002 1.84998C4.7217 1.84998 3.34851 3.90636 2.76336 4.99997H4.5C4.77614 4.99997 5 5.22383 5 5.49997C5 5.77611 4.77614 5.99997 4.5 5.99997H1.5C1.22386 5.99997 1 5.77611 1 5.49997V2.49997C1 2.22383 1.22386 1.99997 1.5 1.99997C1.77614 1.99997 2 2.22383 2 2.49997V4.31318C2.70453 3.07126 4.33406 0.849976 7.50002 0.849976C11.5628 0.849976 14.15 4.18537 14.15 7.49998C14.15 10.8146 11.5628 14.15 7.50002 14.15C5.55618 14.15 3.93778 13.3808 2.78548 12.2084C2.16852 11.5806 1.68668 10.839 1.35816 10.0407C1.25306 9.78536 1.37488 9.49315 1.63024 9.38806C1.8856 9.28296 2.17781 9.40478 2.2829 9.66014C2.56374 10.3425 2.97495 10.9745 3.4987 11.5074C4.47052 12.4963 5.83496 13.15 7.50002 13.15C10.9402 13.15 13.15 10.3354 13.15 7.49998ZM7 10V5.00001H8V10H7Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1o = ["color"];
var CounterClockwiseClockIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1o);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M13.15 7.49998C13.15 4.66458 10.9402 1.84998 7.50002 1.84998C4.72167 1.84998 3.34849 3.9064 2.76335 5H4.5C4.77614 5 5 5.22386 5 5.5C5 5.77614 4.77614 6 4.5 6H1.5C1.22386 6 1 5.77614 1 5.5V2.5C1 2.22386 1.22386 2 1.5 2C1.77614 2 2 2.22386 2 2.5V4.31318C2.70453 3.07126 4.33406 0.849976 7.50002 0.849976C11.5628 0.849976 14.15 4.18537 14.15 7.49998C14.15 10.8146 11.5628 14.15 7.50002 14.15C5.55618 14.15 3.93778 13.3808 2.78548 12.2084C2.16852 11.5806 1.68668 10.839 1.35816 10.0407C1.25306 9.78536 1.37488 9.49315 1.63024 9.38806C1.8856 9.28296 2.17781 9.40478 2.2829 9.66014C2.56374 10.3425 2.97495 10.9745 3.4987 11.5074C4.47052 12.4963 5.83496 13.15 7.50002 13.15C10.9402 13.15 13.15 10.3354 13.15 7.49998ZM7.5 4.00001C7.77614 4.00001 8 4.22387 8 4.50001V7.29291L9.85355 9.14646C10.0488 9.34172 10.0488 9.65831 9.85355 9.85357C9.65829 10.0488 9.34171 10.0488 9.14645 9.85357L7.14645 7.85357C7.05268 7.7598 7 7.63262 7 7.50001V4.50001C7 4.22387 7.22386 4.00001 7.5 4.00001Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1p = ["color"];
var CropIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1p);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.5 8.00684e-07C3.77614 7.88614e-07 4 0.223859 4 0.500001L4 3.00006L11.5 3.00006C11.7761 3.00006 12 3.22392 12 3.50006L12 11.0001L14.5 11C14.7761 11 15 11.2238 15 11.5C15 11.7761 14.7762 12 14.5 12L12 12.0001L12 14.5C12 14.7761 11.7761 15 11.5 15C11.2239 15 11 14.7761 11 14.5L11 12.0001L3.5 12.0001C3.22386 12.0001 3 11.7762 3 11.5001L3 4.00005L0.499989 4C0.223847 4 -6.10541e-06 3.77613 -5.02576e-07 3.49999C5.13006e-06 3.22385 0.223867 3 0.50001 3L3 3.00005L3 0.500001C3 0.223859 3.22386 8.12755e-07 3.5 8.00684e-07ZM4 4.00006L4 11.0001L11 11.0001L11 4.00006L4 4.00006Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1q = ["color"];
var Cross1Icon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1q);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M12.8536 2.85355C13.0488 2.65829 13.0488 2.34171 12.8536 2.14645C12.6583 1.95118 12.3417 1.95118 12.1464 2.14645L7.5 6.79289L2.85355 2.14645C2.65829 1.95118 2.34171 1.95118 2.14645 2.14645C1.95118 2.34171 1.95118 2.65829 2.14645 2.85355L6.79289 7.5L2.14645 12.1464C1.95118 12.3417 1.95118 12.6583 2.14645 12.8536C2.34171 13.0488 2.65829 13.0488 2.85355 12.8536L7.5 8.20711L12.1464 12.8536C12.3417 13.0488 12.6583 13.0488 12.8536 12.8536C13.0488 12.6583 13.0488 12.3417 12.8536 12.1464L8.20711 7.5L12.8536 2.85355Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1r = ["color"];
var Cross2Icon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1r);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M11.7816 4.03157C12.0062 3.80702 12.0062 3.44295 11.7816 3.2184C11.5571 2.99385 11.193 2.99385 10.9685 3.2184L7.50005 6.68682L4.03164 3.2184C3.80708 2.99385 3.44301 2.99385 3.21846 3.2184C2.99391 3.44295 2.99391 3.80702 3.21846 4.03157L6.68688 7.49999L3.21846 10.9684C2.99391 11.193 2.99391 11.557 3.21846 11.7816C3.44301 12.0061 3.80708 12.0061 4.03164 11.7816L7.50005 8.31316L10.9685 11.7816C11.193 12.0061 11.5571 12.0061 11.7816 11.7816C12.0062 11.557 12.0062 11.193 11.7816 10.9684L8.31322 7.49999L11.7816 4.03157Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1s = ["color"];
var CrossCircledIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1s);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M0.877075 7.49988C0.877075 3.84219 3.84222 0.877045 7.49991 0.877045C11.1576 0.877045 14.1227 3.84219 14.1227 7.49988C14.1227 11.1575 11.1576 14.1227 7.49991 14.1227C3.84222 14.1227 0.877075 11.1575 0.877075 7.49988ZM7.49991 1.82704C4.36689 1.82704 1.82708 4.36686 1.82708 7.49988C1.82708 10.6329 4.36689 13.1727 7.49991 13.1727C10.6329 13.1727 13.1727 10.6329 13.1727 7.49988C13.1727 4.36686 10.6329 1.82704 7.49991 1.82704ZM9.85358 5.14644C10.0488 5.3417 10.0488 5.65829 9.85358 5.85355L8.20713 7.49999L9.85358 9.14644C10.0488 9.3417 10.0488 9.65829 9.85358 9.85355C9.65832 10.0488 9.34173 10.0488 9.14647 9.85355L7.50002 8.2071L5.85358 9.85355C5.65832 10.0488 5.34173 10.0488 5.14647 9.85355C4.95121 9.65829 4.95121 9.3417 5.14647 9.14644L6.79292 7.49999L5.14647 5.85355C4.95121 5.65829 4.95121 5.3417 5.14647 5.14644C5.34173 4.95118 5.65832 4.95118 5.85358 5.14644L7.50002 6.79289L9.14647 5.14644C9.34173 4.95118 9.65832 4.95118 9.85358 5.14644Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1t = ["color"];
var Crosshair1Icon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1t);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M0.877075 7.50207C0.877075 3.84319 3.84319 0.877075 7.50208 0.877075C11.1609 0.877075 14.1271 3.84319 14.1271 7.50207C14.1271 11.1609 11.1609 14.1271 7.50208 14.1271C3.84319 14.1271 0.877075 11.1609 0.877075 7.50207ZM1.84898 7.00003C2.0886 4.26639 4.26639 2.0886 7.00003 1.84898V4.50003C7.00003 4.77617 7.22388 5.00003 7.50003 5.00003C7.77617 5.00003 8.00003 4.77617 8.00003 4.50003V1.84862C10.7356 2.08643 12.9154 4.26502 13.1552 7.00003H10.5C10.2239 7.00003 10 7.22388 10 7.50003C10 7.77617 10.2239 8.00003 10.5 8.00003H13.1555C12.9176 10.7369 10.7369 12.9176 8.00003 13.1555V10.5C8.00003 10.2239 7.77617 10 7.50003 10C7.22388 10 7.00003 10.2239 7.00003 10.5V13.1552C4.26502 12.9154 2.08643 10.7356 1.84862 8.00003H4.50003C4.77617 8.00003 5.00003 7.77617 5.00003 7.50003C5.00003 7.22388 4.77617 7.00003 4.50003 7.00003H1.84898Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1u = ["color"];
var Crosshair2Icon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1u);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.5 0C7.77614 0 8 0.223858 8 0.5V1.80687C10.6922 2.0935 12.8167 4.28012 13.0068 7H14.5C14.7761 7 15 7.22386 15 7.5C15 7.77614 14.7761 8 14.5 8H12.9888C12.7094 10.6244 10.6244 12.7094 8 12.9888V14.5C8 14.7761 7.77614 15 7.5 15C7.22386 15 7 14.7761 7 14.5V13.0068C4.28012 12.8167 2.0935 10.6922 1.80687 8H0.5C0.223858 8 0 7.77614 0 7.5C0 7.22386 0.223858 7 0.5 7H1.78886C1.98376 4.21166 4.21166 1.98376 7 1.78886V0.5C7 0.223858 7.22386 0 7.5 0ZM8 12.0322V9.5C8 9.22386 7.77614 9 7.5 9C7.22386 9 7 9.22386 7 9.5V12.054C4.80517 11.8689 3.04222 10.1668 2.76344 8H5.5C5.77614 8 6 7.77614 6 7.5C6 7.22386 5.77614 7 5.5 7H2.7417C2.93252 4.73662 4.73662 2.93252 7 2.7417V5.5C7 5.77614 7.22386 6 7.5 6C7.77614 6 8 5.77614 8 5.5V2.76344C10.1668 3.04222 11.8689 4.80517 12.054 7H9.5C9.22386 7 9 7.22386 9 7.5C9 7.77614 9.22386 8 9.5 8H12.0322C11.7621 10.0991 10.0991 11.7621 8 12.0322Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1v = ["color"];
var CrumpledPaperIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1v);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M4.60913 0.0634287C4.39082 0.0088505 4.16575 0.12393 4.08218 0.332867L3.1538 2.6538L0.832866 3.58218C0.702884 3.63417 0.604504 3.7437 0.566705 3.87849C0.528906 4.01329 0.555994 4.158 0.639992 4.26999L2.01148 6.09864L1.06343 9.89085C1.00944 10.1068 1.12145 10.3298 1.32691 10.4154L4.20115 11.613L5.62557 13.7496C5.73412 13.9124 5.93545 13.9864 6.12362 13.9327L9.62362 12.9327C9.62988 12.9309 9.63611 12.929 9.64229 12.9269L12.6423 11.9269C12.7923 11.8769 12.905 11.7519 12.9393 11.5976L13.9393 7.09761C13.9776 6.92506 13.9114 6.74605 13.77 6.63999L11.95 5.27499V2.99999C11.95 2.82955 11.8537 2.67373 11.7012 2.5975L8.70124 1.0975C8.67187 1.08282 8.64098 1.07139 8.60913 1.06343L4.60913 0.0634287ZM11.4323 6.01173L12.7748 7.01858L10.2119 9.15429C10.1476 9.20786 10.0995 9.2783 10.0731 9.35769L9.25382 11.8155L7.73849 10.8684C7.52774 10.7367 7.25011 10.8007 7.11839 11.0115C6.98667 11.2222 7.05074 11.4999 7.26149 11.6316L8.40341 12.3453L6.19221 12.9771L4.87441 11.0004C4.82513 10.9265 4.75508 10.8688 4.67307 10.8346L2.03046 9.73352L2.85134 6.44999H4.99999C5.24852 6.44999 5.44999 6.24852 5.44999 5.99999C5.44999 5.75146 5.24852 5.54999 4.99999 5.54999H2.72499L1.7123 4.19974L3.51407 3.47903L6.35769 4.4269C6.53655 4.48652 6.73361 4.42832 6.85138 4.28111L8.62413 2.06518L11.05 3.27811V5.19533L8.83287 6.08218C8.70996 6.13134 8.61494 6.23212 8.57308 6.35769L8.07308 7.85769C7.99449 8.09346 8.12191 8.34831 8.35769 8.4269C8.59346 8.50549 8.84831 8.37807 8.9269 8.14229L9.3609 6.84029L11.4323 6.01173ZM7.71052 1.76648L6.34462 3.47386L4.09505 2.724L4.77192 1.03183L7.71052 1.76648ZM10.2115 11.7885L12.116 11.1537L12.7745 8.19034L10.8864 9.76374L10.2115 11.7885Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1w = ["color"];
var CubeIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1w);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.28856 0.796908C7.42258 0.734364 7.57742 0.734364 7.71144 0.796908L13.7114 3.59691C13.8875 3.67906 14 3.85574 14 4.05V10.95C14 11.1443 13.8875 11.3209 13.7114 11.4031L7.71144 14.2031C7.57742 14.2656 7.42258 14.2656 7.28856 14.2031L1.28856 11.4031C1.11252 11.3209 1 11.1443 1 10.95V4.05C1 3.85574 1.11252 3.67906 1.28856 3.59691L7.28856 0.796908ZM2 4.80578L7 6.93078V12.9649L2 10.6316V4.80578ZM8 12.9649L13 10.6316V4.80578L8 6.93078V12.9649ZM7.5 6.05672L12.2719 4.02866L7.5 1.80176L2.72809 4.02866L7.5 6.05672Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1x = ["color"];
var CursorArrowIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1x);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.29227 0.048984C3.47033 -0.032338 3.67946 -0.00228214 3.8274 0.125891L12.8587 7.95026C13.0134 8.08432 13.0708 8.29916 13.0035 8.49251C12.9362 8.68586 12.7578 8.81866 12.5533 8.82768L9.21887 8.97474L11.1504 13.2187C11.2648 13.47 11.1538 13.7664 10.9026 13.8808L8.75024 14.8613C8.499 14.9758 8.20255 14.8649 8.08802 14.6137L6.15339 10.3703L3.86279 12.7855C3.72196 12.934 3.50487 12.9817 3.31479 12.9059C3.1247 12.8301 3 12.6461 3 12.4414V0.503792C3 0.308048 3.11422 0.130306 3.29227 0.048984ZM4 1.59852V11.1877L5.93799 9.14425C6.05238 9.02363 6.21924 8.96776 6.38319 8.99516C6.54715 9.02256 6.68677 9.12965 6.75573 9.2809L8.79056 13.7441L10.0332 13.178L8.00195 8.71497C7.93313 8.56376 7.94391 8.38824 8.03072 8.24659C8.11753 8.10494 8.26903 8.01566 8.435 8.00834L11.2549 7.88397L4 1.59852Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1y = ["color"];
var CursorTextIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1y);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M4.5 1C4.22386 1 4 1.22386 4 1.5C4 1.77614 4.22386 2 4.5 2C5.42215 2 6.0399 2.23054 6.42075 2.56379C6.79286 2.88939 7 3.36626 7 4V7H5.75C5.47386 7 5.25 7.22386 5.25 7.5C5.25 7.77614 5.47386 8 5.75 8H7V11C7 11.6337 6.79286 12.1106 6.42075 12.4362C6.0399 12.7695 5.42215 13 4.5 13C4.22386 13 4 13.2239 4 13.5C4 13.7761 4.22386 14 4.5 14C5.57785 14 6.4601 13.7305 7.07925 13.1888C7.24168 13.0467 7.38169 12.8896 7.5 12.7198C7.61832 12.8896 7.75832 13.0467 7.92075 13.1888C8.5399 13.7305 9.42215 14 10.5 14C10.7761 14 11 13.7761 11 13.5C11 13.2239 10.7761 13 10.5 13C9.57785 13 8.9601 12.7695 8.57925 12.4362C8.20714 12.1106 8 11.6337 8 11V8H9.25C9.52614 8 9.75 7.77614 9.75 7.5C9.75 7.22386 9.52614 7 9.25 7H8V4C8 3.36626 8.20714 2.88939 8.57925 2.56379C8.9601 2.23054 9.57785 2 10.5 2C10.7761 2 11 1.77614 11 1.5C11 1.22386 10.7761 1 10.5 1C9.42215 1 8.5399 1.26946 7.92075 1.81121C7.75832 1.95333 7.61832 2.11043 7.5 2.28023C7.38168 2.11043 7.24168 1.95333 7.07925 1.81121C6.4601 1.26946 5.57785 1 4.5 1Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1z = ["color"];
var DashIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1z);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M5 7.5C5 7.22386 5.22386 7 5.5 7H9.5C9.77614 7 10 7.22386 10 7.5C10 7.77614 9.77614 8 9.5 8H5.5C5.22386 8 5 7.77614 5 7.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1A = ["color"];
var DashboardIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1A);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M2.8 1L2.74967 0.99997C2.52122 0.999752 2.32429 0.999564 2.14983 1.04145C1.60136 1.17312 1.17312 1.60136 1.04145 2.14983C0.999564 2.32429 0.999752 2.52122 0.99997 2.74967L1 2.8V5.2L0.99997 5.25033C0.999752 5.47878 0.999564 5.67572 1.04145 5.85017C1.17312 6.39864 1.60136 6.82688 2.14983 6.95856C2.32429 7.00044 2.52122 7.00025 2.74967 7.00003L2.8 7H5.2L5.25033 7.00003C5.47878 7.00025 5.67572 7.00044 5.85017 6.95856C6.39864 6.82688 6.82688 6.39864 6.95856 5.85017C7.00044 5.67572 7.00025 5.47878 7.00003 5.25033L7 5.2V2.8L7.00003 2.74967C7.00025 2.52122 7.00044 2.32429 6.95856 2.14983C6.82688 1.60136 6.39864 1.17312 5.85017 1.04145C5.67572 0.999564 5.47878 0.999752 5.25033 0.99997L5.2 1H2.8ZM2.38328 2.01382C2.42632 2.00348 2.49222 2 2.8 2H5.2C5.50779 2 5.57369 2.00348 5.61672 2.01382C5.79955 2.05771 5.94229 2.20045 5.98619 2.38328C5.99652 2.42632 6 2.49222 6 2.8V5.2C6 5.50779 5.99652 5.57369 5.98619 5.61672C5.94229 5.79955 5.79955 5.94229 5.61672 5.98619C5.57369 5.99652 5.50779 6 5.2 6H2.8C2.49222 6 2.42632 5.99652 2.38328 5.98619C2.20045 5.94229 2.05771 5.79955 2.01382 5.61672C2.00348 5.57369 2 5.50779 2 5.2V2.8C2 2.49222 2.00348 2.42632 2.01382 2.38328C2.05771 2.20045 2.20045 2.05771 2.38328 2.01382ZM9.8 1L9.74967 0.99997C9.52122 0.999752 9.32429 0.999564 9.14983 1.04145C8.60136 1.17312 8.17312 1.60136 8.04145 2.14983C7.99956 2.32429 7.99975 2.52122 7.99997 2.74967L8 2.8V5.2L7.99997 5.25033C7.99975 5.47878 7.99956 5.67572 8.04145 5.85017C8.17312 6.39864 8.60136 6.82688 9.14983 6.95856C9.32429 7.00044 9.52122 7.00025 9.74967 7.00003L9.8 7H12.2L12.2503 7.00003C12.4788 7.00025 12.6757 7.00044 12.8502 6.95856C13.3986 6.82688 13.8269 6.39864 13.9586 5.85017C14.0004 5.67572 14.0003 5.47878 14 5.25033L14 5.2V2.8L14 2.74967C14.0003 2.52122 14.0004 2.32429 13.9586 2.14983C13.8269 1.60136 13.3986 1.17312 12.8502 1.04145C12.6757 0.999564 12.4788 0.999752 12.2503 0.99997L12.2 1H9.8ZM9.38328 2.01382C9.42632 2.00348 9.49222 2 9.8 2H12.2C12.5078 2 12.5737 2.00348 12.6167 2.01382C12.7995 2.05771 12.9423 2.20045 12.9862 2.38328C12.9965 2.42632 13 2.49222 13 2.8V5.2C13 5.50779 12.9965 5.57369 12.9862 5.61672C12.9423 5.79955 12.7995 5.94229 12.6167 5.98619C12.5737 5.99652 12.5078 6 12.2 6H9.8C9.49222 6 9.42632 5.99652 9.38328 5.98619C9.20045 5.94229 9.05771 5.79955 9.01382 5.61672C9.00348 5.57369 9 5.50779 9 5.2V2.8C9 2.49222 9.00348 2.42632 9.01382 2.38328C9.05771 2.20045 9.20045 2.05771 9.38328 2.01382ZM2.74967 7.99997L2.8 8H5.2L5.25033 7.99997C5.47878 7.99975 5.67572 7.99956 5.85017 8.04145C6.39864 8.17312 6.82688 8.60136 6.95856 9.14983C7.00044 9.32429 7.00025 9.52122 7.00003 9.74967L7 9.8V12.2L7.00003 12.2503C7.00025 12.4788 7.00044 12.6757 6.95856 12.8502C6.82688 13.3986 6.39864 13.8269 5.85017 13.9586C5.67572 14.0004 5.47878 14.0003 5.25033 14L5.2 14H2.8L2.74967 14C2.52122 14.0003 2.32429 14.0004 2.14983 13.9586C1.60136 13.8269 1.17312 13.3986 1.04145 12.8502C0.999564 12.6757 0.999752 12.4788 0.99997 12.2503L1 12.2V9.8L0.99997 9.74967C0.999752 9.52122 0.999564 9.32429 1.04145 9.14983C1.17312 8.60136 1.60136 8.17312 2.14983 8.04145C2.32429 7.99956 2.52122 7.99975 2.74967 7.99997ZM2.8 9C2.49222 9 2.42632 9.00348 2.38328 9.01382C2.20045 9.05771 2.05771 9.20045 2.01382 9.38328C2.00348 9.42632 2 9.49222 2 9.8V12.2C2 12.5078 2.00348 12.5737 2.01382 12.6167C2.05771 12.7995 2.20045 12.9423 2.38328 12.9862C2.42632 12.9965 2.49222 13 2.8 13H5.2C5.50779 13 5.57369 12.9965 5.61672 12.9862C5.79955 12.9423 5.94229 12.7995 5.98619 12.6167C5.99652 12.5737 6 12.5078 6 12.2V9.8C6 9.49222 5.99652 9.42632 5.98619 9.38328C5.94229 9.20045 5.79955 9.05771 5.61672 9.01382C5.57369 9.00348 5.50779 9 5.2 9H2.8ZM9.8 8L9.74967 7.99997C9.52122 7.99975 9.32429 7.99956 9.14983 8.04145C8.60136 8.17312 8.17312 8.60136 8.04145 9.14983C7.99956 9.32429 7.99975 9.52122 7.99997 9.74967L8 9.8V12.2L7.99997 12.2503C7.99975 12.4788 7.99956 12.6757 8.04145 12.8502C8.17312 13.3986 8.60136 13.8269 9.14983 13.9586C9.32429 14.0004 9.52122 14.0003 9.74967 14L9.8 14H12.2L12.2503 14C12.4788 14.0003 12.6757 14.0004 12.8502 13.9586C13.3986 13.8269 13.8269 13.3986 13.9586 12.8502C14.0004 12.6757 14.0003 12.4788 14 12.2503L14 12.2V9.8L14 9.74967C14.0003 9.52122 14.0004 9.32429 13.9586 9.14983C13.8269 8.60136 13.3986 8.17312 12.8502 8.04145C12.6757 7.99956 12.4788 7.99975 12.2503 7.99997L12.2 8H9.8ZM9.38328 9.01382C9.42632 9.00348 9.49222 9 9.8 9H12.2C12.5078 9 12.5737 9.00348 12.6167 9.01382C12.7995 9.05771 12.9423 9.20045 12.9862 9.38328C12.9965 9.42632 13 9.49222 13 9.8V12.2C13 12.5078 12.9965 12.5737 12.9862 12.6167C12.9423 12.7995 12.7995 12.9423 12.6167 12.9862C12.5737 12.9965 12.5078 13 12.2 13H9.8C9.49222 13 9.42632 12.9965 9.38328 12.9862C9.20045 12.9423 9.05771 12.7995 9.01382 12.6167C9.00348 12.5737 9 12.5078 9 12.2V9.8C9 9.49222 9.00348 9.42632 9.01382 9.38328C9.05771 9.20045 9.20045 9.05771 9.38328 9.01382Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1B = ["color"];
var DesktopIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1B);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1 3.25C1 3.11193 1.11193 3 1.25 3H13.75C13.8881 3 14 3.11193 14 3.25V10.75C14 10.8881 13.8881 11 13.75 11H1.25C1.11193 11 1 10.8881 1 10.75V3.25ZM1.25 2C0.559643 2 0 2.55964 0 3.25V10.75C0 11.4404 0.559644 12 1.25 12H5.07341L4.82991 13.2986C4.76645 13.6371 5.02612 13.95 5.37049 13.95H9.62951C9.97389 13.95 10.2336 13.6371 10.1701 13.2986L9.92659 12H13.75C14.4404 12 15 11.4404 15 10.75V3.25C15 2.55964 14.4404 2 13.75 2H1.25ZM9.01091 12H5.98909L5.79222 13.05H9.20778L9.01091 12Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1C = ["color"];
var DimensionsIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1C);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.00014 2.73895C3.00014 2.94698 2.76087 3.06401 2.59666 2.93628L1.00386 1.69744C0.875177 1.59735 0.875177 1.40286 1.00386 1.30277L2.59666 0.063928C2.76087 -0.0637944 3.00014 0.0532293 3.00014 0.261266V1.00012H9.00009V0.261296C9.00009 0.0532591 9.23936 -0.0637646 9.40358 0.0639578L10.9964 1.3028C11.1251 1.40289 11.1251 1.59738 10.9964 1.69747L9.40358 2.93631C9.23936 3.06404 9.00009 2.94701 9.00009 2.73898V2.00012H3.00014V2.73895ZM9.50002 4.99998H2.50002C2.22388 4.99998 2.00002 5.22384 2.00002 5.49998V12.5C2.00002 12.7761 2.22388 13 2.50002 13H9.50002C9.77616 13 10 12.7761 10 12.5V5.49998C10 5.22384 9.77616 4.99998 9.50002 4.99998ZM2.50002 3.99998C1.67159 3.99998 1.00002 4.67156 1.00002 5.49998V12.5C1.00002 13.3284 1.67159 14 2.50002 14H9.50002C10.3284 14 11 13.3284 11 12.5V5.49998C11 4.67156 10.3284 3.99998 9.50002 3.99998H2.50002ZM14.7389 6.00001H14V12H14.7389C14.9469 12 15.064 12.2393 14.9362 12.4035L13.6974 13.9963C13.5973 14.125 13.4028 14.125 13.3027 13.9963L12.0639 12.4035C11.9362 12.2393 12.0532 12 12.2612 12H13V6.00001H12.2612C12.0532 6.00001 11.9361 5.76074 12.0639 5.59653L13.3027 4.00373C13.4028 3.87505 13.5973 3.87505 13.6974 4.00374L14.9362 5.59653C15.0639 5.76074 14.9469 6.00001 14.7389 6.00001Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1D = ["color"];
var DiscIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1D);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.49991 0.877075C3.84222 0.877075 0.877075 3.84222 0.877075 7.49991C0.877075 11.1576 3.84222 14.1227 7.49991 14.1227C11.1576 14.1227 14.1227 11.1576 14.1227 7.49991C14.1227 3.84222 11.1576 0.877075 7.49991 0.877075ZM1.82708 7.49991C1.82708 4.36689 4.36689 1.82707 7.49991 1.82707C10.6329 1.82707 13.1727 4.36689 13.1727 7.49991C13.1727 10.6329 10.6329 13.1727 7.49991 13.1727C4.36689 13.1727 1.82708 10.6329 1.82708 7.49991ZM8.37287 7.50006C8.37287 7.98196 7.98221 8.37263 7.5003 8.37263C7.01839 8.37263 6.62773 7.98196 6.62773 7.50006C6.62773 7.01815 7.01839 6.62748 7.5003 6.62748C7.98221 6.62748 8.37287 7.01815 8.37287 7.50006ZM9.32287 7.50006C9.32287 8.50664 8.50688 9.32263 7.5003 9.32263C6.49372 9.32263 5.67773 8.50664 5.67773 7.50006C5.67773 6.49348 6.49372 5.67748 7.5003 5.67748C8.50688 5.67748 9.32287 6.49348 9.32287 7.50006Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1E = ["color"];
var DiscordLogoIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1E);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M5.07451 1.82584C5.03267 1.81926 4.99014 1.81825 4.94803 1.82284C4.10683 1.91446 2.82673 2.36828 2.07115 2.77808C2.02106 2.80525 1.97621 2.84112 1.93869 2.88402C1.62502 3.24266 1.34046 3.82836 1.11706 4.38186C0.887447 4.95076 0.697293 5.55032 0.588937 5.98354C0.236232 7.39369 0.042502 9.08728 0.0174948 10.6925C0.0162429 10.7729 0.0351883 10.8523 0.0725931 10.9234C0.373679 11.496 1.02015 12.027 1.66809 12.4152C2.32332 12.8078 3.08732 13.1182 3.70385 13.1778C3.85335 13.1922 4.00098 13.1358 4.10282 13.0255C4.2572 12.8581 4.5193 12.4676 4.71745 12.1643C4.80739 12.0267 4.89157 11.8953 4.95845 11.7901C5.62023 11.9106 6.45043 11.9801 7.50002 11.9801C8.54844 11.9801 9.37796 11.9107 10.0394 11.7905C10.1062 11.8957 10.1903 12.0269 10.2801 12.1643C10.4783 12.4676 10.7404 12.8581 10.8947 13.0255C10.9966 13.1358 11.1442 13.1922 11.2937 13.1778C11.9102 13.1182 12.6742 12.8078 13.3295 12.4152C13.9774 12.027 14.6239 11.496 14.925 10.9234C14.9624 10.8523 14.9813 10.7729 14.9801 10.6925C14.9551 9.08728 14.7613 7.39369 14.4086 5.98354C14.3003 5.55032 14.1101 4.95076 13.8805 4.38186C13.6571 3.82836 13.3725 3.24266 13.0589 2.88402C13.0214 2.84112 12.9765 2.80525 12.9264 2.77808C12.1708 2.36828 10.8907 1.91446 10.0495 1.82284C10.0074 1.81825 9.96489 1.81926 9.92305 1.82584C9.71676 1.85825 9.5391 1.96458 9.40809 2.06355C9.26977 2.16804 9.1413 2.29668 9.0304 2.42682C8.86968 2.61544 8.71437 2.84488 8.61428 3.06225C8.27237 3.03501 7.90138 3.02 7.5 3.02C7.0977 3.02 6.72593 3.03508 6.38337 3.06244C6.28328 2.84501 6.12792 2.61549 5.96716 2.42682C5.85626 2.29668 5.72778 2.16804 5.58947 2.06355C5.45846 1.96458 5.2808 1.85825 5.07451 1.82584ZM11.0181 11.5382C11.0395 11.5713 11.0615 11.6051 11.0838 11.6392C11.2169 11.843 11.3487 12.0385 11.4508 12.1809C11.8475 12.0916 12.352 11.8818 12.8361 11.5917C13.3795 11.2661 13.8098 10.8918 14.0177 10.5739C13.9852 9.06758 13.7993 7.50369 13.4773 6.21648C13.38 5.82759 13.2038 5.27021 12.9903 4.74117C12.7893 4.24326 12.5753 3.82162 12.388 3.5792C11.7376 3.24219 10.7129 2.88582 10.0454 2.78987C10.0308 2.79839 10.0113 2.81102 9.98675 2.82955C9.91863 2.881 9.84018 2.95666 9.76111 3.04945C9.71959 3.09817 9.68166 3.1471 9.64768 3.19449C9.953 3.25031 10.2253 3.3171 10.4662 3.39123C11.1499 3.6016 11.6428 3.89039 11.884 4.212C12.0431 4.42408 12.0001 4.72494 11.788 4.884C11.5759 5.04306 11.2751 5.00008 11.116 4.788C11.0572 4.70961 10.8001 4.4984 10.1838 4.30877C9.58933 4.12585 8.71356 3.98 7.5 3.98C6.28644 3.98 5.41067 4.12585 4.81616 4.30877C4.19988 4.4984 3.94279 4.70961 3.884 4.788C3.72494 5.00008 3.42408 5.04306 3.212 4.884C2.99992 4.72494 2.95694 4.42408 3.116 4.212C3.35721 3.89039 3.85011 3.6016 4.53383 3.39123C4.77418 3.31727 5.04571 3.25062 5.35016 3.19488C5.31611 3.14738 5.27808 3.09831 5.23645 3.04945C5.15738 2.95666 5.07893 2.881 5.01081 2.82955C4.98628 2.81102 4.96674 2.79839 4.95217 2.78987C4.28464 2.88582 3.25999 3.24219 2.60954 3.5792C2.42226 3.82162 2.20825 4.24326 2.00729 4.74117C1.79376 5.27021 1.61752 5.82759 1.52025 6.21648C1.19829 7.50369 1.01236 9.06758 0.97986 10.5739C1.18772 10.8918 1.61807 11.2661 2.16148 11.5917C2.64557 11.8818 3.15003 12.0916 3.5468 12.1809C3.64885 12.0385 3.78065 11.843 3.9138 11.6392C3.93626 11.6048 3.95838 11.5708 3.97996 11.5375C3.19521 11.2591 2.77361 10.8758 2.50064 10.4664C2.35359 10.2458 2.4132 9.94778 2.63377 9.80074C2.85435 9.65369 3.15236 9.71329 3.29941 9.93387C3.56077 10.3259 4.24355 11.0201 7.50002 11.0201C10.7565 11.0201 11.4392 10.326 11.7006 9.93386C11.8477 9.71329 12.1457 9.65369 12.3663 9.80074C12.5869 9.94779 12.6465 10.2458 12.4994 10.4664C12.2262 10.8762 11.8041 11.2598 11.0181 11.5382ZM4.08049 7.01221C4.32412 6.74984 4.65476 6.60162 5.00007 6.59998C5.34538 6.60162 5.67603 6.74984 5.91966 7.01221C6.16329 7.27459 6.30007 7.62974 6.30007 7.99998C6.30007 8.37021 6.16329 8.72536 5.91966 8.98774C5.67603 9.25011 5.34538 9.39833 5.00007 9.39998C4.65476 9.39833 4.32412 9.25011 4.08049 8.98774C3.83685 8.72536 3.70007 8.37021 3.70007 7.99998C3.70007 7.62974 3.83685 7.27459 4.08049 7.01221ZM9.99885 6.59998C9.65354 6.60162 9.3229 6.74984 9.07926 7.01221C8.83563 7.27459 8.69885 7.62974 8.69885 7.99998C8.69885 8.37021 8.83563 8.72536 9.07926 8.98774C9.3229 9.25011 9.65354 9.39833 9.99885 9.39998C10.3442 9.39833 10.6748 9.25011 10.9184 8.98774C11.1621 8.72536 11.2989 8.37021 11.2989 7.99998C11.2989 7.62974 11.1621 7.27459 10.9184 7.01221C10.6748 6.74984 10.3442 6.60162 9.99885 6.59998Z",
    fill: color
  }));
});
var _excluded$1F = ["color"];
var DividerHorizontalIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1F);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M2 7.5C2 7.22386 2.22386 7 2.5 7H12.5C12.7761 7 13 7.22386 13 7.5C13 7.77614 12.7761 8 12.5 8H2.5C2.22386 8 2 7.77614 2 7.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1G = ["color"];
var DividerVerticalIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1G);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.5 2C7.77614 2 8 2.22386 8 2.5L8 12.5C8 12.7761 7.77614 13 7.5 13C7.22386 13 7 12.7761 7 12.5L7 2.5C7 2.22386 7.22386 2 7.5 2Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1H = ["color"];
var DotIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1H);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.5 9.125C8.39746 9.125 9.125 8.39746 9.125 7.5C9.125 6.60254 8.39746 5.875 7.5 5.875C6.60254 5.875 5.875 6.60254 5.875 7.5C5.875 8.39746 6.60254 9.125 7.5 9.125ZM7.5 10.125C8.94975 10.125 10.125 8.94975 10.125 7.5C10.125 6.05025 8.94975 4.875 7.5 4.875C6.05025 4.875 4.875 6.05025 4.875 7.5C4.875 8.94975 6.05025 10.125 7.5 10.125Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1I = ["color"];
var DotFilledIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1I);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M9.875 7.5C9.875 8.81168 8.81168 9.875 7.5 9.875C6.18832 9.875 5.125 8.81168 5.125 7.5C5.125 6.18832 6.18832 5.125 7.5 5.125C8.81168 5.125 9.875 6.18832 9.875 7.5Z",
    fill: color
  }));
});
var _excluded$1J = ["color"];
var DotsHorizontalIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1J);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.625 7.5C3.625 8.12132 3.12132 8.625 2.5 8.625C1.87868 8.625 1.375 8.12132 1.375 7.5C1.375 6.87868 1.87868 6.375 2.5 6.375C3.12132 6.375 3.625 6.87868 3.625 7.5ZM8.625 7.5C8.625 8.12132 8.12132 8.625 7.5 8.625C6.87868 8.625 6.375 8.12132 6.375 7.5C6.375 6.87868 6.87868 6.375 7.5 6.375C8.12132 6.375 8.625 6.87868 8.625 7.5ZM12.5 8.625C13.1213 8.625 13.625 8.12132 13.625 7.5C13.625 6.87868 13.1213 6.375 12.5 6.375C11.8787 6.375 11.375 6.87868 11.375 7.5C11.375 8.12132 11.8787 8.625 12.5 8.625Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1K = ["color"];
var DotsVerticalIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1K);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M8.625 2.5C8.625 3.12132 8.12132 3.625 7.5 3.625C6.87868 3.625 6.375 3.12132 6.375 2.5C6.375 1.87868 6.87868 1.375 7.5 1.375C8.12132 1.375 8.625 1.87868 8.625 2.5ZM8.625 7.5C8.625 8.12132 8.12132 8.625 7.5 8.625C6.87868 8.625 6.375 8.12132 6.375 7.5C6.375 6.87868 6.87868 6.375 7.5 6.375C8.12132 6.375 8.625 6.87868 8.625 7.5ZM7.5 13.625C8.12132 13.625 8.625 13.1213 8.625 12.5C8.625 11.8787 8.12132 11.375 7.5 11.375C6.87868 11.375 6.375 11.8787 6.375 12.5C6.375 13.1213 6.87868 13.625 7.5 13.625Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1L = ["color"];
var DoubleArrowDownIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1L);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.85355 2.14645C3.65829 1.95118 3.34171 1.95118 3.14645 2.14645C2.95118 2.34171 2.95118 2.65829 3.14645 2.85355L7.14645 6.85355C7.34171 7.04882 7.65829 7.04882 7.85355 6.85355L11.8536 2.85355C12.0488 2.65829 12.0488 2.34171 11.8536 2.14645C11.6583 1.95118 11.3417 1.95118 11.1464 2.14645L7.5 5.79289L3.85355 2.14645ZM3.85355 8.14645C3.65829 7.95118 3.34171 7.95118 3.14645 8.14645C2.95118 8.34171 2.95118 8.65829 3.14645 8.85355L7.14645 12.8536C7.34171 13.0488 7.65829 13.0488 7.85355 12.8536L11.8536 8.85355C12.0488 8.65829 12.0488 8.34171 11.8536 8.14645C11.6583 7.95118 11.3417 7.95118 11.1464 8.14645L7.5 11.7929L3.85355 8.14645Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1M = ["color"];
var DoubleArrowLeftIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1M);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M6.85355 3.85355C7.04882 3.65829 7.04882 3.34171 6.85355 3.14645C6.65829 2.95118 6.34171 2.95118 6.14645 3.14645L2.14645 7.14645C1.95118 7.34171 1.95118 7.65829 2.14645 7.85355L6.14645 11.8536C6.34171 12.0488 6.65829 12.0488 6.85355 11.8536C7.04882 11.6583 7.04882 11.3417 6.85355 11.1464L3.20711 7.5L6.85355 3.85355ZM12.8536 3.85355C13.0488 3.65829 13.0488 3.34171 12.8536 3.14645C12.6583 2.95118 12.3417 2.95118 12.1464 3.14645L8.14645 7.14645C7.95118 7.34171 7.95118 7.65829 8.14645 7.85355L12.1464 11.8536C12.3417 12.0488 12.6583 12.0488 12.8536 11.8536C13.0488 11.6583 13.0488 11.3417 12.8536 11.1464L9.20711 7.5L12.8536 3.85355Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1N = ["color"];
var DoubleArrowRightIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1N);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M2.14645 11.1464C1.95118 11.3417 1.95118 11.6583 2.14645 11.8536C2.34171 12.0488 2.65829 12.0488 2.85355 11.8536L6.85355 7.85355C7.04882 7.65829 7.04882 7.34171 6.85355 7.14645L2.85355 3.14645C2.65829 2.95118 2.34171 2.95118 2.14645 3.14645C1.95118 3.34171 1.95118 3.65829 2.14645 3.85355L5.79289 7.5L2.14645 11.1464ZM8.14645 11.1464C7.95118 11.3417 7.95118 11.6583 8.14645 11.8536C8.34171 12.0488 8.65829 12.0488 8.85355 11.8536L12.8536 7.85355C13.0488 7.65829 13.0488 7.34171 12.8536 7.14645L8.85355 3.14645C8.65829 2.95118 8.34171 2.95118 8.14645 3.14645C7.95118 3.34171 7.95118 3.65829 8.14645 3.85355L11.7929 7.5L8.14645 11.1464Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1O = ["color"];
var DoubleArrowUpIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1O);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M11.1464 6.85355C11.3417 7.04882 11.6583 7.04882 11.8536 6.85355C12.0488 6.65829 12.0488 6.34171 11.8536 6.14645L7.85355 2.14645C7.65829 1.95118 7.34171 1.95118 7.14645 2.14645L3.14645 6.14645C2.95118 6.34171 2.95118 6.65829 3.14645 6.85355C3.34171 7.04882 3.65829 7.04882 3.85355 6.85355L7.5 3.20711L11.1464 6.85355ZM11.1464 12.8536C11.3417 13.0488 11.6583 13.0488 11.8536 12.8536C12.0488 12.6583 12.0488 12.3417 11.8536 12.1464L7.85355 8.14645C7.65829 7.95118 7.34171 7.95118 7.14645 8.14645L3.14645 12.1464C2.95118 12.3417 2.95118 12.6583 3.14645 12.8536C3.34171 13.0488 3.65829 13.0488 3.85355 12.8536L7.5 9.20711L11.1464 12.8536Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1P = ["color"];
var DownloadIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1P);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.50005 1.04999C7.74858 1.04999 7.95005 1.25146 7.95005 1.49999V8.41359L10.1819 6.18179C10.3576 6.00605 10.6425 6.00605 10.8182 6.18179C10.994 6.35753 10.994 6.64245 10.8182 6.81819L7.81825 9.81819C7.64251 9.99392 7.35759 9.99392 7.18185 9.81819L4.18185 6.81819C4.00611 6.64245 4.00611 6.35753 4.18185 6.18179C4.35759 6.00605 4.64251 6.00605 4.81825 6.18179L7.05005 8.41359V1.49999C7.05005 1.25146 7.25152 1.04999 7.50005 1.04999ZM2.5 10C2.77614 10 3 10.2239 3 10.5V12C3 12.5539 3.44565 13 3.99635 13H11.0012C11.5529 13 12 12.5528 12 12V10.5C12 10.2239 12.2239 10 12.5 10C12.7761 10 13 10.2239 13 10.5V12C13 13.1041 12.1062 14 11.0012 14H3.99635C2.89019 14 2 13.103 2 12V10.5C2 10.2239 2.22386 10 2.5 10Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1Q = ["color"];
var DragHandleDots1Icon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1Q);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("circle", {
    cx: "4.5",
    cy: "2.5",
    r: ".6",
    fill: color
  }), (0, import_react7.createElement)("circle", {
    cx: "4.5",
    cy: "4.5",
    r: ".6",
    fill: color
  }), (0, import_react7.createElement)("circle", {
    cx: "4.5",
    cy: "6.499",
    r: ".6",
    fill: color
  }), (0, import_react7.createElement)("circle", {
    cx: "4.5",
    cy: "8.499",
    r: ".6",
    fill: color
  }), (0, import_react7.createElement)("circle", {
    cx: "4.5",
    cy: "10.498",
    r: ".6",
    fill: color
  }), (0, import_react7.createElement)("circle", {
    cx: "4.5",
    cy: "12.498",
    r: ".6",
    fill: color
  }), (0, import_react7.createElement)("circle", {
    cx: "6.5",
    cy: "2.5",
    r: ".6",
    fill: color
  }), (0, import_react7.createElement)("circle", {
    cx: "6.5",
    cy: "4.5",
    r: ".6",
    fill: color
  }), (0, import_react7.createElement)("circle", {
    cx: "6.5",
    cy: "6.499",
    r: ".6",
    fill: color
  }), (0, import_react7.createElement)("circle", {
    cx: "6.5",
    cy: "8.499",
    r: ".6",
    fill: color
  }), (0, import_react7.createElement)("circle", {
    cx: "6.5",
    cy: "10.498",
    r: ".6",
    fill: color
  }), (0, import_react7.createElement)("circle", {
    cx: "6.5",
    cy: "12.498",
    r: ".6",
    fill: color
  }), (0, import_react7.createElement)("circle", {
    cx: "8.499",
    cy: "2.5",
    r: ".6",
    fill: color
  }), (0, import_react7.createElement)("circle", {
    cx: "8.499",
    cy: "4.5",
    r: ".6",
    fill: color
  }), (0, import_react7.createElement)("circle", {
    cx: "8.499",
    cy: "6.499",
    r: ".6",
    fill: color
  }), (0, import_react7.createElement)("circle", {
    cx: "8.499",
    cy: "8.499",
    r: ".6",
    fill: color
  }), (0, import_react7.createElement)("circle", {
    cx: "8.499",
    cy: "10.498",
    r: ".6",
    fill: color
  }), (0, import_react7.createElement)("circle", {
    cx: "8.499",
    cy: "12.498",
    r: ".6",
    fill: color
  }), (0, import_react7.createElement)("circle", {
    cx: "10.499",
    cy: "2.5",
    r: ".6",
    fill: color
  }), (0, import_react7.createElement)("circle", {
    cx: "10.499",
    cy: "4.5",
    r: ".6",
    fill: color
  }), (0, import_react7.createElement)("circle", {
    cx: "10.499",
    cy: "6.499",
    r: ".6",
    fill: color
  }), (0, import_react7.createElement)("circle", {
    cx: "10.499",
    cy: "8.499",
    r: ".6",
    fill: color
  }), (0, import_react7.createElement)("circle", {
    cx: "10.499",
    cy: "10.498",
    r: ".6",
    fill: color
  }), (0, import_react7.createElement)("circle", {
    cx: "10.499",
    cy: "12.498",
    r: ".6",
    fill: color
  }));
});
var _excluded$1R = ["color"];
var DragHandleDots2Icon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1R);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M5.5 4.625C6.12132 4.625 6.625 4.12132 6.625 3.5C6.625 2.87868 6.12132 2.375 5.5 2.375C4.87868 2.375 4.375 2.87868 4.375 3.5C4.375 4.12132 4.87868 4.625 5.5 4.625ZM9.5 4.625C10.1213 4.625 10.625 4.12132 10.625 3.5C10.625 2.87868 10.1213 2.375 9.5 2.375C8.87868 2.375 8.375 2.87868 8.375 3.5C8.375 4.12132 8.87868 4.625 9.5 4.625ZM10.625 7.5C10.625 8.12132 10.1213 8.625 9.5 8.625C8.87868 8.625 8.375 8.12132 8.375 7.5C8.375 6.87868 8.87868 6.375 9.5 6.375C10.1213 6.375 10.625 6.87868 10.625 7.5ZM5.5 8.625C6.12132 8.625 6.625 8.12132 6.625 7.5C6.625 6.87868 6.12132 6.375 5.5 6.375C4.87868 6.375 4.375 6.87868 4.375 7.5C4.375 8.12132 4.87868 8.625 5.5 8.625ZM10.625 11.5C10.625 12.1213 10.1213 12.625 9.5 12.625C8.87868 12.625 8.375 12.1213 8.375 11.5C8.375 10.8787 8.87868 10.375 9.5 10.375C10.1213 10.375 10.625 10.8787 10.625 11.5ZM5.5 12.625C6.12132 12.625 6.625 12.1213 6.625 11.5C6.625 10.8787 6.12132 10.375 5.5 10.375C4.87868 10.375 4.375 10.8787 4.375 11.5C4.375 12.1213 4.87868 12.625 5.5 12.625Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1S = ["color"];
var DragHandleHorizontalIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1S);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M2.49998 4.09998C2.27906 4.09998 2.09998 4.27906 2.09998 4.49998C2.09998 4.72089 2.27906 4.89998 2.49998 4.89998H12.5C12.7209 4.89998 12.9 4.72089 12.9 4.49998C12.9 4.27906 12.7209 4.09998 12.5 4.09998H2.49998ZM2.49998 6.09998C2.27906 6.09998 2.09998 6.27906 2.09998 6.49998C2.09998 6.72089 2.27906 6.89998 2.49998 6.89998H12.5C12.7209 6.89998 12.9 6.72089 12.9 6.49998C12.9 6.27906 12.7209 6.09998 12.5 6.09998H2.49998ZM2.09998 8.49998C2.09998 8.27906 2.27906 8.09998 2.49998 8.09998H12.5C12.7209 8.09998 12.9 8.27906 12.9 8.49998C12.9 8.72089 12.7209 8.89998 12.5 8.89998H2.49998C2.27906 8.89998 2.09998 8.72089 2.09998 8.49998ZM2.49998 10.1C2.27906 10.1 2.09998 10.2791 2.09998 10.5C2.09998 10.7209 2.27906 10.9 2.49998 10.9H12.5C12.7209 10.9 12.9 10.7209 12.9 10.5C12.9 10.2791 12.7209 10.1 12.5 10.1H2.49998Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1T = ["color"];
var DragHandleVerticalIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1T);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M4.09998 12.5C4.09998 12.7209 4.27906 12.9 4.49998 12.9C4.72089 12.9 4.89998 12.7209 4.89998 12.5L4.89998 2.50002C4.89998 2.27911 4.72089 2.10003 4.49998 2.10003C4.27906 2.10003 4.09998 2.27911 4.09998 2.50002L4.09998 12.5ZM6.09998 12.5C6.09998 12.7209 6.27906 12.9 6.49998 12.9C6.72089 12.9 6.89998 12.7209 6.89998 12.5L6.89998 2.50002C6.89998 2.27911 6.72089 2.10003 6.49998 2.10003C6.27906 2.10003 6.09998 2.27911 6.09998 2.50002L6.09998 12.5ZM8.49998 12.9C8.27906 12.9 8.09998 12.7209 8.09998 12.5L8.09998 2.50002C8.09998 2.27911 8.27906 2.10002 8.49998 2.10002C8.72089 2.10002 8.89998 2.27911 8.89998 2.50002L8.89998 12.5C8.89998 12.7209 8.72089 12.9 8.49998 12.9ZM10.1 12.5C10.1 12.7209 10.2791 12.9 10.5 12.9C10.7209 12.9 10.9 12.7209 10.9 12.5L10.9 2.50002C10.9 2.27911 10.7209 2.10002 10.5 2.10002C10.2791 2.10002 10.1 2.27911 10.1 2.50002L10.1 12.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1U = ["color"];
var DrawingPinIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1U);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M10.3285 1.13607C10.1332 0.940809 9.81662 0.940808 9.62136 1.13607C9.42609 1.33133 9.42609 1.64792 9.62136 1.84318L10.2744 2.49619L5.42563 6.13274L4.31805 5.02516C4.12279 4.8299 3.80621 4.8299 3.61095 5.02516C3.41569 5.22042 3.41569 5.537 3.61095 5.73226L5.02516 7.14648L6.08582 8.20714L2.81545 11.4775C2.62019 11.6728 2.62019 11.9894 2.81545 12.1846C3.01072 12.3799 3.3273 12.3799 3.52256 12.1846L6.79293 8.91425L7.85359 9.97491L9.2678 11.3891C9.46306 11.5844 9.77965 11.5844 9.97491 11.3891C10.1702 11.1939 10.1702 10.8773 9.97491 10.682L8.86733 9.57443L12.5039 4.7257L13.1569 5.37871C13.3522 5.57397 13.6687 5.57397 13.864 5.37871C14.0593 5.18345 14.0593 4.86687 13.864 4.6716L12.8033 3.61094L11.3891 2.19673L10.3285 1.13607ZM6.13992 6.84702L10.9887 3.21047L11.7896 4.01142L8.15305 8.86015L6.13992 6.84702Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1V = ["color"];
var DrawingPinFilledIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1V);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M9.62129 1.13607C9.81656 0.940808 10.1331 0.940809 10.3284 1.13607L11.3891 2.19673L12.8033 3.61094L13.8639 4.6716C14.0592 4.86687 14.0592 5.18345 13.8639 5.37871C13.6687 5.57397 13.3521 5.57397 13.1568 5.37871L12.5038 4.7257L8.86727 9.57443L9.97485 10.682C10.1701 10.8773 10.1701 11.1939 9.97485 11.3891C9.77959 11.5844 9.463 11.5844 9.26774 11.3891L7.85353 9.97491L6.79287 8.91425L3.5225 12.1846C3.32724 12.3799 3.01065 12.3799 2.81539 12.1846C2.62013 11.9894 2.62013 11.6728 2.81539 11.4775L6.08576 8.20714L5.0251 7.14648L3.61089 5.73226C3.41563 5.537 3.41562 5.22042 3.61089 5.02516C3.80615 4.8299 4.12273 4.8299 4.31799 5.02516L5.42557 6.13274L10.2743 2.49619L9.62129 1.84318C9.42603 1.64792 9.42603 1.33133 9.62129 1.13607Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    d: "M9.62129 1.13607C9.81656 0.940808 10.1331 0.940809 10.3284 1.13607L11.3891 2.19673L12.8033 3.61094L13.8639 4.6716C14.0592 4.86687 14.0592 5.18345 13.8639 5.37871C13.6687 5.57397 13.3521 5.57397 13.1568 5.37871L12.5038 4.7257L8.86727 9.57443L9.97485 10.682C10.1701 10.8773 10.1701 11.1939 9.97485 11.3891C9.77959 11.5844 9.463 11.5844 9.26774 11.3891L7.85353 9.97491L6.79287 8.91425L3.5225 12.1846C3.32724 12.3799 3.01065 12.3799 2.81539 12.1846C2.62013 11.9894 2.62013 11.6728 2.81539 11.4775L6.08576 8.20714L5.0251 7.14648L3.61089 5.73226C3.41563 5.537 3.41562 5.22042 3.61089 5.02516C3.80615 4.8299 4.12273 4.8299 4.31799 5.02516L5.42557 6.13274L10.2743 2.49619L9.62129 1.84318C9.42603 1.64792 9.42603 1.33133 9.62129 1.13607Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1W = ["color"];
var DropdownMenuIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1W);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.49999 3.09998C7.27907 3.09998 7.09999 3.27906 7.09999 3.49998C7.09999 3.72089 7.27907 3.89998 7.49999 3.89998H14.5C14.7209 3.89998 14.9 3.72089 14.9 3.49998C14.9 3.27906 14.7209 3.09998 14.5 3.09998H7.49999ZM7.49998 5.1C7.27907 5.1 7.09998 5.27908 7.09998 5.5C7.09998 5.72091 7.27907 5.9 7.49998 5.9H14.5C14.7209 5.9 14.9 5.72091 14.9 5.5C14.9 5.27908 14.7209 5.1 14.5 5.1H7.49998ZM7.1 7.5C7.1 7.27908 7.27909 7.1 7.5 7.1H14.5C14.7209 7.1 14.9 7.27908 14.9 7.5C14.9 7.72091 14.7209 7.9 14.5 7.9H7.5C7.27909 7.9 7.1 7.72091 7.1 7.5ZM7.49998 9.1C7.27907 9.1 7.09998 9.27908 7.09998 9.5C7.09998 9.72091 7.27907 9.9 7.49998 9.9H14.5C14.7209 9.9 14.9 9.72091 14.9 9.5C14.9 9.27908 14.7209 9.1 14.5 9.1H7.49998ZM7.09998 11.5C7.09998 11.2791 7.27907 11.1 7.49998 11.1H14.5C14.7209 11.1 14.9 11.2791 14.9 11.5C14.9 11.7209 14.7209 11.9 14.5 11.9H7.49998C7.27907 11.9 7.09998 11.7209 7.09998 11.5ZM2.5 9.25003L5 6.00003H0L2.5 9.25003Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1X = ["color"];
var EnterIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1X);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M4.5 1C4.22386 1 4 1.22386 4 1.5C4 1.77614 4.22386 2 4.5 2H12V13H4.5C4.22386 13 4 13.2239 4 13.5C4 13.7761 4.22386 14 4.5 14H12C12.5523 14 13 13.5523 13 13V2C13 1.44772 12.5523 1 12 1H4.5ZM6.60355 4.89645C6.40829 4.70118 6.09171 4.70118 5.89645 4.89645C5.70118 5.09171 5.70118 5.40829 5.89645 5.60355L7.29289 7H0.5C0.223858 7 0 7.22386 0 7.5C0 7.77614 0.223858 8 0.5 8H7.29289L5.89645 9.39645C5.70118 9.59171 5.70118 9.90829 5.89645 10.1036C6.09171 10.2988 6.40829 10.2988 6.60355 10.1036L8.85355 7.85355C9.04882 7.65829 9.04882 7.34171 8.85355 7.14645L6.60355 4.89645Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1Y = ["color"];
var EnterFullScreenIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1Y);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M2 2.5C2 2.22386 2.22386 2 2.5 2H5.5C5.77614 2 6 2.22386 6 2.5C6 2.77614 5.77614 3 5.5 3H3V5.5C3 5.77614 2.77614 6 2.5 6C2.22386 6 2 5.77614 2 5.5V2.5ZM9 2.5C9 2.22386 9.22386 2 9.5 2H12.5C12.7761 2 13 2.22386 13 2.5V5.5C13 5.77614 12.7761 6 12.5 6C12.2239 6 12 5.77614 12 5.5V3H9.5C9.22386 3 9 2.77614 9 2.5ZM2.5 9C2.77614 9 3 9.22386 3 9.5V12H5.5C5.77614 12 6 12.2239 6 12.5C6 12.7761 5.77614 13 5.5 13H2.5C2.22386 13 2 12.7761 2 12.5V9.5C2 9.22386 2.22386 9 2.5 9ZM12.5 9C12.7761 9 13 9.22386 13 9.5V12.5C13 12.7761 12.7761 13 12.5 13H9.5C9.22386 13 9 12.7761 9 12.5C9 12.2239 9.22386 12 9.5 12H12V9.5C12 9.22386 12.2239 9 12.5 9Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1Z = ["color"];
var EnvelopeClosedIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1Z);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1 2C0.447715 2 0 2.44772 0 3V12C0 12.5523 0.447715 13 1 13H14C14.5523 13 15 12.5523 15 12V3C15 2.44772 14.5523 2 14 2H1ZM1 3L14 3V3.92494C13.9174 3.92486 13.8338 3.94751 13.7589 3.99505L7.5 7.96703L1.24112 3.99505C1.16621 3.94751 1.0826 3.92486 1 3.92494V3ZM1 4.90797V12H14V4.90797L7.74112 8.87995C7.59394 8.97335 7.40606 8.97335 7.25888 8.87995L1 4.90797Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1_ = ["color"];
var EnvelopeOpenIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1_);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.94721 0.164594C7.66569 0.0238299 7.33431 0.0238302 7.05279 0.164594L0.552786 3.41459C0.214002 3.58399 0 3.93025 0 4.30902V12C0 12.5523 0.447715 13 1 13H14C14.5523 13 15 12.5523 15 12V4.30902C15 3.93025 14.786 3.58399 14.4472 3.41459L7.94721 0.164594ZM13.5689 4.09349L7.5 1.05902L1.43105 4.09349L7.5 7.29136L13.5689 4.09349ZM1 4.88366V12H14V4.88366L7.70977 8.19813C7.57848 8.26731 7.42152 8.26731 7.29023 8.19813L1 4.88366Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1$ = ["color"];
var EraserIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$1$);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M8.36052 0.72921C8.55578 0.533948 8.87236 0.533948 9.06763 0.72921L14.2708 5.93235C14.466 6.12761 14.466 6.4442 14.2708 6.63946L8.95513 11.9551L7.3466 13.5636C6.76081 14.1494 5.81106 14.1494 5.22528 13.5636L1.43635 9.7747C0.850563 9.18891 0.850563 8.23917 1.43635 7.65338L3.04488 6.04485L8.36052 0.72921ZM8.71407 1.78987L4.10554 6.3984L8.60157 10.8944L13.2101 6.28591L8.71407 1.78987ZM7.89447 11.6015L3.39843 7.10551L2.14346 8.36049C1.94819 8.55575 1.94819 8.87233 2.14346 9.06759L5.93238 12.8565C6.12765 13.0518 6.44423 13.0518 6.63949 12.8565L7.89447 11.6015Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$20 = ["color"];
var ExclamationTriangleIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$20);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M8.4449 0.608765C8.0183 -0.107015 6.9817 -0.107015 6.55509 0.608766L0.161178 11.3368C-0.275824 12.07 0.252503 13 1.10608 13H13.8939C14.7475 13 15.2758 12.07 14.8388 11.3368L8.4449 0.608765ZM7.4141 1.12073C7.45288 1.05566 7.54712 1.05566 7.5859 1.12073L13.9798 11.8488C14.0196 11.9154 13.9715 12 13.8939 12H1.10608C1.02849 12 0.980454 11.9154 1.02018 11.8488L7.4141 1.12073ZM6.8269 4.48611C6.81221 4.10423 7.11783 3.78663 7.5 3.78663C7.88217 3.78663 8.18778 4.10423 8.1731 4.48612L8.01921 8.48701C8.00848 8.766 7.7792 8.98664 7.5 8.98664C7.2208 8.98664 6.99151 8.766 6.98078 8.48701L6.8269 4.48611ZM8.24989 10.476C8.24989 10.8902 7.9141 11.226 7.49989 11.226C7.08567 11.226 6.74989 10.8902 6.74989 10.476C6.74989 10.0618 7.08567 9.72599 7.49989 9.72599C7.9141 9.72599 8.24989 10.0618 8.24989 10.476Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$21 = ["color"];
var ExitIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$21);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3 1C2.44771 1 2 1.44772 2 2V13C2 13.5523 2.44772 14 3 14H10.5C10.7761 14 11 13.7761 11 13.5C11 13.2239 10.7761 13 10.5 13H3V2L10.5 2C10.7761 2 11 1.77614 11 1.5C11 1.22386 10.7761 1 10.5 1H3ZM12.6036 4.89645C12.4083 4.70118 12.0917 4.70118 11.8964 4.89645C11.7012 5.09171 11.7012 5.40829 11.8964 5.60355L13.2929 7H6.5C6.22386 7 6 7.22386 6 7.5C6 7.77614 6.22386 8 6.5 8H13.2929L11.8964 9.39645C11.7012 9.59171 11.7012 9.90829 11.8964 10.1036C12.0917 10.2988 12.4083 10.2988 12.6036 10.1036L14.8536 7.85355C15.0488 7.65829 15.0488 7.34171 14.8536 7.14645L12.6036 4.89645Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$22 = ["color"];
var ExitFullScreenIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$22);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M5.5 2C5.77614 2 6 2.22386 6 2.5V5.5C6 5.77614 5.77614 6 5.5 6H2.5C2.22386 6 2 5.77614 2 5.5C2 5.22386 2.22386 5 2.5 5H5V2.5C5 2.22386 5.22386 2 5.5 2ZM9.5 2C9.77614 2 10 2.22386 10 2.5V5H12.5C12.7761 5 13 5.22386 13 5.5C13 5.77614 12.7761 6 12.5 6H9.5C9.22386 6 9 5.77614 9 5.5V2.5C9 2.22386 9.22386 2 9.5 2ZM2 9.5C2 9.22386 2.22386 9 2.5 9H5.5C5.77614 9 6 9.22386 6 9.5V12.5C6 12.7761 5.77614 13 5.5 13C5.22386 13 5 12.7761 5 12.5V10H2.5C2.22386 10 2 9.77614 2 9.5ZM9 9.5C9 9.22386 9.22386 9 9.5 9H12.5C12.7761 9 13 9.22386 13 9.5C13 9.77614 12.7761 10 12.5 10H10V12.5C10 12.7761 9.77614 13 9.5 13C9.22386 13 9 12.7761 9 12.5V9.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$23 = ["color"];
var ExternalLinkIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$23);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3 2C2.44772 2 2 2.44772 2 3V12C2 12.5523 2.44772 13 3 13H12C12.5523 13 13 12.5523 13 12V8.5C13 8.22386 12.7761 8 12.5 8C12.2239 8 12 8.22386 12 8.5V12H3V3L6.5 3C6.77614 3 7 2.77614 7 2.5C7 2.22386 6.77614 2 6.5 2H3ZM12.8536 2.14645C12.9015 2.19439 12.9377 2.24964 12.9621 2.30861C12.9861 2.36669 12.9996 2.4303 13 2.497L13 2.5V2.50049V5.5C13 5.77614 12.7761 6 12.5 6C12.2239 6 12 5.77614 12 5.5V3.70711L6.85355 8.85355C6.65829 9.04882 6.34171 9.04882 6.14645 8.85355C5.95118 8.65829 5.95118 8.34171 6.14645 8.14645L11.2929 3H9.5C9.22386 3 9 2.77614 9 2.5C9 2.22386 9.22386 2 9.5 2H12.4999H12.5C12.5678 2 12.6324 2.01349 12.6914 2.03794C12.7504 2.06234 12.8056 2.09851 12.8536 2.14645Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$24 = ["color"];
var EyeClosedIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$24);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M14.7649 6.07596C14.9991 6.22231 15.0703 6.53079 14.9239 6.76495C14.4849 7.46743 13.9632 8.10645 13.3702 8.66305L14.5712 9.86406C14.7664 10.0593 14.7664 10.3759 14.5712 10.5712C14.3759 10.7664 14.0593 10.7664 13.8641 10.5712L12.6011 9.30817C11.805 9.90283 10.9089 10.3621 9.93375 10.651L10.383 12.3277C10.4544 12.5944 10.2961 12.8685 10.0294 12.94C9.76267 13.0115 9.4885 12.8532 9.41704 12.5865L8.95917 10.8775C8.48743 10.958 8.00036 10.9999 7.50001 10.9999C6.99965 10.9999 6.51257 10.958 6.04082 10.8775L5.58299 12.5864C5.51153 12.8532 5.23737 13.0115 4.97064 12.94C4.7039 12.8686 4.5456 12.5944 4.61706 12.3277L5.06625 10.651C4.09111 10.3621 3.19503 9.90282 2.3989 9.30815L1.1359 10.5712C0.940638 10.7664 0.624058 10.7664 0.428798 10.5712C0.233537 10.3759 0.233537 10.0593 0.428798 9.86405L1.62982 8.66303C1.03682 8.10643 0.515113 7.46742 0.0760677 6.76495C-0.0702867 6.53079 0.000898544 6.22231 0.235065 6.07596C0.469231 5.9296 0.777703 6.00079 0.924058 6.23496C1.40354 7.00213 1.989 7.68057 2.66233 8.2427C2.67315 8.25096 2.6837 8.25972 2.69397 8.26898C4.00897 9.35527 5.65537 9.99991 7.50001 9.99991C10.3078 9.99991 12.6564 8.5063 14.076 6.23495C14.2223 6.00079 14.5308 5.9296 14.7649 6.07596Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$25 = ["color"];
var EyeNoneIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$25);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M13.3536 2.35355C13.5488 2.15829 13.5488 1.84171 13.3536 1.64645C13.1583 1.45118 12.8417 1.45118 12.6464 1.64645L10.6828 3.61012C9.70652 3.21671 8.63759 3 7.5 3C4.30786 3 1.65639 4.70638 0.0760002 7.23501C-0.0253338 7.39715 -0.0253334 7.60288 0.0760014 7.76501C0.902945 9.08812 2.02314 10.1861 3.36061 10.9323L1.64645 12.6464C1.45118 12.8417 1.45118 13.1583 1.64645 13.3536C1.84171 13.5488 2.15829 13.5488 2.35355 13.3536L4.31723 11.3899C5.29348 11.7833 6.36241 12 7.5 12C10.6921 12 13.3436 10.2936 14.924 7.76501C15.0253 7.60288 15.0253 7.39715 14.924 7.23501C14.0971 5.9119 12.9769 4.81391 11.6394 4.06771L13.3536 2.35355ZM9.90428 4.38861C9.15332 4.1361 8.34759 4 7.5 4C4.80285 4 2.52952 5.37816 1.09622 7.50001C1.87284 8.6497 2.89609 9.58106 4.09974 10.1931L9.90428 4.38861ZM5.09572 10.6114L10.9003 4.80685C12.1039 5.41894 13.1272 6.35031 13.9038 7.50001C12.4705 9.62183 10.1971 11 7.5 11C6.65241 11 5.84668 10.8639 5.09572 10.6114Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$26 = ["color"];
var EyeOpenIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$26);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.5 11C4.80285 11 2.52952 9.62184 1.09622 7.50001C2.52952 5.37816 4.80285 4 7.5 4C10.1971 4 12.4705 5.37816 13.9038 7.50001C12.4705 9.62183 10.1971 11 7.5 11ZM7.5 3C4.30786 3 1.65639 4.70638 0.0760002 7.23501C-0.0253338 7.39715 -0.0253334 7.60288 0.0760014 7.76501C1.65639 10.2936 4.30786 12 7.5 12C10.6921 12 13.3436 10.2936 14.924 7.76501C15.0253 7.60288 15.0253 7.39715 14.924 7.23501C13.3436 4.70638 10.6921 3 7.5 3ZM7.5 9.5C8.60457 9.5 9.5 8.60457 9.5 7.5C9.5 6.39543 8.60457 5.5 7.5 5.5C6.39543 5.5 5.5 6.39543 5.5 7.5C5.5 8.60457 6.39543 9.5 7.5 9.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$27 = ["color"];
var FaceIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$27);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.49991 0.876892C3.84222 0.876892 0.877075 3.84204 0.877075 7.49972C0.877075 11.1574 3.84222 14.1226 7.49991 14.1226C11.1576 14.1226 14.1227 11.1574 14.1227 7.49972C14.1227 3.84204 11.1576 0.876892 7.49991 0.876892ZM1.82708 7.49972C1.82708 4.36671 4.36689 1.82689 7.49991 1.82689C10.6329 1.82689 13.1727 4.36671 13.1727 7.49972C13.1727 10.6327 10.6329 13.1726 7.49991 13.1726C4.36689 13.1726 1.82708 10.6327 1.82708 7.49972ZM5.03747 9.21395C4.87949 8.98746 4.56782 8.93193 4.34133 9.08991C4.11484 9.24789 4.05931 9.55956 4.21729 9.78605C4.93926 10.8211 6.14033 11.5 7.50004 11.5C8.85974 11.5 10.0608 10.8211 10.7828 9.78605C10.9408 9.55956 10.8852 9.24789 10.6587 9.08991C10.4323 8.93193 10.1206 8.98746 9.9626 9.21395C9.41963 9.99238 8.51907 10.5 7.50004 10.5C6.481 10.5 5.58044 9.99238 5.03747 9.21395ZM5.37503 6.84998C5.85828 6.84998 6.25003 6.45815 6.25003 5.97498C6.25003 5.4918 5.85828 5.09998 5.37503 5.09998C4.89179 5.09998 4.50003 5.4918 4.50003 5.97498C4.50003 6.45815 4.89179 6.84998 5.37503 6.84998ZM10.5 5.97498C10.5 6.45815 10.1083 6.84998 9.62503 6.84998C9.14179 6.84998 8.75003 6.45815 8.75003 5.97498C8.75003 5.4918 9.14179 5.09998 9.62503 5.09998C10.1083 5.09998 10.5 5.4918 10.5 5.97498Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$28 = ["color"];
var FigmaLogoIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$28);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.00005 2.04999H5.52505C4.71043 2.04999 4.05005 2.71037 4.05005 3.52499C4.05005 4.33961 4.71043 4.99999 5.52505 4.99999H7.00005V2.04999ZM7.00005 1.04999H8.00005H9.47505C10.842 1.04999 11.95 2.15808 11.95 3.52499C11.95 4.33163 11.5642 5.04815 10.9669 5.49999C11.5642 5.95184 11.95 6.66836 11.95 7.475C11.95 8.8419 10.842 9.95 9.47505 9.95C8.92236 9.95 8.41198 9.76884 8.00005 9.46266V9.95L8.00005 11.425C8.00005 12.7919 6.89195 13.9 5.52505 13.9C4.15814 13.9 3.05005 12.7919 3.05005 11.425C3.05005 10.6183 3.43593 9.90184 4.03317 9.44999C3.43593 8.99814 3.05005 8.28163 3.05005 7.475C3.05005 6.66836 3.43594 5.95184 4.03319 5.5C3.43594 5.04815 3.05005 4.33163 3.05005 3.52499C3.05005 2.15808 4.15814 1.04999 5.52505 1.04999H7.00005ZM8.00005 2.04999V4.99999H9.47505C10.2897 4.99999 10.95 4.33961 10.95 3.52499C10.95 2.71037 10.2897 2.04999 9.47505 2.04999H8.00005ZM5.52505 8.94998H7.00005L7.00005 7.4788L7.00005 7.475L7.00005 7.4712V6H5.52505C4.71043 6 4.05005 6.66038 4.05005 7.475C4.05005 8.28767 4.70727 8.94684 5.5192 8.94999L5.52505 8.94998ZM4.05005 11.425C4.05005 10.6123 4.70727 9.95315 5.5192 9.94999L5.52505 9.95H7.00005L7.00005 11.425C7.00005 12.2396 6.33967 12.9 5.52505 12.9C4.71043 12.9 4.05005 12.2396 4.05005 11.425ZM8.00005 7.47206C8.00164 6.65879 8.66141 6 9.47505 6C10.2897 6 10.95 6.66038 10.95 7.475C10.95 8.28962 10.2897 8.95 9.47505 8.95C8.66141 8.95 8.00164 8.29121 8.00005 7.47794V7.47206Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$29 = ["color"];
var FileIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$29);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.5 2C3.22386 2 3 2.22386 3 2.5V12.5C3 12.7761 3.22386 13 3.5 13H11.5C11.7761 13 12 12.7761 12 12.5V6H8.5C8.22386 6 8 5.77614 8 5.5V2H3.5ZM9 2.70711L11.2929 5H9V2.70711ZM2 2.5C2 1.67157 2.67157 1 3.5 1H8.5C8.63261 1 8.75979 1.05268 8.85355 1.14645L12.8536 5.14645C12.9473 5.24021 13 5.36739 13 5.5V12.5C13 13.3284 12.3284 14 11.5 14H3.5C2.67157 14 2 13.3284 2 12.5V2.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2a = ["color"];
var FileMinusIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2a);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3 2.5C3 2.22386 3.22386 2 3.5 2H9.29289L12 4.70711V12.5C12 12.7761 11.7761 13 11.5 13H3.5C3.22386 13 3 12.7761 3 12.5V2.5ZM3.5 1C2.67157 1 2 1.67157 2 2.5V12.5C2 13.3284 2.67157 14 3.5 14H11.5C12.3284 14 13 13.3284 13 12.5V4.60355C13 4.40464 12.921 4.21388 12.7803 4.07322L9.85355 1.14645C9.75979 1.05268 9.63261 1 9.5 1H3.5ZM5.25 7C4.97386 7 4.75 7.22386 4.75 7.5C4.75 7.77614 4.97386 8 5.25 8H9.75C10.0261 8 10.25 7.77614 10.25 7.5C10.25 7.22386 10.0261 7 9.75 7H5.25Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2b = ["color"];
var FilePlusIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2b);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.5 2C3.22386 2 3 2.22386 3 2.5V12.5C3 12.7761 3.22386 13 3.5 13H11.5C11.7761 13 12 12.7761 12 12.5V4.70711L9.29289 2H3.5ZM2 2.5C2 1.67157 2.67157 1 3.5 1H9.5C9.63261 1 9.75979 1.05268 9.85355 1.14645L12.7803 4.07322C12.921 4.21388 13 4.40464 13 4.60355V12.5C13 13.3284 12.3284 14 11.5 14H3.5C2.67157 14 2 13.3284 2 12.5V2.5ZM4.75 7.5C4.75 7.22386 4.97386 7 5.25 7H7V5.25C7 4.97386 7.22386 4.75 7.5 4.75C7.77614 4.75 8 4.97386 8 5.25V7H9.75C10.0261 7 10.25 7.22386 10.25 7.5C10.25 7.77614 10.0261 8 9.75 8H8V9.75C8 10.0261 7.77614 10.25 7.5 10.25C7.22386 10.25 7 10.0261 7 9.75V8H5.25C4.97386 8 4.75 7.77614 4.75 7.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2c = ["color"];
var FileTextIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2c);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3 2.5C3 2.22386 3.22386 2 3.5 2H9.08579C9.21839 2 9.34557 2.05268 9.43934 2.14645L11.8536 4.56066C11.9473 4.65443 12 4.78161 12 4.91421V12.5C12 12.7761 11.7761 13 11.5 13H3.5C3.22386 13 3 12.7761 3 12.5V2.5ZM3.5 1C2.67157 1 2 1.67157 2 2.5V12.5C2 13.3284 2.67157 14 3.5 14H11.5C12.3284 14 13 13.3284 13 12.5V4.91421C13 4.51639 12.842 4.13486 12.5607 3.85355L10.1464 1.43934C9.86514 1.15804 9.48361 1 9.08579 1H3.5ZM4.5 4C4.22386 4 4 4.22386 4 4.5C4 4.77614 4.22386 5 4.5 5H7.5C7.77614 5 8 4.77614 8 4.5C8 4.22386 7.77614 4 7.5 4H4.5ZM4.5 7C4.22386 7 4 7.22386 4 7.5C4 7.77614 4.22386 8 4.5 8H10.5C10.7761 8 11 7.77614 11 7.5C11 7.22386 10.7761 7 10.5 7H4.5ZM4.5 10C4.22386 10 4 10.2239 4 10.5C4 10.7761 4.22386 11 4.5 11H10.5C10.7761 11 11 10.7761 11 10.5C11 10.2239 10.7761 10 10.5 10H4.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2d = ["color"];
var FontBoldIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2d);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M5.10505 12C4.70805 12 4.4236 11.912 4.25171 11.736C4.0839 11.5559 4 11.2715 4 10.8827V4.11733C4 3.72033 4.08595 3.43588 4.25784 3.26398C4.43383 3.08799 4.71623 3 5.10505 3C6.42741 3 8.25591 3 9.02852 3C10.1373 3 11.0539 3.98153 11.0539 5.1846C11.0539 6.08501 10.6037 6.81855 9.70327 7.23602C10.8657 7.44851 11.5176 8.62787 11.5176 9.48128C11.5176 10.5125 10.9902 12 9.27734 12C8.77742 12 6.42626 12 5.10505 12ZM8.37891 8.00341H5.8V10.631H8.37891C8.9 10.631 9.6296 10.1211 9.6296 9.29877C9.6296 8.47643 8.9 8.00341 8.37891 8.00341ZM5.8 4.36903V6.69577H8.17969C8.53906 6.69577 9.27734 6.35939 9.27734 5.50002C9.27734 4.64064 8.48047 4.36903 8.17969 4.36903H5.8Z",
    fill: color
  }));
});
var _excluded$2e = ["color"];
var FontFamilyIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2e);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M2.5 4.5C2.5 3.09886 3.59886 2 5 2H12.499C12.7752 2 13 2.22386 13 2.5C13 2.77614 12.7761 3 12.5 3H8.69244L8.40509 3.85458C8.18869 4.49752 7.89401 5.37197 7.58091 6.29794C7.50259 6.52956 7.42308 6.76453 7.34332 7H8.5C8.77614 7 9 7.22386 9 7.5C9 7.77614 8.77614 8 8.5 8H7.00407C6.56724 9.28543 6.16435 10.4613 5.95799 11.0386C5.63627 11.9386 5.20712 12.4857 4.66741 12.7778C4.16335 13.0507 3.64154 13.0503 3.28378 13.05L3.25 13.05C2.94624 13.05 2.7 12.8037 2.7 12.5C2.7 12.1962 2.94624 11.95 3.25 11.95C3.64182 11.95 3.9035 11.9405 4.14374 11.8105C4.36443 11.691 4.65532 11.4148 4.92217 10.6683C5.10695 10.1514 5.45375 9.14134 5.8422 8H4.5C4.22386 8 4 7.77614 4 7.5C4 7.22386 4.22386 7 4.5 7H6.18187C6.30127 6.64785 6.42132 6.29323 6.53887 5.94559C6.85175 5.02025 7.14627 4.14631 7.36256 3.50368L7.53192 3H5C4.15114 3 3.5 3.65114 3.5 4.5C3.5 4.77614 3.27614 5 3 5C2.72386 5 2.5 4.77614 2.5 4.5Z",
    fill: color
  }));
});
var _excluded$2f = ["color"];
var FontItalicIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2f);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M5.67494 3.50017C5.67494 3.25164 5.87641 3.05017 6.12494 3.05017H10.6249C10.8735 3.05017 11.0749 3.25164 11.0749 3.50017C11.0749 3.7487 10.8735 3.95017 10.6249 3.95017H9.00587L7.2309 11.05H8.87493C9.12345 11.05 9.32493 11.2515 9.32493 11.5C9.32493 11.7486 9.12345 11.95 8.87493 11.95H4.37493C4.1264 11.95 3.92493 11.7486 3.92493 11.5C3.92493 11.2515 4.1264 11.05 4.37493 11.05H5.99397L7.76894 3.95017H6.12494C5.87641 3.95017 5.67494 3.7487 5.67494 3.50017Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2g = ["color"];
var FontRomanIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2g);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M4.79993 3.50017C4.79993 3.25164 5.0014 3.05017 5.24993 3.05017H9.74993C9.99845 3.05017 10.1999 3.25164 10.1999 3.50017C10.1999 3.7487 9.99845 3.95017 9.74993 3.95017H8.09993V11.05H9.74994C9.99847 11.05 10.1999 11.2515 10.1999 11.5C10.1999 11.7486 9.99847 11.95 9.74994 11.95H5.24994C5.00141 11.95 4.79994 11.7486 4.79994 11.5C4.79994 11.2515 5.00141 11.05 5.24994 11.05H6.89993V3.95017H5.24993C5.0014 3.95017 4.79993 3.7487 4.79993 3.50017Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2h = ["color"];
var FontSizeIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2h);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M2.78233 2.21707C2.70732 2.14206 2.60557 2.09991 2.49949 2.09991C2.3934 2.09991 2.29166 2.14206 2.21664 2.21707L0.216645 4.21707C0.0604351 4.37328 0.0604351 4.62655 0.216645 4.78276C0.372855 4.93897 0.626121 4.93897 0.78233 4.78276L2.09949 3.4656L2.09949 11.5342L0.78233 10.2171C0.62612 10.0609 0.372854 10.0609 0.216645 10.2171C0.0604349 10.3733 0.0604349 10.6265 0.216645 10.7828L2.21664 12.7828C2.29166 12.8578 2.3934 12.8999 2.49949 12.8999C2.60557 12.8999 2.70731 12.8578 2.78233 12.7828L4.78233 10.7828C4.93854 10.6265 4.93854 10.3733 4.78233 10.2171C4.62612 10.0609 4.37285 10.0609 4.21664 10.2171L2.89949 11.5342L2.89949 3.4656L4.21664 4.78276C4.37285 4.93897 4.62612 4.93897 4.78233 4.78276C4.93854 4.62655 4.93854 4.37328 4.78233 4.21707L2.78233 2.21707ZM10.5 2.74997C10.7107 2.74997 10.8988 2.88211 10.9703 3.08036L13.9703 11.3999C14.064 11.6597 13.9293 11.9462 13.6696 12.0399C13.4098 12.1336 13.1233 11.9989 13.0296 11.7392L12.0477 9.016H8.95228L7.97033 11.7392C7.87666 11.9989 7.59013 12.1336 7.33036 12.0399C7.07059 11.9462 6.93595 11.6597 7.02962 11.3999L10.0296 3.08036C10.1011 2.88211 10.2892 2.74997 10.5 2.74997ZM10.5 4.72396L11.7412 8.166H9.25879L10.5 4.72396Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2i = ["color"];
var FontStyleIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2i);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1.03791 9.98075C0.934777 9.6583 1.11603 9.37719 1.40005 9.24871C1.68408 9.12022 2.09463 9.13412 2.27071 9.45426C2.85393 10.5147 3.64599 10.7282 4.48665 10.7282C5.52721 10.7282 6.29659 10.2615 6.29659 9.45426C6.29659 8.8047 5.9119 8.46416 4.87134 8.14253L4.15872 7.92181C2.64518 7.44883 1.88842 6.69206 1.88842 5.45601C1.88842 3.79743 3.27583 2.6875 5.24342 2.6875C6.91733 2.6875 7.97409 3.33536 8.43833 4.31065C8.57087 4.58909 8.57614 4.91294 8.22794 5.19114C7.87974 5.46934 7.52351 5.34799 7.23327 5.03839C6.47215 4.22653 5.99545 4.04968 5.25604 4.04968C4.1398 4.04968 3.547 4.63618 3.547 5.27943C3.547 5.86592 3.96322 6.23169 4.94702 6.5344L5.67856 6.76143C7.22994 7.23441 7.97409 7.95964 7.97409 9.17047C7.97409 10.7723 6.69389 12.0903 4.46143 12.0903C2.86612 12.0903 1.40005 11.1131 1.03791 9.98075ZM11.8491 8.77985C10.661 8.39543 10.1649 7.86114 10.1649 6.98805C10.1649 5.86736 11.1636 5.04639 12.6128 5.04639C13.8546 5.04639 14.6629 5.63345 14.9778 6.6346C15.0443 6.84599 14.9593 6.98006 14.7475 7.0491C14.5394 7.11697 14.3176 7.09974 14.238 6.89611C13.9356 6.12273 13.352 5.76311 12.5998 5.76311C11.6467 5.76311 11.0135 6.25178 11.0135 6.91638C11.0135 7.45066 11.3464 7.75038 12.2473 8.04358L12.8348 8.23254C14.062 8.62999 14.5516 9.13821 14.5516 10.0178C14.5516 11.1972 13.481 12.0442 11.9927 12.0442C10.6439 12.0442 9.65644 11.2809 9.41979 10.3361C9.36535 10.1188 9.41192 10.0287 9.70039 9.96184C9.98886 9.89499 10.0714 9.89918 10.1715 10.1369C10.4555 10.8114 11.1531 11.3275 12.0318 11.3275C12.9914 11.3275 13.6834 10.7802 13.6834 10.0634C13.6834 9.53567 13.3961 9.28807 12.4366 8.97532L11.8491 8.77985Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2j = ["color"];
var FrameIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2j);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M11 1.5C11 1.22386 10.7761 1 10.5 1C10.2239 1 10 1.22386 10 1.5V4H5V1.5C5 1.22386 4.77614 1 4.5 1C4.22386 1 4 1.22386 4 1.5V4H1.5C1.22386 4 1 4.22386 1 4.5C1 4.77614 1.22386 5 1.5 5H4V10H1.5C1.22386 10 1 10.2239 1 10.5C1 10.7761 1.22386 11 1.5 11H4V13.5C4 13.7761 4.22386 14 4.5 14C4.77614 14 5 13.7761 5 13.5V11H10V13.5C10 13.7761 10.2239 14 10.5 14C10.7761 14 11 13.7761 11 13.5V11H13.5C13.7761 11 14 10.7761 14 10.5C14 10.2239 13.7761 10 13.5 10H11V5H13.5C13.7761 5 14 4.77614 14 4.5C14 4.22386 13.7761 4 13.5 4H11V1.5ZM10 10V5H5V10H10Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2k = ["color"];
var FramerLogoIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2k);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.3825 1.29567C3.46241 1.11432 3.64188 0.997284 3.84005 0.997284H11.5C11.7761 0.997284 12 1.22114 12 1.49728V5.5C12 5.77614 11.7761 6 11.5 6H8.63521L11.5288 9.16247C11.6626 9.3087 11.6974 9.52015 11.6175 9.70154C11.5376 9.88293 11.3582 10 11.16 10H8V13.5C8 13.7022 7.87818 13.8845 7.69134 13.9619C7.5045 14.0393 7.28945 13.9966 7.14645 13.8536L3.14645 9.85355C3.05268 9.75979 3 9.63261 3 9.5V5.5C3 5.22386 3.22386 5 3.5 5H6.36531L3.47105 1.83468C3.33732 1.68844 3.30259 1.47701 3.3825 1.29567ZM7.72032 5L4.97474 1.99728H11V5H7.72032ZM7.27978 6H4V9H7.5H10.0247L7.27978 6ZM4.70711 10L7 12.2929V10H4.70711Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2l = ["color"];
var GearIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2l);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.07095 0.650238C6.67391 0.650238 6.32977 0.925096 6.24198 1.31231L6.0039 2.36247C5.6249 2.47269 5.26335 2.62363 4.92436 2.81013L4.01335 2.23585C3.67748 2.02413 3.23978 2.07312 2.95903 2.35386L2.35294 2.95996C2.0722 3.2407 2.0232 3.6784 2.23493 4.01427L2.80942 4.92561C2.62307 5.2645 2.47227 5.62594 2.36216 6.00481L1.31209 6.24287C0.924883 6.33065 0.650024 6.6748 0.650024 7.07183V7.92897C0.650024 8.32601 0.924883 8.67015 1.31209 8.75794L2.36228 8.99603C2.47246 9.375 2.62335 9.73652 2.80979 10.0755L2.2354 10.9867C2.02367 11.3225 2.07267 11.7602 2.35341 12.041L2.95951 12.6471C3.24025 12.9278 3.67795 12.9768 4.01382 12.7651L4.92506 12.1907C5.26384 12.377 5.62516 12.5278 6.0039 12.6379L6.24198 13.6881C6.32977 14.0753 6.67391 14.3502 7.07095 14.3502H7.92809C8.32512 14.3502 8.66927 14.0753 8.75705 13.6881L8.99505 12.6383C9.37411 12.5282 9.73573 12.3773 10.0748 12.1909L10.986 12.7653C11.3218 12.977 11.7595 12.928 12.0403 12.6473L12.6464 12.0412C12.9271 11.7604 12.9761 11.3227 12.7644 10.9869L12.1902 10.076C12.3768 9.73688 12.5278 9.37515 12.638 8.99596L13.6879 8.75794C14.0751 8.67015 14.35 8.32601 14.35 7.92897V7.07183C14.35 6.6748 14.0751 6.33065 13.6879 6.24287L12.6381 6.00488C12.528 5.62578 12.3771 5.26414 12.1906 4.92507L12.7648 4.01407C12.9766 3.6782 12.9276 3.2405 12.6468 2.95975L12.0407 2.35366C11.76 2.07292 11.3223 2.02392 10.9864 2.23565L10.0755 2.80989C9.73622 2.62328 9.37437 2.47229 8.99505 2.36209L8.75705 1.31231C8.66927 0.925096 8.32512 0.650238 7.92809 0.650238H7.07095ZM4.92053 3.81251C5.44724 3.44339 6.05665 3.18424 6.71543 3.06839L7.07095 1.50024H7.92809L8.28355 3.06816C8.94267 3.18387 9.5524 3.44302 10.0794 3.81224L11.4397 2.9547L12.0458 3.56079L11.1882 4.92117C11.5573 5.44798 11.8164 6.0575 11.9321 6.71638L13.5 7.07183V7.92897L11.932 8.28444C11.8162 8.94342 11.557 9.55301 11.1878 10.0798L12.0453 11.4402L11.4392 12.0462L10.0787 11.1886C9.55192 11.5576 8.94241 11.8166 8.28355 11.9323L7.92809 13.5002H7.07095L6.71543 11.932C6.0569 11.8162 5.44772 11.5572 4.92116 11.1883L3.56055 12.046L2.95445 11.4399L3.81213 10.0794C3.4431 9.55266 3.18403 8.94326 3.06825 8.2845L1.50002 7.92897V7.07183L3.06818 6.71632C3.18388 6.05765 3.44283 5.44833 3.81171 4.92165L2.95398 3.561L3.56008 2.95491L4.92053 3.81251ZM9.02496 7.50008C9.02496 8.34226 8.34223 9.02499 7.50005 9.02499C6.65786 9.02499 5.97513 8.34226 5.97513 7.50008C5.97513 6.65789 6.65786 5.97516 7.50005 5.97516C8.34223 5.97516 9.02496 6.65789 9.02496 7.50008ZM9.92496 7.50008C9.92496 8.83932 8.83929 9.92499 7.50005 9.92499C6.1608 9.92499 5.07513 8.83932 5.07513 7.50008C5.07513 6.16084 6.1608 5.07516 7.50005 5.07516C8.83929 5.07516 9.92496 6.16084 9.92496 7.50008Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2m = ["color"];
var GitHubLogoIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2m);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.49933 0.25C3.49635 0.25 0.25 3.49593 0.25 7.50024C0.25 10.703 2.32715 13.4206 5.2081 14.3797C5.57084 14.446 5.70302 14.2222 5.70302 14.0299C5.70302 13.8576 5.69679 13.4019 5.69323 12.797C3.67661 13.235 3.25112 11.825 3.25112 11.825C2.92132 10.9874 2.44599 10.7644 2.44599 10.7644C1.78773 10.3149 2.49584 10.3238 2.49584 10.3238C3.22353 10.375 3.60629 11.0711 3.60629 11.0711C4.25298 12.1788 5.30335 11.8588 5.71638 11.6732C5.78225 11.205 5.96962 10.8854 6.17658 10.7043C4.56675 10.5209 2.87415 9.89918 2.87415 7.12104C2.87415 6.32925 3.15677 5.68257 3.62053 5.17563C3.54576 4.99226 3.29697 4.25521 3.69174 3.25691C3.69174 3.25691 4.30015 3.06196 5.68522 3.99973C6.26337 3.83906 6.8838 3.75895 7.50022 3.75583C8.1162 3.75895 8.73619 3.83906 9.31523 3.99973C10.6994 3.06196 11.3069 3.25691 11.3069 3.25691C11.7026 4.25521 11.4538 4.99226 11.3795 5.17563C11.8441 5.68257 12.1245 6.32925 12.1245 7.12104C12.1245 9.9063 10.4292 10.5192 8.81452 10.6985C9.07444 10.9224 9.30633 11.3648 9.30633 12.0413C9.30633 13.0102 9.29742 13.7922 9.29742 14.0299C9.29742 14.2239 9.42828 14.4496 9.79591 14.3788C12.6746 13.4179 14.75 10.7025 14.75 7.50024C14.75 3.49593 11.5036 0.25 7.49933 0.25Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2n = ["color"];
var GlobeIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2n);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.49996 1.80002C4.35194 1.80002 1.79996 4.352 1.79996 7.50002C1.79996 10.648 4.35194 13.2 7.49996 13.2C10.648 13.2 13.2 10.648 13.2 7.50002C13.2 4.352 10.648 1.80002 7.49996 1.80002ZM0.899963 7.50002C0.899963 3.85494 3.85488 0.900024 7.49996 0.900024C11.145 0.900024 14.1 3.85494 14.1 7.50002C14.1 11.1451 11.145 14.1 7.49996 14.1C3.85488 14.1 0.899963 11.1451 0.899963 7.50002Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    d: "M13.4999 7.89998H1.49994V7.09998H13.4999V7.89998Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    d: "M7.09991 13.5V1.5H7.89991V13.5H7.09991zM10.375 7.49998C10.375 5.32724 9.59364 3.17778 8.06183 1.75656L8.53793 1.24341C10.2396 2.82218 11.075 5.17273 11.075 7.49998 11.075 9.82724 10.2396 12.1778 8.53793 13.7566L8.06183 13.2434C9.59364 11.8222 10.375 9.67273 10.375 7.49998zM3.99969 7.5C3.99969 5.17611 4.80786 2.82678 6.45768 1.24719L6.94177 1.75281C5.4582 3.17323 4.69969 5.32389 4.69969 7.5 4.6997 9.67611 5.45822 11.8268 6.94179 13.2472L6.45769 13.7528C4.80788 12.1732 3.9997 9.8239 3.99969 7.5z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    d: "M7.49996 3.95801C9.66928 3.95801 11.8753 4.35915 13.3706 5.19448 13.5394 5.28875 13.5998 5.50197 13.5055 5.67073 13.4113 5.83948 13.198 5.89987 13.0293 5.8056 11.6794 5.05155 9.60799 4.65801 7.49996 4.65801 5.39192 4.65801 3.32052 5.05155 1.97064 5.8056 1.80188 5.89987 1.58866 5.83948 1.49439 5.67073 1.40013 5.50197 1.46051 5.28875 1.62927 5.19448 3.12466 4.35915 5.33063 3.95801 7.49996 3.95801zM7.49996 10.85C9.66928 10.85 11.8753 10.4488 13.3706 9.6135 13.5394 9.51924 13.5998 9.30601 13.5055 9.13726 13.4113 8.9685 13.198 8.90812 13.0293 9.00238 11.6794 9.75643 9.60799 10.15 7.49996 10.15 5.39192 10.15 3.32052 9.75643 1.97064 9.00239 1.80188 8.90812 1.58866 8.9685 1.49439 9.13726 1.40013 9.30601 1.46051 9.51924 1.62927 9.6135 3.12466 10.4488 5.33063 10.85 7.49996 10.85z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2o = ["color"];
var GridIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2o);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M12.5 2H8V7H13V2.5C13 2.22386 12.7761 2 12.5 2ZM13 8H8V13H12.5C12.7761 13 13 12.7761 13 12.5V8ZM7 7V2H2.5C2.22386 2 2 2.22386 2 2.5V7H7ZM2 8V12.5C2 12.7761 2.22386 13 2.5 13H7V8H2ZM2.5 1C1.67157 1 1 1.67157 1 2.5V12.5C1 13.3284 1.67157 14 2.5 14H12.5C13.3284 14 14 13.3284 14 12.5V2.5C14 1.67157 13.3284 1 12.5 1H2.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2p = ["color"];
var GroupIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2p);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1.44995 0.949951C1.31734 0.949951 1.19016 1.00263 1.0964 1.0964C1.00263 1.19017 0.949951 1.31735 0.949951 1.44995L0.949966 3.44995C0.949969 3.7261 1.17383 3.94995 1.44997 3.94995C1.72611 3.94995 1.94997 3.72609 1.94997 3.44995L1.94995 1.94995H3.44997C3.72611 1.94995 3.94997 1.72609 3.94997 1.44995C3.94997 1.17381 3.72611 0.949951 3.44997 0.949951H1.44995ZM5.94995 0.949951C5.67381 0.949951 5.44995 1.17381 5.44995 1.44995C5.44995 1.72609 5.67381 1.94995 5.94995 1.94995H8.94995C9.22609 1.94995 9.44995 1.72609 9.44995 1.44995C9.44995 1.17381 9.22609 0.949951 8.94995 0.949951H5.94995ZM5.44995 13.45C5.44995 13.1738 5.67381 12.95 5.94995 12.95H8.94995C9.22609 12.95 9.44995 13.1738 9.44995 13.45C9.44995 13.7261 9.22609 13.95 8.94995 13.95H5.94995C5.67381 13.95 5.44995 13.7261 5.44995 13.45ZM1.94995 5.94995C1.94995 5.67381 1.72609 5.44995 1.44995 5.44995C1.17381 5.44995 0.949951 5.67381 0.949951 5.94995V8.94995C0.949951 9.22609 1.17381 9.44995 1.44995 9.44995C1.72609 9.44995 1.94995 9.22609 1.94995 8.94995V5.94995ZM13.45 5.44995C13.7261 5.44995 13.95 5.67381 13.95 5.94995V8.94995C13.95 9.22609 13.7261 9.44995 13.45 9.44995C13.1738 9.44995 12.95 9.22609 12.95 8.94995V5.94995C12.95 5.67381 13.1738 5.44995 13.45 5.44995ZM11.45 0.949951C11.1738 0.949951 10.95 1.17381 10.95 1.44995C10.95 1.72609 11.1738 1.94995 11.45 1.94995H12.9499V3.44995C12.9499 3.72609 13.1738 3.94995 13.4499 3.94995C13.7261 3.94995 13.9499 3.72609 13.9499 3.44995V1.44995C13.9499 1.17381 13.7252 0.949951 13.449 0.949951H11.45ZM1.44995 10.95C1.72609 10.95 1.94995 11.1738 1.94995 11.45V12.95H3.44997C3.72611 12.95 3.94997 13.1738 3.94997 13.45C3.94997 13.7261 3.72611 13.95 3.44997 13.95H1.44995C1.17381 13.95 0.949951 13.7261 0.949951 13.45V11.45C0.949951 11.1738 1.17381 10.95 1.44995 10.95ZM13.95 11.45C13.95 11.1738 13.7261 10.95 13.45 10.95C13.1738 10.9499 12.95 11.1738 12.95 11.4499L12.9491 12.95H11.45C11.1738 12.95 10.95 13.1738 10.95 13.45C10.95 13.7261 11.1738 13.95 11.45 13.95H13.4499C13.7261 13.95 13.9499 13.7261 13.9499 13.45L13.95 11.45Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2q = ["color"];
var Half1Icon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2q);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.49991 0.876892C3.84222 0.876892 0.877075 3.84204 0.877075 7.49972C0.877075 11.1574 3.84222 14.1226 7.49991 14.1226C11.1576 14.1226 14.1227 11.1574 14.1227 7.49972C14.1227 3.84204 11.1576 0.876892 7.49991 0.876892ZM7.00003 1.84861C4.10114 2.1017 1.82707 4.53515 1.82707 7.49972C1.82707 10.4643 4.10114 12.8977 7.00003 13.1508V1.84861ZM8.00003 13.1508C10.8988 12.8976 13.1727 10.4642 13.1727 7.49972C13.1727 4.53524 10.8988 2.10185 8.00003 1.84864V13.1508Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2r = ["color"];
var Half2Icon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2r);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.49991 0.876892C3.84222 0.876892 0.877075 3.84204 0.877075 7.49972C0.877075 11.1574 3.84222 14.1226 7.49991 14.1226C11.1576 14.1226 14.1227 11.1574 14.1227 7.49972C14.1227 3.84204 11.1576 0.876892 7.49991 0.876892ZM7.49988 1.82689C4.36688 1.8269 1.82707 4.36672 1.82707 7.49972C1.82707 10.6327 4.36688 13.1725 7.49988 13.1726V1.82689Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2s = ["color"];
var HamburgerMenuIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2s);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1.5 3C1.22386 3 1 3.22386 1 3.5C1 3.77614 1.22386 4 1.5 4H13.5C13.7761 4 14 3.77614 14 3.5C14 3.22386 13.7761 3 13.5 3H1.5ZM1 7.5C1 7.22386 1.22386 7 1.5 7H13.5C13.7761 7 14 7.22386 14 7.5C14 7.77614 13.7761 8 13.5 8H1.5C1.22386 8 1 7.77614 1 7.5ZM1 11.5C1 11.2239 1.22386 11 1.5 11H13.5C13.7761 11 14 11.2239 14 11.5C14 11.7761 13.7761 12 13.5 12H1.5C1.22386 12 1 11.7761 1 11.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2t = ["color"];
var HandIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2t);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M6.8113 1.64706C6.62188 2.87918 6.68268 3.88523 6.76848 5.30499C6.78415 5.56426 6.80065 5.83732 6.81661 6.12808C6.83111 6.39208 6.63758 6.62172 6.37495 6.65217C6.11232 6.68262 5.87138 6.50334 5.82509 6.24304L5.74754 5.80698C5.64402 5.16529 5.48355 4.25481 5.17807 3.44741C4.86241 2.61312 4.4486 2.04121 3.93436 1.86044C3.64994 1.76104 3.41901 1.84279 3.25868 2.01052C3.08746 2.18962 2.9976 2.47065 3.0627 2.75399C3.2146 3.34424 3.44627 3.9167 3.69836 4.51802C3.72082 4.57158 3.74346 4.62543 3.76621 4.67954C3.9954 5.22457 4.23619 5.7972 4.41644 6.39081L4.41691 6.39238C4.562 6.87586 4.65646 7.2595 4.73086 7.56165C4.76034 7.68138 4.78667 7.78831 4.81175 7.88359C4.86768 8.09606 4.77836 8.32014 4.59161 8.43588C4.40486 8.55161 4.16445 8.53188 3.99907 8.38725C3.73749 8.15848 3.515 7.92784 3.31817 7.71802C3.27627 7.67335 3.23602 7.63018 3.19705 7.58838C3.04777 7.42826 2.91712 7.28812 2.78334 7.16029C2.45989 6.85122 2.18398 6.68004 1.80585 6.64369L1.80324 6.64343C1.56117 6.61888 1.41402 6.66441 1.31756 6.72627C1.21899 6.78947 1.11988 6.90414 1.03784 7.1123C0.976576 7.28492 1.01515 7.62987 1.1929 7.96911L1.19728 7.97747C1.40086 8.38452 1.74475 8.81587 2.18141 9.29299C2.39739 9.52898 2.62872 9.76849 2.86934 10.0174L2.87966 10.0281C3.11546 10.2721 3.35962 10.5247 3.59713 10.7827C4.4288 11.6863 5.27706 12.7538 5.4627 14H11.5087C11.5636 12.4353 11.8756 11.268 12.2875 10.1346C12.4454 9.70041 12.6121 9.28412 12.7826 8.85829C13.1097 8.04139 13.4509 7.18937 13.7705 6.10824C14.0989 4.99737 14.0097 4.37033 13.8613 4.03984C13.717 3.71858 13.4914 3.61786 13.3816 3.59606C13.1381 3.54774 13.0384 3.60947 12.9698 3.67901C12.867 3.78316 12.7698 3.98273 12.6921 4.30269C12.6166 4.61345 12.5752 4.96517 12.533 5.32501L12.5298 5.35285C12.4924 5.67242 12.4505 6.03016 12.3665 6.30098C12.3383 6.40699 12.2819 6.50407 12.1979 6.57539C12.1382 6.6261 12.0104 6.70818 11.8309 6.69312C11.5424 6.66891 11.3712 6.42143 11.365 6.14783C11.356 5.75454 11.3883 5.35864 11.4074 4.96608C11.4428 4.23646 11.477 3.5337 11.4245 2.8342L11.4242 2.82934C11.3916 2.32997 11.0493 2.00228 10.7007 1.9228C10.5305 1.88401 10.369 1.90601 10.2347 1.9835C10.103 2.05946 9.95535 2.21318 9.8574 2.51394L9.85631 2.51726C9.81525 2.6404 9.77298 2.87753 9.73606 3.2124C9.70044 3.53542 9.67337 3.91279 9.65156 4.29418C9.6329 4.62033 9.61785 4.9584 9.60434 5.26194C9.58728 5.64529 9.57267 5.97357 9.55633 6.1532C9.54983 6.22459 9.52939 6.29493 9.49501 6.35785C9.47356 6.39711 9.36115 6.60947 9.07106 6.61843C8.77917 6.62744 8.63975 6.40057 8.61698 6.35919C8.55634 6.24899 8.55066 6.11807 8.54754 5.99283C8.54474 5.88064 8.54294 5.71798 8.54174 5.54767C8.53935 5.20582 8.53935 4.81919 8.53935 4.70952C8.53935 3.6657 8.53838 2.65372 8.44714 1.64372C8.39183 1.24127 8.06278 1.00455 7.6436 1.00005C7.22399 0.995552 6.87918 1.22704 6.8113 1.64706ZM9.41219 1.3617C9.21469 0.448484 8.39913 0.00810324 7.65433 0.00011154C6.86452 -0.00836308 5.98761 0.465881 5.82365 1.49037L5.82318 1.49334C5.78239 1.7584 5.75229 2.01481 5.7309 2.26652C5.39423 1.67364 4.92622 1.14894 4.2655 0.916859C3.58661 0.679312 2.9492 0.887087 2.53582 1.31952C2.13415 1.73971 1.94438 2.36742 2.09031 2.98746L2.09269 2.99713C2.26478 3.66808 2.52396 4.30316 2.77613 4.90465C2.79814 4.95717 2.8201 5.00941 2.84194 5.06139C3.02139 5.48842 3.19378 5.89866 3.33871 6.31256C2.96404 5.98142 2.51925 5.70796 1.90276 5.6484C1.48865 5.60663 1.10391 5.67536 0.777805 5.88444C0.454239 6.0919 0.240671 6.40405 0.104187 6.75406L0.100868 6.76281C-0.10184 7.31286 0.0663312 7.97157 0.304895 8.42897C0.573704 8.96474 0.996104 9.47904 1.44372 9.96813C1.67046 10.2159 1.91136 10.4652 2.15033 10.7124L2.15682 10.7191C2.39524 10.9658 2.63217 11.2109 2.86134 11.4599C3.80937 12.49 4.50002 13.4632 4.50002 14.5C4.50002 14.7761 4.72388 15 5.00002 15H12C12.2762 15 12.5 14.7761 12.5 14.5C12.5 12.8212 12.8021 11.6462 13.2274 10.4762C13.3653 10.0968 13.5216 9.70579 13.6868 9.29247C14.0238 8.44922 14.398 7.51298 14.7295 6.39175C15.0956 5.15324 15.0559 4.25904 14.7735 3.63017C14.487 2.99208 13.9798 2.6953 13.5763 2.6152C13.1276 2.52614 12.7367 2.60475 12.4268 2.83081C12.4253 2.80773 12.4236 2.78468 12.4219 2.76167C12.3587 1.8105 11.6907 1.12285 10.923 0.947821C10.5346 0.859287 10.1111 0.900393 9.73509 1.11724C9.61852 1.18446 9.51055 1.26623 9.41219 1.3617Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2u = ["color"];
var HeadingIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2u);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M8.75432 2.0502C8.50579 2.0502 8.30432 2.25167 8.30432 2.5002C8.30432 2.74873 8.50579 2.9502 8.75432 2.9502H9.94997V7.05004H5.04997V2.9502H6.25432C6.50285 2.9502 6.70432 2.74873 6.70432 2.5002C6.70432 2.25167 6.50285 2.0502 6.25432 2.0502H2.75432C2.50579 2.0502 2.30432 2.25167 2.30432 2.5002C2.30432 2.74873 2.50579 2.9502 2.75432 2.9502H3.94997V12.0502H2.75432C2.50579 12.0502 2.30432 12.2517 2.30432 12.5002C2.30432 12.7487 2.50579 12.9502 2.75432 12.9502H6.25432C6.50285 12.9502 6.70432 12.7487 6.70432 12.5002C6.70432 12.2517 6.50285 12.0502 6.25432 12.0502H5.04997V7.95004H9.94997V12.0502H8.75432C8.50579 12.0502 8.30432 12.2517 8.30432 12.5002C8.30432 12.7487 8.50579 12.9502 8.75432 12.9502H12.2543C12.5028 12.9502 12.7043 12.7487 12.7043 12.5002C12.7043 12.2517 12.5028 12.0502 12.2543 12.0502H11.05V2.9502H12.2543C12.5028 2.9502 12.7043 2.74873 12.7043 2.5002C12.7043 2.25167 12.5028 2.0502 12.2543 2.0502H8.75432Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2v = ["color"];
var HeartIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2v);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M4.89346 2.35248C3.49195 2.35248 2.35248 3.49359 2.35248 4.90532C2.35248 6.38164 3.20954 7.9168 4.37255 9.33522C5.39396 10.581 6.59464 11.6702 7.50002 12.4778C8.4054 11.6702 9.60608 10.581 10.6275 9.33522C11.7905 7.9168 12.6476 6.38164 12.6476 4.90532C12.6476 3.49359 11.5081 2.35248 10.1066 2.35248C9.27059 2.35248 8.81894 2.64323 8.5397 2.95843C8.27877 3.25295 8.14623 3.58566 8.02501 3.88993C8.00391 3.9429 7.98315 3.99501 7.96211 4.04591C7.88482 4.23294 7.7024 4.35494 7.50002 4.35494C7.29765 4.35494 7.11523 4.23295 7.03793 4.04592C7.01689 3.99501 6.99612 3.94289 6.97502 3.8899C6.8538 3.58564 6.72126 3.25294 6.46034 2.95843C6.18109 2.64323 5.72945 2.35248 4.89346 2.35248ZM1.35248 4.90532C1.35248 2.94498 2.936 1.35248 4.89346 1.35248C6.0084 1.35248 6.73504 1.76049 7.20884 2.2953C7.32062 2.42147 7.41686 2.55382 7.50002 2.68545C7.58318 2.55382 7.67941 2.42147 7.79119 2.2953C8.265 1.76049 8.99164 1.35248 10.1066 1.35248C12.064 1.35248 13.6476 2.94498 13.6476 4.90532C13.6476 6.74041 12.6013 8.50508 11.4008 9.96927C10.2636 11.3562 8.92194 12.5508 8.00601 13.3664C7.94645 13.4194 7.88869 13.4709 7.83291 13.5206C7.64324 13.6899 7.3568 13.6899 7.16713 13.5206C7.11135 13.4709 7.05359 13.4194 6.99403 13.3664C6.0781 12.5508 4.73641 11.3562 3.59926 9.96927C2.39872 8.50508 1.35248 6.74041 1.35248 4.90532Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2w = ["color"];
var HeartFilledIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2w);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1.35248 4.90532C1.35248 2.94498 2.936 1.35248 4.89346 1.35248C6.25769 1.35248 6.86058 1.92336 7.50002 2.93545C8.13946 1.92336 8.74235 1.35248 10.1066 1.35248C12.064 1.35248 13.6476 2.94498 13.6476 4.90532C13.6476 6.74041 12.6013 8.50508 11.4008 9.96927C10.2636 11.3562 8.92194 12.5508 8.00601 13.3664C7.94645 13.4194 7.88869 13.4709 7.83291 13.5206C7.64324 13.6899 7.3568 13.6899 7.16713 13.5206C7.11135 13.4709 7.05359 13.4194 6.99403 13.3664C6.0781 12.5508 4.73641 11.3562 3.59926 9.96927C2.39872 8.50508 1.35248 6.74041 1.35248 4.90532Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2x = ["color"];
var HeightIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2x);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.1813 1.68179C7.35704 1.50605 7.64196 1.50605 7.8177 1.68179L10.3177 4.18179C10.4934 4.35753 10.4934 4.64245 10.3177 4.81819C10.142 4.99392 9.85704 4.99392 9.6813 4.81819L7.9495 3.08638L7.9495 11.9136L9.6813 10.1818C9.85704 10.0061 10.142 10.0061 10.3177 10.1818C10.4934 10.3575 10.4934 10.6424 10.3177 10.8182L7.8177 13.3182C7.73331 13.4026 7.61885 13.45 7.4995 13.45C7.38015 13.45 7.26569 13.4026 7.1813 13.3182L4.6813 10.8182C4.50557 10.6424 4.50557 10.3575 4.6813 10.1818C4.85704 10.0061 5.14196 10.0061 5.3177 10.1818L7.0495 11.9136L7.0495 3.08638L5.3177 4.81819C5.14196 4.99392 4.85704 4.99392 4.6813 4.81819C4.50557 4.64245 4.50557 4.35753 4.6813 4.18179L7.1813 1.68179Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2y = ["color"];
var HobbyKnifeIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2y);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M12.3536 13.3536C12.1583 13.5488 11.8417 13.5488 11.6465 13.3536L6.39645 8.10355C6.36478 8.07188 6.33824 8.03702 6.31685 8H5.00002C4.78719 8 4.59769 7.86528 4.52777 7.66426L2.12777 0.764277C2.05268 0.548387 2.13355 0.309061 2.3242 0.182972C2.51486 0.0568819 2.76674 0.0761337 2.93602 0.229734L8.336 5.12972C8.44044 5.22449 8.50001 5.35897 8.50001 5.5V5.81684C8.53702 5.83824 8.57189 5.86478 8.60356 5.89645L13.8536 11.1464C14.0488 11.3417 14.0488 11.6583 13.8536 11.8536L12.3536 13.3536ZM8.25 6.95711L7.45711 7.75L12 12.2929L12.7929 11.5L8.25 6.95711ZM3.71669 2.28845L5.35549 7H6.2929L7.50001 5.79289V5.72146L3.71669 2.28845Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2z = ["color"];
var HomeIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2z);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.07926 0.222253C7.31275 -0.007434 7.6873 -0.007434 7.92079 0.222253L14.6708 6.86227C14.907 7.09465 14.9101 7.47453 14.6778 7.71076C14.4454 7.947 14.0655 7.95012 13.8293 7.71773L13 6.90201V12.5C13 12.7761 12.7762 13 12.5 13H2.50002C2.22388 13 2.00002 12.7761 2.00002 12.5V6.90201L1.17079 7.71773C0.934558 7.95012 0.554672 7.947 0.32229 7.71076C0.0899079 7.47453 0.0930283 7.09465 0.32926 6.86227L7.07926 0.222253ZM7.50002 1.49163L12 5.91831V12H10V8.49999C10 8.22385 9.77617 7.99999 9.50002 7.99999H6.50002C6.22388 7.99999 6.00002 8.22385 6.00002 8.49999V12H3.00002V5.91831L7.50002 1.49163ZM7.00002 12H9.00002V8.99999H7.00002V12Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2A = ["color"];
var IconJarLogoIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2A);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.5 0.0032959C6.80473 0.0032959 6.24953 0.281106 6.25 0.749995C6.25 0.997258 6.42446 1.12014 6.57687 1.22749C6.69507 1.31074 6.8 1.38465 6.8 1.5C6.8 1.7071 6.06224 1.74264 5.19789 1.78427C3.97553 1.84314 2.5 1.91421 2.5 2.5C2.5 2.77614 2.72386 3 3 3H12C12.2761 3 12.5 2.77614 12.5 2.5C12.5 1.91421 11.0245 1.84314 9.80211 1.78427C8.93776 1.74264 8.2 1.7071 8.2 1.5C8.2 1.38465 8.30493 1.31074 8.42313 1.22749C8.57554 1.12014 8.75 0.997258 8.75 0.749995C8.75047 0.281106 8.19527 0.0032959 7.5 0.0032959ZM2.89451 6.12266C2.25806 6.52471 1.90417 7.31118 2.02473 8.0556L2.83588 12.4772C3.00993 13.3562 3.7629 14 4.66061 14H10.3373C11.2354 14 11.9884 13.3562 12.1625 12.4772L12.9736 8.05607C13.089 7.32358 12.8284 6.53276 12.1331 6.09373C11.7283 5.83013 11.6412 5.33231 12.1331 5.12796C12.8284 4.86435 12.6948 4 12 4H10.3001H6.80005H2.99996C2.30469 4 2.19878 4.89328 2.89451 5.15689C3.38642 5.33231 3.29939 5.83013 2.89451 6.12266ZM8.20006 6.25C8.20006 5.81769 8.08572 5.37615 7.90635 5L4.11093 5C4.20626 5.21312 4.2419 5.43889 4.22904 5.65521C4.19522 6.22412 3.84587 6.66899 3.48016 6.93322L3.45492 6.95146L3.42858 6.9681C3.13407 7.15414 2.95801 7.53989 3.01058 7.88749L3.81797 12.2886C3.90513 12.7154 4.26148 13 4.66061 13H10.3373C10.737 13 11.0932 12.7153 11.1804 12.2886L11.9874 7.8898C12.048 7.48247 11.8954 7.12631 11.5992 6.93927L11.5875 6.93184L11.5875 6.93176C11.1947 6.67602 10.8331 6.22785 10.7986 5.64798C10.7846 5.412 10.8264 5.19397 10.9112 5H9.05517C9.01987 5.14611 9.00006 5.31201 9.00006 5.5C9.00006 5.9745 9.21679 6.37127 9.44367 6.78662C9.69284 7.24278 9.95425 7.72136 9.95425 8.34993C9.95425 9.2698 9.49868 9.84205 8.62189 9.84205C8.13206 9.84205 7.57818 9.46097 7.57818 8.75781C7.57818 8.35279 7.71558 8.01646 7.86121 7.65998C8.0254 7.25806 8.20006 6.83051 8.20006 6.25Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2B = ["color"];
var IdCardIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2B);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M14 11.0001V4.00006L1 4.00006L1 11.0001H14ZM15 4.00006V11.0001C15 11.5523 14.5523 12.0001 14 12.0001H1C0.447715 12.0001 0 11.5523 0 11.0001V4.00006C0 3.44778 0.447715 3.00006 1 3.00006H14C14.5523 3.00006 15 3.44778 15 4.00006ZM2 5.25C2 5.11193 2.11193 5 2.25 5H5.75C5.88807 5 6 5.11193 6 5.25V9.75C6 9.88807 5.88807 10 5.75 10H2.25C2.11193 10 2 9.88807 2 9.75V5.25ZM7.5 7C7.22386 7 7 7.22386 7 7.5C7 7.77614 7.22386 8 7.5 8H10.5C10.7761 8 11 7.77614 11 7.5C11 7.22386 10.7761 7 10.5 7H7.5ZM7 9.5C7 9.22386 7.22386 9 7.5 9H12.5C12.7761 9 13 9.22386 13 9.5C13 9.77614 12.7761 10 12.5 10H7.5C7.22386 10 7 9.77614 7 9.5ZM7.5 5C7.22386 5 7 5.22386 7 5.5C7 5.77614 7.22386 6 7.5 6H11.5C11.7761 6 12 5.77614 12 5.5C12 5.22386 11.7761 5 11.5 5H7.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2C = ["color"];
var ImageIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2C);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M2.5 1H12.5C13.3284 1 14 1.67157 14 2.5V12.5C14 13.3284 13.3284 14 12.5 14H2.5C1.67157 14 1 13.3284 1 12.5V2.5C1 1.67157 1.67157 1 2.5 1ZM2.5 2C2.22386 2 2 2.22386 2 2.5V8.3636L3.6818 6.6818C3.76809 6.59551 3.88572 6.54797 4.00774 6.55007C4.12975 6.55216 4.24568 6.60372 4.32895 6.69293L7.87355 10.4901L10.6818 7.6818C10.8575 7.50607 11.1425 7.50607 11.3182 7.6818L13 9.3636V2.5C13 2.22386 12.7761 2 12.5 2H2.5ZM2 12.5V9.6364L3.98887 7.64753L7.5311 11.4421L8.94113 13H2.5C2.22386 13 2 12.7761 2 12.5ZM12.5 13H10.155L8.48336 11.153L11 8.6364L13 10.6364V12.5C13 12.7761 12.7761 13 12.5 13ZM6.64922 5.5C6.64922 5.03013 7.03013 4.64922 7.5 4.64922C7.96987 4.64922 8.35078 5.03013 8.35078 5.5C8.35078 5.96987 7.96987 6.35078 7.5 6.35078C7.03013 6.35078 6.64922 5.96987 6.64922 5.5ZM7.5 3.74922C6.53307 3.74922 5.74922 4.53307 5.74922 5.5C5.74922 6.46693 6.53307 7.25078 7.5 7.25078C8.46693 7.25078 9.25078 6.46693 9.25078 5.5C9.25078 4.53307 8.46693 3.74922 7.5 3.74922Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2D = ["color"];
var InfoCircledIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2D);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.49991 0.876892C3.84222 0.876892 0.877075 3.84204 0.877075 7.49972C0.877075 11.1574 3.84222 14.1226 7.49991 14.1226C11.1576 14.1226 14.1227 11.1574 14.1227 7.49972C14.1227 3.84204 11.1576 0.876892 7.49991 0.876892ZM1.82707 7.49972C1.82707 4.36671 4.36689 1.82689 7.49991 1.82689C10.6329 1.82689 13.1727 4.36671 13.1727 7.49972C13.1727 10.6327 10.6329 13.1726 7.49991 13.1726C4.36689 13.1726 1.82707 10.6327 1.82707 7.49972ZM8.24992 4.49999C8.24992 4.9142 7.91413 5.24999 7.49992 5.24999C7.08571 5.24999 6.74992 4.9142 6.74992 4.49999C6.74992 4.08577 7.08571 3.74999 7.49992 3.74999C7.91413 3.74999 8.24992 4.08577 8.24992 4.49999ZM6.00003 5.99999H6.50003H7.50003C7.77618 5.99999 8.00003 6.22384 8.00003 6.49999V9.99999H8.50003H9.00003V11H8.50003H7.50003H6.50003H6.00003V9.99999H6.50003H7.00003V6.99999H6.50003H6.00003V5.99999Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2E = ["color"];
var InputIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2E);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M6.5 1C6.22386 1 6 1.22386 6 1.5C6 1.77614 6.22386 2 6.5 2C7.12671 2 7.45718 2.20028 7.65563 2.47812C7.8781 2.78957 8 3.28837 8 4V11C8 11.7116 7.8781 12.2104 7.65563 12.5219C7.45718 12.7997 7.12671 13 6.5 13C6.22386 13 6 13.2239 6 13.5C6 13.7761 6.22386 14 6.5 14C7.37329 14 8.04282 13.7003 8.46937 13.1031C8.47976 13.0886 8.48997 13.0739 8.5 13.0591C8.51003 13.0739 8.52024 13.0886 8.53063 13.1031C8.95718 13.7003 9.62671 14 10.5 14C10.7761 14 11 13.7761 11 13.5C11 13.2239 10.7761 13 10.5 13C9.87329 13 9.54282 12.7997 9.34437 12.5219C9.1219 12.2104 9 11.7116 9 11V4C9 3.28837 9.1219 2.78957 9.34437 2.47812C9.54282 2.20028 9.87329 2 10.5 2C10.7761 2 11 1.77614 11 1.5C11 1.22386 10.7761 1 10.5 1C9.62671 1 8.95718 1.29972 8.53063 1.89688C8.52024 1.91143 8.51003 1.92611 8.5 1.9409C8.48997 1.92611 8.47976 1.91143 8.46937 1.89688C8.04282 1.29972 7.37329 1 6.5 1ZM14 5H11V4H14C14.5523 4 15 4.44772 15 5V10C15 10.5523 14.5523 11 14 11H11V10H14V5ZM6 4V5H1L1 10H6V11H1C0.447715 11 0 10.5523 0 10V5C0 4.44772 0.447715 4 1 4H6Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2F = ["color"];
var InstagramLogoIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2F);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12.9091 12.909C13.2365 12.5817 13.4918 12.1895 13.6588 11.7577C13.8195 11.3443 13.9294 10.8718 13.961 10.1799C13.9926 9.48665 14.0001 9.26529 14.0001 7.50001C14.0001 5.73473 13.9926 5.51328 13.961 4.82008C13.9294 4.12821 13.8195 3.65573 13.6588 3.24228C13.4956 2.80857 13.2398 2.41567 12.9091 2.091C12.5844 1.76028 12.1915 1.50437 11.7578 1.34113C11.3443 1.18056 10.8718 1.0707 10.1799 1.03924C9.48675 1.00748 9.26537 1 7.50006 1C5.73476 1 5.51333 1.00748 4.82014 1.03912C4.12826 1.0707 3.65578 1.18056 3.24233 1.34125C2.80862 1.50447 2.41573 1.76032 2.09105 2.09098C1.76032 2.41563 1.5044 2.80852 1.34113 3.24225C1.18056 3.65573 1.0707 4.12821 1.03924 4.82008C1.00748 5.51328 1 5.73471 1 7.50001C1 9.26532 1.00748 9.48675 1.03924 10.1799C1.07083 10.8718 1.18069 11.3443 1.34138 11.7577C1.5046 12.1915 1.76045 12.5843 2.09111 12.909C2.41578 13.2397 2.80867 13.4955 3.24238 13.6587C3.65586 13.8194 4.12834 13.9293 4.82019 13.9609C5.51348 13.9925 5.73483 14 7.50012 14C9.2654 14 9.48685 13.9925 10.18 13.9609C10.8719 13.9293 11.3444 13.8194 11.7578 13.6587C12.1896 13.4917 12.5818 13.2364 12.9091 12.909ZM1.99949 6.73496C1.99974 6.94524 2.00005 7.19543 2.00005 7.50002C2.00005 7.80461 1.99974 8.0548 1.99949 8.26507C1.99849 9.08596 1.99824 9.29856 2.01963 9.7655C2.04625 10.3509 2.07823 10.7811 2.17588 11.1053C2.26976 11.417 2.37505 11.7342 2.7188 12.1171C3.06255 12.4999 3.39411 12.6733 3.81645 12.8007C4.23879 12.928 4.7696 12.9554 5.23052 12.9764C5.75332 13.0003 5.96052 13.0002 7.05714 12.9999L7.50006 12.9999C7.79304 12.9999 8.03569 13.0001 8.2409 13.0004C9.08195 13.0013 9.29425 13.0015 9.76575 12.9799C10.3512 12.9533 10.7814 12.9213 11.1056 12.8237C11.4173 12.7298 11.7345 12.6245 12.1173 12.2807C12.5001 11.937 12.6735 11.6054 12.8009 11.1831C12.9283 10.7607 12.9557 10.2299 12.9767 9.76902C13.0005 9.24689 13.0004 9.04027 13.0002 7.94749V7.94738L13.0001 7.50039L13.0001 7.05747C13.0004 5.96085 13.0005 5.75365 12.9766 5.23085C12.9556 4.76993 12.9282 4.23912 12.8009 3.81678C12.6735 3.39445 12.5001 3.06288 12.1173 2.71913C11.7345 2.37538 11.4172 2.27009 11.1056 2.17621C10.7813 2.07856 10.3511 2.04658 9.76571 2.01996C9.29421 1.99836 9.08194 1.99859 8.24092 1.99951H8.24092C8.0357 1.99974 7.79305 2.00001 7.50006 2.00001L7.05704 1.99993C5.96051 1.99964 5.75331 1.99958 5.23052 2.02343C4.7696 2.04446 4.23879 2.07183 3.81645 2.19921C3.39411 2.32659 3.06255 2.49999 2.7188 2.88281C2.37505 3.26562 2.26976 3.58286 2.17588 3.89453C2.07823 4.21874 2.04625 4.64894 2.01963 5.23437C1.99824 5.70131 1.99849 5.91401 1.99949 6.73496ZM7.49996 5.25015C6.25741 5.25015 5.25012 6.25744 5.25012 7.49999C5.25012 8.74254 6.25741 9.74983 7.49996 9.74983C8.74251 9.74983 9.7498 8.74254 9.7498 7.49999C9.7498 6.25744 8.74251 5.25015 7.49996 5.25015ZM4.25012 7.49999C4.25012 5.70515 5.70512 4.25015 7.49996 4.25015C9.2948 4.25015 10.7498 5.70515 10.7498 7.49999C10.7498 9.29483 9.2948 10.7498 7.49996 10.7498C5.70512 10.7498 4.25012 9.29483 4.25012 7.49999ZM10.9697 4.7803C11.3839 4.7803 11.7197 4.44452 11.7197 4.0303C11.7197 3.61609 11.3839 3.2803 10.9697 3.2803C10.5555 3.2803 10.2197 3.61609 10.2197 4.0303C10.2197 4.44452 10.5555 4.7803 10.9697 4.7803Z",
    fill: color
  }));
});
var _excluded$2G = ["color"];
var KeyboardIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2G);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M13.5 4H1.5C1.22386 4 1 4.22386 1 4.5V10.5C1 10.7761 1.22386 11 1.5 11H13.5C13.7761 11 14 10.7761 14 10.5V4.5C14 4.22386 13.7761 4 13.5 4ZM1.5 3C0.671573 3 0 3.67157 0 4.5V10.5C0 11.3284 0.671573 12 1.5 12H13.5C14.3284 12 15 11.3284 15 10.5V4.5C15 3.67157 14.3284 3 13.5 3H1.5ZM2 5H3V6H2V5ZM5 5H4V6H5V5ZM6 5H7V6H6V5ZM9 5H8V6H9V5ZM10 5H11V6H10V5ZM13 5H12V6H13V5ZM11 7H12V8H11V7ZM13 9H12V10H13V9ZM9 7H10V8H9V7ZM8 7H7V8H8V7ZM5 7H6V8H5V7ZM4 7H3V8H4V7ZM2 9H3V10H2V9ZM11 9H4V10H11V9Z",
    fill: color
  }));
});
var _excluded$2H = ["color"];
var LapTimerIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2H);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M5.49998 0.5C5.49998 0.223858 5.72383 0 5.99998 0H7.49998H8.99998C9.27612 0 9.49998 0.223858 9.49998 0.5C9.49998 0.776142 9.27612 1 8.99998 1H7.99998V2.11922C9.09832 2.20409 10.119 2.56622 10.992 3.13572C11.0116 3.10851 11.0336 3.08252 11.058 3.05806L12.058 2.05806C12.3021 1.81398 12.6978 1.81398 12.9419 2.05806C13.186 2.30214 13.186 2.69786 12.9419 2.94194L11.967 3.91682C13.1595 5.07925 13.9 6.70314 13.9 8.49998C13.9 12.0346 11.0346 14.9 7.49998 14.9C3.96535 14.9 1.09998 12.0346 1.09998 8.49998C1.09998 5.13361 3.69904 2.3743 6.99998 2.11922V1H5.99998C5.72383 1 5.49998 0.776142 5.49998 0.5ZM2.09998 8.49998C2.09998 5.51764 4.51764 3.09998 7.49998 3.09998C10.4823 3.09998 12.9 5.51764 12.9 8.49998C12.9 11.4823 10.4823 13.9 7.49998 13.9C4.51764 13.9 2.09998 11.4823 2.09998 8.49998ZM7.49998 8.49998V4.09998C5.06992 4.09998 3.09998 6.06992 3.09998 8.49998C3.09998 10.93 5.06992 12.9 7.49998 12.9C8.715 12.9 9.815 12.4075 10.6112 11.6112L7.49998 8.49998Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2I = ["color"];
var LaptopIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2I);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M2 4.25C2 4.11193 2.11193 4 2.25 4H12.75C12.8881 4 13 4.11193 13 4.25V11.5H2V4.25ZM2.25 3C1.55964 3 1 3.55964 1 4.25V12H0V12.5C0 12.7761 0.223858 13 0.5 13H14.5C14.7761 13 15 12.7761 15 12.5V12H14V4.25C14 3.55964 13.4404 3 12.75 3H2.25Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2J = ["color"];
var LayersIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2J);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.75432 0.819537C7.59742 0.726821 7.4025 0.726821 7.24559 0.819537L1.74559 4.06954C1.59336 4.15949 1.49996 4.32317 1.49996 4.5C1.49996 4.67683 1.59336 4.84051 1.74559 4.93046L7.24559 8.18046C7.4025 8.27318 7.59742 8.27318 7.75432 8.18046L13.2543 4.93046C13.4066 4.84051 13.5 4.67683 13.5 4.5C13.5 4.32317 13.4066 4.15949 13.2543 4.06954L7.75432 0.819537ZM7.49996 7.16923L2.9828 4.5L7.49996 1.83077L12.0171 4.5L7.49996 7.16923ZM1.5695 7.49564C1.70998 7.2579 2.01659 7.17906 2.25432 7.31954L7.49996 10.4192L12.7456 7.31954C12.9833 7.17906 13.2899 7.2579 13.4304 7.49564C13.5709 7.73337 13.4921 8.03998 13.2543 8.18046L7.75432 11.4305C7.59742 11.5232 7.4025 11.5232 7.24559 11.4305L1.74559 8.18046C1.50786 8.03998 1.42901 7.73337 1.5695 7.49564ZM1.56949 10.4956C1.70998 10.2579 2.01658 10.1791 2.25432 10.3195L7.49996 13.4192L12.7456 10.3195C12.9833 10.1791 13.2899 10.2579 13.4304 10.4956C13.5709 10.7334 13.4921 11.04 13.2543 11.1805L7.75432 14.4305C7.59742 14.5232 7.4025 14.5232 7.24559 14.4305L1.74559 11.1805C1.50785 11.04 1.42901 10.7334 1.56949 10.4956Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2K = ["color"];
var LayoutIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2K);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M9 2H6V13H9V2ZM10 2V13H12.5C12.7761 13 13 12.7761 13 12.5V2.5C13 2.22386 12.7761 2 12.5 2H10ZM2.5 2H5V13H2.5C2.22386 13 2 12.7761 2 12.5V2.5C2 2.22386 2.22386 2 2.5 2ZM2.5 1C1.67157 1 1 1.67157 1 2.5V12.5C1 13.3284 1.67157 14 2.5 14H12.5C13.3284 14 14 13.3284 14 12.5V2.5C14 1.67157 13.3284 1 12.5 1H2.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2L = ["color"];
var LetterCaseCapitalizeIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2L);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.68979 2.75C3.89667 2.74979 4.08232 2.87701 4.15679 3.07003L7.36662 11.39C7.46602 11.6477 7.33774 11.9371 7.0801 12.0365C6.82247 12.1359 6.53304 12.0076 6.43365 11.75L5.3825 9.02537H2.01133L0.966992 11.749C0.868128 12.0068 0.578964 12.1357 0.321126 12.0369C0.0632878 11.938 -0.0655864 11.6488 0.0332774 11.391L3.22344 3.07099C3.29751 2.87782 3.4829 2.75021 3.68979 2.75ZM3.69174 4.64284L5.05458 8.17537H2.33724L3.69174 4.64284ZM10.8989 5.20703C9.25818 5.20703 8.00915 6.68569 8.00915 8.60972C8.00915 10.6337 9.35818 12.0124 10.8989 12.0124C11.7214 12.0124 12.5744 11.6692 13.1543 11.0219V11.53C13.1543 11.7785 13.3557 11.98 13.6043 11.98C13.8528 11.98 14.0543 11.7785 14.0543 11.53V5.72C14.0543 5.47147 13.8528 5.27 13.6043 5.27C13.3557 5.27 13.1543 5.47147 13.1543 5.72V6.22317C12.6054 5.60095 11.7924 5.20703 10.8989 5.20703ZM13.1543 9.79823V7.30195C12.7639 6.58101 11.9414 6.05757 11.0868 6.05757C10.1088 6.05757 9.03503 6.96581 9.03503 8.60955C9.03503 10.1533 10.0088 11.1615 11.0868 11.1615C11.9701 11.1615 12.7719 10.4952 13.1543 9.79823Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2M = ["color"];
var LetterCaseLowercaseIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2M);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.69899 5.20703C2.05823 5.20703 0.809204 6.68569 0.809204 8.60972C0.809204 10.6337 2.15823 12.0124 3.69899 12.0124C4.52126 12.0124 5.37402 11.6693 5.9539 11.0223V11.53C5.9539 11.7785 6.15537 11.98 6.4039 11.98C6.65243 11.98 6.8539 11.7785 6.8539 11.53V5.72001C6.8539 5.47149 6.65243 5.27001 6.4039 5.27001C6.15537 5.27001 5.9539 5.47149 5.9539 5.72001V6.22269C5.40506 5.60075 4.59218 5.20703 3.69899 5.20703ZM5.9539 9.799V7.30117C5.56339 6.58064 4.74118 6.05757 3.8868 6.05757C2.9089 6.05757 1.83508 6.96581 1.83508 8.60955C1.83508 10.1533 2.80889 11.1615 3.8868 11.1615C4.76984 11.1615 5.57141 10.4957 5.9539 9.799ZM10.799 5.20703C9.15823 5.20703 7.9092 6.68569 7.9092 8.60972C7.9092 10.6337 9.25823 12.0124 10.799 12.0124C11.6215 12.0124 12.4744 11.6692 13.0543 11.0218V11.53C13.0543 11.7785 13.2558 11.98 13.5043 11.98C13.7529 11.98 13.9543 11.7785 13.9543 11.53V5.72C13.9543 5.47147 13.7529 5.27 13.5043 5.27C13.2558 5.27 13.0543 5.47147 13.0543 5.72V6.22318C12.5055 5.60095 11.6924 5.20703 10.799 5.20703ZM13.0543 9.79822V7.30196C12.664 6.58102 11.8415 6.05757 10.9868 6.05757C10.0089 6.05757 8.93508 6.96581 8.93508 8.60955C8.93508 10.1533 9.90889 11.1615 10.9868 11.1615C11.8702 11.1615 12.672 10.4952 13.0543 9.79822Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2N = ["color"];
var LetterCaseToggleIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2N);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M11.2895 2.75C11.4964 2.74979 11.6821 2.87701 11.7565 3.07003L14.9664 11.39C15.0657 11.6477 14.9375 11.9371 14.6798 12.0365C14.4222 12.1359 14.1328 12.0076 14.0334 11.75L12.9822 9.02537H9.61106L8.56672 11.749C8.46786 12.0068 8.1787 12.1357 7.92086 12.0369C7.66302 11.938 7.53415 11.6488 7.63301 11.391L10.8232 3.07099C10.8972 2.87782 11.0826 2.75021 11.2895 2.75ZM11.2915 4.64284L12.6543 8.17537H9.93698L11.2915 4.64284ZM2.89895 5.20703C1.25818 5.20703 0.00915527 6.68569 0.00915527 8.60972C0.00915527 10.6337 1.35818 12.0124 2.89895 12.0124C3.72141 12.0124 4.57438 11.6692 5.15427 11.0219V11.53C5.15427 11.7785 5.35574 11.98 5.60427 11.98C5.8528 11.98 6.05427 11.7785 6.05427 11.53V5.72C6.05427 5.47147 5.8528 5.27 5.60427 5.27C5.35574 5.27 5.15427 5.47147 5.15427 5.72V6.22317C4.60543 5.60095 3.79236 5.20703 2.89895 5.20703ZM5.15427 9.79823V7.30195C4.76393 6.58101 3.94144 6.05757 3.08675 6.05757C2.10885 6.05757 1.03503 6.96581 1.03503 8.60955C1.03503 10.1533 2.00885 11.1615 3.08675 11.1615C3.97011 11.1615 4.77195 10.4952 5.15427 9.79823Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2O = ["color"];
var LetterCaseUppercaseIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2O);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.6255 2.75C3.83478 2.75 4.02192 2.88034 4.09448 3.07664L7.16985 11.3962C7.2656 11.6552 7.13324 11.9428 6.87423 12.0386C6.61522 12.1343 6.32763 12.002 6.23188 11.7429L5.22387 9.01603H2.02712L1.01911 11.7429C0.923362 12.002 0.635774 12.1343 0.376762 12.0386C0.117749 11.9428 -0.0146052 11.6552 0.0811401 11.3962L3.15651 3.07664C3.22908 2.88034 3.41621 2.75 3.6255 2.75ZM3.6255 4.69207L4.90966 8.16603H2.34133L3.6255 4.69207ZM11.3719 2.75C11.5811 2.75 11.7683 2.88034 11.8408 3.07664L14.9162 11.3962C15.012 11.6552 14.8796 11.9428 14.6206 12.0386C14.3616 12.1343 14.074 12.002 13.9782 11.7429L12.9702 9.01603H9.77348L8.76547 11.7429C8.66972 12.002 8.38213 12.1343 8.12312 12.0386C7.86411 11.9428 7.73175 11.6552 7.8275 11.3962L10.9029 3.07664C10.9754 2.88034 11.1626 2.75 11.3719 2.75ZM11.3719 4.69207L12.656 8.16603H10.0877L11.3719 4.69207Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2P = ["color"];
var LetterSpacingIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2P);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M4.55293 0.999969C4.75295 0.999969 4.93372 1.11917 5.0125 1.30301L8.01106 8.29982C8.11984 8.55363 8.00226 8.84757 7.74844 8.95635C7.49463 9.06512 7.20069 8.94754 7.09191 8.69373L6.11613 6.41685H2.98973L2.01395 8.69373C1.90517 8.94754 1.61123 9.06512 1.35742 8.95635C1.1036 8.84757 0.986023 8.55363 1.0948 8.29982L4.09336 1.30301C4.17214 1.11917 4.35291 0.999969 4.55293 0.999969ZM4.55293 2.76929L5.75186 5.56685H3.354L4.55293 2.76929ZM11.0562 9.00214C11.2617 9.00214 11.4463 8.87633 11.5215 8.68502L14.2733 1.68299C14.3743 1.42598 14.2478 1.13575 13.9908 1.03475C13.7338 0.933747 13.4436 1.06021 13.3426 1.31722L11.0562 7.13514L8.76973 1.31722C8.66873 1.06021 8.3785 0.933747 8.1215 1.03475C7.86449 1.13575 7.73802 1.42598 7.83902 1.68299L10.5908 8.68502C10.666 8.87633 10.8506 9.00214 11.0562 9.00214ZM14.9537 12.4999C14.9537 12.606 14.9115 12.7077 14.8365 12.7828L12.8365 14.7828C12.6803 14.939 12.4271 14.939 12.2708 14.7828C12.1146 14.6265 12.1146 14.3733 12.2708 14.2171L13.588 12.8999H1.51937L2.83653 14.2171C2.99274 14.3733 2.99274 14.6265 2.83653 14.7828C2.68032 14.939 2.42705 14.939 2.27084 14.7828L0.270843 12.7828C0.195828 12.7077 0.153687 12.606 0.153687 12.4999C0.153687 12.3938 0.195828 12.2921 0.270843 12.2171L2.27084 10.2171C2.42705 10.0609 2.68032 10.0609 2.83653 10.2171C2.99274 10.3733 2.99274 10.6265 2.83653 10.7828L1.51937 12.0999L13.588 12.0999L12.2708 10.7828C12.1146 10.6265 12.1146 10.3733 12.2708 10.2171C12.4271 10.0609 12.6803 10.0609 12.8365 10.2171L14.8365 12.2171C14.9115 12.2921 14.9537 12.3938 14.9537 12.4999Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2Q = ["color"];
var LightningBoltIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2Q);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M8.69667 0.0403541C8.90859 0.131038 9.03106 0.354857 8.99316 0.582235L8.0902 6.00001H12.5C12.6893 6.00001 12.8625 6.10701 12.9472 6.27641C13.0319 6.4458 13.0136 6.6485 12.8999 6.80001L6.89997 14.8C6.76167 14.9844 6.51521 15.0503 6.30328 14.9597C6.09135 14.869 5.96888 14.6452 6.00678 14.4178L6.90974 9H2.49999C2.31061 9 2.13748 8.893 2.05278 8.72361C1.96809 8.55422 1.98636 8.35151 2.09999 8.2L8.09997 0.200038C8.23828 0.0156255 8.48474 -0.0503301 8.69667 0.0403541ZM3.49999 8.00001H7.49997C7.64695 8.00001 7.78648 8.06467 7.88148 8.17682C7.97648 8.28896 8.01733 8.43723 7.99317 8.5822L7.33027 12.5596L11.5 7.00001H7.49997C7.353 7.00001 7.21347 6.93534 7.11846 6.8232C7.02346 6.71105 6.98261 6.56279 7.00678 6.41781L7.66968 2.44042L3.49999 8.00001Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2R = ["color"];
var LineHeightIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2R);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.78233 2.21713C3.70732 2.14212 3.60557 2.09998 3.49949 2.09998C3.3934 2.09998 3.29166 2.14212 3.21664 2.21713L1.21664 4.21713C1.06044 4.37334 1.06044 4.62661 1.21664 4.78282C1.37285 4.93903 1.62612 4.93903 1.78233 4.78282L3.09949 3.46566L3.09949 11.5343L1.78233 10.2171C1.62612 10.0609 1.37285 10.0609 1.21664 10.2171C1.06043 10.3733 1.06043 10.6266 1.21664 10.7828L3.21664 12.7828C3.29166 12.8578 3.3934 12.9 3.49949 12.9C3.60557 12.9 3.70731 12.8578 3.78233 12.7828L5.78233 10.7828C5.93854 10.6266 5.93854 10.3733 5.78233 10.2171C5.62612 10.0609 5.37285 10.0609 5.21664 10.2171L3.89949 11.5343L3.89949 3.46566L5.21664 4.78282C5.37285 4.93903 5.62612 4.93903 5.78233 4.78282C5.93854 4.62661 5.93854 4.37334 5.78233 4.21713L3.78233 2.21713ZM8.49998 3.99997C8.22383 3.99997 7.99998 4.22382 7.99998 4.49997C7.99998 4.77611 8.22383 4.99997 8.49998 4.99997H14.5C14.7761 4.99997 15 4.77611 15 4.49997C15 4.22382 14.7761 3.99997 14.5 3.99997H8.49998ZM7.99998 7.49997C7.99998 7.22382 8.22383 6.99997 8.49998 6.99997H14.5C14.7761 6.99997 15 7.22382 15 7.49997C15 7.77611 14.7761 7.99997 14.5 7.99997H8.49998C8.22383 7.99997 7.99998 7.77611 7.99998 7.49997ZM8.49998 9.99997C8.22383 9.99997 7.99998 10.2238 7.99998 10.5C7.99998 10.7761 8.22383 11 8.49998 11H14.5C14.7761 11 15 10.7761 15 10.5C15 10.2238 14.7761 9.99997 14.5 9.99997H8.49998Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2S = ["color"];
var Link1Icon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2S);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M4.62471 4.00001L4.56402 4.00001C4.04134 3.99993 3.70687 3.99988 3.4182 4.055C2.2379 4.28039 1.29846 5.17053 1.05815 6.33035C0.999538 6.61321 0.999604 6.93998 0.999703 7.43689L0.999711 7.50001L0.999703 7.56313C0.999604 8.06004 0.999538 8.38681 1.05815 8.66967C1.29846 9.8295 2.2379 10.7196 3.4182 10.945C3.70688 11.0001 4.04135 11.0001 4.56403 11L4.62471 11H5.49971C5.77585 11 5.99971 10.7762 5.99971 10.5C5.99971 10.2239 5.77585 10 5.49971 10H4.62471C4.02084 10 3.78907 9.99777 3.60577 9.96277C2.80262 9.8094 2.19157 9.21108 2.03735 8.46678C2.00233 8.29778 1.99971 8.08251 1.99971 7.50001C1.99971 6.91752 2.00233 6.70225 2.03735 6.53324C2.19157 5.78895 2.80262 5.19062 3.60577 5.03725C3.78907 5.00225 4.02084 5.00001 4.62471 5.00001H5.49971C5.77585 5.00001 5.99971 4.77615 5.99971 4.50001C5.99971 4.22387 5.77585 4.00001 5.49971 4.00001H4.62471ZM10.3747 5.00001C10.9786 5.00001 11.2104 5.00225 11.3937 5.03725C12.1968 5.19062 12.8079 5.78895 12.9621 6.53324C12.9971 6.70225 12.9997 6.91752 12.9997 7.50001C12.9997 8.08251 12.9971 8.29778 12.9621 8.46678C12.8079 9.21108 12.1968 9.8094 11.3937 9.96277C11.2104 9.99777 10.9786 10 10.3747 10H9.49971C9.22357 10 8.99971 10.2239 8.99971 10.5C8.99971 10.7762 9.22357 11 9.49971 11H10.3747L10.4354 11C10.9581 11.0001 11.2925 11.0001 11.5812 10.945C12.7615 10.7196 13.701 9.8295 13.9413 8.66967C13.9999 8.38681 13.9998 8.06005 13.9997 7.56314L13.9997 7.50001L13.9997 7.43688C13.9998 6.93998 13.9999 6.61321 13.9413 6.33035C13.701 5.17053 12.7615 4.28039 11.5812 4.055C11.2925 3.99988 10.9581 3.99993 10.4354 4.00001L10.3747 4.00001H9.49971C9.22357 4.00001 8.99971 4.22387 8.99971 4.50001C8.99971 4.77615 9.22357 5.00001 9.49971 5.00001H10.3747ZM5.00038 7C4.72424 7 4.50038 7.22386 4.50038 7.5C4.50038 7.77614 4.72424 8 5.00038 8H10.0004C10.2765 8 10.5004 7.77614 10.5004 7.5C10.5004 7.22386 10.2765 7 10.0004 7H5.00038Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2T = ["color"];
var Link2Icon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2T);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M8.51194 3.00541C9.18829 2.54594 10.0435 2.53694 10.6788 2.95419C10.8231 3.04893 10.9771 3.1993 11.389 3.61119C11.8009 4.02307 11.9513 4.17714 12.046 4.32141C12.4633 4.95675 12.4543 5.81192 11.9948 6.48827C11.8899 6.64264 11.7276 6.80811 11.3006 7.23511L10.6819 7.85383C10.4867 8.04909 10.4867 8.36567 10.6819 8.56093C10.8772 8.7562 11.1938 8.7562 11.389 8.56093L12.0077 7.94221L12.0507 7.89929C12.4203 7.52976 12.6568 7.2933 12.822 7.0502C13.4972 6.05623 13.5321 4.76252 12.8819 3.77248C12.7233 3.53102 12.4922 3.30001 12.1408 2.94871L12.0961 2.90408L12.0515 2.85942C11.7002 2.508 11.4692 2.27689 11.2277 2.11832C10.2377 1.46813 8.94398 1.50299 7.95001 2.17822C7.70691 2.34336 7.47044 2.57991 7.1009 2.94955L7.058 2.99247L6.43928 3.61119C6.24401 3.80645 6.24401 4.12303 6.43928 4.31829C6.63454 4.51355 6.95112 4.51355 7.14638 4.31829L7.7651 3.69957C8.1921 3.27257 8.35757 3.11027 8.51194 3.00541ZM4.31796 7.14672C4.51322 6.95146 4.51322 6.63487 4.31796 6.43961C4.12269 6.24435 3.80611 6.24435 3.61085 6.43961L2.99213 7.05833L2.94922 7.10124C2.57957 7.47077 2.34303 7.70724 2.17788 7.95035C1.50265 8.94432 1.4678 10.238 2.11799 11.2281C2.27656 11.4695 2.50766 11.7005 2.8591 12.0518L2.90374 12.0965L2.94837 12.1411C3.29967 12.4925 3.53068 12.7237 3.77214 12.8822C4.76219 13.5324 6.05589 13.4976 7.04986 12.8223C7.29296 12.6572 7.52943 12.4206 7.89896 12.051L7.89897 12.051L7.94188 12.0081L8.5606 11.3894C8.75586 11.1941 8.75586 10.8775 8.5606 10.6823C8.36533 10.487 8.04875 10.487 7.85349 10.6823L7.23477 11.301C6.80777 11.728 6.6423 11.8903 6.48794 11.9951C5.81158 12.4546 4.95642 12.4636 4.32107 12.0464C4.17681 11.9516 4.02274 11.8012 3.61085 11.3894C3.19896 10.9775 3.0486 10.8234 2.95385 10.6791C2.53661 10.0438 2.54561 9.18863 3.00507 8.51227C3.10993 8.35791 3.27224 8.19244 3.69924 7.76544L4.31796 7.14672ZM9.62172 6.08558C9.81698 5.89032 9.81698 5.57373 9.62172 5.37847C9.42646 5.18321 9.10988 5.18321 8.91461 5.37847L5.37908 8.91401C5.18382 9.10927 5.18382 9.42585 5.37908 9.62111C5.57434 9.81637 5.89092 9.81637 6.08619 9.62111L9.62172 6.08558Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2U = ["color"];
var LinkBreak1Icon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2U);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M13.3536 2.35355C13.5488 2.15829 13.5488 1.84171 13.3536 1.64645C13.1583 1.45118 12.8417 1.45118 12.6464 1.64645L1.64645 12.6464C1.45118 12.8417 1.45118 13.1583 1.64645 13.3536C1.84171 13.5488 2.15829 13.5488 2.35355 13.3536L13.3536 2.35355ZM2.03735 8.46678C2.17398 9.12619 2.66918 9.67103 3.33886 9.89338L2.57833 10.6539C1.80843 10.2534 1.23784 9.53693 1.05815 8.66967C0.999538 8.38681 0.999604 8.06004 0.999703 7.56313L0.999711 7.50001L0.999703 7.43689C0.999604 6.93998 0.999538 6.61321 1.05815 6.33035C1.29846 5.17053 2.2379 4.28039 3.4182 4.055C3.70687 3.99988 4.04134 3.99993 4.56402 4.00001L4.62471 4.00001H5.49971C5.77585 4.00001 5.99971 4.22387 5.99971 4.50001C5.99971 4.77615 5.77585 5.00001 5.49971 5.00001H4.62471C4.02084 5.00001 3.78907 5.00225 3.60577 5.03725C2.80262 5.19062 2.19157 5.78895 2.03735 6.53324C2.00233 6.70225 1.99971 6.91752 1.99971 7.50001C1.99971 8.08251 2.00233 8.29778 2.03735 8.46678ZM12.9621 6.53324C12.8255 5.87397 12.3304 5.32922 11.661 5.10679L12.4215 4.34631C13.1912 4.74686 13.7616 5.46323 13.9413 6.33035C13.9999 6.61321 13.9998 6.93998 13.9997 7.43688L13.9997 7.50001L13.9997 7.56314C13.9998 8.06005 13.9999 8.38681 13.9413 8.66967C13.701 9.8295 12.7615 10.7196 11.5812 10.945C11.2925 11.0001 10.9581 11.0001 10.4354 11L10.3747 11H9.49971C9.22357 11 8.99971 10.7762 8.99971 10.5C8.99971 10.2239 9.22357 10 9.49971 10H10.3747C10.9786 10 11.2104 9.99777 11.3937 9.96277C12.1968 9.8094 12.8079 9.21108 12.9621 8.46678C12.9971 8.29778 12.9997 8.08251 12.9997 7.50001C12.9997 6.91752 12.9971 6.70225 12.9621 6.53324Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2V = ["color"];
var LinkBreak2Icon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2V);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M4.50021 0C4.77635 0 5.0002 0.223853 5.0002 0.49999V2.49995C5.0002 2.77609 4.77635 2.99994 4.50021 2.99994C4.22408 2.99994 4.00022 2.77609 4.00022 2.49995V0.49999C4.00022 0.223853 4.22408 0 4.50021 0ZM0.646451 0.64647C0.84171 0.451212 1.15829 0.451212 1.35354 0.64647L2.85351 2.14644C3.04877 2.3417 3.04877 2.65827 2.85351 2.85353C2.65826 3.04879 2.34168 3.04879 2.14642 2.85353L0.646452 1.35356C0.451193 1.1583 0.451193 0.841728 0.646451 0.64647ZM0.00030517 4.49991C0.00030517 4.22377 0.224158 3.99992 0.500295 3.99992H2.50025C2.77639 3.99992 3.00024 4.22377 3.00024 4.49991C3.00024 4.77605 2.77639 4.9999 2.50025 4.9999H0.500295C0.224158 4.9999 0.00030517 4.77605 0.00030517 4.49991ZM12.0001 10.4998C12.0001 10.2236 12.2239 9.9998 12.5001 9.9998H14.5C14.7761 9.9998 15 10.2236 15 10.4998C15 10.7759 14.7761 10.9998 14.5 10.9998H12.5001C12.2239 10.9998 12.0001 10.7759 12.0001 10.4998ZM10.5001 11.9998C10.7762 11.9998 11.0001 12.2236 11.0001 12.4997V14.4997C11.0001 14.7758 10.7762 14.9997 10.5001 14.9997C10.224 14.9997 10.0001 14.7758 10.0001 14.4997V12.4997C10.0001 12.2236 10.224 11.9998 10.5001 11.9998ZM12.1462 12.1462C12.3415 11.951 12.658 11.951 12.8533 12.1462L14.3533 13.6462C14.5485 13.8415 14.5485 14.158 14.3533 14.3533C14.158 14.5485 13.8414 14.5485 13.6462 14.3533L12.1462 12.8533C11.951 12.6581 11.951 12.3415 12.1462 12.1462ZM7.76478 3.69938C8.19177 3.27238 8.35724 3.11008 8.5116 3.00522C9.18794 2.54577 10.0431 2.53677 10.6784 2.95401C10.8227 3.04875 10.9767 3.19911 11.3886 3.61099C11.8005 4.02287 11.9509 4.17694 12.0456 4.3212C12.4628 4.95653 12.4539 5.81168 11.9944 6.48802C11.8895 6.64238 11.7272 6.80785 11.3002 7.23484L10.6815 7.85354C10.4863 8.0488 10.4863 8.36538 10.6815 8.56064C10.8768 8.75589 11.1934 8.75589 11.3886 8.56064L12.0073 7.94193L12.0502 7.89903C12.4199 7.5295 12.6564 7.29303 12.8216 7.04993C13.4968 6.05598 13.5316 4.7623 12.8815 3.77228C12.7229 3.53083 12.4918 3.29982 12.1404 2.94853L12.0957 2.9039L12.0511 2.85925C11.6998 2.50782 11.4688 2.27672 11.2273 2.11816C10.2373 1.46798 8.94364 1.50284 7.94968 2.17805C7.70659 2.34319 7.47012 2.57973 7.1006 2.94936L7.1006 2.94937L7.05769 2.99228L6.43898 3.61099C6.24372 3.80625 6.24372 4.12282 6.43898 4.31808C6.63424 4.51334 6.95081 4.51334 7.14607 4.31808L7.76478 3.69938ZM2.99191 7.05807L2.94899 7.10097C2.57935 7.4705 2.34282 7.70697 2.17767 7.95006C1.50246 8.94401 1.4676 10.2377 2.11778 11.2277C2.27634 11.4692 2.50744 11.7002 2.85886 12.0515L2.85888 12.0515L2.90352 12.0961L2.94815 12.1407L2.94815 12.1407L2.94817 12.1408C3.29945 12.4922 3.53045 12.7233 3.7719 12.8818C4.76193 13.532 6.0556 13.4972 7.04956 12.8219C7.29265 12.6568 7.52912 12.4203 7.89865 12.0506L7.94155 12.0077L8.56026 11.389C8.75552 11.1937 8.75552 10.8772 8.56026 10.6819C8.365 10.4867 8.04842 10.4867 7.85317 10.6819L7.23446 11.3006C6.80747 11.7276 6.642 11.8899 6.48764 11.9948C5.8113 12.4542 4.95615 12.4632 4.32082 12.046C4.17656 11.9512 4.02249 11.8009 3.61061 11.389C3.19873 10.9771 3.04837 10.8231 2.95363 10.6788C2.53639 10.0435 2.54539 9.18832 3.00484 8.51198C3.10971 8.35761 3.27201 8.19215 3.699 7.76516L4.3177 7.14645C4.51296 6.95119 4.51296 6.63462 4.3177 6.43936C4.12245 6.2441 3.80587 6.2441 3.61061 6.43936L2.99191 7.05807Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2W = ["color"];
var LinkNone1Icon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2W);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M4.56427 3.99988C4.58422 3.99989 4.60445 3.99989 4.62496 3.99989H5.49996C5.7761 3.99989 5.99996 4.22375 5.99996 4.49989C5.99996 4.77603 5.7761 4.99989 5.49996 4.99989H4.62496C4.02108 4.99989 3.78932 5.00213 3.60601 5.03713C2.80287 5.1905 2.19181 5.78883 2.03759 6.53312C2.00257 6.70212 1.99996 6.91739 1.99996 7.49989C1.99996 8.08239 2.00257 8.29766 2.03759 8.46666C2.19181 9.21095 2.80287 9.80928 3.60601 9.96265C3.78932 9.99765 4.02108 9.99989 4.62496 9.99989H5.49996C5.7761 9.99989 5.99996 10.2237 5.99996 10.4999C5.99996 10.776 5.7761 10.9999 5.49996 10.9999H4.62496C4.60445 10.9999 4.58422 10.9999 4.56427 10.9999C4.04159 11 3.70712 11 3.41845 10.9449C2.23814 10.7195 1.29871 9.82937 1.05839 8.66955C0.999782 8.38669 0.999848 8.05992 0.999947 7.56301C0.999951 7.54227 0.999955 7.52123 0.999955 7.49989C0.999955 7.47855 0.999951 7.45751 0.999947 7.43677C0.999848 6.93986 0.999782 6.61309 1.05839 6.33023C1.29871 5.17041 2.23814 4.28027 3.41845 4.05488C3.70712 3.99976 4.04159 3.99981 4.56427 3.99988ZM11.3939 5.03713C11.2106 5.00213 10.9788 4.99989 10.375 4.99989H9.49996C9.22381 4.99989 8.99996 4.77603 8.99996 4.49989C8.99996 4.22375 9.22381 3.99989 9.49996 3.99989H10.375C10.3955 3.99989 10.4157 3.99989 10.4356 3.99988C10.9583 3.99981 11.2928 3.99976 11.5815 4.05488C12.7618 4.28027 13.7012 5.17041 13.9415 6.33023C14.0001 6.61309 14.0001 6.93985 14 7.43676C14 7.4575 14 7.47854 14 7.49989C14 7.52124 14 7.54228 14 7.56302C14.0001 8.05992 14.0001 8.38669 13.9415 8.66955C13.7012 9.82937 12.7618 10.7195 11.5815 10.9449C11.2928 11 10.9583 11 10.4356 10.9999C10.4157 10.9999 10.3955 10.9999 10.375 10.9999H9.49996C9.22381 10.9999 8.99996 10.776 8.99996 10.4999C8.99996 10.2237 9.22381 9.99989 9.49996 9.99989H10.375C10.9788 9.99989 11.2106 9.99765 11.3939 9.96265C12.197 9.80928 12.8081 9.21095 12.9623 8.46666C12.9973 8.29766 13 8.08239 13 7.49989C13 6.91739 12.9973 6.70212 12.9623 6.53312C12.8081 5.78883 12.197 5.1905 11.3939 5.03713Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2X = ["color"];
var LinkNone2Icon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2X);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M10.6788 2.95419C10.0435 2.53694 9.18829 2.54594 8.51194 3.00541C8.35757 3.11027 8.1921 3.27257 7.7651 3.69957L7.14638 4.31829C6.95112 4.51355 6.63454 4.51355 6.43928 4.31829C6.24401 4.12303 6.24401 3.80645 6.43928 3.61119L7.058 2.99247C7.0725 2.97797 7.08679 2.96366 7.1009 2.94955C7.47044 2.57991 7.70691 2.34336 7.95001 2.17822C8.94398 1.50299 10.2377 1.46813 11.2277 2.11832C11.4692 2.27689 11.7002 2.508 12.0515 2.85942C12.0662 2.8741 12.081 2.88898 12.0961 2.90408C12.1112 2.91917 12.1261 2.93405 12.1408 2.94871C12.4922 3.30001 12.7233 3.53102 12.8819 3.77248C13.5321 4.76252 13.4972 6.05623 12.822 7.0502C12.6568 7.2933 12.4203 7.52976 12.0507 7.89929C12.0366 7.9134 12.0222 7.92771 12.0077 7.94221L11.389 8.56093C11.1938 8.7562 10.8772 8.7562 10.6819 8.56093C10.4867 8.36567 10.4867 8.04909 10.6819 7.85383L11.3006 7.23511C11.7276 6.80811 11.8899 6.64264 11.9948 6.48827C12.4543 5.81192 12.4633 4.95675 12.046 4.32141C11.9513 4.17714 11.8009 4.02307 11.389 3.61119C10.9771 3.1993 10.8231 3.04893 10.6788 2.95419ZM4.31796 6.43961C4.51322 6.63487 4.51322 6.95146 4.31796 7.14672L3.69924 7.76544C3.27224 8.19244 3.10993 8.35791 3.00507 8.51227C2.54561 9.18863 2.53661 10.0438 2.95385 10.6791C3.0486 10.8234 3.19896 10.9775 3.61085 11.3894C4.02274 11.8012 4.17681 11.9516 4.32107 12.0464C4.95642 12.4636 5.81158 12.4546 6.48794 11.9951C6.6423 11.8903 6.80777 11.728 7.23477 11.301L7.85349 10.6823C8.04875 10.487 8.36533 10.487 8.5606 10.6823C8.75586 10.8775 8.75586 11.1941 8.5606 11.3894L7.94188 12.0081C7.92738 12.0226 7.91307 12.0369 7.89897 12.051C7.52943 12.4206 7.29296 12.6572 7.04986 12.8223C6.05589 13.4976 4.76219 13.5324 3.77214 12.8822C3.53068 12.7237 3.29967 12.4925 2.94837 12.1411C2.93371 12.1264 2.91883 12.1116 2.90374 12.0965C2.88865 12.0814 2.87377 12.0665 2.8591 12.0518C2.50766 11.7005 2.27656 11.4695 2.11799 11.2281C1.4678 10.238 1.50265 8.94432 2.17788 7.95035C2.34303 7.70724 2.57957 7.47077 2.94922 7.10124C2.96333 7.08713 2.97763 7.07283 2.99213 7.05833L3.61085 6.43961C3.80611 6.24435 4.12269 6.24435 4.31796 6.43961Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2Y = ["color"];
var LinkedInLogoIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2Y);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M2 1C1.44772 1 1 1.44772 1 2V13C1 13.5523 1.44772 14 2 14H13C13.5523 14 14 13.5523 14 13V2C14 1.44772 13.5523 1 13 1H2ZM3.05 6H4.95V12H3.05V6ZM5.075 4.005C5.075 4.59871 4.59371 5.08 4 5.08C3.4063 5.08 2.925 4.59871 2.925 4.005C2.925 3.41129 3.4063 2.93 4 2.93C4.59371 2.93 5.075 3.41129 5.075 4.005ZM12 8.35713C12 6.55208 10.8334 5.85033 9.67449 5.85033C9.29502 5.83163 8.91721 5.91119 8.57874 6.08107C8.32172 6.21007 8.05265 6.50523 7.84516 7.01853H7.79179V6.00044H6V12.0047H7.90616V8.8112C7.8786 8.48413 7.98327 8.06142 8.19741 7.80987C8.41156 7.55832 8.71789 7.49825 8.95015 7.46774H9.02258C9.62874 7.46774 10.0786 7.84301 10.0786 8.78868V12.0047H11.9847L12 8.35713Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2Z = ["color"];
var ListBulletIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2Z);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1.5 5.25C1.91421 5.25 2.25 4.91421 2.25 4.5C2.25 4.08579 1.91421 3.75 1.5 3.75C1.08579 3.75 0.75 4.08579 0.75 4.5C0.75 4.91421 1.08579 5.25 1.5 5.25ZM4 4.5C4 4.22386 4.22386 4 4.5 4H13.5C13.7761 4 14 4.22386 14 4.5C14 4.77614 13.7761 5 13.5 5H4.5C4.22386 5 4 4.77614 4 4.5ZM4.5 7C4.22386 7 4 7.22386 4 7.5C4 7.77614 4.22386 8 4.5 8H13.5C13.7761 8 14 7.77614 14 7.5C14 7.22386 13.7761 7 13.5 7H4.5ZM4.5 10C4.22386 10 4 10.2239 4 10.5C4 10.7761 4.22386 11 4.5 11H13.5C13.7761 11 14 10.7761 14 10.5C14 10.2239 13.7761 10 13.5 10H4.5ZM2.25 7.5C2.25 7.91421 1.91421 8.25 1.5 8.25C1.08579 8.25 0.75 7.91421 0.75 7.5C0.75 7.08579 1.08579 6.75 1.5 6.75C1.91421 6.75 2.25 7.08579 2.25 7.5ZM1.5 11.25C1.91421 11.25 2.25 10.9142 2.25 10.5C2.25 10.0858 1.91421 9.75 1.5 9.75C1.08579 9.75 0.75 10.0858 0.75 10.5C0.75 10.9142 1.08579 11.25 1.5 11.25Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2_ = ["color"];
var LockClosedIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2_);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M5 4.63601C5 3.76031 5.24219 3.1054 5.64323 2.67357C6.03934 2.24705 6.64582 1.9783 7.5014 1.9783C8.35745 1.9783 8.96306 2.24652 9.35823 2.67208C9.75838 3.10299 10 3.75708 10 4.63325V5.99999H5V4.63601ZM4 5.99999V4.63601C4 3.58148 4.29339 2.65754 4.91049 1.99307C5.53252 1.32329 6.42675 0.978302 7.5014 0.978302C8.57583 0.978302 9.46952 1.32233 10.091 1.99162C10.7076 2.65557 11 3.57896 11 4.63325V5.99999H12C12.5523 5.99999 13 6.44771 13 6.99999V13C13 13.5523 12.5523 14 12 14H3C2.44772 14 2 13.5523 2 13V6.99999C2 6.44771 2.44772 5.99999 3 5.99999H4ZM3 6.99999H12V13H3V6.99999Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2$ = ["color"];
var LockOpen1Icon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$2$);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.4986 0C6.3257 0 5.36107 0.38943 4.73753 1.19361C4.23745 1.83856 4 2.68242 4 3.63325H5C5 2.84313 5.19691 2.23312 5.5278 1.80636C5.91615 1.30552 6.55152 1 7.4986 1C8.35683 1 8.96336 1.26502 9.35846 1.68623C9.75793 2.11211 10 2.76044 10 3.63601V6H3C2.44772 6 2 6.44772 2 7V13C2 13.5523 2.44772 14 3 14H12C12.5523 14 13 13.5523 13 13V7C13 6.44771 12.5523 6 12 6H11V3.63601C11 2.58135 10.7065 1.66167 10.0878 1.0021C9.46477 0.337871 8.57061 0 7.4986 0ZM3 7H12V13H3V7Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$30 = ["color"];
var LockOpen2Icon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$30);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M9 3.63601C9 2.76044 9.24207 2.11211 9.64154 1.68623C10.0366 1.26502 10.6432 1 11.5014 1C12.4485 1 13.0839 1.30552 13.4722 1.80636C13.8031 2.23312 14 2.84313 14 3.63325H15C15 2.68242 14.7626 1.83856 14.2625 1.19361C13.6389 0.38943 12.6743 0 11.5014 0C10.4294 0 9.53523 0.337871 8.91218 1.0021C8.29351 1.66167 8 2.58135 8 3.63601V6H1C0.447715 6 0 6.44772 0 7V13C0 13.5523 0.447715 14 1 14H10C10.5523 14 11 13.5523 11 13V7C11 6.44772 10.5523 6 10 6H9V3.63601ZM1 7H10V13H1V7Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$31 = ["color"];
var LoopIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$31);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.35355 1.85355C3.54882 1.65829 3.54882 1.34171 3.35355 1.14645C3.15829 0.951184 2.84171 0.951184 2.64645 1.14645L0.646447 3.14645C0.451184 3.34171 0.451184 3.65829 0.646447 3.85355L2.64645 5.85355C2.84171 6.04882 3.15829 6.04882 3.35355 5.85355C3.54882 5.65829 3.54882 5.34171 3.35355 5.14645L2.20711 4H9.5C11.433 4 13 5.567 13 7.5C13 7.77614 13.2239 8 13.5 8C13.7761 8 14 7.77614 14 7.5C14 5.01472 11.9853 3 9.5 3H2.20711L3.35355 1.85355ZM2 7.5C2 7.22386 1.77614 7 1.5 7C1.22386 7 1 7.22386 1 7.5C1 9.98528 3.01472 12 5.5 12H12.7929L11.6464 13.1464C11.4512 13.3417 11.4512 13.6583 11.6464 13.8536C11.8417 14.0488 12.1583 14.0488 12.3536 13.8536L14.3536 11.8536C14.5488 11.6583 14.5488 11.3417 14.3536 11.1464L12.3536 9.14645C12.1583 8.95118 11.8417 8.95118 11.6464 9.14645C11.4512 9.34171 11.4512 9.65829 11.6464 9.85355L12.7929 11H5.5C3.567 11 2 9.433 2 7.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$32 = ["color"];
var MagicWandIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$32);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M13.9 0.499976C13.9 0.279062 13.7209 0.0999756 13.5 0.0999756C13.2791 0.0999756 13.1 0.279062 13.1 0.499976V1.09998H12.5C12.2791 1.09998 12.1 1.27906 12.1 1.49998C12.1 1.72089 12.2791 1.89998 12.5 1.89998H13.1V2.49998C13.1 2.72089 13.2791 2.89998 13.5 2.89998C13.7209 2.89998 13.9 2.72089 13.9 2.49998V1.89998H14.5C14.7209 1.89998 14.9 1.72089 14.9 1.49998C14.9 1.27906 14.7209 1.09998 14.5 1.09998H13.9V0.499976ZM11.8536 3.14642C12.0488 3.34168 12.0488 3.65826 11.8536 3.85353L10.8536 4.85353C10.6583 5.04879 10.3417 5.04879 10.1465 4.85353C9.9512 4.65827 9.9512 4.34169 10.1465 4.14642L11.1464 3.14643C11.3417 2.95116 11.6583 2.95116 11.8536 3.14642ZM9.85357 5.14642C10.0488 5.34168 10.0488 5.65827 9.85357 5.85353L2.85355 12.8535C2.65829 13.0488 2.34171 13.0488 2.14645 12.8535C1.95118 12.6583 1.95118 12.3417 2.14645 12.1464L9.14646 5.14642C9.34172 4.95116 9.65831 4.95116 9.85357 5.14642ZM13.5 5.09998C13.7209 5.09998 13.9 5.27906 13.9 5.49998V6.09998H14.5C14.7209 6.09998 14.9 6.27906 14.9 6.49998C14.9 6.72089 14.7209 6.89998 14.5 6.89998H13.9V7.49998C13.9 7.72089 13.7209 7.89998 13.5 7.89998C13.2791 7.89998 13.1 7.72089 13.1 7.49998V6.89998H12.5C12.2791 6.89998 12.1 6.72089 12.1 6.49998C12.1 6.27906 12.2791 6.09998 12.5 6.09998H13.1V5.49998C13.1 5.27906 13.2791 5.09998 13.5 5.09998ZM8.90002 0.499976C8.90002 0.279062 8.72093 0.0999756 8.50002 0.0999756C8.2791 0.0999756 8.10002 0.279062 8.10002 0.499976V1.09998H7.50002C7.2791 1.09998 7.10002 1.27906 7.10002 1.49998C7.10002 1.72089 7.2791 1.89998 7.50002 1.89998H8.10002V2.49998C8.10002 2.72089 8.2791 2.89998 8.50002 2.89998C8.72093 2.89998 8.90002 2.72089 8.90002 2.49998V1.89998H9.50002C9.72093 1.89998 9.90002 1.72089 9.90002 1.49998C9.90002 1.27906 9.72093 1.09998 9.50002 1.09998H8.90002V0.499976Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$33 = ["color"];
var MagnifyingGlassIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$33);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M10 6.5C10 8.433 8.433 10 6.5 10C4.567 10 3 8.433 3 6.5C3 4.567 4.567 3 6.5 3C8.433 3 10 4.567 10 6.5ZM9.30884 10.0159C8.53901 10.6318 7.56251 11 6.5 11C4.01472 11 2 8.98528 2 6.5C2 4.01472 4.01472 2 6.5 2C8.98528 2 11 4.01472 11 6.5C11 7.56251 10.6318 8.53901 10.0159 9.30884L12.8536 12.1464C13.0488 12.3417 13.0488 12.6583 12.8536 12.8536C12.6583 13.0488 12.3417 13.0488 12.1464 12.8536L9.30884 10.0159Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$34 = ["color"];
var MarginIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$34);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1.49988 2.00012C1.77602 2.00012 1.99988 1.77626 1.99988 1.50012C1.99988 1.22398 1.77602 1.00012 1.49988 1.00012C1.22374 1.00012 0.999878 1.22398 0.999878 1.50012C0.999878 1.77626 1.22374 2.00012 1.49988 2.00012ZM4.49988 2.00012C4.77602 2.00012 4.99988 1.77626 4.99988 1.50012C4.99988 1.22398 4.77602 1.00012 4.49988 1.00012C4.22374 1.00012 3.99988 1.22398 3.99988 1.50012C3.99988 1.77626 4.22374 2.00012 4.49988 2.00012ZM7.99988 1.50012C7.99988 1.77626 7.77602 2.00012 7.49988 2.00012C7.22374 2.00012 6.99988 1.77626 6.99988 1.50012C6.99988 1.22398 7.22374 1.00012 7.49988 1.00012C7.77602 1.00012 7.99988 1.22398 7.99988 1.50012ZM10.4999 2.00012C10.776 2.00012 10.9999 1.77626 10.9999 1.50012C10.9999 1.22398 10.776 1.00012 10.4999 1.00012C10.2237 1.00012 9.99988 1.22398 9.99988 1.50012C9.99988 1.77626 10.2237 2.00012 10.4999 2.00012ZM13.9999 1.50012C13.9999 1.77626 13.776 2.00012 13.4999 2.00012C13.2237 2.00012 12.9999 1.77626 12.9999 1.50012C12.9999 1.22398 13.2237 1.00012 13.4999 1.00012C13.776 1.00012 13.9999 1.22398 13.9999 1.50012ZM1.49988 14.0001C1.77602 14.0001 1.99988 13.7763 1.99988 13.5001C1.99988 13.224 1.77602 13.0001 1.49988 13.0001C1.22374 13.0001 0.999878 13.224 0.999878 13.5001C0.999878 13.7763 1.22374 14.0001 1.49988 14.0001ZM1.99988 10.5001C1.99988 10.7763 1.77602 11.0001 1.49988 11.0001C1.22374 11.0001 0.999878 10.7763 0.999878 10.5001C0.999878 10.224 1.22374 10.0001 1.49988 10.0001C1.77602 10.0001 1.99988 10.224 1.99988 10.5001ZM1.49988 8.00012C1.77602 8.00012 1.99988 7.77626 1.99988 7.50012C1.99988 7.22398 1.77602 7.00012 1.49988 7.00012C1.22374 7.00012 0.999878 7.22398 0.999878 7.50012C0.999878 7.77626 1.22374 8.00012 1.49988 8.00012ZM1.99988 4.50012C1.99988 4.77626 1.77602 5.00012 1.49988 5.00012C1.22374 5.00012 0.999878 4.77626 0.999878 4.50012C0.999878 4.22398 1.22374 4.00012 1.49988 4.00012C1.77602 4.00012 1.99988 4.22398 1.99988 4.50012ZM13.4999 11.0001C13.776 11.0001 13.9999 10.7763 13.9999 10.5001C13.9999 10.224 13.776 10.0001 13.4999 10.0001C13.2237 10.0001 12.9999 10.224 12.9999 10.5001C12.9999 10.7763 13.2237 11.0001 13.4999 11.0001ZM13.9999 7.50012C13.9999 7.77626 13.776 8.00012 13.4999 8.00012C13.2237 8.00012 12.9999 7.77626 12.9999 7.50012C12.9999 7.22398 13.2237 7.00012 13.4999 7.00012C13.776 7.00012 13.9999 7.22398 13.9999 7.50012ZM13.4999 5.00012C13.776 5.00012 13.9999 4.77626 13.9999 4.50012C13.9999 4.22398 13.776 4.00012 13.4999 4.00012C13.2237 4.00012 12.9999 4.22398 12.9999 4.50012C12.9999 4.77626 13.2237 5.00012 13.4999 5.00012ZM4.99988 13.5001C4.99988 13.7763 4.77602 14.0001 4.49988 14.0001C4.22374 14.0001 3.99988 13.7763 3.99988 13.5001C3.99988 13.224 4.22374 13.0001 4.49988 13.0001C4.77602 13.0001 4.99988 13.224 4.99988 13.5001ZM7.49988 14.0001C7.77602 14.0001 7.99988 13.7763 7.99988 13.5001C7.99988 13.224 7.77602 13.0001 7.49988 13.0001C7.22374 13.0001 6.99988 13.224 6.99988 13.5001C6.99988 13.7763 7.22374 14.0001 7.49988 14.0001ZM10.9999 13.5001C10.9999 13.7763 10.776 14.0001 10.4999 14.0001C10.2237 14.0001 9.99988 13.7763 9.99988 13.5001C9.99988 13.224 10.2237 13.0001 10.4999 13.0001C10.776 13.0001 10.9999 13.224 10.9999 13.5001ZM13.4999 14.0001C13.776 14.0001 13.9999 13.7763 13.9999 13.5001C13.9999 13.224 13.776 13.0001 13.4999 13.0001C13.2237 13.0001 12.9999 13.224 12.9999 13.5001C12.9999 13.7763 13.2237 14.0001 13.4999 14.0001ZM3.99988 5.00012C3.99988 4.44784 4.44759 4.00012 4.99988 4.00012H9.99988C10.5522 4.00012 10.9999 4.44784 10.9999 5.00012V10.0001C10.9999 10.5524 10.5522 11.0001 9.99988 11.0001H4.99988C4.44759 11.0001 3.99988 10.5524 3.99988 10.0001V5.00012ZM4.99988 5.00012H9.99988V10.0001H4.99988V5.00012Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$35 = ["color"];
var MaskOffIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$35);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1 2H14V13H1L1 2ZM0 2C0 1.44772 0.447715 1 1 1H14C14.5523 1 15 1.44772 15 2V13C15 13.5523 14.5523 14 14 14H1C0.447715 14 0 13.5523 0 13V2ZM4.875 7.5C4.875 6.05025 6.05025 4.875 7.5 4.875C8.94975 4.875 10.125 6.05025 10.125 7.5C10.125 8.94975 8.94975 10.125 7.5 10.125C6.05025 10.125 4.875 8.94975 4.875 7.5ZM7.5 3.875C5.49797 3.875 3.875 5.49797 3.875 7.5C3.875 9.50203 5.49797 11.125 7.5 11.125C9.50203 11.125 11.125 9.50203 11.125 7.5C11.125 5.49797 9.50203 3.875 7.5 3.875Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$36 = ["color"];
var MaskOnIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$36);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1 1C0.447715 1 0 1.44772 0 2V13C0 13.5523 0.447715 14 1 14H14C14.5523 14 15 13.5523 15 13V2C15 1.44772 14.5523 1 14 1H1ZM7.5 10.625C9.22589 10.625 10.625 9.22589 10.625 7.5C10.625 5.77411 9.22589 4.375 7.5 4.375C5.77411 4.375 4.375 5.77411 4.375 7.5C4.375 9.22589 5.77411 10.625 7.5 10.625Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$37 = ["color"];
var MinusIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$37);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M2.25 7.5C2.25 7.22386 2.47386 7 2.75 7H12.25C12.5261 7 12.75 7.22386 12.75 7.5C12.75 7.77614 12.5261 8 12.25 8H2.75C2.47386 8 2.25 7.77614 2.25 7.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$38 = ["color"];
var MinusCircledIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$38);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.49991 0.876892C3.84222 0.876892 0.877075 3.84204 0.877075 7.49972C0.877075 11.1574 3.84222 14.1226 7.49991 14.1226C11.1576 14.1226 14.1227 11.1574 14.1227 7.49972C14.1227 3.84204 11.1576 0.876892 7.49991 0.876892ZM1.82707 7.49972C1.82707 4.36671 4.36689 1.82689 7.49991 1.82689C10.6329 1.82689 13.1727 4.36671 13.1727 7.49972C13.1727 10.6327 10.6329 13.1726 7.49991 13.1726C4.36689 13.1726 1.82707 10.6327 1.82707 7.49972ZM4.50003 7C4.22389 7 4.00003 7.22386 4.00003 7.5C4.00003 7.77614 4.22389 8 4.50003 8H10.5C10.7762 8 11 7.77614 11 7.5C11 7.22386 10.7762 7 10.5 7H4.50003Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$39 = ["color"];
var MixIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$39);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M2.14921 3.99996C2.14921 2.97778 2.97784 2.14915 4.00002 2.14915C5.02219 2.14915 5.85083 2.97778 5.85083 3.99996C5.85083 5.02213 5.02219 5.85077 4.00002 5.85077C2.97784 5.85077 2.14921 5.02213 2.14921 3.99996ZM4.00002 1.24915C2.48079 1.24915 1.24921 2.48073 1.24921 3.99996C1.24921 5.51919 2.48079 6.75077 4.00002 6.75077C5.51925 6.75077 6.75083 5.51919 6.75083 3.99996C6.75083 2.48073 5.51925 1.24915 4.00002 1.24915ZM5.82034 11.0001L2.49998 12.8369V9.16331L5.82034 11.0001ZM2.63883 8.21159C2.17228 7.9535 1.59998 8.29093 1.59998 8.82411V13.1761C1.59998 13.7093 2.17228 14.0467 2.63883 13.7886L6.57235 11.6126C7.05389 11.3462 7.05389 10.654 6.57235 10.3876L2.63883 8.21159ZM8.30001 9.00003C8.30001 8.61343 8.61341 8.30003 9.00001 8.30003H13C13.3866 8.30003 13.7 8.61343 13.7 9.00003V13C13.7 13.3866 13.3866 13.7 13 13.7H9.00001C8.61341 13.7 8.30001 13.3866 8.30001 13V9.00003ZM9.20001 9.20003V12.8H12.8V9.20003H9.20001ZM13.4432 2.19311C13.6189 2.01737 13.6189 1.73245 13.4432 1.55671C13.2675 1.38098 12.9826 1.38098 12.8068 1.55671L11 3.36353L9.19321 1.55674C9.01748 1.381 8.73255 1.381 8.55682 1.55674C8.38108 1.73247 8.38108 2.0174 8.55682 2.19313L10.3636 3.99992L8.55682 5.80671C8.38108 5.98245 8.38108 6.26737 8.55682 6.44311C8.73255 6.61885 9.01748 6.61885 9.19321 6.44311L11 4.63632L12.8068 6.44314C12.9826 6.61887 13.2675 6.61887 13.4432 6.44314C13.6189 6.2674 13.6189 5.98247 13.4432 5.80674L11.6364 3.99992L13.4432 2.19311Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3a = ["color"];
var MixerHorizontalIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3a);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M5.5 3C4.67157 3 4 3.67157 4 4.5C4 5.32843 4.67157 6 5.5 6C6.32843 6 7 5.32843 7 4.5C7 3.67157 6.32843 3 5.5 3ZM3 5C3.01671 5 3.03323 4.99918 3.04952 4.99758C3.28022 6.1399 4.28967 7 5.5 7C6.71033 7 7.71978 6.1399 7.95048 4.99758C7.96677 4.99918 7.98329 5 8 5H13.5C13.7761 5 14 4.77614 14 4.5C14 4.22386 13.7761 4 13.5 4H8C7.98329 4 7.96677 4.00082 7.95048 4.00242C7.71978 2.86009 6.71033 2 5.5 2C4.28967 2 3.28022 2.86009 3.04952 4.00242C3.03323 4.00082 3.01671 4 3 4H1.5C1.22386 4 1 4.22386 1 4.5C1 4.77614 1.22386 5 1.5 5H3ZM11.9505 10.9976C11.7198 12.1399 10.7103 13 9.5 13C8.28967 13 7.28022 12.1399 7.04952 10.9976C7.03323 10.9992 7.01671 11 7 11H1.5C1.22386 11 1 10.7761 1 10.5C1 10.2239 1.22386 10 1.5 10H7C7.01671 10 7.03323 10.0008 7.04952 10.0024C7.28022 8.8601 8.28967 8 9.5 8C10.7103 8 11.7198 8.8601 11.9505 10.0024C11.9668 10.0008 11.9833 10 12 10H13.5C13.7761 10 14 10.2239 14 10.5C14 10.7761 13.7761 11 13.5 11H12C11.9833 11 11.9668 10.9992 11.9505 10.9976ZM8 10.5C8 9.67157 8.67157 9 9.5 9C10.3284 9 11 9.67157 11 10.5C11 11.3284 10.3284 12 9.5 12C8.67157 12 8 11.3284 8 10.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3b = ["color"];
var MixerVerticalIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3b);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M5 1.5C5 1.22386 4.77614 1 4.5 1C4.22386 1 4 1.22386 4 1.5L4 7C4 7.01671 4.00082 7.03323 4.00242 7.04952C2.86009 7.28022 2 8.28967 2 9.5C2 10.7103 2.86009 11.7198 4.00242 11.9505C4.00082 11.9668 4 11.9833 4 12V13.5C4 13.7761 4.22386 14 4.5 14C4.77614 14 5 13.7761 5 13.5V12C5 11.9833 4.99918 11.9668 4.99758 11.9505C6.1399 11.7198 7 10.7103 7 9.5C7 8.28967 6.1399 7.28022 4.99758 7.04952C4.99918 7.03323 5 7.01671 5 7L5 1.5ZM11 1.5C11 1.22386 10.7761 1 10.5 1C10.2239 1 10 1.22386 10 1.5V3C10 3.01671 10.0008 3.03323 10.0024 3.04952C8.8601 3.28022 8 4.28967 8 5.5C8 6.71033 8.8601 7.71978 10.0024 7.95048C10.0008 7.96677 10 7.98329 10 8V13.5C10 13.7761 10.2239 14 10.5 14C10.7761 14 11 13.7761 11 13.5V8C11 7.98329 10.9992 7.96677 10.9976 7.95048C12.1399 7.71978 13 6.71033 13 5.5C13 4.28967 12.1399 3.28022 10.9976 3.04952C10.9992 3.03323 11 3.01671 11 3V1.5ZM4.5 8C3.67157 8 3 8.67157 3 9.5C3 10.3284 3.67157 11 4.5 11C5.32843 11 6 10.3284 6 9.5C6 8.67157 5.32843 8 4.5 8ZM9 5.5C9 4.67157 9.67157 4 10.5 4C11.3284 4 12 4.67157 12 5.5C12 6.32843 11.3284 7 10.5 7C9.67157 7 9 6.32843 9 5.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3c = ["color"];
var MobileIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3c);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M4 2.5C4 2.22386 4.22386 2 4.5 2H10.5C10.7761 2 11 2.22386 11 2.5V12.5C11 12.7761 10.7761 13 10.5 13H4.5C4.22386 13 4 12.7761 4 12.5V2.5ZM4.5 1C3.67157 1 3 1.67157 3 2.5V12.5C3 13.3284 3.67157 14 4.5 14H10.5C11.3284 14 12 13.3284 12 12.5V2.5C12 1.67157 11.3284 1 10.5 1H4.5ZM6 11.65C5.8067 11.65 5.65 11.8067 5.65 12C5.65 12.1933 5.8067 12.35 6 12.35H9C9.1933 12.35 9.35 12.1933 9.35 12C9.35 11.8067 9.1933 11.65 9 11.65H6Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3d = ["color"];
var ModulzLogoIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3d);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.25925 3.16667L4.37036 5.33333V1L7.25925 3.16667ZM1 8.22222L3.88889 6.05555L1 3.88889V8.22222ZM1 14L3.88889 11.8333L1 9.66666V14ZM7.74072 8.22222L10.6296 6.05555L7.74072 3.88889V8.22222ZM14 3.16667L11.1111 5.33333V1L14 3.16667ZM11.1111 11.1111L14 8.94444L11.1111 6.77777V11.1111ZM3.88889 11.1111L1 8.94444L3.88889 6.77777V11.1111ZM4.37036 6.05555L7.25925 8.22222V3.88889L4.37036 6.05555ZM3.88889 5.33333L1 3.16667L3.88889 1V5.33333ZM7.74072 3.16667L10.6296 5.33333V1L7.74072 3.16667ZM14 8.22222L11.1111 6.05555L14 3.88889V8.22222ZM11.1111 11.8333L14 14V9.66666L11.1111 11.8333Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3e = ["color"];
var MoonIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3e);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M2.89998 0.499976C2.89998 0.279062 2.72089 0.0999756 2.49998 0.0999756C2.27906 0.0999756 2.09998 0.279062 2.09998 0.499976V1.09998H1.49998C1.27906 1.09998 1.09998 1.27906 1.09998 1.49998C1.09998 1.72089 1.27906 1.89998 1.49998 1.89998H2.09998V2.49998C2.09998 2.72089 2.27906 2.89998 2.49998 2.89998C2.72089 2.89998 2.89998 2.72089 2.89998 2.49998V1.89998H3.49998C3.72089 1.89998 3.89998 1.72089 3.89998 1.49998C3.89998 1.27906 3.72089 1.09998 3.49998 1.09998H2.89998V0.499976ZM5.89998 3.49998C5.89998 3.27906 5.72089 3.09998 5.49998 3.09998C5.27906 3.09998 5.09998 3.27906 5.09998 3.49998V4.09998H4.49998C4.27906 4.09998 4.09998 4.27906 4.09998 4.49998C4.09998 4.72089 4.27906 4.89998 4.49998 4.89998H5.09998V5.49998C5.09998 5.72089 5.27906 5.89998 5.49998 5.89998C5.72089 5.89998 5.89998 5.72089 5.89998 5.49998V4.89998H6.49998C6.72089 4.89998 6.89998 4.72089 6.89998 4.49998C6.89998 4.27906 6.72089 4.09998 6.49998 4.09998H5.89998V3.49998ZM1.89998 6.49998C1.89998 6.27906 1.72089 6.09998 1.49998 6.09998C1.27906 6.09998 1.09998 6.27906 1.09998 6.49998V7.09998H0.499976C0.279062 7.09998 0.0999756 7.27906 0.0999756 7.49998C0.0999756 7.72089 0.279062 7.89998 0.499976 7.89998H1.09998V8.49998C1.09998 8.72089 1.27906 8.89997 1.49998 8.89997C1.72089 8.89997 1.89998 8.72089 1.89998 8.49998V7.89998H2.49998C2.72089 7.89998 2.89998 7.72089 2.89998 7.49998C2.89998 7.27906 2.72089 7.09998 2.49998 7.09998H1.89998V6.49998ZM8.54406 0.98184L8.24618 0.941586C8.03275 0.917676 7.90692 1.1655 8.02936 1.34194C8.17013 1.54479 8.29981 1.75592 8.41754 1.97445C8.91878 2.90485 9.20322 3.96932 9.20322 5.10022C9.20322 8.37201 6.82247 11.0878 3.69887 11.6097C3.45736 11.65 3.20988 11.6772 2.96008 11.6906C2.74563 11.702 2.62729 11.9535 2.77721 12.1072C2.84551 12.1773 2.91535 12.2458 2.98667 12.3128L3.05883 12.3795L3.31883 12.6045L3.50684 12.7532L3.62796 12.8433L3.81491 12.9742L3.99079 13.089C4.11175 13.1651 4.23536 13.2375 4.36157 13.3059L4.62496 13.4412L4.88553 13.5607L5.18837 13.6828L5.43169 13.7686C5.56564 13.8128 5.70149 13.8529 5.83857 13.8885C5.94262 13.9155 6.04767 13.9401 6.15405 13.9622C6.27993 13.9883 6.40713 14.0109 6.53544 14.0298L6.85241 14.0685L7.11934 14.0892C7.24637 14.0965 7.37436 14.1002 7.50322 14.1002C11.1483 14.1002 14.1032 11.1453 14.1032 7.50023C14.1032 7.25044 14.0893 7.00389 14.0623 6.76131L14.0255 6.48407C13.991 6.26083 13.9453 6.04129 13.8891 5.82642C13.8213 5.56709 13.7382 5.31398 13.6409 5.06881L13.5279 4.80132L13.4507 4.63542L13.3766 4.48666C13.2178 4.17773 13.0353 3.88295 12.8312 3.60423L12.6782 3.40352L12.4793 3.16432L12.3157 2.98361L12.1961 2.85951L12.0355 2.70246L11.8134 2.50184L11.4925 2.24191L11.2483 2.06498L10.9562 1.87446L10.6346 1.68894L10.3073 1.52378L10.1938 1.47176L9.95488 1.3706L9.67791 1.2669L9.42566 1.1846L9.10075 1.09489L8.83599 1.03486L8.54406 0.98184ZM10.4032 5.30023C10.4032 4.27588 10.2002 3.29829 9.83244 2.40604C11.7623 3.28995 13.1032 5.23862 13.1032 7.50023C13.1032 10.593 10.596 13.1002 7.50322 13.1002C6.63646 13.1002 5.81597 12.9036 5.08355 12.5522C6.5419 12.0941 7.81081 11.2082 8.74322 10.0416C8.87963 10.2284 9.10028 10.3497 9.34928 10.3497C9.76349 10.3497 10.0993 10.0139 10.0993 9.59971C10.0993 9.24256 9.84965 8.94373 9.51535 8.86816C9.57741 8.75165 9.63653 8.63334 9.6926 8.51332C9.88358 8.63163 10.1088 8.69993 10.35 8.69993C11.0403 8.69993 11.6 8.14028 11.6 7.44993C11.6 6.75976 11.0406 6.20024 10.3505 6.19993C10.3853 5.90487 10.4032 5.60464 10.4032 5.30023Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3f = ["color"];
var MoveIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3f);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.81819 0.93179C7.64245 0.756054 7.35753 0.756054 7.18179 0.93179L5.43179 2.68179C5.25605 2.85753 5.25605 3.14245 5.43179 3.31819C5.60753 3.49392 5.89245 3.49392 6.06819 3.31819L6.99999 2.38638V5.49999C6.99999 5.77613 7.22385 5.99999 7.49999 5.99999C7.77613 5.99999 7.99999 5.77613 7.99999 5.49999V2.38638L8.93179 3.31819C9.10753 3.49392 9.39245 3.49392 9.56819 3.31819C9.74392 3.14245 9.74392 2.85753 9.56819 2.68179L7.81819 0.93179ZM7.99999 9.49999C7.99999 9.22385 7.77613 8.99999 7.49999 8.99999C7.22385 8.99999 6.99999 9.22385 6.99999 9.49999V12.6136L6.06819 11.6818C5.89245 11.5061 5.60753 11.5061 5.43179 11.6818C5.25605 11.8575 5.25605 12.1424 5.43179 12.3182L7.18179 14.0682C7.35753 14.2439 7.64245 14.2439 7.81819 14.0682L9.56819 12.3182C9.74392 12.1424 9.74392 11.8575 9.56819 11.6818C9.39245 11.5061 9.10753 11.5061 8.93179 11.6818L7.99999 12.6136V9.49999ZM8.99999 7.49999C8.99999 7.22385 9.22385 6.99999 9.49999 6.99999H12.6136L11.6818 6.06819C11.5061 5.89245 11.5061 5.60753 11.6818 5.43179C11.8575 5.25605 12.1424 5.25605 12.3182 5.43179L14.0682 7.18179C14.2439 7.35753 14.2439 7.64245 14.0682 7.81819L12.3182 9.56819C12.1424 9.74392 11.8575 9.74392 11.6818 9.56819C11.5061 9.39245 11.5061 9.10753 11.6818 8.93179L12.6136 7.99999H9.49999C9.22385 7.99999 8.99999 7.77613 8.99999 7.49999ZM3.31819 6.06819L2.38638 6.99999H5.49999C5.77613 6.99999 5.99999 7.22385 5.99999 7.49999C5.99999 7.77613 5.77613 7.99999 5.49999 7.99999H2.38638L3.31819 8.93179C3.49392 9.10753 3.49392 9.39245 3.31819 9.56819C3.14245 9.74392 2.85753 9.74392 2.68179 9.56819L0.93179 7.81819C0.756054 7.64245 0.756054 7.35753 0.93179 7.18179L2.68179 5.43179C2.85753 5.25605 3.14245 5.25605 3.31819 5.43179C3.49392 5.60753 3.49392 5.89245 3.31819 6.06819Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3g = ["color"];
var NotionLogoIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3g);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.25781 3.11684C3.67771 3.45796 3.83523 3.43193 4.62369 3.37933L12.0571 2.93299C12.2147 2.93299 12.0836 2.77571 12.0311 2.74957L10.7965 1.85711C10.56 1.67347 10.2448 1.46315 9.64083 1.51576L2.44308 2.04074C2.18059 2.06677 2.12815 2.19801 2.2327 2.30322L3.25781 3.11684ZM3.7041 4.84917V12.6704C3.7041 13.0907 3.91415 13.248 4.38693 13.222L12.5562 12.7493C13.0292 12.7233 13.0819 12.4341 13.0819 12.0927V4.32397C13.0819 3.98306 12.9508 3.79921 12.6612 3.82545L4.12422 4.32397C3.80918 4.35044 3.7041 4.50803 3.7041 4.84917ZM11.7688 5.26872C11.8212 5.50518 11.7688 5.74142 11.5319 5.76799L11.1383 5.84641V11.6205C10.7965 11.8042 10.4814 11.9092 10.2188 11.9092C9.79835 11.9092 9.69305 11.7779 9.37812 11.3844L6.80345 7.34249V11.2532L7.61816 11.437C7.61816 11.437 7.61816 11.9092 6.96086 11.9092L5.14879 12.0143C5.09615 11.9092 5.14879 11.647 5.33259 11.5944L5.80546 11.4634V6.29276L5.1489 6.24015C5.09625 6.00369 5.22739 5.66278 5.5954 5.63631L7.53935 5.50528L10.2188 9.5998V5.97765L9.53564 5.89924C9.4832 5.61018 9.69305 5.40028 9.95576 5.37425L11.7688 5.26872ZM1.83874 1.33212L9.32557 0.780787C10.245 0.701932 10.4815 0.754753 11.0594 1.17452L13.4492 2.85424C13.8436 3.14309 13.975 3.22173 13.975 3.53661V12.7493C13.975 13.3266 13.7647 13.6681 13.0293 13.7203L4.33492 14.2454C3.78291 14.2717 3.52019 14.193 3.23111 13.8253L1.47116 11.5419C1.1558 11.1216 1.02466 10.8071 1.02466 10.4392V2.25041C1.02466 1.77825 1.23504 1.38441 1.83874 1.33212Z",
    fill: color
  }));
});
var _excluded$3h = ["color"];
var OpacityIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3h);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.5 1.5C4.5 4.25 3 6.5 3 9C3 11.4853 5.01472 13.5 7.5 13.5C9.98528 13.5 12 11.4853 12 9C12 6.5 10.5 4.25 7.5 1.5ZM11 9C11 7.11203 9.97315 5.27195 7.5 2.87357C5.02686 5.27195 4 7.11203 4 9C4 10.933 5.567 12.5 7.5 12.5C9.433 12.5 11 10.933 11 9Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3i = ["color"];
var OpenInNewWindowIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3i);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12 13C12.5523 13 13 12.5523 13 12V3C13 2.44771 12.5523 2 12 2H3C2.44771 2 2 2.44771 2 3V6.5C2 6.77614 2.22386 7 2.5 7C2.77614 7 3 6.77614 3 6.5V3H12V12H8.5C8.22386 12 8 12.2239 8 12.5C8 12.7761 8.22386 13 8.5 13H12ZM9 6.5C9 6.5001 9 6.50021 9 6.50031V6.50035V9.5C9 9.77614 8.77614 10 8.5 10C8.22386 10 8 9.77614 8 9.5V7.70711L2.85355 12.8536C2.65829 13.0488 2.34171 13.0488 2.14645 12.8536C1.95118 12.6583 1.95118 12.3417 2.14645 12.1464L7.29289 7H5.5C5.22386 7 5 6.77614 5 6.5C5 6.22386 5.22386 6 5.5 6H8.5C8.56779 6 8.63244 6.01349 8.69139 6.03794C8.74949 6.06198 8.80398 6.09744 8.85143 6.14433C8.94251 6.23434 8.9992 6.35909 8.99999 6.49708L8.99999 6.49738",
    fill: color
  }));
});
var _excluded$3j = ["color"];
var OverlineIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3j);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.49985 1.10001C3.27894 1.10001 3.09985 1.27909 3.09985 1.50001C3.09985 1.72092 3.27894 1.90001 3.49985 1.90001H11.4999C11.7208 1.90001 11.8999 1.72092 11.8999 1.50001C11.8999 1.27909 11.7208 1.10001 11.4999 1.10001H3.49985ZM4.99995 4.25001C4.99995 3.97387 4.77609 3.75001 4.49995 3.75001C4.22381 3.75001 3.99995 3.97387 3.99995 4.25001V9.55001C3.99995 11.483 5.56695 13.05 7.49995 13.05C9.43295 13.05 11 11.483 11 9.55001V4.25001C11 3.97387 10.7761 3.75001 10.5 3.75001C10.2238 3.75001 9.99995 3.97387 9.99995 4.25001V9.55001C9.99995 10.9307 8.88066 12.05 7.49995 12.05C6.11924 12.05 4.99995 10.9307 4.99995 9.55001V4.25001Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3k = ["color"];
var PaddingIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3k);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M2.85714 2H12.1429C12.6162 2 13 2.38376 13 2.85714V12.1429C13 12.6162 12.6162 13 12.1429 13H2.85714C2.38376 13 2 12.6162 2 12.1429V2.85714C2 2.38376 2.38376 2 2.85714 2ZM1 2.85714C1 1.83147 1.83147 1 2.85714 1H12.1429C13.1685 1 14 1.83147 14 2.85714V12.1429C14 13.1685 13.1685 14 12.1429 14H2.85714C1.83147 14 1 13.1685 1 12.1429V2.85714ZM7.49988 5.00012C7.77602 5.00012 7.99988 4.77626 7.99988 4.50012C7.99988 4.22398 7.77602 4.00012 7.49988 4.00012C7.22374 4.00012 6.99988 4.22398 6.99988 4.50012C6.99988 4.77626 7.22374 5.00012 7.49988 5.00012ZM4.49988 11.0001C4.77602 11.0001 4.99988 10.7763 4.99988 10.5001C4.99988 10.224 4.77602 10.0001 4.49988 10.0001C4.22374 10.0001 3.99988 10.224 3.99988 10.5001C3.99988 10.7763 4.22374 11.0001 4.49988 11.0001ZM4.99988 7.50012C4.99988 7.77626 4.77602 8.00012 4.49988 8.00012C4.22374 8.00012 3.99988 7.77626 3.99988 7.50012C3.99988 7.22398 4.22374 7.00012 4.49988 7.00012C4.77602 7.00012 4.99988 7.22398 4.99988 7.50012ZM4.49988 5.00012C4.77602 5.00012 4.99988 4.77626 4.99988 4.50012C4.99988 4.22398 4.77602 4.00012 4.49988 4.00012C4.22374 4.00012 3.99988 4.22398 3.99988 4.50012C3.99988 4.77626 4.22374 5.00012 4.49988 5.00012ZM10.9999 10.5001C10.9999 10.7763 10.776 11.0001 10.4999 11.0001C10.2237 11.0001 9.99988 10.7763 9.99988 10.5001C9.99988 10.224 10.2237 10.0001 10.4999 10.0001C10.776 10.0001 10.9999 10.224 10.9999 10.5001ZM10.4999 8.00012C10.776 8.00012 10.9999 7.77626 10.9999 7.50012C10.9999 7.22398 10.776 7.00012 10.4999 7.00012C10.2237 7.00012 9.99988 7.22398 9.99988 7.50012C9.99988 7.77626 10.2237 8.00012 10.4999 8.00012ZM10.9999 4.50012C10.9999 4.77626 10.776 5.00012 10.4999 5.00012C10.2237 5.00012 9.99988 4.77626 9.99988 4.50012C9.99988 4.22398 10.2237 4.00012 10.4999 4.00012C10.776 4.00012 10.9999 4.22398 10.9999 4.50012ZM7.49988 11.0001C7.77602 11.0001 7.99988 10.7763 7.99988 10.5001C7.99988 10.224 7.77602 10.0001 7.49988 10.0001C7.22374 10.0001 6.99988 10.224 6.99988 10.5001C6.99988 10.7763 7.22374 11.0001 7.49988 11.0001Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3l = ["color"];
var PaperPlaneIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3l);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1.20308 1.04312C1.00481 0.954998 0.772341 1.0048 0.627577 1.16641C0.482813 1.32802 0.458794 1.56455 0.568117 1.75196L3.92115 7.50002L0.568117 13.2481C0.458794 13.4355 0.482813 13.672 0.627577 13.8336C0.772341 13.9952 1.00481 14.045 1.20308 13.9569L14.7031 7.95693C14.8836 7.87668 15 7.69762 15 7.50002C15 7.30243 14.8836 7.12337 14.7031 7.04312L1.20308 1.04312ZM4.84553 7.10002L2.21234 2.586L13.2689 7.50002L2.21234 12.414L4.84552 7.90002H9C9.22092 7.90002 9.4 7.72094 9.4 7.50002C9.4 7.27911 9.22092 7.10002 9 7.10002H4.84553Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3m = ["color"];
var PauseIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3m);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M6.04995 2.74998C6.04995 2.44623 5.80371 2.19998 5.49995 2.19998C5.19619 2.19998 4.94995 2.44623 4.94995 2.74998V12.25C4.94995 12.5537 5.19619 12.8 5.49995 12.8C5.80371 12.8 6.04995 12.5537 6.04995 12.25V2.74998ZM10.05 2.74998C10.05 2.44623 9.80371 2.19998 9.49995 2.19998C9.19619 2.19998 8.94995 2.44623 8.94995 2.74998V12.25C8.94995 12.5537 9.19619 12.8 9.49995 12.8C9.80371 12.8 10.05 12.5537 10.05 12.25V2.74998Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3n = ["color"];
var Pencil1Icon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3n);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M11.8536 1.14645C11.6583 0.951184 11.3417 0.951184 11.1465 1.14645L3.71455 8.57836C3.62459 8.66832 3.55263 8.77461 3.50251 8.89155L2.04044 12.303C1.9599 12.491 2.00189 12.709 2.14646 12.8536C2.29103 12.9981 2.50905 13.0401 2.69697 12.9596L6.10847 11.4975C6.2254 11.4474 6.3317 11.3754 6.42166 11.2855L13.8536 3.85355C14.0488 3.65829 14.0488 3.34171 13.8536 3.14645L11.8536 1.14645ZM4.42166 9.28547L11.5 2.20711L12.7929 3.5L5.71455 10.5784L4.21924 11.2192L3.78081 10.7808L4.42166 9.28547Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3o = ["color"];
var Pencil2Icon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3o);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M12.1464 1.14645C12.3417 0.951184 12.6583 0.951184 12.8535 1.14645L14.8535 3.14645C15.0488 3.34171 15.0488 3.65829 14.8535 3.85355L10.9109 7.79618C10.8349 7.87218 10.7471 7.93543 10.651 7.9835L6.72359 9.94721C6.53109 10.0435 6.29861 10.0057 6.14643 9.85355C5.99425 9.70137 5.95652 9.46889 6.05277 9.27639L8.01648 5.34897C8.06455 5.25283 8.1278 5.16507 8.2038 5.08907L12.1464 1.14645ZM12.5 2.20711L8.91091 5.79618L7.87266 7.87267L8.12731 8.12732L10.2038 7.08907L13.7929 3.5L12.5 2.20711ZM9.99998 2L8.99998 3H4.9C4.47171 3 4.18056 3.00039 3.95552 3.01877C3.73631 3.03668 3.62421 3.06915 3.54601 3.10899C3.35785 3.20487 3.20487 3.35785 3.10899 3.54601C3.06915 3.62421 3.03669 3.73631 3.01878 3.95552C3.00039 4.18056 3 4.47171 3 4.9V11.1C3 11.5283 3.00039 11.8194 3.01878 12.0445C3.03669 12.2637 3.06915 12.3758 3.10899 12.454C3.20487 12.6422 3.35785 12.7951 3.54601 12.891C3.62421 12.9309 3.73631 12.9633 3.95552 12.9812C4.18056 12.9996 4.47171 13 4.9 13H11.1C11.5283 13 11.8194 12.9996 12.0445 12.9812C12.2637 12.9633 12.3758 12.9309 12.454 12.891C12.6422 12.7951 12.7951 12.6422 12.891 12.454C12.9309 12.3758 12.9633 12.2637 12.9812 12.0445C12.9996 11.8194 13 11.5283 13 11.1V6.99998L14 5.99998V11.1V11.1207C14 11.5231 14 11.8553 13.9779 12.1259C13.9549 12.407 13.9057 12.6653 13.782 12.908C13.5903 13.2843 13.2843 13.5903 12.908 13.782C12.6653 13.9057 12.407 13.9549 12.1259 13.9779C11.8553 14 11.5231 14 11.1207 14H11.1H4.9H4.87934C4.47686 14 4.14468 14 3.87409 13.9779C3.59304 13.9549 3.33469 13.9057 3.09202 13.782C2.7157 13.5903 2.40973 13.2843 2.21799 12.908C2.09434 12.6653 2.04506 12.407 2.0221 12.1259C1.99999 11.8553 1.99999 11.5231 2 11.1207V11.1206V11.1V4.9V4.87935V4.87932V4.87931C1.99999 4.47685 1.99999 4.14468 2.0221 3.87409C2.04506 3.59304 2.09434 3.33469 2.21799 3.09202C2.40973 2.71569 2.7157 2.40973 3.09202 2.21799C3.33469 2.09434 3.59304 2.04506 3.87409 2.0221C4.14468 1.99999 4.47685 1.99999 4.87932 2H4.87935H4.9H9.99998Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3p = ["color"];
var PersonIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3p);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.5 0.875C5.49797 0.875 3.875 2.49797 3.875 4.5C3.875 6.15288 4.98124 7.54738 6.49373 7.98351C5.2997 8.12901 4.27557 8.55134 3.50407 9.31167C2.52216 10.2794 2.02502 11.72 2.02502 13.5999C2.02502 13.8623 2.23769 14.0749 2.50002 14.0749C2.76236 14.0749 2.97502 13.8623 2.97502 13.5999C2.97502 11.8799 3.42786 10.7206 4.17091 9.9883C4.91536 9.25463 6.02674 8.87499 7.49995 8.87499C8.97317 8.87499 10.0846 9.25463 10.8291 9.98831C11.5721 10.7206 12.025 11.8799 12.025 13.5999C12.025 13.8623 12.2376 14.0749 12.5 14.0749C12.7623 14.075 12.975 13.8623 12.975 13.6C12.975 11.72 12.4778 10.2794 11.4959 9.31166C10.7244 8.55135 9.70025 8.12903 8.50625 7.98352C10.0187 7.5474 11.125 6.15289 11.125 4.5C11.125 2.49797 9.50203 0.875 7.5 0.875ZM4.825 4.5C4.825 3.02264 6.02264 1.825 7.5 1.825C8.97736 1.825 10.175 3.02264 10.175 4.5C10.175 5.97736 8.97736 7.175 7.5 7.175C6.02264 7.175 4.825 5.97736 4.825 4.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3q = ["color"];
var PieChartIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3q);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1.85001 7.50043C1.85001 4.37975 4.37963 1.85001 7.50001 1.85001C10.6204 1.85001 13.15 4.37975 13.15 7.50043C13.15 10.6211 10.6204 13.1509 7.50001 13.1509C4.37963 13.1509 1.85001 10.6211 1.85001 7.50043ZM7.50001 0.850006C3.82728 0.850006 0.850006 3.82753 0.850006 7.50043C0.850006 11.1733 3.82728 14.1509 7.50001 14.1509C11.1727 14.1509 14.15 11.1733 14.15 7.50043C14.15 3.82753 11.1727 0.850006 7.50001 0.850006ZM7.00001 8.00001V3.12811C7.16411 3.10954 7.33094 3.10001 7.50001 3.10001C9.93006 3.10001 11.9 5.07014 11.9 7.50043C11.9 7.66935 11.8905 7.83604 11.872 8.00001H7.00001Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3r = ["color"];
var PilcrowIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3r);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3 5.5C3 7.983 4.99169 9 7 9V12.5C7 12.7761 7.22386 13 7.5 13C7.77614 13 8 12.7761 8 12.5V9V3.1H9V12.5C9 12.7761 9.22386 13 9.5 13C9.77614 13 10 12.7761 10 12.5V3.1H11.5C11.8038 3.1 12.05 2.85376 12.05 2.55C12.05 2.24624 11.8038 2 11.5 2H9.5H8H7.5H7C4.99169 2 3 3.017 3 5.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3s = ["color"];
var PinBottomIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3s);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M13.5 13.95C13.7485 13.95 13.95 13.7485 13.95 13.5C13.95 13.2514 13.7485 13.05 13.5 13.05L1.49995 13.05C1.25142 13.05 1.04995 13.2514 1.04995 13.5C1.04995 13.7485 1.25142 13.95 1.49995 13.95L13.5 13.95ZM11.0681 7.5683C11.2439 7.39257 11.2439 7.10764 11.0681 6.93191C10.8924 6.75617 10.6075 6.75617 10.4317 6.93191L7.94993 9.41371L7.94993 1.49998C7.94993 1.25146 7.74846 1.04998 7.49993 1.04998C7.2514 1.04998 7.04993 1.25146 7.04993 1.49998L7.04993 9.41371L4.56813 6.93191C4.39239 6.75617 4.10746 6.75617 3.93173 6.93191C3.75599 7.10764 3.75599 7.39257 3.93173 7.5683L7.18173 10.8183C7.35746 10.994 7.64239 10.994 7.81812 10.8183L11.0681 7.5683Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3t = ["color"];
var PinLeftIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3t);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M2.05005 13.5C2.05005 13.7485 2.25152 13.95 2.50005 13.95C2.74858 13.95 2.95005 13.7485 2.95005 13.5L2.95005 1.49995C2.95005 1.25142 2.74858 1.04995 2.50005 1.04995C2.25152 1.04995 2.05005 1.25142 2.05005 1.49995L2.05005 13.5ZM8.4317 11.0681C8.60743 11.2439 8.89236 11.2439 9.06809 11.0681C9.24383 10.8924 9.24383 10.6075 9.06809 10.4317L6.58629 7.94993L14.5 7.94993C14.7485 7.94993 14.95 7.74846 14.95 7.49993C14.95 7.2514 14.7485 7.04993 14.5 7.04993L6.58629 7.04993L9.06809 4.56813C9.24383 4.39239 9.24383 4.10746 9.06809 3.93173C8.89236 3.75599 8.60743 3.75599 8.4317 3.93173L5.1817 7.18173C5.00596 7.35746 5.00596 7.64239 5.1817 7.81812L8.4317 11.0681Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3u = ["color"];
var PinRightIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3u);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M12.95 1.50005C12.95 1.25152 12.7485 1.05005 12.5 1.05005C12.2514 1.05005 12.05 1.25152 12.05 1.50005L12.05 13.5C12.05 13.7486 12.2514 13.95 12.5 13.95C12.7485 13.95 12.95 13.7486 12.95 13.5L12.95 1.50005ZM6.5683 3.93188C6.39257 3.75614 6.10764 3.75614 5.93191 3.93188C5.75617 4.10761 5.75617 4.39254 5.93191 4.56827L8.41371 7.05007L0.499984 7.05007C0.251456 7.05007 0.0499847 7.25155 0.0499847 7.50007C0.0499846 7.7486 0.251457 7.95007 0.499984 7.95007L8.41371 7.95007L5.93191 10.4319C5.75617 10.6076 5.75617 10.8925 5.93191 11.0683C6.10764 11.244 6.39257 11.244 6.56831 11.0683L9.8183 7.81827C9.99404 7.64254 9.99404 7.35761 9.8183 7.18188L6.5683 3.93188Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3v = ["color"];
var PinTopIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3v);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1.50005 1.05005C1.25152 1.05005 1.05005 1.25152 1.05005 1.50005C1.05005 1.74858 1.25152 1.95005 1.50005 1.95005L13.5 1.95005C13.7486 1.95005 13.95 1.74858 13.95 1.50005C13.95 1.25152 13.7486 1.05005 13.5 1.05005H1.50005ZM3.93188 7.43169C3.75614 7.60743 3.75614 7.89236 3.93188 8.06809C4.10761 8.24383 4.39254 8.24383 4.56827 8.06809L7.05007 5.58629V13.5C7.05007 13.7485 7.25155 13.95 7.50007 13.95C7.7486 13.95 7.95007 13.7485 7.95007 13.5L7.95007 5.58629L10.4319 8.06809C10.6076 8.24383 10.8925 8.24383 11.0683 8.06809C11.244 7.89235 11.244 7.60743 11.0683 7.43169L7.81827 4.18169C7.64254 4.00596 7.35761 4.00596 7.18188 4.18169L3.93188 7.43169Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3w = ["color"];
var PlayIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3w);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.24182 2.32181C3.3919 2.23132 3.5784 2.22601 3.73338 2.30781L12.7334 7.05781C12.8974 7.14436 13 7.31457 13 7.5C13 7.68543 12.8974 7.85564 12.7334 7.94219L3.73338 12.6922C3.5784 12.774 3.3919 12.7687 3.24182 12.6782C3.09175 12.5877 3 12.4252 3 12.25V2.75C3 2.57476 3.09175 2.4123 3.24182 2.32181ZM4 3.57925V11.4207L11.4288 7.5L4 3.57925Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3x = ["color"];
var PlusIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3x);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M8 2.75C8 2.47386 7.77614 2.25 7.5 2.25C7.22386 2.25 7 2.47386 7 2.75V7H2.75C2.47386 7 2.25 7.22386 2.25 7.5C2.25 7.77614 2.47386 8 2.75 8H7V12.25C7 12.5261 7.22386 12.75 7.5 12.75C7.77614 12.75 8 12.5261 8 12.25V8H12.25C12.5261 8 12.75 7.77614 12.75 7.5C12.75 7.22386 12.5261 7 12.25 7H8V2.75Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3y = ["color"];
var PlusCircledIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3y);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.49991 0.876892C3.84222 0.876892 0.877075 3.84204 0.877075 7.49972C0.877075 11.1574 3.84222 14.1226 7.49991 14.1226C11.1576 14.1226 14.1227 11.1574 14.1227 7.49972C14.1227 3.84204 11.1576 0.876892 7.49991 0.876892ZM1.82707 7.49972C1.82707 4.36671 4.36689 1.82689 7.49991 1.82689C10.6329 1.82689 13.1727 4.36671 13.1727 7.49972C13.1727 10.6327 10.6329 13.1726 7.49991 13.1726C4.36689 13.1726 1.82707 10.6327 1.82707 7.49972ZM7.50003 4C7.77617 4 8.00003 4.22386 8.00003 4.5V7H10.5C10.7762 7 11 7.22386 11 7.5C11 7.77614 10.7762 8 10.5 8H8.00003V10.5C8.00003 10.7761 7.77617 11 7.50003 11C7.22389 11 7.00003 10.7761 7.00003 10.5V8H4.50003C4.22389 8 4.00003 7.77614 4.00003 7.5C4.00003 7.22386 4.22389 7 4.50003 7H7.00003V4.5C7.00003 4.22386 7.22389 4 7.50003 4Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3z = ["color"];
var QuestionMarkIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3z);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M5.07505 4.10001C5.07505 2.91103 6.25727 1.92502 7.50005 1.92502C8.74283 1.92502 9.92505 2.91103 9.92505 4.10001C9.92505 5.19861 9.36782 5.71436 8.61854 6.37884L8.58757 6.4063C7.84481 7.06467 6.92505 7.87995 6.92505 9.5C6.92505 9.81757 7.18248 10.075 7.50005 10.075C7.81761 10.075 8.07505 9.81757 8.07505 9.5C8.07505 8.41517 8.62945 7.90623 9.38156 7.23925L9.40238 7.22079C10.1496 6.55829 11.075 5.73775 11.075 4.10001C11.075 2.12757 9.21869 0.775024 7.50005 0.775024C5.7814 0.775024 3.92505 2.12757 3.92505 4.10001C3.92505 4.41758 4.18249 4.67501 4.50005 4.67501C4.81761 4.67501 5.07505 4.41758 5.07505 4.10001ZM7.50005 13.3575C7.9833 13.3575 8.37505 12.9657 8.37505 12.4825C8.37505 11.9992 7.9833 11.6075 7.50005 11.6075C7.0168 11.6075 6.62505 11.9992 6.62505 12.4825C6.62505 12.9657 7.0168 13.3575 7.50005 13.3575Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3A = ["color"];
var QuestionMarkCircledIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3A);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M0.877075 7.49972C0.877075 3.84204 3.84222 0.876892 7.49991 0.876892C11.1576 0.876892 14.1227 3.84204 14.1227 7.49972C14.1227 11.1574 11.1576 14.1226 7.49991 14.1226C3.84222 14.1226 0.877075 11.1574 0.877075 7.49972ZM7.49991 1.82689C4.36689 1.82689 1.82708 4.36671 1.82708 7.49972C1.82708 10.6327 4.36689 13.1726 7.49991 13.1726C10.6329 13.1726 13.1727 10.6327 13.1727 7.49972C13.1727 4.36671 10.6329 1.82689 7.49991 1.82689ZM8.24993 10.5C8.24993 10.9142 7.91414 11.25 7.49993 11.25C7.08571 11.25 6.74993 10.9142 6.74993 10.5C6.74993 10.0858 7.08571 9.75 7.49993 9.75C7.91414 9.75 8.24993 10.0858 8.24993 10.5ZM6.05003 6.25C6.05003 5.57211 6.63511 4.925 7.50003 4.925C8.36496 4.925 8.95003 5.57211 8.95003 6.25C8.95003 6.74118 8.68002 6.99212 8.21447 7.27494C8.16251 7.30651 8.10258 7.34131 8.03847 7.37854L8.03841 7.37858C7.85521 7.48497 7.63788 7.61119 7.47449 7.73849C7.23214 7.92732 6.95003 8.23198 6.95003 8.7C6.95004 9.00376 7.19628 9.25 7.50004 9.25C7.8024 9.25 8.04778 9.00601 8.05002 8.70417L8.05056 8.7033C8.05924 8.6896 8.08493 8.65735 8.15058 8.6062C8.25207 8.52712 8.36508 8.46163 8.51567 8.37436L8.51571 8.37433C8.59422 8.32883 8.68296 8.27741 8.78559 8.21506C9.32004 7.89038 10.05 7.35382 10.05 6.25C10.05 4.92789 8.93511 3.825 7.50003 3.825C6.06496 3.825 4.95003 4.92789 4.95003 6.25C4.95003 6.55376 5.19628 6.8 5.50003 6.8C5.80379 6.8 6.05003 6.55376 6.05003 6.25Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3B = ["color"];
var QuoteIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3B);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M9.42503 3.44136C10.0561 3.23654 10.7837 3.2402 11.3792 3.54623C12.7532 4.25224 13.3477 6.07191 12.7946 8C12.5465 8.8649 12.1102 9.70472 11.1861 10.5524C10.262 11.4 8.98034 11.9 8.38571 11.9C8.17269 11.9 8 11.7321 8 11.525C8 11.3179 8.17644 11.15 8.38571 11.15C9.06497 11.15 9.67189 10.7804 10.3906 10.236C10.9406 9.8193 11.3701 9.28633 11.608 8.82191C12.0628 7.93367 12.0782 6.68174 11.3433 6.34901C10.9904 6.73455 10.5295 6.95946 9.97725 6.95946C8.7773 6.95946 8.0701 5.99412 8.10051 5.12009C8.12957 4.28474 8.66032 3.68954 9.42503 3.44136ZM3.42503 3.44136C4.05614 3.23654 4.78366 3.2402 5.37923 3.54623C6.7532 4.25224 7.34766 6.07191 6.79462 8C6.54654 8.8649 6.11019 9.70472 5.1861 10.5524C4.26201 11.4 2.98034 11.9 2.38571 11.9C2.17269 11.9 2 11.7321 2 11.525C2 11.3179 2.17644 11.15 2.38571 11.15C3.06497 11.15 3.67189 10.7804 4.39058 10.236C4.94065 9.8193 5.37014 9.28633 5.60797 8.82191C6.06282 7.93367 6.07821 6.68174 5.3433 6.34901C4.99037 6.73455 4.52948 6.95946 3.97725 6.95946C2.7773 6.95946 2.0701 5.99412 2.10051 5.12009C2.12957 4.28474 2.66032 3.68954 3.42503 3.44136Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3C = ["color"];
var RadiobuttonIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3C);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.49985 0.877045C3.84216 0.877045 0.877014 3.84219 0.877014 7.49988C0.877014 11.1575 3.84216 14.1227 7.49985 14.1227C11.1575 14.1227 14.1227 11.1575 14.1227 7.49988C14.1227 3.84219 11.1575 0.877045 7.49985 0.877045ZM1.82701 7.49988C1.82701 4.36686 4.36683 1.82704 7.49985 1.82704C10.6328 1.82704 13.1727 4.36686 13.1727 7.49988C13.1727 10.6329 10.6328 13.1727 7.49985 13.1727C4.36683 13.1727 1.82701 10.6329 1.82701 7.49988ZM7.49999 9.49999C8.60456 9.49999 9.49999 8.60456 9.49999 7.49999C9.49999 6.39542 8.60456 5.49999 7.49999 5.49999C6.39542 5.49999 5.49999 6.39542 5.49999 7.49999C5.49999 8.60456 6.39542 9.49999 7.49999 9.49999Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3D = ["color"];
var ReaderIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3D);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M4.2 1H4.17741H4.1774C3.86936 0.999988 3.60368 0.999978 3.38609 1.02067C3.15576 1.04257 2.92825 1.09113 2.71625 1.22104C2.51442 1.34472 2.34473 1.51442 2.22104 1.71625C2.09113 1.92825 2.04257 2.15576 2.02067 2.38609C1.99998 2.60367 1.99999 2.86935 2 3.17738V3.1774V3.2V11.8V11.8226V11.8226C1.99999 12.1307 1.99998 12.3963 2.02067 12.6139C2.04257 12.8442 2.09113 13.0717 2.22104 13.2837C2.34473 13.4856 2.51442 13.6553 2.71625 13.779C2.92825 13.9089 3.15576 13.9574 3.38609 13.9793C3.60368 14 3.86937 14 4.17741 14H4.2H10.8H10.8226C11.1306 14 11.3963 14 11.6139 13.9793C11.8442 13.9574 12.0717 13.9089 12.2837 13.779C12.4856 13.6553 12.6553 13.4856 12.779 13.2837C12.9089 13.0717 12.9574 12.8442 12.9793 12.6139C13 12.3963 13 12.1306 13 11.8226V11.8V3.2V3.17741C13 2.86936 13 2.60368 12.9793 2.38609C12.9574 2.15576 12.9089 1.92825 12.779 1.71625C12.6553 1.51442 12.4856 1.34472 12.2837 1.22104C12.0717 1.09113 11.8442 1.04257 11.6139 1.02067C11.3963 0.999978 11.1306 0.999988 10.8226 1H10.8H4.2ZM3.23875 2.07368C3.26722 2.05623 3.32362 2.03112 3.48075 2.01618C3.64532 2.00053 3.86298 2 4.2 2H10.8C11.137 2 11.3547 2.00053 11.5193 2.01618C11.6764 2.03112 11.7328 2.05623 11.7613 2.07368C11.8285 2.11491 11.8851 2.17147 11.9263 2.23875C11.9438 2.26722 11.9689 2.32362 11.9838 2.48075C11.9995 2.64532 12 2.86298 12 3.2V11.8C12 12.137 11.9995 12.3547 11.9838 12.5193C11.9689 12.6764 11.9438 12.7328 11.9263 12.7613C11.8851 12.8285 11.8285 12.8851 11.7613 12.9263C11.7328 12.9438 11.6764 12.9689 11.5193 12.9838C11.3547 12.9995 11.137 13 10.8 13H4.2C3.86298 13 3.64532 12.9995 3.48075 12.9838C3.32362 12.9689 3.26722 12.9438 3.23875 12.9263C3.17147 12.8851 3.11491 12.8285 3.07368 12.7613C3.05624 12.7328 3.03112 12.6764 3.01618 12.5193C3.00053 12.3547 3 12.137 3 11.8V3.2C3 2.86298 3.00053 2.64532 3.01618 2.48075C3.03112 2.32362 3.05624 2.26722 3.07368 2.23875C3.11491 2.17147 3.17147 2.11491 3.23875 2.07368ZM5 10C4.72386 10 4.5 10.2239 4.5 10.5C4.5 10.7761 4.72386 11 5 11H8C8.27614 11 8.5 10.7761 8.5 10.5C8.5 10.2239 8.27614 10 8 10H5ZM4.5 7.5C4.5 7.22386 4.72386 7 5 7H10C10.2761 7 10.5 7.22386 10.5 7.5C10.5 7.77614 10.2761 8 10 8H5C4.72386 8 4.5 7.77614 4.5 7.5ZM5 4C4.72386 4 4.5 4.22386 4.5 4.5C4.5 4.77614 4.72386 5 5 5H10C10.2761 5 10.5 4.77614 10.5 4.5C10.5 4.22386 10.2761 4 10 4H5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3E = ["color"];
var ReloadIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3E);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1.84998 7.49998C1.84998 4.66458 4.05979 1.84998 7.49998 1.84998C10.2783 1.84998 11.6515 3.9064 12.2367 5H10.5C10.2239 5 10 5.22386 10 5.5C10 5.77614 10.2239 6 10.5 6H13.5C13.7761 6 14 5.77614 14 5.5V2.5C14 2.22386 13.7761 2 13.5 2C13.2239 2 13 2.22386 13 2.5V4.31318C12.2955 3.07126 10.6659 0.849976 7.49998 0.849976C3.43716 0.849976 0.849976 4.18537 0.849976 7.49998C0.849976 10.8146 3.43716 14.15 7.49998 14.15C9.44382 14.15 11.0622 13.3808 12.2145 12.2084C12.8315 11.5806 13.3133 10.839 13.6418 10.0407C13.7469 9.78536 13.6251 9.49315 13.3698 9.38806C13.1144 9.28296 12.8222 9.40478 12.7171 9.66014C12.4363 10.3425 12.0251 10.9745 11.5013 11.5074C10.5295 12.4963 9.16504 13.15 7.49998 13.15C4.05979 13.15 1.84998 10.3354 1.84998 7.49998Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3F = ["color"];
var ResetIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3F);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M4.85355 2.14645C5.04882 2.34171 5.04882 2.65829 4.85355 2.85355L3.70711 4H9C11.4853 4 13.5 6.01472 13.5 8.5C13.5 10.9853 11.4853 13 9 13H5C4.72386 13 4.5 12.7761 4.5 12.5C4.5 12.2239 4.72386 12 5 12H9C10.933 12 12.5 10.433 12.5 8.5C12.5 6.567 10.933 5 9 5H3.70711L4.85355 6.14645C5.04882 6.34171 5.04882 6.65829 4.85355 6.85355C4.65829 7.04882 4.34171 7.04882 4.14645 6.85355L2.14645 4.85355C1.95118 4.65829 1.95118 4.34171 2.14645 4.14645L4.14645 2.14645C4.34171 1.95118 4.65829 1.95118 4.85355 2.14645Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3G = ["color"];
var ResumeIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3G);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.04995 2.74995C3.04995 2.44619 2.80371 2.19995 2.49995 2.19995C2.19619 2.19995 1.94995 2.44619 1.94995 2.74995V12.25C1.94995 12.5537 2.19619 12.8 2.49995 12.8C2.80371 12.8 3.04995 12.5537 3.04995 12.25V2.74995ZM5.73333 2.30776C5.57835 2.22596 5.39185 2.23127 5.24177 2.32176C5.0917 2.41225 4.99995 2.57471 4.99995 2.74995V12.25C4.99995 12.4252 5.0917 12.5877 5.24177 12.6781C5.39185 12.7686 5.57835 12.7739 5.73333 12.6921L14.7333 7.94214C14.8973 7.85559 15 7.68539 15 7.49995C15 7.31452 14.8973 7.14431 14.7333 7.05776L5.73333 2.30776ZM5.99995 11.4207V3.5792L13.4287 7.49995L5.99995 11.4207Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3H = ["color"];
var RocketIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3H);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M6.85357 3.85355L7.65355 3.05353C8.2981 2.40901 9.42858 1.96172 10.552 1.80125C11.1056 1.72217 11.6291 1.71725 12.0564 1.78124C12.4987 1.84748 12.7698 1.97696 12.8965 2.10357C13.0231 2.23018 13.1526 2.50125 13.2188 2.94357C13.2828 3.37086 13.2779 3.89439 13.1988 4.44801C13.0383 5.57139 12.591 6.70188 11.9464 7.34645L7.49999 11.7929L6.35354 10.6465C6.15827 10.4512 5.84169 10.4512 5.64643 10.6465C5.45117 10.8417 5.45117 11.1583 5.64643 11.3536L7.14644 12.8536C7.34171 13.0488 7.65829 13.0488 7.85355 12.8536L8.40073 12.3064L9.57124 14.2572C9.65046 14.3893 9.78608 14.4774 9.9389 14.4963C10.0917 14.5151 10.2447 14.4624 10.3535 14.3536L12.3535 12.3536C12.4648 12.2423 12.5172 12.0851 12.495 11.9293L12.0303 8.67679L12.6536 8.05355C13.509 7.19808 14.0117 5.82855 14.1887 4.58943C14.2784 3.9618 14.2891 3.33847 14.2078 2.79546C14.1287 2.26748 13.9519 1.74482 13.6035 1.39645C13.2552 1.04809 12.7325 0.871332 12.2045 0.792264C11.6615 0.710945 11.0382 0.721644 10.4105 0.8113C9.17143 0.988306 7.80189 1.491 6.94644 2.34642L6.32322 2.96968L3.07071 2.50504C2.91492 2.48278 2.75773 2.53517 2.64645 2.64646L0.646451 4.64645C0.537579 4.75533 0.484938 4.90829 0.50375 5.0611C0.522563 5.21391 0.61073 5.34954 0.742757 5.42876L2.69364 6.59928L2.14646 7.14645C2.0527 7.24022 2.00002 7.3674 2.00002 7.50001C2.00002 7.63261 2.0527 7.75979 2.14646 7.85356L3.64647 9.35356C3.84173 9.54883 4.15831 9.54883 4.35357 9.35356C4.54884 9.1583 4.54884 8.84172 4.35357 8.64646L3.20712 7.50001L3.85357 6.85356L6.85357 3.85355ZM10.0993 13.1936L9.12959 11.5775L11.1464 9.56067L11.4697 11.8232L10.0993 13.1936ZM3.42251 5.87041L5.43935 3.85356L3.17678 3.53034L1.80638 4.90074L3.42251 5.87041ZM2.35356 10.3535C2.54882 10.1583 2.54882 9.8417 2.35356 9.64644C2.1583 9.45118 1.84171 9.45118 1.64645 9.64644L0.646451 10.6464C0.451188 10.8417 0.451188 11.1583 0.646451 11.3535C0.841713 11.5488 1.1583 11.5488 1.35356 11.3535L2.35356 10.3535ZM3.85358 11.8536C4.04884 11.6583 4.04885 11.3417 3.85359 11.1465C3.65833 10.9512 3.34175 10.9512 3.14648 11.1465L1.14645 13.1464C0.95119 13.3417 0.951187 13.6583 1.14645 13.8535C1.34171 14.0488 1.65829 14.0488 1.85355 13.8536L3.85358 11.8536ZM5.35356 13.3535C5.54882 13.1583 5.54882 12.8417 5.35356 12.6464C5.1583 12.4512 4.84171 12.4512 4.64645 12.6464L3.64645 13.6464C3.45119 13.8417 3.45119 14.1583 3.64645 14.3535C3.84171 14.5488 4.1583 14.5488 4.35356 14.3535L5.35356 13.3535ZM9.49997 6.74881C10.1897 6.74881 10.7488 6.1897 10.7488 5.5C10.7488 4.8103 10.1897 4.25118 9.49997 4.25118C8.81026 4.25118 8.25115 4.8103 8.25115 5.5C8.25115 6.1897 8.81026 6.74881 9.49997 6.74881Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3I = ["color"];
var RotateCounterClockwiseIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3I);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.59664 2.93628C7.76085 3.06401 8.00012 2.94698 8.00012 2.73895V1.99998C9.98143 2 11.1848 2.3637 11.9105 3.08945C12.6363 3.81522 13 5.0186 13 6.99998C13 7.27613 13.2239 7.49998 13.5 7.49998C13.7761 7.49998 14 7.27613 14 6.99998C14 4.9438 13.6325 3.39719 12.6176 2.38234C11.6028 1.36752 10.0562 0.999999 8.00012 0.999984V0.261266C8.00012 0.0532293 7.76085 -0.0637944 7.59664 0.063928L6.00384 1.30277C5.87516 1.40286 5.87516 1.59735 6.00384 1.69744L7.59664 2.93628ZM9.5 5H2.5C2.22386 5 2 5.22386 2 5.5V12.5C2 12.7761 2.22386 13 2.5 13H9.5C9.77614 13 10 12.7761 10 12.5V5.5C10 5.22386 9.77614 5 9.5 5ZM2.5 4C1.67157 4 1 4.67157 1 5.5V12.5C1 13.3284 1.67157 14 2.5 14H9.5C10.3284 14 11 13.3284 11 12.5V5.5C11 4.67157 10.3284 4 9.5 4H2.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3J = ["color"];
var RowSpacingIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3J);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.81832 0.68179C7.64258 0.506054 7.35766 0.506054 7.18192 0.68179L5.18192 2.68179C5.00619 2.85753 5.00619 3.14245 5.18192 3.31819C5.35766 3.49392 5.64258 3.49392 5.81832 3.31819L7.05012 2.08638L7.05012 5.50023C7.05012 5.74876 7.25159 5.95023 7.50012 5.95023C7.74865 5.95023 7.95012 5.74876 7.95012 5.50023L7.95012 2.08638L9.18192 3.31819C9.35766 3.49392 9.64258 3.49392 9.81832 3.31819C9.99406 3.14245 9.99406 2.85753 9.81832 2.68179L7.81832 0.68179ZM7.95012 12.9136V9.50023C7.95012 9.2517 7.74865 9.05023 7.50012 9.05023C7.25159 9.05023 7.05012 9.2517 7.05012 9.50023V12.9136L5.81832 11.6818C5.64258 11.5061 5.35766 11.5061 5.18192 11.6818C5.00619 11.8575 5.00619 12.1424 5.18192 12.3182L7.18192 14.3182C7.26632 14.4026 7.38077 14.45 7.50012 14.45C7.61947 14.45 7.73393 14.4026 7.81832 14.3182L9.81832 12.3182C9.99406 12.1424 9.99406 11.8575 9.81832 11.6818C9.64258 11.5061 9.35766 11.5061 9.18192 11.6818L7.95012 12.9136ZM1.49994 7.00017C1.2238 7.00017 0.999939 7.22403 0.999939 7.50017C0.999939 7.77631 1.2238 8.00017 1.49994 8.00017L13.4999 8.00017C13.7761 8.00017 13.9999 7.77631 13.9999 7.50017C13.9999 7.22403 13.7761 7.00017 13.4999 7.00017L1.49994 7.00017Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3K = ["color"];
var RowsIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3K);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M14 12.85L1 12.85L1 14.15L14 14.15L14 12.85ZM14 8.85002L1 8.85002L1 10.15L14 10.15L14 8.85002ZM1 4.85003L14 4.85003L14 6.15003L1 6.15002L1 4.85003ZM14 0.850025L1 0.850025L1 2.15002L14 2.15002L14 0.850025Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3L = ["color"];
var RulerHorizontalIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3L);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M0.5 4C0.223858 4 0 4.22386 0 4.5V10.5C0 10.7761 0.223858 11 0.5 11H14.5C14.7761 11 15 10.7761 15 10.5V4.5C15 4.22386 14.7761 4 14.5 4H0.5ZM1 10V5H2.075V7.5C2.075 7.73472 2.26528 7.925 2.5 7.925C2.73472 7.925 2.925 7.73472 2.925 7.5V5H4.075V6.5C4.075 6.73472 4.26528 6.925 4.5 6.925C4.73472 6.925 4.925 6.73472 4.925 6.5V5H6.075V6.5C6.075 6.73472 6.26528 6.925 6.5 6.925C6.73472 6.925 6.925 6.73472 6.925 6.5V5H8.075V7.5C8.075 7.73472 8.26528 7.925 8.5 7.925C8.73472 7.925 8.925 7.73472 8.925 7.5V5H10.075V6.5C10.075 6.73472 10.2653 6.925 10.5 6.925C10.7347 6.925 10.925 6.73472 10.925 6.5V5H12.075V6.5C12.075 6.73472 12.2653 6.925 12.5 6.925C12.7347 6.925 12.925 6.73472 12.925 6.5V5H14V10H1Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3M = ["color"];
var RulerSquareIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3M);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M0.5 0C0.223858 0 0 0.223858 0 0.5V14.5C0 14.7761 0.223858 15 0.5 15H4.5C4.77614 15 5 14.7761 5 14.5V5H14.5C14.7761 5 15 4.77614 15 4.5V0.5C15 0.223858 14.7761 0 14.5 0H0.5ZM1 4.07505L1 1H4.07502C4.07502 1 4.07502 1 4.07502 1L4.07505 4.07507L1 4.07505ZM0.999997 4.92505L1 14H4V12.925H2.75002C2.5153 12.925 2.32502 12.7348 2.32502 12.5C2.32502 12.2653 2.5153 12.075 2.75002 12.075H4V10.925H2.25002C2.0153 10.925 1.82502 10.7347 1.82502 10.5C1.82502 10.2653 2.0153 10.075 2.25002 10.075H4V8.92504L2.75002 8.92502C2.5153 8.92502 2.32502 8.73474 2.32502 8.50002C2.32503 8.26529 2.51531 8.07502 2.75003 8.07502L4 8.07504V6.92502L2.74999 6.925C2.51527 6.925 2.325 6.73472 2.325 6.5C2.325 6.26528 2.51529 6.075 2.75001 6.075L4 6.07502V4.92507L0.999997 4.92505ZM4.92505 4H6.075V2.75006C6.075 2.51534 6.26528 2.32506 6.5 2.32506C6.73472 2.32506 6.925 2.51534 6.925 2.75006V4H8.07502V2.75005C8.07502 2.51533 8.2653 2.32505 8.50002 2.32505C8.73474 2.32505 8.92502 2.51533 8.92502 2.75005V4H10.0751V2.25005C10.0751 2.01533 10.2653 1.82505 10.5001 1.82505C10.7348 1.82505 10.9251 2.01533 10.9251 2.25005V4H12.0751V2.75005C12.0751 2.51533 12.2654 2.32505 12.5001 2.32505C12.7348 2.32505 12.9251 2.51533 12.9251 2.75005V4H14V1H4.92502L4.92505 4Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3N = ["color"];
var ScissorsIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3N);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M0.949988 4.48455C0.949988 5.34059 1.64395 6.03455 2.49999 6.03455C3.35603 6.03455 4.04999 5.34059 4.04999 4.48455C4.04999 3.6285 3.35603 2.93455 2.49999 2.93455C1.64395 2.93455 0.949988 3.6285 0.949988 4.48455ZM2.49999 6.93455C1.14689 6.93455 0.0499878 5.83764 0.0499878 4.48455C0.0499878 3.13145 1.14689 2.03455 2.49999 2.03455C3.85309 2.03455 4.94999 3.13145 4.94999 4.48455C4.94999 4.80813 4.88726 5.11707 4.77329 5.39985L5.73655 6.04413C5.72943 6.06656 5.72269 6.08914 5.71635 6.11188L5.56288 6.66186L5.21005 6.89773L4.21554 6.23366C3.77357 6.6672 3.168 6.93455 2.49999 6.93455ZM0.949991 10.5C0.949991 9.64394 1.64395 8.94998 2.49999 8.94998C3.35603 8.94998 4.04999 9.64394 4.04999 10.5C4.04999 11.356 3.35603 12.05 2.49999 12.05C1.64395 12.05 0.949991 11.356 0.949991 10.5ZM2.49999 8.04998C1.14689 8.04998 0.0499908 9.14688 0.0499908 10.5C0.0499908 11.8531 1.14689 12.95 2.49999 12.95C3.85309 12.95 4.94999 11.8531 4.94999 10.5C4.94999 10.1803 4.88877 9.87497 4.77743 9.595L15 2.75737L14.0486 2.85737C12.7077 2.9983 11.4091 3.40895 10.231 4.06461L7.15646 5.77564C6.92307 5.90553 6.75134 6.12339 6.67955 6.38066L6.42653 7.28737L4.22437 8.75957C3.78166 8.32091 3.17246 8.04998 2.49999 8.04998ZM7.14435 9.2149L7.15646 9.22176L10.231 10.9328C11.4091 11.5884 12.7077 11.9991 14.0486 12.14L15 12.24L8.81072 8.1003L7.14435 9.2149Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3O = ["color"];
var SectionIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3O);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M2 1.5C2 1.77614 1.77614 2 1.5 2C1.22386 2 1 1.77614 1 1.5C1 1.22386 1.22386 1 1.5 1C1.77614 1 2 1.22386 2 1.5ZM2 5L2 10H13V5H2ZM2 4C1.44772 4 1 4.44772 1 5V10C1 10.5523 1.44772 11 2 11H13C13.5523 11 14 10.5523 14 10V5C14 4.44772 13.5523 4 13 4H2ZM1.5 14C1.77614 14 2 13.7761 2 13.5C2 13.2239 1.77614 13 1.5 13C1.22386 13 1 13.2239 1 13.5C1 13.7761 1.22386 14 1.5 14ZM4 1.5C4 1.77614 3.77614 2 3.5 2C3.22386 2 3 1.77614 3 1.5C3 1.22386 3.22386 1 3.5 1C3.77614 1 4 1.22386 4 1.5ZM3.5 14C3.77614 14 4 13.7761 4 13.5C4 13.2239 3.77614 13 3.5 13C3.22386 13 3 13.2239 3 13.5C3 13.7761 3.22386 14 3.5 14ZM6 1.5C6 1.77614 5.77614 2 5.5 2C5.22386 2 5 1.77614 5 1.5C5 1.22386 5.22386 1 5.5 1C5.77614 1 6 1.22386 6 1.5ZM5.5 14C5.77614 14 6 13.7761 6 13.5C6 13.2239 5.77614 13 5.5 13C5.22386 13 5 13.2239 5 13.5C5 13.7761 5.22386 14 5.5 14ZM8 1.5C8 1.77614 7.77614 2 7.5 2C7.22386 2 7 1.77614 7 1.5C7 1.22386 7.22386 1 7.5 1C7.77614 1 8 1.22386 8 1.5ZM7.5 14C7.77614 14 8 13.7761 8 13.5C8 13.2239 7.77614 13 7.5 13C7.22386 13 7 13.2239 7 13.5C7 13.7761 7.22386 14 7.5 14ZM10 1.5C10 1.77614 9.77614 2 9.5 2C9.22386 2 9 1.77614 9 1.5C9 1.22386 9.22386 1 9.5 1C9.77614 1 10 1.22386 10 1.5ZM9.5 14C9.77614 14 10 13.7761 10 13.5C10 13.2239 9.77614 13 9.5 13C9.22386 13 9 13.2239 9 13.5C9 13.7761 9.22386 14 9.5 14ZM12 1.5C12 1.77614 11.7761 2 11.5 2C11.2239 2 11 1.77614 11 1.5C11 1.22386 11.2239 1 11.5 1C11.7761 1 12 1.22386 12 1.5ZM11.5 14C11.7761 14 12 13.7761 12 13.5C12 13.2239 11.7761 13 11.5 13C11.2239 13 11 13.2239 11 13.5C11 13.7761 11.2239 14 11.5 14ZM14 1.5C14 1.77614 13.7761 2 13.5 2C13.2239 2 13 1.77614 13 1.5C13 1.22386 13.2239 1 13.5 1C13.7761 1 14 1.22386 14 1.5ZM13.5 14C13.7761 14 14 13.7761 14 13.5C14 13.2239 13.7761 13 13.5 13C13.2239 13 13 13.2239 13 13.5C13 13.7761 13.2239 14 13.5 14Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3P = ["color"];
var SewingPinIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3P);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M6 3.5C6 2.67157 6.67157 2 7.5 2C8.32843 2 9 2.67157 9 3.5C9 4.32843 8.32843 5 7.5 5C6.67157 5 6 4.32843 6 3.5ZM8 5.94999C9.14112 5.71836 10 4.70948 10 3.5C10 2.11929 8.88071 1 7.5 1C6.11929 1 5 2.11929 5 3.5C5 4.70948 5.85888 5.71836 7 5.94999V13.5C7 13.7761 7.22386 14 7.5 14C7.77614 14 8 13.7761 8 13.5V5.94999Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3Q = ["color"];
var SewingPinFilledIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3Q);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M10 3.5C10 4.70948 9.14112 5.71836 8 5.94999V13.5C8 13.7761 7.77614 14 7.5 14C7.22386 14 7 13.7761 7 13.5V5.94999C5.85888 5.71836 5 4.70948 5 3.5C5 2.11929 6.11929 1 7.5 1C8.88071 1 10 2.11929 10 3.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3R = ["color"];
var ShadowIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3R);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    opacity: ".05",
    d: "M6.78296 13.376C8.73904 9.95284 8.73904 5.04719 6.78296 1.62405L7.21708 1.37598C9.261 4.95283 9.261 10.0472 7.21708 13.624L6.78296 13.376Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".1",
    d: "M7.28204 13.4775C9.23929 9.99523 9.23929 5.00475 7.28204 1.52248L7.71791 1.2775C9.76067 4.9119 9.76067 10.0881 7.71791 13.7225L7.28204 13.4775Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".15",
    d: "M7.82098 13.5064C9.72502 9.99523 9.72636 5.01411 7.82492 1.50084L8.26465 1.26285C10.2465 4.92466 10.2451 10.085 8.26052 13.7448L7.82098 13.5064Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".2",
    d: "M8.41284 13.429C10.1952 9.92842 10.1957 5.07537 8.41435 1.57402L8.85999 1.34729C10.7139 4.99113 10.7133 10.0128 8.85841 13.6559L8.41284 13.429Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".25",
    d: "M9.02441 13.2956C10.6567 9.8379 10.6586 5.17715 9.03005 1.71656L9.48245 1.50366C11.1745 5.09919 11.1726 9.91629 9.47657 13.5091L9.02441 13.2956Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".3",
    d: "M9.66809 13.0655C11.1097 9.69572 11.1107 5.3121 9.67088 1.94095L10.1307 1.74457C11.6241 5.24121 11.6231 9.76683 10.1278 13.2622L9.66809 13.0655Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".35",
    d: "M10.331 12.7456C11.5551 9.52073 11.5564 5.49103 10.3347 2.26444L10.8024 2.0874C12.0672 5.42815 12.0659 9.58394 10.7985 12.9231L10.331 12.7456Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".4",
    d: "M11.0155 12.2986C11.9938 9.29744 11.9948 5.71296 11.0184 2.71067L11.4939 2.55603C12.503 5.6589 12.502 9.35178 11.4909 12.4535L11.0155 12.2986Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".45",
    d: "M11.7214 11.668C12.4254 9.01303 12.4262 5.99691 11.7237 3.34116L12.2071 3.21329C12.9318 5.95292 12.931 9.05728 12.2047 11.7961L11.7214 11.668Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".5",
    d: "M12.4432 10.752C12.8524 8.63762 12.8523 6.36089 12.4429 4.2466L12.9338 4.15155C13.3553 6.32861 13.3554 8.66985 12.9341 10.847L12.4432 10.752Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    d: "M0.877075 7.49988C0.877075 3.84219 3.84222 0.877045 7.49991 0.877045C11.1576 0.877045 14.1227 3.84219 14.1227 7.49988C14.1227 11.1575 11.1576 14.1227 7.49991 14.1227C3.84222 14.1227 0.877075 11.1575 0.877075 7.49988ZM7.49991 1.82704C4.36689 1.82704 1.82708 4.36686 1.82708 7.49988C1.82708 10.6329 4.36689 13.1727 7.49991 13.1727C10.6329 13.1727 13.1727 10.6329 13.1727 7.49988C13.1727 4.36686 10.6329 1.82704 7.49991 1.82704Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3S = ["color"];
var ShadowInnerIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3S);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    opacity: ".05",
    d: "M12.1619 3.85182C8.35817 4.88918 4.88936 8.358 3.85199 12.1617L3.3696 12.0301C4.45356 8.05564 8.05581 4.45339 12.0303 3.36943L12.1619 3.85182Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".1",
    d: "M11.8807 3.42707C8.03441 4.50542 4.50561 8.03422 3.42726 11.8805L2.94582 11.7456C4.07129 7.73121 7.7314 4.0711 11.7458 2.94563L11.8807 3.42707Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".15",
    d: "M11.5201 3.02556C7.69092 4.16199 4.16779 7.68323 3.02805 11.512L2.54883 11.3694C3.73676 7.37869 7.38659 3.73076 11.3778 2.54623L11.5201 3.02556Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".2",
    d: "M11.0468 2.66169C7.31117 3.87664 3.87918 7.3079 2.66298 11.0434L2.18754 10.8886C3.45324 7.00109 7.00445 3.45062 10.8921 2.18621L11.0468 2.66169Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".25",
    d: "M10.5201 2.32365C6.92091 3.61447 3.62391 6.90876 2.32845 10.5073L1.858 10.338C3.20398 6.59909 6.61155 3.19424 10.3513 1.85301L10.5201 2.32365Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".3",
    d: "M9.90222 2.03122C6.50003 3.39465 3.39968 6.49367 2.03399 9.89551L1.56998 9.70924C2.98651 6.18076 6.18728 2.98133 9.71622 1.5671L9.90222 2.03122Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".35",
    d: "M9.20727 1.78873C6.06136 3.20349 3.21103 6.05203 1.79331 9.19738L1.33747 8.99192C2.80536 5.73528 5.74485 2.7976 9.0022 1.33272L9.20727 1.78873Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".4",
    d: "M8.40713 1.62085C5.59323 3.05117 3.05794 5.58509 1.62544 8.39847L1.17987 8.1716C2.66036 5.26397 5.27232 2.6534 8.18057 1.17513L8.40713 1.62085Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".45",
    d: "M7.46207 1.56747C5.08689 2.94695 2.95362 5.07912 1.57249 7.45379L1.14028 7.20241C2.56503 4.75273 4.7607 2.55818 7.21096 1.1351L7.46207 1.56747Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".5",
    d: "M6.30407 1.70487C4.51964 2.91063 2.90983 4.52061 1.7043 6.30513L1.28998 6.02524C2.5313 4.18773 4.18673 2.53214 6.02413 1.29059L6.30407 1.70487Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    d: "M0.877075 7.49988C0.877075 3.84219 3.84222 0.877045 7.49991 0.877045C11.1576 0.877045 14.1227 3.84219 14.1227 7.49988C14.1227 11.1575 11.1576 14.1227 7.49991 14.1227C3.84222 14.1227 0.877075 11.1575 0.877075 7.49988ZM7.49991 1.82704C4.36689 1.82704 1.82708 4.36686 1.82708 7.49988C1.82708 10.6329 4.36689 13.1727 7.49991 13.1727C10.6329 13.1727 13.1727 10.6329 13.1727 7.49988C13.1727 4.36686 10.6329 1.82704 7.49991 1.82704Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3T = ["color"];
var ShadowNoneIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3T);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    opacity: ".05",
    d: "M6.78296 13.376C8.73904 9.95284 8.73904 5.04719 6.78296 1.62405L7.21708 1.37598C9.261 4.95283 9.261 10.0472 7.21708 13.624L6.78296 13.376Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".1",
    d: "M7.28204 13.4775C9.23929 9.99523 9.23929 5.00475 7.28204 1.52248L7.71791 1.2775C9.76067 4.9119 9.76067 10.0881 7.71791 13.7225L7.28204 13.4775Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".15",
    d: "M7.82098 13.5064C9.72502 9.99523 9.72636 5.01411 7.82492 1.50084L8.26465 1.26285C10.2465 4.92466 10.2451 10.085 8.26052 13.7448L7.82098 13.5064Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".2",
    d: "M8.41284 13.429C10.1952 9.92842 10.1957 5.07537 8.41435 1.57402L8.85999 1.34729C10.7139 4.99113 10.7133 10.0128 8.85841 13.6559L8.41284 13.429Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".25",
    d: "M9.02441 13.2956C10.6567 9.8379 10.6586 5.17715 9.03005 1.71656L9.48245 1.50366C11.1745 5.09919 11.1726 9.91629 9.47657 13.5091L9.02441 13.2956Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".3",
    d: "M9.66809 13.0655C11.1097 9.69572 11.1107 5.3121 9.67088 1.94095L10.1307 1.74457C11.6241 5.24121 11.6231 9.76683 10.1278 13.2622L9.66809 13.0655Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".35",
    d: "M10.331 12.7456C11.5551 9.52073 11.5564 5.49103 10.3347 2.26444L10.8024 2.0874C12.0672 5.42815 12.0659 9.58394 10.7985 12.9231L10.331 12.7456Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".4",
    d: "M11.0155 12.2986C11.9938 9.29744 11.9948 5.71296 11.0184 2.71067L11.4939 2.55603C12.503 5.6589 12.502 9.35178 11.4909 12.4535L11.0155 12.2986Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".45",
    d: "M11.7214 11.668C12.4254 9.01303 12.4262 5.99691 11.7237 3.34116L12.2071 3.21329C12.9318 5.95292 12.931 9.05728 12.2047 11.7961L11.7214 11.668Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".5",
    d: "M12.4432 10.752C12.8524 8.63762 12.8523 6.36089 12.4429 4.2466L12.9338 4.15155C13.3553 6.32861 13.3554 8.66985 12.9341 10.847L12.4432 10.752Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    d: "M7.49991 0.877045C3.84222 0.877045 0.877075 3.84219 0.877075 7.49988C0.877075 9.1488 1.47969 10.657 2.4767 11.8162L1.64647 12.6464C1.45121 12.8417 1.45121 13.1583 1.64647 13.3535C1.84173 13.5488 2.15832 13.5488 2.35358 13.3535L3.18383 12.5233C4.34302 13.5202 5.8511 14.1227 7.49991 14.1227C11.1576 14.1227 14.1227 11.1575 14.1227 7.49988C14.1227 5.85107 13.5202 4.34298 12.5233 3.1838L13.3536 2.35355C13.5488 2.15829 13.5488 1.8417 13.3536 1.64644C13.1583 1.45118 12.8417 1.45118 12.6465 1.64644L11.8162 2.47667C10.657 1.47966 9.14883 0.877045 7.49991 0.877045ZM11.1423 3.15065C10.1568 2.32449 8.88644 1.82704 7.49991 1.82704C4.36689 1.82704 1.82708 4.36686 1.82708 7.49988C1.82708 8.88641 2.32452 10.1568 3.15069 11.1422L11.1423 3.15065ZM3.85781 11.8493C4.84322 12.6753 6.11348 13.1727 7.49991 13.1727C10.6329 13.1727 13.1727 10.6329 13.1727 7.49988C13.1727 6.11345 12.6754 4.84319 11.8493 3.85778L3.85781 11.8493Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3U = ["color"];
var ShadowOuterIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3U);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    opacity: ".05",
    d: "M12.1398 3.88617C13.8553 4.94159 15 6.83701 15 9.00001C15 12.3137 12.3137 15 9.00002 15C6.84351 15 4.95296 13.8621 3.89569 12.1552L4.32076 11.8919C5.29069 13.4578 7.02376 14.5 9.00002 14.5C12.0376 14.5 14.5 12.0375 14.5 9.00001C14.5 7.01781 13.4516 5.28027 11.8778 4.31203L12.1398 3.88617Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".2",
    d: "M12.851 5.07321C13.8684 6.07106 14.5 7.46199 14.5 9C14.5 12.0375 12.0376 14.5 9.00004 14.5C7.46215 14.5 6.07132 13.8685 5.07349 12.8513L5.43043 12.5011C6.3381 13.4264 7.60186 14 9.00004 14C11.7614 14 14 11.7614 14 9C14 7.60171 13.4264 6.33786 12.5009 5.43017L12.851 5.07321Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".35",
    d: "M13.3022 6.45071C13.7455 7.19737 14 8.06935 14 9.00001C14 11.7614 11.7614 14 9.00002 14C8.04868 14 7.15868 13.7341 6.40118 13.2724L6.66142 12.8454C7.34275 13.2607 8.14306 13.5 9.00002 13.5C11.4853 13.5 13.5 11.4853 13.5 9.00001C13.5 8.16165 13.271 7.37754 12.8722 6.70599L13.3022 6.45071Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".5",
    d: "M13.3745 7.94022C13.4566 8.28031 13.5 8.63525 13.5 9.00001C13.5 11.4853 11.4853 13.5 9.00003 13.5C8.61104 13.5 8.23323 13.4506 7.87268 13.3576L7.99759 12.8734C8.31768 12.956 8.65353 13 9.00003 13C11.2091 13 13 11.2091 13 9.00001C13 8.67509 12.9613 8.35953 12.8884 8.05757L13.3745 7.94022Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    opacity: ".65",
    d: "M12.9155 9.82133C12.5898 11.3813 11.3562 12.6072 9.79205 12.9215L9.69354 12.4313C11.0613 12.1565 12.1413 11.0834 12.4261 9.71915L12.9155 9.82133Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react7.createElement)("path", {
    d: "M1.2771 7.50253C1.2771 4.06456 4.06413 1.27753 7.5021 1.27753C10.94 1.27753 13.7271 4.06456 13.7271 7.50253C13.7271 10.9405 10.94 13.7275 7.5021 13.7275C4.06413 13.7275 1.2771 10.9405 1.2771 7.50253ZM7.5021 2.22753C4.5888 2.22753 2.2271 4.58923 2.2271 7.50253C2.2271 10.4158 4.5888 12.7775 7.5021 12.7775C10.4154 12.7775 12.7771 10.4158 12.7771 7.50253C12.7771 4.58923 10.4154 2.22753 7.5021 2.22753Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3V = ["color"];
var Share1Icon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3V);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M5 7.50003C5 8.32845 4.32843 9.00003 3.5 9.00003C2.67157 9.00003 2 8.32845 2 7.50003C2 6.6716 2.67157 6.00003 3.5 6.00003C4.32843 6.00003 5 6.6716 5 7.50003ZM5.71313 8.66388C5.29445 9.45838 4.46048 10 3.5 10C2.11929 10 1 8.88074 1 7.50003C1 6.11931 2.11929 5.00003 3.5 5.00003C4.46048 5.00003 5.29445 5.54167 5.71313 6.33616L9.10424 4.21671C9.03643 3.98968 9 3.74911 9 3.50003C9 2.11932 10.1193 1.00003 11.5 1.00003C12.8807 1.00003 14 2.11932 14 3.50003C14 4.88074 12.8807 6.00003 11.5 6.00003C10.6915 6.00003 9.97264 5.61624 9.51566 5.0209L5.9853 7.22738C5.99502 7.31692 6 7.40789 6 7.50003C6 7.59216 5.99502 7.68312 5.9853 7.77267L9.51567 9.97915C9.97265 9.38382 10.6915 9.00003 11.5 9.00003C12.8807 9.00003 14 10.1193 14 11.5C14 12.8807 12.8807 14 11.5 14C10.1193 14 9 12.8807 9 11.5C9 11.2509 9.03643 11.0104 9.10425 10.7833L5.71313 8.66388ZM11.5 5.00003C12.3284 5.00003 13 4.32846 13 3.50003C13 2.6716 12.3284 2.00003 11.5 2.00003C10.6716 2.00003 10 2.6716 10 3.50003C10 4.32846 10.6716 5.00003 11.5 5.00003ZM13 11.5C13 12.3285 12.3284 13 11.5 13C10.6716 13 10 12.3285 10 11.5C10 10.6716 10.6716 10 11.5 10C12.3284 10 13 10.6716 13 11.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3W = ["color"];
var Share2Icon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3W);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.5 5.00006C3.22386 5.00006 3 5.22392 3 5.50006L3 11.5001C3 11.7762 3.22386 12.0001 3.5 12.0001L11.5 12.0001C11.7761 12.0001 12 11.7762 12 11.5001L12 5.50006C12 5.22392 11.7761 5.00006 11.5 5.00006L10.25 5.00006C9.97386 5.00006 9.75 4.7762 9.75 4.50006C9.75 4.22392 9.97386 4.00006 10.25 4.00006L11.5 4.00006C12.3284 4.00006 13 4.67163 13 5.50006L13 11.5001C13 12.3285 12.3284 13.0001 11.5 13.0001L3.5 13.0001C2.67157 13.0001 2 12.3285 2 11.5001L2 5.50006C2 4.67163 2.67157 4.00006 3.5 4.00006L4.75 4.00006C5.02614 4.00006 5.25 4.22392 5.25 4.50006C5.25 4.7762 5.02614 5.00006 4.75 5.00006L3.5 5.00006ZM7 1.6364L5.5682 3.0682C5.39246 3.24393 5.10754 3.24393 4.9318 3.0682C4.75607 2.89246 4.75607 2.60754 4.9318 2.4318L7.1818 0.181802C7.26619 0.09741 7.38065 0.049999 7.5 0.049999C7.61935 0.049999 7.73381 0.09741 7.8182 0.181802L10.0682 2.4318C10.2439 2.60754 10.2439 2.89246 10.0682 3.0682C9.89246 3.24393 9.60754 3.24393 9.4318 3.0682L8 1.6364L8 8.5C8 8.77614 7.77614 9 7.5 9C7.22386 9 7 8.77614 7 8.5L7 1.6364Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3X = ["color"];
var ShuffleIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3X);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M12.3536 1.14645C12.1583 0.951184 11.8417 0.951184 11.6464 1.14645C11.4512 1.34171 11.4512 1.65829 11.6464 1.85355L12.7929 3H12C10.7037 3 9.71111 3.58423 8.87248 4.38931C8.20065 5.03427 7.59349 5.85684 6.99461 6.6682C6.86287 6.84668 6.73154 7.02462 6.6 7.2C5.10874 9.18835 3.49037 11 0.5 11C0.223858 11 0 11.2239 0 11.5C0 11.7761 0.223858 12 0.5 12C4.00963 12 5.89126 9.81165 7.4 7.8C7.54367 7.60845 7.6832 7.41962 7.81996 7.23454L7.82005 7.23443L7.82006 7.23441C8.41674 6.42695 8.96069 5.69085 9.56502 5.11069C10.2889 4.41577 11.0463 4 12 4H12.7929L11.6464 5.14645C11.4512 5.34171 11.4512 5.65829 11.6464 5.85355C11.8417 6.04882 12.1583 6.04882 12.3536 5.85355L14.3536 3.85355C14.5488 3.65829 14.5488 3.34171 14.3536 3.14645L12.3536 1.14645ZM0.5 3C3.35278 3 5.12992 4.44588 6.50548 6.06746L6.3762 6.24266C6.2483 6.4161 6.12293 6.58609 6 6.75C5.96397 6.79804 5.92798 6.84581 5.892 6.89331C4.57348 5.29306 3.02637 4 0.5 4C0.223858 4 0 3.77614 0 3.5C0 3.22386 0.223858 3 0.5 3ZM8.87248 10.6107C8.37284 10.131 7.90897 9.55314 7.45767 8.95468C7.64688 8.71693 7.82704 8.48061 8 8.25L8.08987 8.12987C8.58412 8.79402 9.05288 9.39766 9.56502 9.88931C10.2889 10.5842 11.0463 11 12 11H12.7929L11.6464 9.85355C11.4512 9.65829 11.4512 9.34171 11.6464 9.14645C11.8417 8.95118 12.1583 8.95118 12.3536 9.14645L14.3536 11.1464C14.5488 11.3417 14.5488 11.6583 14.3536 11.8536L12.3536 13.8536C12.1583 14.0488 11.8417 14.0488 11.6464 13.8536C11.4512 13.6583 11.4512 13.3417 11.6464 13.1464L12.7929 12H12C10.7037 12 9.71111 11.4158 8.87248 10.6107Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3Y = ["color"];
var SizeIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3Y);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M11.5 3.04999C11.7485 3.04999 11.95 3.25146 11.95 3.49999V7.49999C11.95 7.74852 11.7485 7.94999 11.5 7.94999C11.2515 7.94999 11.05 7.74852 11.05 7.49999V4.58639L4.58638 11.05H7.49999C7.74852 11.05 7.94999 11.2515 7.94999 11.5C7.94999 11.7485 7.74852 11.95 7.49999 11.95L3.49999 11.95C3.38064 11.95 3.26618 11.9026 3.18179 11.8182C3.0974 11.7338 3.04999 11.6193 3.04999 11.5L3.04999 7.49999C3.04999 7.25146 3.25146 7.04999 3.49999 7.04999C3.74852 7.04999 3.94999 7.25146 3.94999 7.49999L3.94999 10.4136L10.4136 3.94999L7.49999 3.94999C7.25146 3.94999 7.04999 3.74852 7.04999 3.49999C7.04999 3.25146 7.25146 3.04999 7.49999 3.04999L11.5 3.04999Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3Z = ["color"];
var SketchLogoIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3Z);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.53731 0.826873C7.5125 0.824392 7.4875 0.824392 7.46269 0.826873L3.96269 1.17687C3.85672 1.18747 3.76025 1.24262 3.69736 1.32857L0.699771 5.42528C0.654046 5.48627 0.62647 5.56165 0.625057 5.6434C0.625019 5.6456 0.625 5.64781 0.625 5.65001C0.625 5.65052 0.625001 5.65103 0.625003 5.65153C0.625363 5.74237 0.658021 5.82559 0.712087 5.8903L7.21042 13.7883C7.28165 13.8749 7.38789 13.925 7.5 13.925C7.61211 13.925 7.71835 13.8749 7.78958 13.7883L14.2879 5.89031C14.342 5.8256 14.3746 5.74237 14.375 5.65153C14.375 5.65103 14.375 5.65052 14.375 5.65001C14.375 5.64849 14.375 5.64697 14.375 5.64545C14.3749 5.63963 14.3747 5.63382 14.3744 5.62801C14.37 5.55219 14.3431 5.48242 14.3002 5.42527L11.3026 1.32857C11.2397 1.24262 11.1433 1.18747 11.0373 1.17687L7.53731 0.826873ZM10.925 5.27501V5.25236L10.9223 5.27501H10.925ZM10.9342 5.17498H13.1877L11.2495 2.5261L10.9342 5.17498ZM10.5707 1.88395L8.04432 1.63131L10.1747 5.21034L10.5707 1.88395ZM6.95568 1.63131L4.42931 1.88395L4.82531 5.21034L6.95568 1.63131ZM3.75046 2.5261L1.81226 5.17498H4.0658L3.75046 2.5261ZM1.79416 6.02501L6.75861 12.0587L4.22371 6.0669C4.21787 6.0531 4.21314 6.0391 4.20949 6.02501H1.79416ZM5.15055 6.02501L7.49999 12.1085L9.84943 6.02501H9.78681H5.21319H5.15055ZM10.7905 6.02501C10.7869 6.0391 10.7821 6.0531 10.7763 6.0669L8.24139 12.0587L13.2058 6.02501H10.7905ZM7.5 2.18317L9.34038 5.27501H5.65962L7.5 2.18317Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3_ = ["color"];
var SlashIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3_);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M4.10876 14L9.46582 1H10.8178L5.46074 14H4.10876Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3$ = ["color"];
var SliderIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$3$);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M10.3004 7.49991C10.3004 8.4943 9.49426 9.30041 8.49988 9.30041C7.50549 9.30041 6.69938 8.4943 6.69938 7.49991C6.69938 6.50553 7.50549 5.69942 8.49988 5.69942C9.49426 5.69942 10.3004 6.50553 10.3004 7.49991ZM11.205 8C10.9699 9.28029 9.84816 10.2504 8.49988 10.2504C7.1516 10.2504 6.0299 9.28029 5.79473 8H0.5C0.223858 8 0 7.77614 0 7.5C0 7.22386 0.223858 7 0.5 7H5.7947C6.0298 5.71962 7.15154 4.74942 8.49988 4.74942C9.84822 4.74942 10.97 5.71962 11.2051 7H14.5C14.7761 7 15 7.22386 15 7.5C15 7.77614 14.7761 8 14.5 8H11.205Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$40 = ["color"];
var SpaceBetweenHorizontallyIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$40);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M14.4999 0.999994C14.2237 0.999994 13.9999 1.22385 13.9999 1.49999L13.9999 5.99995L9.99992 5.99995C9.44764 5.99995 8.99993 6.44766 8.99993 6.99994L8.99993 7.99994C8.99993 8.55222 9.44764 8.99993 9.99992 8.99993L13.9999 8.99993L13.9999 13.4999C13.9999 13.776 14.2237 13.9999 14.4999 13.9999C14.776 13.9999 14.9999 13.776 14.9999 13.4999L14.9999 1.49999C14.9999 1.22385 14.776 0.999994 14.4999 0.999994ZM4.99996 5.99995L0.999992 5.99995L0.999992 1.49999C0.999992 1.22385 0.776136 0.999994 0.499996 0.999994C0.223856 0.999994 -9.7852e-09 1.22385 -2.18557e-08 1.49999L4.07279e-07 13.4999C3.95208e-07 13.776 0.223855 13.9999 0.499996 13.9999C0.776136 13.9999 0.999992 13.776 0.999992 13.4999L0.999992 8.99993L4.99996 8.99993C5.55224 8.99993 5.99995 8.55222 5.99995 7.99993L5.99995 6.99994C5.99995 6.44766 5.55224 5.99995 4.99996 5.99995Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$41 = ["color"];
var SpaceBetweenVerticallyIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$41);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M0.999878 0.5C0.999878 0.223858 1.22374 0 1.49988 0H13.4999C13.776 0 13.9999 0.223858 13.9999 0.5C13.9999 0.776142 13.776 1 13.4999 1L9 1V5C9 5.55228 8.55228 6 8 6H7C6.44772 6 6 5.55228 6 5V1H1.49988C1.22374 1 0.999878 0.776142 0.999878 0.5ZM7 9C6.44772 9 6 9.44771 6 10V14H1.49988C1.22374 14 0.999878 14.2239 0.999878 14.5C0.999878 14.7761 1.22374 15 1.49988 15H13.4999C13.776 15 13.9999 14.7761 13.9999 14.5C13.9999 14.2239 13.776 14 13.4999 14H9V10C9 9.44772 8.55228 9 8 9H7Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$42 = ["color"];
var SpaceEvenlyHorizontallyIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$42);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M14.4999 0.999992C14.2237 0.999992 13.9999 1.22385 13.9999 1.49999L13.9999 13.4999C13.9999 13.776 14.2237 13.9999 14.4999 13.9999C14.776 13.9999 14.9999 13.776 14.9999 13.4999L14.9999 1.49999C14.9999 1.22385 14.776 0.999992 14.4999 0.999992ZM0.499996 0.999992C0.223856 0.999992 -9.78509e-09 1.22385 -2.18556e-08 1.49999L4.07279e-07 13.4999C3.95208e-07 13.776 0.223855 13.9999 0.499996 13.9999C0.776136 13.9999 0.999992 13.776 0.999992 13.4999L0.999992 1.49999C0.999992 1.22385 0.776136 0.999992 0.499996 0.999992ZM1.99998 6.99994C1.99998 6.44766 2.44769 5.99995 2.99998 5.99995L5.99995 5.99995C6.55223 5.99995 6.99994 6.44766 6.99994 6.99994L6.99994 7.99993C6.99994 8.55221 6.55223 8.99992 5.99995 8.99992L2.99998 8.99992C2.4477 8.99992 1.99998 8.55221 1.99998 7.99993L1.99998 6.99994ZM8.99993 5.99995C8.44765 5.99995 7.99993 6.44766 7.99993 6.99994L7.99993 7.99993C7.99993 8.55221 8.44765 8.99992 8.99993 8.99992L11.9999 8.99992C12.5522 8.99992 12.9999 8.55221 12.9999 7.99993L12.9999 6.99994C12.9999 6.44766 12.5522 5.99995 11.9999 5.99995L8.99993 5.99995Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$43 = ["color"];
var SpaceEvenlyVerticallyIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$43);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M0.999878 0.5C0.999878 0.223858 1.22374 0 1.49988 0H13.4999C13.776 0 13.9999 0.223858 13.9999 0.5C13.9999 0.776142 13.776 1 13.4999 1H1.49988C1.22374 1 0.999878 0.776142 0.999878 0.5ZM7 2C6.44772 2 6 2.44772 6 3V6C6 6.55228 6.44772 7 7 7H8C8.55228 7 9 6.55228 9 6V3C9 2.44772 8.55228 2 8 2H7ZM7 8C6.44772 8 6 8.44771 6 9V12C6 12.5523 6.44772 13 7 13H8C8.55228 13 9 12.5523 9 12V9C9 8.44772 8.55228 8 8 8H7ZM1.49988 14C1.22374 14 0.999878 14.2239 0.999878 14.5C0.999878 14.7761 1.22374 15 1.49988 15H13.4999C13.776 15 13.9999 14.7761 13.9999 14.5C13.9999 14.2239 13.776 14 13.4999 14H1.49988Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$44 = ["color"];
var SpeakerLoudIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$44);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.46968 1.05085C7.64122 1.13475 7.75 1.30904 7.75 1.5V13.5C7.75 13.691 7.64122 13.8653 7.46968 13.9492C7.29813 14.0331 7.09377 14.0119 6.94303 13.8947L3.2213 11H1.5C0.671571 11 0 10.3284 0 9.5V5.5C0 4.67158 0.671573 4 1.5 4H3.2213L6.94303 1.10533C7.09377 0.988085 7.29813 0.966945 7.46968 1.05085ZM6.75 2.52232L3.69983 4.89468C3.61206 4.96294 3.50405 5 3.39286 5H1.5C1.22386 5 1 5.22386 1 5.5V9.5C1 9.77615 1.22386 10 1.5 10H3.39286C3.50405 10 3.61206 10.0371 3.69983 10.1053L6.75 12.4777V2.52232ZM10.2784 3.84804C10.4623 3.72567 10.7106 3.77557 10.833 3.95949C12.2558 6.09798 12.2558 8.90199 10.833 11.0405C10.7106 11.2244 10.4623 11.2743 10.2784 11.1519C10.0944 11.0296 10.0445 10.7813 10.1669 10.5973C11.4111 8.72728 11.4111 6.27269 10.1669 4.40264C10.0445 4.21871 10.0944 3.97041 10.2784 3.84804ZM12.6785 1.43044C12.5356 1.2619 12.2832 1.24104 12.1147 1.38386C11.9462 1.52667 11.9253 1.77908 12.0681 1.94762C14.7773 5.14488 14.7773 9.85513 12.0681 13.0524C11.9253 13.2209 11.9462 13.4733 12.1147 13.6161C12.2832 13.759 12.5356 13.7381 12.6785 13.5696C15.6406 10.0739 15.6406 4.92612 12.6785 1.43044Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$45 = ["color"];
var SpeakerModerateIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$45);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M8 1.5C8 1.31062 7.893 1.13749 7.72361 1.05279C7.55421 0.968093 7.35151 0.986371 7.2 1.1L3.33333 4H1.5C0.671573 4 0 4.67158 0 5.5V9.5C0 10.3284 0.671573 11 1.5 11H3.33333L7.2 13.9C7.35151 14.0136 7.55421 14.0319 7.72361 13.9472C7.893 13.8625 8 13.6894 8 13.5V1.5ZM3.8 4.9L7 2.5V12.5L3.8 10.1C3.71345 10.0351 3.60819 10 3.5 10H1.5C1.22386 10 1 9.77614 1 9.5V5.5C1 5.22386 1.22386 5 1.5 5H3.5C3.60819 5 3.71345 4.96491 3.8 4.9ZM10.833 3.95949C10.7106 3.77557 10.4623 3.72567 10.2784 3.84804C10.0944 3.97041 10.0445 4.21871 10.1669 4.40264C11.4111 6.27268 11.4111 8.72728 10.1669 10.5973C10.0445 10.7813 10.0944 11.0296 10.2784 11.1519C10.4623 11.2743 10.7106 11.2244 10.833 11.0405C12.2558 8.90199 12.2558 6.09798 10.833 3.95949Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$46 = ["color"];
var SpeakerOffIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$46);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.72361 1.05279C7.893 1.13749 8 1.31062 8 1.5V13.5C8 13.6894 7.893 13.8625 7.72361 13.9472C7.55421 14.0319 7.35151 14.0136 7.2 13.9L3.33333 11H1.5C0.671573 11 0 10.3284 0 9.5V5.5C0 4.67158 0.671573 4 1.5 4H3.33333L7.2 1.1C7.35151 0.986371 7.55421 0.968093 7.72361 1.05279ZM7 2.5L3.8 4.9C3.71345 4.96491 3.60819 5 3.5 5H1.5C1.22386 5 1 5.22386 1 5.5V9.5C1 9.77614 1.22386 10 1.5 10H3.5C3.60819 10 3.71345 10.0351 3.8 10.1L7 12.5V2.5ZM14.8536 5.14645C15.0488 5.34171 15.0488 5.65829 14.8536 5.85355L13.2071 7.5L14.8536 9.14645C15.0488 9.34171 15.0488 9.65829 14.8536 9.85355C14.6583 10.0488 14.3417 10.0488 14.1464 9.85355L12.5 8.20711L10.8536 9.85355C10.6583 10.0488 10.3417 10.0488 10.1464 9.85355C9.95118 9.65829 9.95118 9.34171 10.1464 9.14645L11.7929 7.5L10.1464 5.85355C9.95118 5.65829 9.95118 5.34171 10.1464 5.14645C10.3417 4.95118 10.6583 4.95118 10.8536 5.14645L12.5 6.79289L14.1464 5.14645C14.3417 4.95118 14.6583 4.95118 14.8536 5.14645Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$47 = ["color"];
var SpeakerQuietIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$47);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M8 1.5C8 1.31062 7.893 1.13749 7.72361 1.05279C7.55421 0.968093 7.35151 0.986371 7.2 1.1L3.33333 4H1.5C0.671573 4 0 4.67158 0 5.5V9.5C0 10.3284 0.671573 11 1.5 11H3.33333L7.2 13.9C7.35151 14.0136 7.55421 14.0319 7.72361 13.9472C7.893 13.8625 8 13.6894 8 13.5V1.5ZM3.8 4.9L7 2.5V12.5L3.8 10.1C3.71345 10.0351 3.60819 10 3.5 10H1.5C1.22386 10 1 9.77614 1 9.5V5.5C1 5.22386 1.22386 5 1.5 5H3.5C3.60819 5 3.71345 4.96491 3.8 4.9ZM10.083 5.05577C9.96066 4.87185 9.71235 4.82195 9.52843 4.94432C9.3445 5.06669 9.2946 5.31499 9.41697 5.49892C10.2207 6.70693 10.2207 8.29303 9.41697 9.50104C9.2946 9.68496 9.3445 9.93326 9.52843 10.0556C9.71235 10.178 9.96066 10.1281 10.083 9.94418C11.0653 8.46773 11.0653 6.53222 10.083 5.05577Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$48 = ["color"];
var SquareIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$48);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1 1H1.5H13.5H14V1.5V13.5V14H13.5H1.5H1V13.5V1.5V1ZM2 2V13H13V2H2Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$49 = ["color"];
var StackIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$49);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.75432 1.81954C7.59742 1.72682 7.4025 1.72682 7.24559 1.81954L1.74559 5.06954C1.59336 5.15949 1.49996 5.32317 1.49996 5.5C1.49996 5.67683 1.59336 5.84051 1.74559 5.93046L7.24559 9.18046C7.4025 9.27318 7.59742 9.27318 7.75432 9.18046L13.2543 5.93046C13.4066 5.84051 13.5 5.67683 13.5 5.5C13.5 5.32317 13.4066 5.15949 13.2543 5.06954L7.75432 1.81954ZM7.49996 8.16923L2.9828 5.5L7.49996 2.83077L12.0171 5.5L7.49996 8.16923ZM2.25432 8.31954C2.01658 8.17906 1.70998 8.2579 1.56949 8.49564C1.42901 8.73337 1.50785 9.03998 1.74559 9.18046L7.24559 12.4305C7.4025 12.5232 7.59742 12.5232 7.75432 12.4305L13.2543 9.18046C13.4921 9.03998 13.5709 8.73337 13.4304 8.49564C13.2899 8.2579 12.9833 8.17906 12.7456 8.31954L7.49996 11.4192L2.25432 8.31954Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4a = ["color"];
var StarIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4a);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M6.97942 1.25171L6.9585 1.30199L5.58662 4.60039C5.54342 4.70426 5.44573 4.77523 5.3336 4.78422L1.7727 5.0697L1.71841 5.07405L1.38687 5.10063L1.08608 5.12475C0.820085 5.14607 0.712228 5.47802 0.914889 5.65162L1.14406 5.84793L1.39666 6.06431L1.43802 6.09974L4.15105 8.42374C4.23648 8.49692 4.2738 8.61176 4.24769 8.72118L3.41882 12.196L3.40618 12.249L3.32901 12.5725L3.25899 12.866C3.19708 13.1256 3.47945 13.3308 3.70718 13.1917L3.9647 13.0344L4.24854 12.861L4.29502 12.8326L7.34365 10.9705C7.43965 10.9119 7.5604 10.9119 7.6564 10.9705L10.705 12.8326L10.7515 12.861L11.0354 13.0344L11.2929 13.1917C11.5206 13.3308 11.803 13.1256 11.7411 12.866L11.671 12.5725L11.5939 12.249L11.5812 12.196L10.7524 8.72118C10.7263 8.61176 10.7636 8.49692 10.849 8.42374L13.562 6.09974L13.6034 6.06431L13.856 5.84793L14.0852 5.65162C14.2878 5.47802 14.18 5.14607 13.914 5.12475L13.6132 5.10063L13.2816 5.07405L13.2274 5.0697L9.66645 4.78422C9.55432 4.77523 9.45663 4.70426 9.41343 4.60039L8.04155 1.30199L8.02064 1.25171L7.89291 0.944609L7.77702 0.665992C7.67454 0.419604 7.32551 0.419604 7.22303 0.665992L7.10715 0.944609L6.97942 1.25171ZM7.50003 2.60397L6.50994 4.98442C6.32273 5.43453 5.89944 5.74207 5.41351 5.78103L2.84361 5.98705L4.8016 7.66428C5.17183 7.98142 5.33351 8.47903 5.2204 8.95321L4.62221 11.461L6.8224 10.1171C7.23842 9.86302 7.76164 9.86302 8.17766 10.1171L10.3778 11.461L9.77965 8.95321C9.66654 8.47903 9.82822 7.98142 10.1984 7.66428L12.1564 5.98705L9.58654 5.78103C9.10061 5.74207 8.67732 5.43453 8.49011 4.98442L7.50003 2.60397Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4b = ["color"];
var StarFilledIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4b);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.22303 0.665992C7.32551 0.419604 7.67454 0.419604 7.77702 0.665992L9.41343 4.60039C9.45663 4.70426 9.55432 4.77523 9.66645 4.78422L13.914 5.12475C14.18 5.14607 14.2878 5.47802 14.0852 5.65162L10.849 8.42374C10.7636 8.49692 10.7263 8.61176 10.7524 8.72118L11.7411 12.866C11.803 13.1256 11.5206 13.3308 11.2929 13.1917L7.6564 10.9705C7.5604 10.9119 7.43965 10.9119 7.34365 10.9705L3.70718 13.1917C3.47945 13.3308 3.19708 13.1256 3.25899 12.866L4.24769 8.72118C4.2738 8.61176 4.23648 8.49692 4.15105 8.42374L0.914889 5.65162C0.712228 5.47802 0.820086 5.14607 1.08608 5.12475L5.3336 4.78422C5.44573 4.77523 5.54342 4.70426 5.58662 4.60039L7.22303 0.665992Z",
    fill: color
  }));
});
var _excluded$4c = ["color"];
var StitchesLogoIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4c);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1.84998 7.49998C1.84998 7.21321 1.87134 6.93143 1.91256 6.65615L9.56374 2.23875C9.86311 2.35627 10.15 2.49861 10.4219 2.66322L3.77065 6.50332C3.73669 6.52183 3.70482 6.5449 3.67602 6.57238C3.5911 6.65308 3.54245 6.76286 3.53682 6.87658C3.53359 6.9418 3.54451 7.00831 3.57086 7.07137C3.58927 7.1157 3.6149 7.15742 3.64744 7.19458C3.67306 7.22396 3.702 7.24941 3.73337 7.27069L7.32533 9.83813L3.87232 11.8317C2.63604 10.7953 1.84998 9.23944 1.84998 7.49998ZM8.36843 10.2751C8.37682 10.2706 8.38509 10.2659 8.39322 10.2608L9.84091 9.42499C9.84706 9.42163 9.85314 9.41812 9.85915 9.41446L11.3101 8.57677C11.3655 8.54649 11.4154 8.504 11.4554 8.44995C11.6034 8.25031 11.5616 7.96848 11.362 7.82046L7.82779 5.20017L11.2161 3.24393C12.4013 4.27963 13.15 5.80237 13.15 7.49998C13.15 7.83546 13.1207 8.16411 13.0647 8.48353L5.56875 12.8113C5.26138 12.6995 4.96646 12.5618 4.68662 12.4008L8.36843 10.2751ZM8.18149 9.34383L4.81659 6.93868L5.50918 6.53881L8.80604 8.98324L8.18149 9.34383ZM6.35875 6.04832L6.97822 5.69067L10.2751 8.13506L9.6556 8.49275L6.35875 6.04832ZM8.3318 1.91078L2.24263 5.42636C3.06941 3.33188 5.11164 1.84998 7.49998 1.84998C7.78258 1.84998 8.06033 1.87072 8.3318 1.91078ZM6.84684 13.1126C7.06114 13.1373 7.27908 13.15 7.49998 13.15C9.8246 13.15 11.8213 11.7461 12.6886 9.7399L6.84684 13.1126ZM7.49998 0.849976C3.82728 0.849976 0.849976 3.82728 0.849976 7.49998C0.849976 11.1727 3.82728 14.15 7.49998 14.15C11.1727 14.15 14.15 11.1727 14.15 7.49998C14.15 3.82728 11.1727 0.849976 7.49998 0.849976Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4d = ["color"];
var StopIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4d);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M2 3C2 2.44772 2.44772 2 3 2H12C12.5523 2 13 2.44772 13 3V12C13 12.5523 12.5523 13 12 13H3C2.44772 13 2 12.5523 2 12V3ZM12 3H3V12H12V3Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4e = ["color"];
var StopwatchIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4e);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M5.49998 0.5C5.49998 0.223858 5.72383 0 5.99998 0H7.49998H8.99998C9.27612 0 9.49998 0.223858 9.49998 0.5C9.49998 0.776142 9.27612 1 8.99998 1H7.99998V2.11922C9.09832 2.20409 10.119 2.56622 10.992 3.13572C11.0116 3.10851 11.0336 3.08252 11.058 3.05806L11.858 2.25806C12.1021 2.01398 12.4978 2.01398 12.7419 2.25806C12.986 2.50214 12.986 2.89786 12.7419 3.14194L11.967 3.91682C13.1595 5.07925 13.9 6.70314 13.9 8.49998C13.9 12.0346 11.0346 14.9 7.49998 14.9C3.96535 14.9 1.09998 12.0346 1.09998 8.49998C1.09998 5.13362 3.69904 2.3743 6.99998 2.11922V1H5.99998C5.72383 1 5.49998 0.776142 5.49998 0.5ZM2.09998 8.49998C2.09998 5.51764 4.51764 3.09998 7.49998 3.09998C10.4823 3.09998 12.9 5.51764 12.9 8.49998C12.9 11.4823 10.4823 13.9 7.49998 13.9C4.51764 13.9 2.09998 11.4823 2.09998 8.49998ZM7.99998 4.5C7.99998 4.22386 7.77612 4 7.49998 4C7.22383 4 6.99998 4.22386 6.99998 4.5V9.5C6.99998 9.77614 7.22383 10 7.49998 10C7.77612 10 7.99998 9.77614 7.99998 9.5V4.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4f = ["color"];
var StretchHorizontallyIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4f);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M14.4999 0.999992C14.2237 0.999992 13.9999 1.22385 13.9999 1.49999L13.9999 5.99995L0.999992 5.99995L0.999992 1.49999C0.999992 1.22385 0.776136 0.999992 0.499996 0.999992C0.223856 0.999992 -9.78509e-09 1.22385 -2.18556e-08 1.49999L4.07279e-07 13.4999C3.95208e-07 13.776 0.223855 13.9999 0.499996 13.9999C0.776136 13.9999 0.999992 13.776 0.999992 13.4999L0.999992 8.99992L13.9999 8.99992L13.9999 13.4999C13.9999 13.776 14.2237 13.9999 14.4999 13.9999C14.776 13.9999 14.9999 13.776 14.9999 13.4999L14.9999 1.49999C14.9999 1.22385 14.776 0.999992 14.4999 0.999992Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4g = ["color"];
var StretchVerticallyIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4g);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M0.999878 0.5C0.999878 0.223858 1.22374 0 1.49988 0H13.4999C13.776 0 13.9999 0.223858 13.9999 0.5C13.9999 0.776142 13.776 1 13.4999 1H6H1.49988C1.22374 1 0.999878 0.776142 0.999878 0.5ZM9 14V1L6 1V14H1.49988C1.22374 14 0.999878 14.2239 0.999878 14.5C0.999878 14.7761 1.22374 15 1.49988 15H13.4999C13.776 15 13.9999 14.7761 13.9999 14.5C13.9999 14.2239 13.776 14 13.4999 14H9Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4h = ["color"];
var StrikethroughIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4h);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M5.00003 3.25C5.00003 2.97386 4.77617 2.75 4.50003 2.75C4.22389 2.75 4.00003 2.97386 4.00003 3.25V7.10003H2.49998C2.27906 7.10003 2.09998 7.27912 2.09998 7.50003C2.09998 7.72094 2.27906 7.90003 2.49998 7.90003H4.00003V8.55C4.00003 10.483 5.56703 12.05 7.50003 12.05C9.43303 12.05 11 10.483 11 8.55V7.90003H12.5C12.7209 7.90003 12.9 7.72094 12.9 7.50003C12.9 7.27912 12.7209 7.10003 12.5 7.10003H11V3.25C11 2.97386 10.7762 2.75 10.5 2.75C10.2239 2.75 10 2.97386 10 3.25V7.10003H5.00003V3.25ZM5.00003 7.90003V8.55C5.00003 9.93071 6.11932 11.05 7.50003 11.05C8.88074 11.05 10 9.93071 10 8.55V7.90003H5.00003Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4i = ["color"];
var SunIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4i);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.5 0C7.77614 0 8 0.223858 8 0.5V2.5C8 2.77614 7.77614 3 7.5 3C7.22386 3 7 2.77614 7 2.5V0.5C7 0.223858 7.22386 0 7.5 0ZM2.1967 2.1967C2.39196 2.00144 2.70854 2.00144 2.90381 2.1967L4.31802 3.61091C4.51328 3.80617 4.51328 4.12276 4.31802 4.31802C4.12276 4.51328 3.80617 4.51328 3.61091 4.31802L2.1967 2.90381C2.00144 2.70854 2.00144 2.39196 2.1967 2.1967ZM0.5 7C0.223858 7 0 7.22386 0 7.5C0 7.77614 0.223858 8 0.5 8H2.5C2.77614 8 3 7.77614 3 7.5C3 7.22386 2.77614 7 2.5 7H0.5ZM2.1967 12.8033C2.00144 12.608 2.00144 12.2915 2.1967 12.0962L3.61091 10.682C3.80617 10.4867 4.12276 10.4867 4.31802 10.682C4.51328 10.8772 4.51328 11.1938 4.31802 11.3891L2.90381 12.8033C2.70854 12.9986 2.39196 12.9986 2.1967 12.8033ZM12.5 7C12.2239 7 12 7.22386 12 7.5C12 7.77614 12.2239 8 12.5 8H14.5C14.7761 8 15 7.77614 15 7.5C15 7.22386 14.7761 7 14.5 7H12.5ZM10.682 4.31802C10.4867 4.12276 10.4867 3.80617 10.682 3.61091L12.0962 2.1967C12.2915 2.00144 12.608 2.00144 12.8033 2.1967C12.9986 2.39196 12.9986 2.70854 12.8033 2.90381L11.3891 4.31802C11.1938 4.51328 10.8772 4.51328 10.682 4.31802ZM8 12.5C8 12.2239 7.77614 12 7.5 12C7.22386 12 7 12.2239 7 12.5V14.5C7 14.7761 7.22386 15 7.5 15C7.77614 15 8 14.7761 8 14.5V12.5ZM10.682 10.682C10.8772 10.4867 11.1938 10.4867 11.3891 10.682L12.8033 12.0962C12.9986 12.2915 12.9986 12.608 12.8033 12.8033C12.608 12.9986 12.2915 12.9986 12.0962 12.8033L10.682 11.3891C10.4867 11.1938 10.4867 10.8772 10.682 10.682ZM5.5 7.5C5.5 6.39543 6.39543 5.5 7.5 5.5C8.60457 5.5 9.5 6.39543 9.5 7.5C9.5 8.60457 8.60457 9.5 7.5 9.5C6.39543 9.5 5.5 8.60457 5.5 7.5ZM7.5 4.5C5.84315 4.5 4.5 5.84315 4.5 7.5C4.5 9.15685 5.84315 10.5 7.5 10.5C9.15685 10.5 10.5 9.15685 10.5 7.5C10.5 5.84315 9.15685 4.5 7.5 4.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4j = ["color"];
var SwitchIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4j);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M10.5 4C8.567 4 7 5.567 7 7.5C7 9.433 8.567 11 10.5 11C12.433 11 14 9.433 14 7.5C14 5.567 12.433 4 10.5 4ZM7.67133 11C6.65183 10.175 6 8.91363 6 7.5C6 6.08637 6.65183 4.82498 7.67133 4H4.5C2.567 4 1 5.567 1 7.5C1 9.433 2.567 11 4.5 11H7.67133ZM0 7.5C0 5.01472 2.01472 3 4.5 3H10.5C12.9853 3 15 5.01472 15 7.5C15 9.98528 12.9853 12 10.5 12H4.5C2.01472 12 0 9.98528 0 7.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4k = ["color"];
var SymbolIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4k);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1.90321 7.29677C1.90321 10.341 4.11041 12.4147 6.58893 12.8439C6.87255 12.893 7.06266 13.1627 7.01355 13.4464C6.96444 13.73 6.69471 13.9201 6.41109 13.871C3.49942 13.3668 0.86084 10.9127 0.86084 7.29677C0.860839 5.76009 1.55996 4.55245 2.37639 3.63377C2.96124 2.97568 3.63034 2.44135 4.16846 2.03202L2.53205 2.03202C2.25591 2.03202 2.03205 1.80816 2.03205 1.53202C2.03205 1.25588 2.25591 1.03202 2.53205 1.03202L5.53205 1.03202C5.80819 1.03202 6.03205 1.25588 6.03205 1.53202L6.03205 4.53202C6.03205 4.80816 5.80819 5.03202 5.53205 5.03202C5.25591 5.03202 5.03205 4.80816 5.03205 4.53202L5.03205 2.68645L5.03054 2.68759L5.03045 2.68766L5.03044 2.68767L5.03043 2.68767C4.45896 3.11868 3.76059 3.64538 3.15554 4.3262C2.44102 5.13021 1.90321 6.10154 1.90321 7.29677ZM13.0109 7.70321C13.0109 4.69115 10.8505 2.6296 8.40384 2.17029C8.12093 2.11718 7.93465 1.84479 7.98776 1.56188C8.04087 1.27898 8.31326 1.0927 8.59616 1.14581C11.4704 1.68541 14.0532 4.12605 14.0532 7.70321C14.0532 9.23988 13.3541 10.4475 12.5377 11.3662C11.9528 12.0243 11.2837 12.5586 10.7456 12.968L12.3821 12.968C12.6582 12.968 12.8821 13.1918 12.8821 13.468C12.8821 13.7441 12.6582 13.968 12.3821 13.968L9.38205 13.968C9.10591 13.968 8.88205 13.7441 8.88205 13.468L8.88205 10.468C8.88205 10.1918 9.10591 9.96796 9.38205 9.96796C9.65819 9.96796 9.88205 10.1918 9.88205 10.468L9.88205 12.3135L9.88362 12.3123C10.4551 11.8813 11.1535 11.3546 11.7585 10.6738C12.4731 9.86976 13.0109 8.89844 13.0109 7.70321Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4l = ["color"];
var TableIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4l);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M8 2H12.5C12.7761 2 13 2.22386 13 2.5V5H8V2ZM7 5V2H2.5C2.22386 2 2 2.22386 2 2.5V5H7ZM2 6V9H7V6H2ZM8 6H13V9H8V6ZM8 10H13V12.5C13 12.7761 12.7761 13 12.5 13H8V10ZM2 12.5V10H7V13H2.5C2.22386 13 2 12.7761 2 12.5ZM1 2.5C1 1.67157 1.67157 1 2.5 1H12.5C13.3284 1 14 1.67157 14 2.5V12.5C14 13.3284 13.3284 14 12.5 14H2.5C1.67157 14 1 13.3284 1 12.5V2.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4m = ["color"];
var TargetIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4m);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M0.900024 7.50002C0.900024 3.85495 3.85495 0.900024 7.50002 0.900024C11.1451 0.900024 14.1 3.85495 14.1 7.50002C14.1 11.1451 11.1451 14.1 7.50002 14.1C3.85495 14.1 0.900024 11.1451 0.900024 7.50002ZM7.50002 1.80002C4.35201 1.80002 1.80002 4.35201 1.80002 7.50002C1.80002 10.648 4.35201 13.2 7.50002 13.2C10.648 13.2 13.2 10.648 13.2 7.50002C13.2 4.35201 10.648 1.80002 7.50002 1.80002ZM3.07504 7.50002C3.07504 5.05617 5.05618 3.07502 7.50004 3.07502C9.94388 3.07502 11.925 5.05617 11.925 7.50002C11.925 9.94386 9.94388 11.925 7.50004 11.925C5.05618 11.925 3.07504 9.94386 3.07504 7.50002ZM7.50004 3.92502C5.52562 3.92502 3.92504 5.52561 3.92504 7.50002C3.92504 9.47442 5.52563 11.075 7.50004 11.075C9.47444 11.075 11.075 9.47442 11.075 7.50002C11.075 5.52561 9.47444 3.92502 7.50004 3.92502ZM7.50004 5.25002C6.2574 5.25002 5.25004 6.25739 5.25004 7.50002C5.25004 8.74266 6.2574 9.75002 7.50004 9.75002C8.74267 9.75002 9.75004 8.74266 9.75004 7.50002C9.75004 6.25738 8.74267 5.25002 7.50004 5.25002ZM6.05004 7.50002C6.05004 6.69921 6.69923 6.05002 7.50004 6.05002C8.30084 6.05002 8.95004 6.69921 8.95004 7.50002C8.95004 8.30083 8.30084 8.95002 7.50004 8.95002C6.69923 8.95002 6.05004 8.30083 6.05004 7.50002Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4n = ["color"];
var TextIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4n);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.94993 2.95002L3.94993 4.49998C3.94993 4.74851 3.74845 4.94998 3.49993 4.94998C3.2514 4.94998 3.04993 4.74851 3.04993 4.49998V2.50004C3.04993 2.45246 3.05731 2.40661 3.07099 2.36357C3.12878 2.18175 3.29897 2.05002 3.49993 2.05002H11.4999C11.6553 2.05002 11.7922 2.12872 11.8731 2.24842C11.9216 2.32024 11.9499 2.40682 11.9499 2.50002L11.9499 2.50004V4.49998C11.9499 4.74851 11.7485 4.94998 11.4999 4.94998C11.2514 4.94998 11.0499 4.74851 11.0499 4.49998V2.95002H8.04993V12.05H9.25428C9.50281 12.05 9.70428 12.2515 9.70428 12.5C9.70428 12.7486 9.50281 12.95 9.25428 12.95H5.75428C5.50575 12.95 5.30428 12.7486 5.30428 12.5C5.30428 12.2515 5.50575 12.05 5.75428 12.05H6.94993V2.95002H3.94993Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4o = ["color"];
var TextAlignBottomIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4o);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.89949 5.50002C3.89949 5.27911 3.7204 5.10003 3.49949 5.10003C3.27857 5.10003 3.09949 5.27911 3.09949 5.50002L3.09949 12.5343L1.78233 11.2172C1.62612 11.061 1.37285 11.061 1.21664 11.2172C1.06043 11.3734 1.06043 11.6267 1.21664 11.7829L3.21664 13.7829C3.29166 13.8579 3.3934 13.9 3.49949 13.9C3.60557 13.9 3.70732 13.8579 3.78233 13.7829L5.78233 11.7829C5.93854 11.6267 5.93854 11.3734 5.78233 11.2172C5.62612 11.061 5.37285 11.061 5.21664 11.2172L3.89949 12.5343L3.89949 5.50002ZM8.49998 13C8.22383 13 7.99998 12.7762 7.99998 12.5C7.99998 12.2239 8.22383 12 8.49998 12H14.5C14.7761 12 15 12.2239 15 12.5C15 12.7762 14.7761 13 14.5 13H8.49998ZM8.49998 10C8.22383 10 7.99998 9.77617 7.99998 9.50002C7.99998 9.22388 8.22383 9.00002 8.49998 9.00002H14.5C14.7761 9.00002 15 9.22388 15 9.50002C15 9.77617 14.7761 10 14.5 10H8.49998ZM7.99998 6.50002C7.99998 6.77617 8.22383 7.00002 8.49998 7.00002H14.5C14.7761 7.00002 15 6.77617 15 6.50002C15 6.22388 14.7761 6.00002 14.5 6.00002H8.49998C8.22383 6.00002 7.99998 6.22388 7.99998 6.50002Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4p = ["color"];
var TextAlignCenterIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4p);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M2 4.5C2 4.22386 2.22386 4 2.5 4H12.5C12.7761 4 13 4.22386 13 4.5C13 4.77614 12.7761 5 12.5 5H2.5C2.22386 5 2 4.77614 2 4.5ZM4 7.5C4 7.22386 4.22386 7 4.5 7H10.5C10.7761 7 11 7.22386 11 7.5C11 7.77614 10.7761 8 10.5 8H4.5C4.22386 8 4 7.77614 4 7.5ZM3 10.5C3 10.2239 3.22386 10 3.5 10H11.5C11.7761 10 12 10.2239 12 10.5C12 10.7761 11.7761 11 11.5 11H3.5C3.22386 11 3 10.7761 3 10.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4q = ["color"];
var TextAlignJustifyIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4q);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M2.5 4C2.22386 4 2 4.22386 2 4.5C2 4.77614 2.22386 5 2.5 5H12.5C12.7761 5 13 4.77614 13 4.5C13 4.22386 12.7761 4 12.5 4H2.5ZM2 7.5C2 7.22386 2.22386 7 2.5 7H12.5C12.7761 7 13 7.22386 13 7.5C13 7.77614 12.7761 8 12.5 8H2.5C2.22386 8 2 7.77614 2 7.5ZM2 10.5C2 10.2239 2.22386 10 2.5 10H12.5C12.7761 10 13 10.2239 13 10.5C13 10.7761 12.7761 11 12.5 11H2.5C2.22386 11 2 10.7761 2 10.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4r = ["color"];
var TextAlignLeftIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4r);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M2 4.5C2 4.22386 2.22386 4 2.5 4H12.5C12.7761 4 13 4.22386 13 4.5C13 4.77614 12.7761 5 12.5 5H2.5C2.22386 5 2 4.77614 2 4.5ZM2 7.5C2 7.22386 2.22386 7 2.5 7H7.5C7.77614 7 8 7.22386 8 7.5C8 7.77614 7.77614 8 7.5 8H2.5C2.22386 8 2 7.77614 2 7.5ZM2 10.5C2 10.2239 2.22386 10 2.5 10H10.5C10.7761 10 11 10.2239 11 10.5C11 10.7761 10.7761 11 10.5 11H2.5C2.22386 11 2 10.7761 2 10.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4s = ["color"];
var TextAlignMiddleIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4s);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.49949 14.9C3.7204 14.9 3.89949 14.7209 3.89949 14.5L3.89949 10.4657L5.21664 11.7829C5.37285 11.9391 5.62612 11.9391 5.78233 11.7829C5.93854 11.6267 5.93854 11.3734 5.78233 11.2172L3.78233 9.21718C3.70732 9.14217 3.60557 9.10002 3.49949 9.10002C3.3934 9.10002 3.29166 9.14217 3.21664 9.21718L1.21664 11.2172C1.06043 11.3734 1.06043 11.6267 1.21664 11.7829C1.37285 11.9391 1.62612 11.9391 1.78233 11.7829L3.09949 10.4657L3.09949 14.5C3.09949 14.7209 3.27857 14.9 3.49949 14.9ZM7.99998 10.5C7.99998 10.7762 8.22383 11 8.49998 11H14.5C14.7761 11 15 10.7762 15 10.5C15 10.2239 14.7761 10 14.5 10H8.49998C8.22383 10 7.99998 10.2239 7.99998 10.5ZM7.99998 7.50002C7.99998 7.77617 8.22383 8.00002 8.49998 8.00002H14.5C14.7761 8.00002 15 7.77617 15 7.50002C15 7.22388 14.7761 7.00002 14.5 7.00002H8.49998C8.22383 7.00002 7.99998 7.22388 7.99998 7.50002ZM8.49998 5.00002C8.22383 5.00002 7.99998 4.77617 7.99998 4.50002C7.99998 4.22388 8.22383 4.00002 8.49998 4.00002H14.5C14.7761 4.00002 15 4.22388 15 4.50002C15 4.77617 14.7761 5.00002 14.5 5.00002H8.49998ZM3.89949 0.500025C3.89949 0.279111 3.7204 0.100025 3.49949 0.100025C3.27857 0.100025 3.09949 0.279111 3.09949 0.500025L3.09949 4.53434L1.78233 3.21718C1.62612 3.06097 1.37285 3.06097 1.21664 3.21718C1.06043 3.37339 1.06043 3.62666 1.21664 3.78287L3.21664 5.78287C3.29166 5.85788 3.3934 5.90002 3.49949 5.90002C3.60557 5.90002 3.70732 5.85788 3.78233 5.78287L5.78233 3.78287C5.93854 3.62666 5.93854 3.37339 5.78233 3.21718C5.62612 3.06097 5.37285 3.06097 5.21664 3.21718L3.89949 4.53434L3.89949 0.500025Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4t = ["color"];
var TextAlignRightIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4t);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M2 4.5C2 4.22386 2.22386 4 2.5 4H12.5C12.7761 4 13 4.22386 13 4.5C13 4.77614 12.7761 5 12.5 5H2.5C2.22386 5 2 4.77614 2 4.5ZM7 7.5C7 7.22386 7.22386 7 7.5 7H12.5C12.7761 7 13 7.22386 13 7.5C13 7.77614 12.7761 8 12.5 8H7.5C7.22386 8 7 7.77614 7 7.5ZM4 10.5C4 10.2239 4.22386 10 4.5 10H12.5C12.7761 10 13 10.2239 13 10.5C13 10.7761 12.7761 11 12.5 11H4.5C4.22386 11 4 10.7761 4 10.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4u = ["color"];
var TextAlignTopIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4u);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M3.89949 9.49998C3.89949 9.72089 3.7204 9.89997 3.49949 9.89997C3.27857 9.89997 3.09949 9.72089 3.09949 9.49998L3.09949 2.46566L1.78233 3.78282C1.62612 3.93903 1.37285 3.93903 1.21664 3.78282C1.06043 3.62661 1.06043 3.37334 1.21664 3.21713L3.21664 1.21713C3.29166 1.14212 3.3934 1.09998 3.49949 1.09998C3.60557 1.09998 3.70732 1.14212 3.78233 1.21713L5.78233 3.21713C5.93854 3.37334 5.93854 3.62661 5.78233 3.78282C5.62612 3.93903 5.37285 3.93903 5.21664 3.78282L3.89949 2.46566L3.89949 9.49998ZM8.49998 1.99998C8.22383 1.99998 7.99998 2.22383 7.99998 2.49998C7.99998 2.77612 8.22383 2.99998 8.49998 2.99998H14.5C14.7761 2.99998 15 2.77612 15 2.49998C15 2.22383 14.7761 1.99998 14.5 1.99998H8.49998ZM8.49998 4.99998C8.22383 4.99998 7.99998 5.22383 7.99998 5.49998C7.99998 5.77612 8.22383 5.99998 8.49998 5.99998H14.5C14.7761 5.99998 15 5.77612 15 5.49998C15 5.22383 14.7761 4.99998 14.5 4.99998H8.49998ZM7.99998 8.49998C7.99998 8.22383 8.22383 7.99998 8.49998 7.99998H14.5C14.7761 7.99998 15 8.22383 15 8.49998C15 8.77612 14.7761 8.99998 14.5 8.99998H8.49998C8.22383 8.99998 7.99998 8.77612 7.99998 8.49998Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4v = ["color"];
var TextNoneIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4v);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M13.3536 2.35355C13.5488 2.15829 13.5488 1.84171 13.3536 1.64645C13.1583 1.45118 12.8417 1.45118 12.6464 1.64645L11.9291 2.36383C11.9159 2.32246 11.897 2.28368 11.8732 2.24845C11.7923 2.12875 11.6554 2.05005 11.5001 2.05005H3.50005C3.29909 2.05005 3.1289 2.18178 3.07111 2.3636C3.05743 2.40665 3.05005 2.45249 3.05005 2.50007V4.50001C3.05005 4.74854 3.25152 4.95001 3.50005 4.95001C3.74858 4.95001 3.95005 4.74854 3.95005 4.50001V2.95005H6.95006V7.34284L1.64645 12.6464C1.45118 12.8417 1.45118 13.1583 1.64645 13.3536C1.84171 13.5488 2.15829 13.5488 2.35355 13.3536L6.95006 8.75705V12.0501H5.7544C5.50587 12.0501 5.3044 12.2515 5.3044 12.5001C5.3044 12.7486 5.50587 12.9501 5.7544 12.9501H9.2544C9.50293 12.9501 9.7044 12.7486 9.7044 12.5001C9.7044 12.2515 9.50293 12.0501 9.2544 12.0501H8.05006V7.65705L13.3536 2.35355ZM8.05006 6.24284L11.0501 3.24283V2.95005H8.05006V6.24284Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4w = ["color"];
var ThickArrowDownIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4w);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M5 3.5C5 3.22386 5.22386 3 5.5 3H9.5C9.77614 3 10 3.22386 10 3.5V6H12.5C12.6873 6 12.8589 6.10467 12.9446 6.27121C13.0303 6.43774 13.0157 6.63821 12.9069 6.79062L7.90687 13.7906C7.81301 13.922 7.66148 14 7.5 14C7.33853 14 7.18699 13.922 7.09314 13.7906L2.09314 6.79062C1.98427 6.63821 1.96972 6.43774 2.05542 6.27121C2.14112 6.10467 2.31271 6 2.5 6H5V3.5ZM6 4V6.5C6 6.77614 5.77614 7 5.5 7H3.4716L7.5 12.6398L11.5284 7H9.5C9.22386 7 9 6.77614 9 6.5V4H6Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4x = ["color"];
var ThickArrowLeftIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4x);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1 7.5C1 7.66148 1.07798 7.81301 1.20938 7.90687L8.20938 12.9069C8.36179 13.0157 8.56226 13.0303 8.72879 12.9446C8.89533 12.8589 9 12.6873 9 12.5L9 10L11.5 10C11.7761 10 12 9.77614 12 9.5L12 5.5C12 5.22386 11.7761 5 11.5 5L9 5L9 2.5C9 2.31271 8.89533 2.14112 8.72879 2.05542C8.56226 1.96972 8.36179 1.98427 8.20938 2.09313L1.20938 7.09314C1.07798 7.18699 1 7.33853 1 7.5ZM8 3.4716L8 5.5C8 5.77614 8.22386 6 8.5 6L11 6L11 9L8.5 9C8.22386 9 8 9.22386 8 9.5L8 11.5284L2.36023 7.5L8 3.4716Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4y = ["color"];
var ThickArrowRightIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4y);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M14 7.5C14 7.66148 13.922 7.81301 13.7906 7.90687L6.79062 12.9069C6.63821 13.0157 6.43774 13.0303 6.27121 12.9446C6.10467 12.8589 6 12.6873 6 12.5L6 10L3.5 10C3.22386 10 3 9.77614 3 9.5L3 5.5C3 5.22386 3.22386 5 3.5 5L6 5L6 2.5C6 2.31271 6.10467 2.14112 6.27121 2.05542C6.43774 1.96972 6.63821 1.98427 6.79062 2.09313L13.7906 7.09314C13.922 7.18699 14 7.33853 14 7.5ZM7 3.4716L7 5.5C7 5.77614 6.77614 6 6.5 6L4 6L4 9L6.5 9C6.77614 9 7 9.22386 7 9.5L7 11.5284L12.6398 7.5L7 3.4716Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4z = ["color"];
var ThickArrowUpIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4z);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.5 1C7.66148 1 7.81301 1.07798 7.90687 1.20938L12.9069 8.20938C13.0157 8.36179 13.0303 8.56226 12.9446 8.72879C12.8589 8.89533 12.6873 9 12.5 9H10V11.5C10 11.7761 9.77614 12 9.5 12H5.5C5.22386 12 5 11.7761 5 11.5V9H2.5C2.31271 9 2.14112 8.89533 2.05542 8.72879C1.96972 8.56226 1.98427 8.36179 2.09314 8.20938L7.09314 1.20938C7.18699 1.07798 7.33853 1 7.5 1ZM3.4716 8H5.5C5.77614 8 6 8.22386 6 8.5V11H9V8.5C9 8.22386 9.22386 8 9.5 8H11.5284L7.5 2.36023L3.4716 8Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4A = ["color"];
var TimerIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4A);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.49998 0.849976C7.22383 0.849976 6.99998 1.07383 6.99998 1.34998V3.52234C6.99998 3.79848 7.22383 4.02234 7.49998 4.02234C7.77612 4.02234 7.99998 3.79848 7.99998 3.52234V1.8718C10.8862 2.12488 13.15 4.54806 13.15 7.49998C13.15 10.6204 10.6204 13.15 7.49998 13.15C4.37957 13.15 1.84998 10.6204 1.84998 7.49998C1.84998 6.10612 2.35407 4.83128 3.19049 3.8459C3.36919 3.63538 3.34339 3.31985 3.13286 3.14115C2.92234 2.96245 2.60681 2.98825 2.42811 3.19877C1.44405 4.35808 0.849976 5.86029 0.849976 7.49998C0.849976 11.1727 3.82728 14.15 7.49998 14.15C11.1727 14.15 14.15 11.1727 14.15 7.49998C14.15 3.82728 11.1727 0.849976 7.49998 0.849976ZM6.74049 8.08072L4.22363 4.57237C4.15231 4.47295 4.16346 4.33652 4.24998 4.25C4.33649 4.16348 4.47293 4.15233 4.57234 4.22365L8.08069 6.74051C8.56227 7.08599 8.61906 7.78091 8.19998 8.2C7.78089 8.61909 7.08597 8.56229 6.74049 8.08072Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4B = ["color"];
var TokensIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4B);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M4.5 2C3.11929 2 2 3.11929 2 4.5C2 5.88072 3.11929 7 4.5 7C5.88072 7 7 5.88072 7 4.5C7 3.11929 5.88072 2 4.5 2ZM3 4.5C3 3.67157 3.67157 3 4.5 3C5.32843 3 6 3.67157 6 4.5C6 5.32843 5.32843 6 4.5 6C3.67157 6 3 5.32843 3 4.5ZM10.5 2C9.11929 2 8 3.11929 8 4.5C8 5.88072 9.11929 7 10.5 7C11.8807 7 13 5.88072 13 4.5C13 3.11929 11.8807 2 10.5 2ZM9 4.5C9 3.67157 9.67157 3 10.5 3C11.3284 3 12 3.67157 12 4.5C12 5.32843 11.3284 6 10.5 6C9.67157 6 9 5.32843 9 4.5ZM2 10.5C2 9.11929 3.11929 8 4.5 8C5.88072 8 7 9.11929 7 10.5C7 11.8807 5.88072 13 4.5 13C3.11929 13 2 11.8807 2 10.5ZM4.5 9C3.67157 9 3 9.67157 3 10.5C3 11.3284 3.67157 12 4.5 12C5.32843 12 6 11.3284 6 10.5C6 9.67157 5.32843 9 4.5 9ZM10.5 8C9.11929 8 8 9.11929 8 10.5C8 11.8807 9.11929 13 10.5 13C11.8807 13 13 11.8807 13 10.5C13 9.11929 11.8807 8 10.5 8ZM9 10.5C9 9.67157 9.67157 9 10.5 9C11.3284 9 12 9.67157 12 10.5C12 11.3284 11.3284 12 10.5 12C9.67157 12 9 11.3284 9 10.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4C = ["color"];
var TrackNextIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4C);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M13.0502 2.74989C13.0502 2.44613 12.804 2.19989 12.5002 2.19989C12.1965 2.19989 11.9502 2.44613 11.9502 2.74989V7.2825C11.9046 7.18802 11.8295 7.10851 11.7334 7.05776L2.73338 2.30776C2.5784 2.22596 2.3919 2.23127 2.24182 2.32176C2.09175 2.41225 2 2.57471 2 2.74995V12.25C2 12.4252 2.09175 12.5877 2.24182 12.6781C2.3919 12.7686 2.5784 12.7739 2.73338 12.6921L11.7334 7.94214C11.8295 7.89139 11.9046 7.81188 11.9502 7.7174V12.2499C11.9502 12.5536 12.1965 12.7999 12.5002 12.7999C12.804 12.7999 13.0502 12.5536 13.0502 12.2499V2.74989ZM3 11.4207V3.5792L10.4288 7.49995L3 11.4207Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4D = ["color"];
var TrackPreviousIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4D);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1.94976 2.74989C1.94976 2.44613 2.196 2.19989 2.49976 2.19989C2.80351 2.19989 3.04976 2.44613 3.04976 2.74989V7.2825C3.0954 7.18802 3.17046 7.10851 3.26662 7.05776L12.2666 2.30776C12.4216 2.22596 12.6081 2.23127 12.7582 2.32176C12.9083 2.41225 13 2.57471 13 2.74995V12.25C13 12.4252 12.9083 12.5877 12.7582 12.6781C12.6081 12.7686 12.4216 12.7739 12.2666 12.6921L3.26662 7.94214C3.17046 7.89139 3.0954 7.81188 3.04976 7.7174V12.2499C3.04976 12.5536 2.80351 12.7999 2.49976 12.7999C2.196 12.7999 1.94976 12.5536 1.94976 12.2499V2.74989ZM4.57122 7.49995L12 11.4207V3.5792L4.57122 7.49995Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4E = ["color"];
var TransformIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4E);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M0.849976 1.74998C0.849976 1.25292 1.25292 0.849976 1.74998 0.849976H3.24998C3.74703 0.849976 4.14998 1.25292 4.14998 1.74998V2.04998H10.85V1.74998C10.85 1.25292 11.2529 0.849976 11.75 0.849976H13.25C13.747 0.849976 14.15 1.25292 14.15 1.74998V3.24998C14.15 3.74703 13.747 4.14998 13.25 4.14998H12.95V10.85H13.25C13.747 10.85 14.15 11.2529 14.15 11.75V13.25C14.15 13.747 13.747 14.15 13.25 14.15H11.75C11.2529 14.15 10.85 13.747 10.85 13.25V12.95H4.14998V13.25C4.14998 13.747 3.74703 14.15 3.24998 14.15H1.74998C1.25292 14.15 0.849976 13.747 0.849976 13.25V11.75C0.849976 11.2529 1.25292 10.85 1.74998 10.85H2.04998V4.14998H1.74998C1.25292 4.14998 0.849976 3.74703 0.849976 3.24998V1.74998ZM2.94998 4.14998V10.85H3.24998C3.74703 10.85 4.14998 11.2529 4.14998 11.75V12.05H10.85V11.75C10.85 11.2529 11.2529 10.85 11.75 10.85H12.05V4.14998H11.75C11.2529 4.14998 10.85 3.74703 10.85 3.24998V2.94998H4.14998V3.24998C4.14998 3.74703 3.74703 4.14998 3.24998 4.14998H2.94998ZM2.34998 1.74998H1.74998V2.34998V2.64998V3.24998H2.34998H2.64998H3.24998V2.64998V2.34998V1.74998H2.64998H2.34998ZM5.09998 5.99998C5.09998 5.50292 5.50292 5.09998 5.99998 5.09998H6.99998C7.49703 5.09998 7.89998 5.50292 7.89998 5.99998V6.99998C7.89998 7.03591 7.89787 7.07134 7.89378 7.10618C7.92861 7.10208 7.96405 7.09998 7.99998 7.09998H8.99998C9.49703 7.09998 9.89998 7.50292 9.89998 7.99998V8.99998C9.89998 9.49703 9.49703 9.89998 8.99998 9.89998H7.99998C7.50292 9.89998 7.09998 9.49703 7.09998 8.99998V7.99998C7.09998 7.96405 7.10208 7.92861 7.10618 7.89378C7.07134 7.89787 7.03591 7.89998 6.99998 7.89998H5.99998C5.50292 7.89998 5.09998 7.49703 5.09998 6.99998V5.99998ZM6.09998 5.99998H5.99998V6.09998V6.89998V6.99998H6.09998H6.89998H6.99998V6.89998V6.09998V5.99998H6.89998H6.09998ZM7.99998 7.99998H8.09998H8.89998H8.99998V8.09998V8.89998V8.99998H8.89998H8.09998H7.99998V8.89998V8.09998V7.99998ZM2.64998 11.75H2.34998H1.74998V12.35V12.65V13.25H2.34998H2.64998H3.24998V12.65V12.35V11.75H2.64998ZM11.75 1.74998H12.35H12.65H13.25V2.34998V2.64998V3.24998H12.65H12.35H11.75V2.64998V2.34998V1.74998ZM12.65 11.75H12.35H11.75V12.35V12.65V13.25H12.35H12.65H13.25V12.65V12.35V11.75H12.65Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4F = ["color"];
var TransparencyGridIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4F);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    opacity: ".25",
    d: "M0 0H3V3H0V0ZM6 3H3V6H0V9H3V12H0V15H3V12H6V15H9V12H12V15H15V12H12V9H15V6H12V3H15V0H12V3H9V0H6V3ZM6 6V3H9V6H6ZM6 9H3V6H6V9ZM9 9V6H12V9H9ZM9 9H6V12H9V9Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4G = ["color"];
var TrashIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4G);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M5.5 1C5.22386 1 5 1.22386 5 1.5C5 1.77614 5.22386 2 5.5 2H9.5C9.77614 2 10 1.77614 10 1.5C10 1.22386 9.77614 1 9.5 1H5.5ZM3 3.5C3 3.22386 3.22386 3 3.5 3H5H10H11.5C11.7761 3 12 3.22386 12 3.5C12 3.77614 11.7761 4 11.5 4H11V12C11 12.5523 10.5523 13 10 13H5C4.44772 13 4 12.5523 4 12V4L3.5 4C3.22386 4 3 3.77614 3 3.5ZM5 4H10V12H5V4Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4H = ["color"];
var TriangleDownIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4H);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M4 6H11L7.5 10.5L4 6Z",
    fill: color
  }));
});
var _excluded$4I = ["color"];
var TriangleLeftIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4I);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M9 4L9 11L4.5 7.5L9 4Z",
    fill: color
  }));
});
var _excluded$4J = ["color"];
var TriangleRightIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4J);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M6 11L6 4L10.5 7.5L6 11Z",
    fill: color
  }));
});
var _excluded$4K = ["color"];
var TriangleUpIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4K);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M4 9H11L7.5 4.5L4 9Z",
    fill: color
  }));
});
var _excluded$4L = ["color"];
var TwitterLogoIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4L);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.23336 4.69629C7.23336 2.96884 8.63335 1.56857 10.36 1.56857C11.3736 1.56857 12.183 2.04804 12.7254 2.74385C13.3079 2.62467 13.8557 2.40913 14.3513 2.11508C14.1559 2.72598 13.7424 3.2396 13.2033 3.56463C13.2038 3.56568 13.2042 3.56674 13.2047 3.56779C13.7334 3.50361 14.2364 3.36302 14.7048 3.15546L14.7037 3.15715C14.3667 3.66183 13.9431 4.10736 13.4561 4.47034C13.4823 4.64672 13.4956 4.82427 13.4956 5.00079C13.4956 8.6871 10.6873 12.9746 5.52122 12.9746C3.93906 12.9746 2.46544 12.511 1.22505 11.7152C0.992632 11.5661 0.925108 11.2568 1.07423 11.0244C1.0874 11.0038 1.10183 10.9846 1.11734 10.9666C1.20582 10.8202 1.37438 10.7309 1.5554 10.7522C2.47066 10.8601 3.38568 10.7485 4.19219 10.3962C3.39226 10.0434 2.77129 9.35975 2.50204 8.51974C2.45359 8.3686 2.48835 8.20311 2.59351 8.08422C2.59716 8.0801 2.60087 8.07606 2.60464 8.0721C1.96391 7.50819 1.55973 6.68208 1.55973 5.76143V5.72759C1.55973 5.56814 1.64411 5.42059 1.78155 5.33974C1.82671 5.31317 1.87537 5.29511 1.92532 5.28558C1.70549 4.86154 1.58116 4.37984 1.58116 3.86958C1.58116 3.40165 1.58384 2.81192 1.91332 2.28081C1.98718 2.16175 2.10758 2.08915 2.2364 2.07195C2.42588 2.01237 2.64087 2.06969 2.77406 2.23302C3.86536 3.57126 5.44066 4.49583 7.23366 4.73961L7.23336 4.69629ZM5.52122 11.9746C4.73387 11.9746 3.97781 11.8435 3.27248 11.6023C4.13012 11.4538 4.95307 11.1159 5.66218 10.5602C5.81211 10.4427 5.87182 10.2435 5.81126 10.0629C5.7507 9.88234 5.583 9.75943 5.39255 9.75607C4.68968 9.74366 4.06712 9.39716 3.67793 8.86845C3.86828 8.85306 4.05428 8.82039 4.23445 8.77167C4.43603 8.71716 4.57363 8.53114 4.56674 8.32243C4.55985 8.11372 4.41029 7.93718 4.20555 7.89607C3.42694 7.73977 2.79883 7.16764 2.56169 6.42174C2.76255 6.47025 2.97102 6.4991 3.18482 6.5061C3.38563 6.51267 3.56646 6.38533 3.62795 6.19405C3.68943 6.00277 3.61666 5.79391 3.44963 5.68224C2.86523 5.29155 2.48116 4.62464 2.48116 3.86958C2.48116 3.70213 2.48352 3.55268 2.49355 3.41719C3.85115 4.79913 5.70873 5.68931 7.77588 5.79338C7.93225 5.80126 8.08328 5.73543 8.18395 5.61553C8.28463 5.49562 8.32332 5.33548 8.28851 5.18284C8.25255 5.02517 8.23336 4.86284 8.23336 4.69629C8.23336 3.52085 9.18591 2.56857 10.36 2.56857C11.5943 2.56857 12.4956 3.71208 12.4956 5.00079C12.4956 8.25709 10.0202 11.9746 5.52122 11.9746Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4M = ["color"];
var UnderlineIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4M);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M5.00001 2.75C5.00001 2.47386 4.77615 2.25 4.50001 2.25C4.22387 2.25 4.00001 2.47386 4.00001 2.75V8.05C4.00001 9.983 5.56702 11.55 7.50001 11.55C9.43301 11.55 11 9.983 11 8.05V2.75C11 2.47386 10.7762 2.25 10.5 2.25C10.2239 2.25 10 2.47386 10 2.75V8.05C10 9.43071 8.88072 10.55 7.50001 10.55C6.1193 10.55 5.00001 9.43071 5.00001 8.05V2.75ZM3.49998 13.1001C3.27906 13.1001 3.09998 13.2791 3.09998 13.5001C3.09998 13.721 3.27906 13.9001 3.49998 13.9001H11.5C11.7209 13.9001 11.9 13.721 11.9 13.5001C11.9 13.2791 11.7209 13.1001 11.5 13.1001H3.49998Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4N = ["color"];
var UpdateIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4N);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1.90321 7.29677C1.90321 10.341 4.11041 12.4147 6.58893 12.8439C6.87255 12.893 7.06266 13.1627 7.01355 13.4464C6.96444 13.73 6.69471 13.9201 6.41109 13.871C3.49942 13.3668 0.86084 10.9127 0.86084 7.29677C0.860839 5.76009 1.55996 4.55245 2.37639 3.63377C2.96124 2.97568 3.63034 2.44135 4.16846 2.03202L2.53205 2.03202C2.25591 2.03202 2.03205 1.80816 2.03205 1.53202C2.03205 1.25588 2.25591 1.03202 2.53205 1.03202L5.53205 1.03202C5.80819 1.03202 6.03205 1.25588 6.03205 1.53202L6.03205 4.53202C6.03205 4.80816 5.80819 5.03202 5.53205 5.03202C5.25591 5.03202 5.03205 4.80816 5.03205 4.53202L5.03205 2.68645L5.03054 2.68759L5.03045 2.68766L5.03044 2.68767L5.03043 2.68767C4.45896 3.11868 3.76059 3.64538 3.15554 4.3262C2.44102 5.13021 1.90321 6.10154 1.90321 7.29677ZM13.0109 7.70321C13.0109 4.69115 10.8505 2.6296 8.40384 2.17029C8.12093 2.11718 7.93465 1.84479 7.98776 1.56188C8.04087 1.27898 8.31326 1.0927 8.59616 1.14581C11.4704 1.68541 14.0532 4.12605 14.0532 7.70321C14.0532 9.23988 13.3541 10.4475 12.5377 11.3662C11.9528 12.0243 11.2837 12.5586 10.7456 12.968L12.3821 12.968C12.6582 12.968 12.8821 13.1918 12.8821 13.468C12.8821 13.7441 12.6582 13.968 12.3821 13.968L9.38205 13.968C9.10591 13.968 8.88205 13.7441 8.88205 13.468L8.88205 10.468C8.88205 10.1918 9.10591 9.96796 9.38205 9.96796C9.65819 9.96796 9.88205 10.1918 9.88205 10.468L9.88205 12.3135L9.88362 12.3123C10.4551 11.8813 11.1535 11.3546 11.7585 10.6738C12.4731 9.86976 13.0109 8.89844 13.0109 7.70321Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4O = ["color"];
var UploadIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4O);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.81825 1.18188C7.64251 1.00615 7.35759 1.00615 7.18185 1.18188L4.18185 4.18188C4.00611 4.35762 4.00611 4.64254 4.18185 4.81828C4.35759 4.99401 4.64251 4.99401 4.81825 4.81828L7.05005 2.58648V9.49996C7.05005 9.74849 7.25152 9.94996 7.50005 9.94996C7.74858 9.94996 7.95005 9.74849 7.95005 9.49996V2.58648L10.1819 4.81828C10.3576 4.99401 10.6425 4.99401 10.8182 4.81828C10.994 4.64254 10.994 4.35762 10.8182 4.18188L7.81825 1.18188ZM2.5 9.99997C2.77614 9.99997 3 10.2238 3 10.5V12C3 12.5538 3.44565 13 3.99635 13H11.0012C11.5529 13 12 12.5528 12 12V10.5C12 10.2238 12.2239 9.99997 12.5 9.99997C12.7761 9.99997 13 10.2238 13 10.5V12C13 13.104 12.1062 14 11.0012 14H3.99635C2.89019 14 2 13.103 2 12V10.5C2 10.2238 2.22386 9.99997 2.5 9.99997Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4P = ["color"];
var ValueIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4P);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M0.877075 7.49988C0.877075 3.84219 3.84222 0.877045 7.49991 0.877045C11.1576 0.877045 14.1227 3.84219 14.1227 7.49988C14.1227 11.1575 11.1576 14.1227 7.49991 14.1227C3.84222 14.1227 0.877075 11.1575 0.877075 7.49988ZM7.49991 1.82704C4.36689 1.82704 1.82708 4.36686 1.82708 7.49988C1.82708 10.6329 4.36689 13.1727 7.49991 13.1727C10.6329 13.1727 13.1727 10.6329 13.1727 7.49988C13.1727 4.36686 10.6329 1.82704 7.49991 1.82704Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4Q = ["color"];
var ValueNoneIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4Q);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.49985 0.877045C3.84216 0.877045 0.877014 3.84219 0.877014 7.49988C0.877014 9.1488 1.47963 10.657 2.47665 11.8162L1.64643 12.6464C1.45117 12.8417 1.45117 13.1583 1.64643 13.3535C1.8417 13.5488 2.15828 13.5488 2.35354 13.3535L3.18377 12.5233C4.34296 13.5202 5.85104 14.1227 7.49985 14.1227C11.1575 14.1227 14.1227 11.1575 14.1227 7.49988C14.1227 5.85107 13.5202 4.34299 12.5233 3.1838L13.3535 2.35354C13.5488 2.15827 13.5488 1.84169 13.3535 1.64643C13.1583 1.45117 12.8417 1.45117 12.6464 1.64643L11.8162 2.47668C10.657 1.47966 9.14877 0.877045 7.49985 0.877045ZM11.1422 3.15066C10.1567 2.32449 8.88639 1.82704 7.49985 1.82704C4.36683 1.82704 1.82701 4.36686 1.82701 7.49988C1.82701 8.88642 2.32446 10.1568 3.15063 11.1422L11.1422 3.15066ZM3.85776 11.8493C4.84317 12.6753 6.11343 13.1727 7.49985 13.1727C10.6328 13.1727 13.1727 10.6329 13.1727 7.49988C13.1727 6.11346 12.6753 4.8432 11.8493 3.85779L3.85776 11.8493Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4R = ["color"];
var VercelLogoIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4R);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7.49998 1L6.92321 2.00307L1.17498 12L0.599976 13H1.7535H13.2464H14.4L13.825 12L8.07674 2.00307L7.49998 1ZM7.49998 3.00613L2.3285 12H12.6714L7.49998 3.00613Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4S = ["color"];
var VideoIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4S);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M4.76447 3.12199C5.63151 3.04859 6.56082 3 7.5 3C8.43918 3 9.36849 3.04859 10.2355 3.12199C11.2796 3.21037 11.9553 3.27008 12.472 3.39203C12.9425 3.50304 13.2048 3.64976 13.4306 3.88086C13.4553 3.90618 13.4902 3.94414 13.5133 3.97092C13.7126 4.20149 13.8435 4.4887 13.918 5.03283C13.9978 5.6156 14 6.37644 14 7.52493C14 8.66026 13.9978 9.41019 13.9181 9.98538C13.8439 10.5206 13.7137 10.8061 13.5125 11.0387C13.4896 11.0651 13.4541 11.1038 13.4296 11.1287C13.2009 11.3625 12.9406 11.5076 12.4818 11.6164C11.9752 11.7365 11.3143 11.7942 10.2878 11.8797C9.41948 11.9521 8.47566 12 7.5 12C6.52434 12 5.58052 11.9521 4.7122 11.8797C3.68572 11.7942 3.02477 11.7365 2.51816 11.6164C2.05936 11.5076 1.7991 11.3625 1.57037 11.1287C1.54593 11.1038 1.51035 11.0651 1.48748 11.0387C1.28628 10.8061 1.15612 10.5206 1.08193 9.98538C1.00221 9.41019 1 8.66026 1 7.52493C1 6.37644 1.00216 5.6156 1.082 5.03283C1.15654 4.4887 1.28744 4.20149 1.48666 3.97092C1.5098 3.94414 1.54468 3.90618 1.56942 3.88086C1.7952 3.64976 2.05752 3.50304 2.52796 3.39203C3.04473 3.27008 3.7204 3.21037 4.76447 3.12199ZM0 7.52493C0 5.28296 0 4.16198 0.729985 3.31713C0.766457 3.27491 0.815139 3.22194 0.854123 3.18204C1.63439 2.38339 2.64963 2.29744 4.68012 2.12555C5.56923 2.05028 6.52724 2 7.5 2C8.47276 2 9.43077 2.05028 10.3199 2.12555C12.3504 2.29744 13.3656 2.38339 14.1459 3.18204C14.1849 3.22194 14.2335 3.27491 14.27 3.31713C15 4.16198 15 5.28296 15 7.52493C15 9.74012 15 10.8477 14.2688 11.6929C14.2326 11.7348 14.1832 11.7885 14.1444 11.8281C13.3629 12.6269 12.3655 12.71 10.3709 12.8763C9.47971 12.9505 8.50782 13 7.5 13C6.49218 13 5.52028 12.9505 4.62915 12.8763C2.63446 12.71 1.63712 12.6269 0.855558 11.8281C0.816844 11.7885 0.767442 11.7348 0.731221 11.6929C0 10.8477 0 9.74012 0 7.52493ZM5.25 5.38264C5.25 5.20225 5.43522 5.08124 5.60041 5.15369L10.428 7.27105C10.6274 7.35853 10.6274 7.64147 10.428 7.72895L5.60041 9.84631C5.43522 9.91876 5.25 9.79775 5.25 9.61736V5.38264Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4T = ["color"];
var ViewGridIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4T);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M7 2H1.5C1.22386 2 1 2.22386 1 2.5V7H7V2ZM8 2V7H14V2.5C14 2.22386 13.7761 2 13.5 2H8ZM7 8H1V12.5C1 12.7761 1.22386 13 1.5 13H7V8ZM8 13V8H14V12.5C14 12.7761 13.7761 13 13.5 13H8ZM1.5 1C0.671573 1 0 1.67157 0 2.5V12.5C0 13.3284 0.671573 14 1.5 14H13.5C14.3284 14 15 13.3284 15 12.5V2.5C15 1.67157 14.3284 1 13.5 1H1.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4U = ["color"];
var ViewHorizontalIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4U);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M1.5 2H13.5C13.7761 2 14 2.22386 14 2.5V7H1V2.5C1 2.22386 1.22386 2 1.5 2ZM1 8V12.5C1 12.7761 1.22386 13 1.5 13H13.5C13.7761 13 14 12.7761 14 12.5V8H1ZM0 2.5C0 1.67157 0.671573 1 1.5 1H13.5C14.3284 1 15 1.67157 15 2.5V12.5C15 13.3284 14.3284 14 13.5 14H1.5C0.671573 14 0 13.3284 0 12.5V2.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4V = ["color"];
var ViewNoneIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4V);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M14 2.58711L1.85163 13H13.5C13.7761 13 14 12.7761 14 12.5V2.58711ZM0.762879 13.8067L0.825396 13.8796L0.854717 13.8545C1.05017 13.9478 1.26899 14 1.5 14H13.5C14.3284 14 15 13.3284 15 12.5V2.5C15 1.93949 14.6926 1.45078 14.2371 1.19331L14.1746 1.12037L14.1453 1.1455C13.9498 1.05222 13.731 1 13.5 1H1.5C0.671573 1 0 1.67157 0 2.5V12.5C0 13.0605 0.307435 13.5492 0.762879 13.8067ZM1 12.4129L13.1484 2H1.5C1.22386 2 1 2.22386 1 2.5V12.4129Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4W = ["color"];
var ViewVerticalIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4W);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M8 2H13.5C13.7761 2 14 2.22386 14 2.5V12.5C14 12.7761 13.7761 13 13.5 13H8V2ZM7 2H1.5C1.22386 2 1 2.22386 1 2.5V12.5C1 12.7761 1.22386 13 1.5 13H7V2ZM0 2.5C0 1.67157 0.671573 1 1.5 1H13.5C14.3284 1 15 1.67157 15 2.5V12.5C15 13.3284 14.3284 14 13.5 14H1.5C0.671573 14 0 13.3284 0 12.5V2.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4X = ["color"];
var WidthIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4X);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M4.81812 4.68161C4.99386 4.85734 4.99386 5.14227 4.81812 5.318L3.08632 7.0498H11.9135L10.1817 5.318C10.006 5.14227 10.006 4.85734 10.1817 4.68161C10.3575 4.50587 10.6424 4.50587 10.8181 4.68161L13.3181 7.18161C13.4939 7.35734 13.4939 7.64227 13.3181 7.818L10.8181 10.318C10.6424 10.4937 10.3575 10.4937 10.1817 10.318C10.006 10.1423 10.006 9.85734 10.1817 9.68161L11.9135 7.9498H3.08632L4.81812 9.68161C4.99386 9.85734 4.99386 10.1423 4.81812 10.318C4.64239 10.4937 4.35746 10.4937 4.18173 10.318L1.68173 7.818C1.50599 7.64227 1.50599 7.35734 1.68173 7.18161L4.18173 4.68161C4.35746 4.50587 4.64239 4.50587 4.81812 4.68161Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4Y = ["color"];
var ZoomInIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4Y);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M10 6.5C10 8.433 8.433 10 6.5 10C4.567 10 3 8.433 3 6.5C3 4.567 4.567 3 6.5 3C8.433 3 10 4.567 10 6.5ZM9.30884 10.0159C8.53901 10.6318 7.56251 11 6.5 11C4.01472 11 2 8.98528 2 6.5C2 4.01472 4.01472 2 6.5 2C8.98528 2 11 4.01472 11 6.5C11 7.56251 10.6318 8.53901 10.0159 9.30884L12.8536 12.1464C13.0488 12.3417 13.0488 12.6583 12.8536 12.8536C12.6583 13.0488 12.3417 13.0488 12.1464 12.8536L9.30884 10.0159ZM4.25 6.5C4.25 6.22386 4.47386 6 4.75 6H6V4.75C6 4.47386 6.22386 4.25 6.5 4.25C6.77614 4.25 7 4.47386 7 4.75V6H8.25C8.52614 6 8.75 6.22386 8.75 6.5C8.75 6.77614 8.52614 7 8.25 7H7V8.25C7 8.52614 6.77614 8.75 6.5 8.75C6.22386 8.75 6 8.52614 6 8.25V7H4.75C4.47386 7 4.25 6.77614 4.25 6.5Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4Z = ["color"];
var ZoomOutIcon = (0, import_react7.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose(_ref, _excluded$4Z);
  return (0, import_react7.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react7.createElement)("path", {
    d: "M6.5 10C8.433 10 10 8.433 10 6.5C10 4.567 8.433 3 6.5 3C4.567 3 3 4.567 3 6.5C3 8.433 4.567 10 6.5 10ZM6.5 11C7.56251 11 8.53901 10.6318 9.30884 10.0159L12.1464 12.8536C12.3417 13.0488 12.6583 13.0488 12.8536 12.8536C13.0488 12.6583 13.0488 12.3417 12.8536 12.1464L10.0159 9.30884C10.6318 8.53901 11 7.56251 11 6.5C11 4.01472 8.98528 2 6.5 2C4.01472 2 2 4.01472 2 6.5C2 8.98528 4.01472 11 6.5 11ZM4.75 6C4.47386 6 4.25 6.22386 4.25 6.5C4.25 6.77614 4.47386 7 4.75 7H8.25C8.52614 7 8.75 6.77614 8.75 6.5C8.75 6.22386 8.52614 6 8.25 6H4.75Z",
    fill: color,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});

// node_modules/r3f-perf/dist/components/TextsHighHZ.mjs
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var import_react24 = __toESM(require_react(), 1);

// node_modules/r3f-perf/node_modules/@react-three/drei/web/Html.js
var React = __toESM(require_react());
var ReactDOM = __toESM(require_client());
var v1 = new Vector3();
var v2 = new Vector3();
var v3 = new Vector3();
function defaultCalculatePosition(el, camera, size) {
  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);
  objectPos.project(camera);
  const widthHalf = size.width / 2;
  const heightHalf = size.height / 2;
  return [objectPos.x * widthHalf + widthHalf, -(objectPos.y * heightHalf) + heightHalf];
}
function isObjectBehindCamera(el, camera) {
  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);
  const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);
  const deltaCamObj = objectPos.sub(cameraPos);
  const camDir = camera.getWorldDirection(v3);
  return deltaCamObj.angleTo(camDir) > Math.PI / 2;
}
function isObjectVisible(el, camera, raycaster, occlude) {
  const elPos = v1.setFromMatrixPosition(el.matrixWorld);
  const screenPos = elPos.clone();
  screenPos.project(camera);
  raycaster.setFromCamera(screenPos, camera);
  const intersects = raycaster.intersectObjects(occlude, true);
  if (intersects.length) {
    const intersectionDistance = intersects[0].distance;
    const pointDistance = elPos.distanceTo(raycaster.ray.origin);
    return pointDistance < intersectionDistance;
  }
  return true;
}
function objectScale(el, camera) {
  if (camera instanceof OrthographicCamera) {
    return camera.zoom;
  } else if (camera instanceof PerspectiveCamera) {
    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);
    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);
    const vFOV = camera.fov * Math.PI / 180;
    const dist = objectPos.distanceTo(cameraPos);
    const scaleFOV = 2 * Math.tan(vFOV / 2) * dist;
    return 1 / scaleFOV;
  } else {
    return 1;
  }
}
function objectZIndex(el, camera, zIndexRange) {
  if (camera instanceof PerspectiveCamera || camera instanceof OrthographicCamera) {
    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);
    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);
    const dist = objectPos.distanceTo(cameraPos);
    const A2 = (zIndexRange[1] - zIndexRange[0]) / (camera.far - camera.near);
    const B2 = zIndexRange[1] - A2 * camera.far;
    return Math.round(A2 * dist + B2);
  }
  return void 0;
}
var epsilon = (value) => Math.abs(value) < 1e-10 ? 0 : value;
function getCSSMatrix(matrix2, multipliers, prepend = "") {
  let matrix3d = "matrix3d(";
  for (let i3 = 0; i3 !== 16; i3++) {
    matrix3d += epsilon(multipliers[i3] * matrix2.elements[i3]) + (i3 !== 15 ? "," : ")");
  }
  return prepend + matrix3d;
}
var getCameraCSSMatrix = ((multipliers) => {
  return (matrix2) => getCSSMatrix(matrix2, multipliers);
})([1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1]);
var getObjectCSSMatrix = ((scaleMultipliers) => {
  return (matrix2, factor) => getCSSMatrix(matrix2, scaleMultipliers(factor), "translate(-50%,-50%)");
})((f3) => [1 / f3, 1 / f3, 1 / f3, 1, -1 / f3, -1 / f3, -1 / f3, -1, 1 / f3, 1 / f3, 1 / f3, 1, 1, 1, 1, 1]);
function isRefObject(ref) {
  return ref && typeof ref === "object" && "current" in ref;
}
var Html = React.forwardRef(({
  children,
  eps: eps2 = 1e-3,
  style,
  className,
  prepend,
  center,
  fullscreen,
  portal,
  distanceFactor,
  sprite = false,
  transform = false,
  occlude,
  onOcclude,
  castShadow,
  receiveShadow,
  material,
  geometry,
  zIndexRange = [16777271, 0],
  calculatePosition = defaultCalculatePosition,
  as = "div",
  wrapperClass,
  pointerEvents = "auto",
  ...props
}, ref) => {
  const {
    gl,
    camera,
    scene,
    size,
    raycaster,
    events,
    viewport
  } = useThree();
  const [el] = React.useState(() => document.createElement(as));
  const root = React.useRef();
  const group = React.useRef(null);
  const oldZoom = React.useRef(0);
  const oldPosition = React.useRef([0, 0]);
  const transformOuterRef = React.useRef(null);
  const transformInnerRef = React.useRef(null);
  const target2 = (portal == null ? void 0 : portal.current) || events.connected || gl.domElement.parentNode;
  const occlusionMeshRef = React.useRef(null);
  const isMeshSizeSet = React.useRef(false);
  const isRayCastOcclusion = React.useMemo(() => {
    return occlude && occlude !== "blending" || Array.isArray(occlude) && occlude.length && isRefObject(occlude[0]);
  }, [occlude]);
  React.useLayoutEffect(() => {
    const el2 = gl.domElement;
    if (occlude && occlude === "blending") {
      el2.style.zIndex = `${Math.floor(zIndexRange[0] / 2)}`;
      el2.style.position = "absolute";
      el2.style.pointerEvents = "none";
    } else {
      el2.style.zIndex = null;
      el2.style.position = null;
      el2.style.pointerEvents = null;
    }
  }, [occlude]);
  React.useLayoutEffect(() => {
    if (group.current) {
      const currentRoot = root.current = ReactDOM.createRoot(el);
      scene.updateMatrixWorld();
      if (transform) {
        el.style.cssText = `position:absolute;top:0;left:0;pointer-events:none;overflow:hidden;`;
      } else {
        const vec = calculatePosition(group.current, camera, size);
        el.style.cssText = `position:absolute;top:0;left:0;transform:translate3d(${vec[0]}px,${vec[1]}px,0);transform-origin:0 0;`;
      }
      if (target2) {
        if (prepend)
          target2.prepend(el);
        else
          target2.appendChild(el);
      }
      return () => {
        if (target2)
          target2.removeChild(el);
        currentRoot.unmount();
      };
    }
  }, [target2, transform]);
  React.useLayoutEffect(() => {
    if (wrapperClass)
      el.className = wrapperClass;
  }, [wrapperClass]);
  const styles = React.useMemo(() => {
    if (transform) {
      return {
        position: "absolute",
        top: 0,
        left: 0,
        width: size.width,
        height: size.height,
        transformStyle: "preserve-3d",
        pointerEvents: "none"
      };
    } else {
      return {
        position: "absolute",
        transform: center ? "translate3d(-50%,-50%,0)" : "none",
        ...fullscreen && {
          top: -size.height / 2,
          left: -size.width / 2,
          width: size.width,
          height: size.height
        },
        ...style
      };
    }
  }, [style, center, fullscreen, size, transform]);
  const transformInnerStyles = React.useMemo(() => ({
    position: "absolute",
    pointerEvents
  }), [pointerEvents]);
  React.useLayoutEffect(() => {
    isMeshSizeSet.current = false;
    if (transform) {
      var _root$current;
      (_root$current = root.current) == null ? void 0 : _root$current.render(React.createElement("div", {
        ref: transformOuterRef,
        style: styles
      }, React.createElement("div", {
        ref: transformInnerRef,
        style: transformInnerStyles
      }, React.createElement("div", {
        ref,
        className,
        style,
        children
      }))));
    } else {
      var _root$current2;
      (_root$current2 = root.current) == null ? void 0 : _root$current2.render(React.createElement("div", {
        ref,
        style: styles,
        className,
        children
      }));
    }
  });
  const visible = React.useRef(true);
  useFrame((gl2) => {
    if (group.current) {
      camera.updateMatrixWorld();
      group.current.updateWorldMatrix(true, false);
      const vec = transform ? oldPosition.current : calculatePosition(group.current, camera, size);
      if (transform || Math.abs(oldZoom.current - camera.zoom) > eps2 || Math.abs(oldPosition.current[0] - vec[0]) > eps2 || Math.abs(oldPosition.current[1] - vec[1]) > eps2) {
        const isBehindCamera = isObjectBehindCamera(group.current, camera);
        let raytraceTarget = false;
        if (isRayCastOcclusion) {
          if (occlude !== "blending") {
            raytraceTarget = [scene];
          } else if (Array.isArray(occlude)) {
            raytraceTarget = occlude.map((item) => item.current);
          }
        }
        const previouslyVisible = visible.current;
        if (raytraceTarget) {
          const isvisible = isObjectVisible(group.current, camera, raycaster, raytraceTarget);
          visible.current = isvisible && !isBehindCamera;
        } else {
          visible.current = !isBehindCamera;
        }
        if (previouslyVisible !== visible.current) {
          if (onOcclude)
            onOcclude(!visible.current);
          else
            el.style.display = visible.current ? "block" : "none";
        }
        const halfRange = Math.floor(zIndexRange[0] / 2);
        const zRange = occlude ? isRayCastOcclusion ? [zIndexRange[0], halfRange] : [halfRange - 1, 0] : zIndexRange;
        el.style.zIndex = `${objectZIndex(group.current, camera, zRange)}`;
        if (transform) {
          const [widthHalf, heightHalf] = [size.width / 2, size.height / 2];
          const fov = camera.projectionMatrix.elements[5] * heightHalf;
          const {
            isOrthographicCamera: isOrthographicCamera2,
            top,
            left,
            bottom,
            right
          } = camera;
          const cameraMatrix = getCameraCSSMatrix(camera.matrixWorldInverse);
          const cameraTransform = isOrthographicCamera2 ? `scale(${fov})translate(${epsilon(-(right + left) / 2)}px,${epsilon((top + bottom) / 2)}px)` : `translateZ(${fov}px)`;
          let matrix2 = group.current.matrixWorld;
          if (sprite) {
            matrix2 = camera.matrixWorldInverse.clone().transpose().copyPosition(matrix2).scale(group.current.scale);
            matrix2.elements[3] = matrix2.elements[7] = matrix2.elements[11] = 0;
            matrix2.elements[15] = 1;
          }
          el.style.width = size.width + "px";
          el.style.height = size.height + "px";
          el.style.perspective = isOrthographicCamera2 ? "" : `${fov}px`;
          if (transformOuterRef.current && transformInnerRef.current) {
            transformOuterRef.current.style.transform = `${cameraTransform}${cameraMatrix}translate(${widthHalf}px,${heightHalf}px)`;
            transformInnerRef.current.style.transform = getObjectCSSMatrix(matrix2, 1 / ((distanceFactor || 10) / 400));
          }
        } else {
          const scale2 = distanceFactor === void 0 ? 1 : objectScale(group.current, camera) * distanceFactor;
          el.style.transform = `translate3d(${vec[0]}px,${vec[1]}px,0) scale(${scale2})`;
        }
        oldPosition.current = vec;
        oldZoom.current = camera.zoom;
      }
    }
    if (!isRayCastOcclusion && occlusionMeshRef.current && !isMeshSizeSet.current) {
      if (transform) {
        if (transformOuterRef.current) {
          const el2 = transformOuterRef.current.children[0];
          if (el2 != null && el2.clientWidth && el2 != null && el2.clientHeight) {
            const {
              isOrthographicCamera: isOrthographicCamera2
            } = camera;
            if (isOrthographicCamera2 || geometry) {
              if (props.scale) {
                if (!Array.isArray(props.scale)) {
                  occlusionMeshRef.current.scale.setScalar(1 / props.scale);
                } else if (props.scale instanceof Vector3) {
                  occlusionMeshRef.current.scale.copy(props.scale.clone().divideScalar(1));
                } else {
                  occlusionMeshRef.current.scale.set(1 / props.scale[0], 1 / props.scale[1], 1 / props.scale[2]);
                }
              }
            } else {
              const ratio = (distanceFactor || 10) / 400;
              const w2 = el2.clientWidth * ratio;
              const h2 = el2.clientHeight * ratio;
              occlusionMeshRef.current.scale.set(w2, h2, 1);
            }
            isMeshSizeSet.current = true;
          }
        }
      } else {
        const ele = el.children[0];
        if (ele != null && ele.clientWidth && ele != null && ele.clientHeight) {
          const ratio = 1 / viewport.factor;
          const w2 = ele.clientWidth * ratio;
          const h2 = ele.clientHeight * ratio;
          occlusionMeshRef.current.scale.set(w2, h2, 1);
          isMeshSizeSet.current = true;
        }
        occlusionMeshRef.current.lookAt(gl2.camera.position);
      }
    }
  });
  const shaders = React.useMemo(() => ({
    vertexShader: !transform ? (
      /* glsl */
      `
          /*
            This shader is from the THREE's SpriteMaterial.
            We need to turn the backing plane into a Sprite
            (make it always face the camera) if "transfrom" 
            is false. 
          */
          #include <common>

          void main() {
            vec2 center = vec2(0., 1.);
            float rotation = 0.0;
            
            // This is somewhat arbitrary, but it seems to work well
            // Need to figure out how to derive this dynamically if it even matters
            float size = 0.03;

            vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
            vec2 scale;
            scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
            scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );

            bool isPerspective = isPerspectiveMatrix( projectionMatrix );
            if ( isPerspective ) scale *= - mvPosition.z;

            vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale * size;
            vec2 rotatedPosition;
            rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
            rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
            mvPosition.xy += rotatedPosition;

            gl_Position = projectionMatrix * mvPosition;
          }
      `
    ) : void 0,
    fragmentShader: (
      /* glsl */
      `
        void main() {
          gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
        }
      `
    )
  }), [transform]);
  return React.createElement("group", _extends({}, props, {
    ref: group
  }), occlude && !isRayCastOcclusion && React.createElement("mesh", {
    castShadow,
    receiveShadow,
    ref: occlusionMeshRef
  }, geometry || React.createElement("planeGeometry", null), material || React.createElement("shaderMaterial", {
    side: DoubleSide,
    vertexShader: shaders.vertexShader,
    fragmentShader: shaders.fragmentShader
  })));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/web/CycleRaycast.js
var React2 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/web/useCursor.js
var React3 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/web/Loader.js
var React4 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/node_modules/zustand/esm/index.js
var import_react8 = __toESM(require_react());
function createStore2(createState) {
  let state;
  const listeners = /* @__PURE__ */ new Set();
  const setState = (partial, replace) => {
    const nextState = typeof partial === "function" ? partial(state) : partial;
    if (nextState !== state) {
      const previousState = state;
      state = replace ? nextState : Object.assign({}, state, nextState);
      listeners.forEach((listener) => listener(state, previousState));
    }
  };
  const getState = () => state;
  const subscribeWithSelector2 = (listener, selector = getState, equalityFn = Object.is) => {
    console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");
    let currentSlice = selector(state);
    function listenerToAdd() {
      const nextSlice = selector(state);
      if (!equalityFn(currentSlice, nextSlice)) {
        const previousSlice = currentSlice;
        listener(currentSlice = nextSlice, previousSlice);
      }
    }
    listeners.add(listenerToAdd);
    return () => listeners.delete(listenerToAdd);
  };
  const subscribe = (listener, selector, equalityFn) => {
    if (selector || equalityFn) {
      return subscribeWithSelector2(listener, selector, equalityFn);
    }
    listeners.add(listener);
    return () => listeners.delete(listener);
  };
  const destroy = () => listeners.clear();
  const api = { setState, getState, subscribe, destroy };
  state = createState(setState, getState, api);
  return api;
}
var isSSR = typeof window === "undefined" || !window.navigator || /ServerSideRendering|^Deno\//.test(window.navigator.userAgent);
var useIsomorphicLayoutEffect = isSSR ? import_react8.useEffect : import_react8.useLayoutEffect;
function create2(createState) {
  const api = typeof createState === "function" ? createStore2(createState) : createState;
  const useStore2 = (selector = api.getState, equalityFn = Object.is) => {
    const [, forceUpdate] = (0, import_react8.useReducer)((c2) => c2 + 1, 0);
    const state = api.getState();
    const stateRef = (0, import_react8.useRef)(state);
    const selectorRef = (0, import_react8.useRef)(selector);
    const equalityFnRef = (0, import_react8.useRef)(equalityFn);
    const erroredRef = (0, import_react8.useRef)(false);
    const currentSliceRef = (0, import_react8.useRef)();
    if (currentSliceRef.current === void 0) {
      currentSliceRef.current = selector(state);
    }
    let newStateSlice;
    let hasNewStateSlice = false;
    if (stateRef.current !== state || selectorRef.current !== selector || equalityFnRef.current !== equalityFn || erroredRef.current) {
      newStateSlice = selector(state);
      hasNewStateSlice = !equalityFn(currentSliceRef.current, newStateSlice);
    }
    useIsomorphicLayoutEffect(() => {
      if (hasNewStateSlice) {
        currentSliceRef.current = newStateSlice;
      }
      stateRef.current = state;
      selectorRef.current = selector;
      equalityFnRef.current = equalityFn;
      erroredRef.current = false;
    });
    const stateBeforeSubscriptionRef = (0, import_react8.useRef)(state);
    useIsomorphicLayoutEffect(() => {
      const listener = () => {
        try {
          const nextState = api.getState();
          const nextStateSlice = selectorRef.current(nextState);
          if (!equalityFnRef.current(currentSliceRef.current, nextStateSlice)) {
            stateRef.current = nextState;
            currentSliceRef.current = nextStateSlice;
            forceUpdate();
          }
        } catch (error) {
          erroredRef.current = true;
          forceUpdate();
        }
      };
      const unsubscribe = api.subscribe(listener);
      if (api.getState() !== stateBeforeSubscriptionRef.current) {
        listener();
      }
      return unsubscribe;
    }, []);
    const sliceToReturn = hasNewStateSlice ? newStateSlice : currentSliceRef.current;
    (0, import_react8.useDebugValue)(sliceToReturn);
    return sliceToReturn;
  };
  Object.assign(useStore2, api);
  useStore2[Symbol.iterator] = function() {
    console.warn("[useStore, api] = create() is deprecated and will be removed in v4");
    const items = [useStore2, api];
    return {
      next() {
        const done = items.length <= 0;
        return { value: items.shift(), done };
      }
    };
  };
  return useStore2;
}

// node_modules/r3f-perf/node_modules/@react-three/drei/core/useProgress.js
var create3 = create2.default || create2;
var saveLastTotalLoaded = 0;
var useProgress = create3((set) => {
  DefaultLoadingManager.onStart = (item, loaded, total) => {
    set({
      active: true,
      item,
      loaded,
      total,
      progress: (loaded - saveLastTotalLoaded) / (total - saveLastTotalLoaded) * 100
    });
  };
  DefaultLoadingManager.onLoad = () => {
    set({
      active: false
    });
  };
  DefaultLoadingManager.onError = (item) => set((state) => ({
    errors: [...state.errors, item]
  }));
  DefaultLoadingManager.onProgress = (item, loaded, total) => {
    if (loaded === total) {
      saveLastTotalLoaded = total;
    }
    set({
      active: true,
      item,
      loaded,
      total,
      progress: (loaded - saveLastTotalLoaded) / (total - saveLastTotalLoaded) * 100 || 100
    });
  };
  return {
    errors: [],
    active: false,
    progress: 0,
    item: "",
    loaded: 0,
    total: 0
  };
});

// node_modules/r3f-perf/node_modules/@react-three/drei/web/ScrollControls.js
var React5 = __toESM(require_react());
var ReactDOM2 = __toESM(require_client());
var context2 = React5.createContext(null);
function useScroll() {
  return React5.useContext(context2);
}
var ScrollCanvas = React5.forwardRef(({
  children
}, ref) => {
  const group = React5.useRef(null);
  const state = useScroll();
  const {
    width,
    height
  } = useThree((state2) => state2.viewport);
  useFrame(() => {
    group.current.position.x = state.horizontal ? -width * (state.pages - 1) * state.offset : 0;
    group.current.position.y = state.horizontal ? 0 : height * (state.pages - 1) * state.offset;
  });
  return React5.createElement("group", {
    ref: react_merge_refs_esm_default([ref, group])
  }, children);
});
var ScrollHtml = React5.forwardRef(({
  children,
  style,
  ...props
}, ref) => {
  const state = useScroll();
  const group = React5.useRef(null);
  const {
    width,
    height
  } = useThree((state2) => state2.size);
  const fiberState = React5.useContext(context);
  const root = React5.useMemo(() => ReactDOM2.createRoot(state.fixed), [state.fixed]);
  useFrame(() => {
    if (state.delta > state.eps) {
      group.current.style.transform = `translate3d(${state.horizontal ? -width * (state.pages - 1) * state.offset : 0}px,${state.horizontal ? 0 : height * (state.pages - 1) * -state.offset}px,0)`;
    }
  });
  root.render(React5.createElement("div", _extends({
    ref: react_merge_refs_esm_default([ref, group]),
    style: {
      ...style,
      position: "absolute",
      top: 0,
      left: 0,
      willChange: "transform"
    }
  }, props), React5.createElement(context2.Provider, {
    value: state
  }, React5.createElement(context.Provider, {
    value: fiberState
  }, children))));
  return null;
});
var Scroll = React5.forwardRef(({
  html,
  ...props
}, ref) => {
  const El = html ? ScrollHtml : ScrollCanvas;
  return React5.createElement(El, _extends({
    ref
  }, props));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/web/PresentationControls.js
var React6 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/web/KeyboardControls.js
var React7 = __toESM(require_react());
var create4 = create2.default || create2;
var context3 = React7.createContext(null);

// node_modules/r3f-perf/node_modules/@react-three/drei/web/Select.js
var React8 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/node_modules/zustand/esm/shallow.js
function shallow2(objA, objB) {
  if (Object.is(objA, objB)) {
    return true;
  }
  if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) {
    return false;
  }
  const keysA = Object.keys(objA);
  if (keysA.length !== Object.keys(objB).length) {
    return false;
  }
  for (let i3 = 0; i3 < keysA.length; i3++) {
    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i3]) || !Object.is(objA[keysA[i3]], objB[keysA[i3]])) {
      return false;
    }
  }
  return true;
}

// node_modules/r3f-perf/node_modules/@react-three/drei/web/Select.js
var shallow3 = shallow2.default || shallow2;
var context4 = React8.createContext([]);

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Billboard.js
var React9 = __toESM(require_react());
var Billboard = React9.forwardRef(function Billboard2({
  follow = true,
  lockX = false,
  lockY = false,
  lockZ = false,
  ...props
}, ref) {
  const localRef = React9.useRef();
  useFrame(({
    camera
  }) => {
    if (!follow || !localRef.current)
      return;
    const prevRotation = localRef.current.rotation.clone();
    camera.getWorldQuaternion(localRef.current.quaternion);
    if (lockX)
      localRef.current.rotation.x = prevRotation.x;
    if (lockY)
      localRef.current.rotation.y = prevRotation.y;
    if (lockZ)
      localRef.current.rotation.z = prevRotation.z;
  });
  return React9.createElement("group", _extends({
    ref: react_merge_refs_esm_default([localRef, ref])
  }, props));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/ScreenSpace.js
var React10 = __toESM(require_react());
var ScreenSpace = React10.forwardRef(({
  children,
  depth = -1,
  ...rest
}, ref) => {
  const localRef = React10.useRef(null);
  useFrame(({
    camera
  }) => {
    localRef.current.quaternion.copy(camera.quaternion);
    localRef.current.position.copy(camera.position);
  });
  return React10.createElement("group", _extends({
    ref: react_merge_refs_esm_default([ref, localRef])
  }, rest), React10.createElement("group", {
    "position-z": -depth
  }, children));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/QuadraticBezierLine.js
var React12 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Line.js
var React11 = __toESM(require_react());
var Line = React11.forwardRef(function Line4({
  points,
  color = "black",
  vertexColors,
  linewidth,
  lineWidth,
  segments,
  dashed,
  ...rest
}, ref) {
  const size = useThree((state) => state.size);
  const line2 = React11.useMemo(() => segments ? new LineSegments2() : new Line2(), [segments]);
  const [lineMaterial] = React11.useState(() => new LineMaterial());
  const lineGeom = React11.useMemo(() => {
    const geom = segments ? new LineSegmentsGeometry() : new LineGeometry();
    const pValues = points.map((p2) => {
      const isArray2 = Array.isArray(p2);
      return p2 instanceof Vector3 ? [p2.x, p2.y, p2.z] : p2 instanceof Vector2 ? [p2.x, p2.y, 0] : isArray2 && p2.length === 3 ? [p2[0], p2[1], p2[2]] : isArray2 && p2.length === 2 ? [p2[0], p2[1], 0] : p2;
    });
    geom.setPositions(pValues.flat());
    if (vertexColors) {
      const cValues = vertexColors.map((c2) => c2 instanceof Color ? c2.toArray() : c2);
      geom.setColors(cValues.flat());
    }
    return geom;
  }, [points, segments, vertexColors]);
  React11.useLayoutEffect(() => {
    line2.computeLineDistances();
  }, [points, line2]);
  React11.useLayoutEffect(() => {
    if (dashed) {
      lineMaterial.defines.USE_DASH = "";
    } else {
      delete lineMaterial.defines.USE_DASH;
    }
    lineMaterial.needsUpdate = true;
  }, [dashed, lineMaterial]);
  React11.useEffect(() => {
    return () => lineGeom.dispose();
  }, [lineGeom]);
  return React11.createElement("primitive", _extends({
    object: line2,
    ref
  }, rest), React11.createElement("primitive", {
    object: lineGeom,
    attach: "geometry"
  }), React11.createElement("primitive", _extends({
    object: lineMaterial,
    attach: "material",
    color,
    vertexColors: Boolean(vertexColors),
    resolution: [size.width, size.height],
    linewidth: linewidth !== null && linewidth !== void 0 ? linewidth : lineWidth,
    dashed
  }, rest)));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/QuadraticBezierLine.js
var v4 = new Vector3();
var QuadraticBezierLine = React12.forwardRef(function QuadraticBezierLine2({
  start = [0, 0, 0],
  end = [0, 0, 0],
  mid,
  segments = 20,
  ...rest
}, forwardref) {
  const ref = React12.useRef(null);
  const [curve] = React12.useState(() => new QuadraticBezierCurve3(void 0, void 0, void 0));
  const getPoints = React12.useCallback((start2, end2, mid2, segments2 = 20) => {
    if (start2 instanceof Vector3)
      curve.v0.copy(start2);
    else
      curve.v0.set(...start2);
    if (end2 instanceof Vector3)
      curve.v2.copy(end2);
    else
      curve.v2.set(...end2);
    if (mid2 instanceof Vector3) {
      curve.v1.copy(mid2);
    } else if (Array.isArray(mid2)) {
      curve.v1.set(...mid2);
    } else {
      curve.v1.copy(curve.v0.clone().add(curve.v2.clone().sub(curve.v0)).add(v4.set(0, curve.v0.y - curve.v2.y, 0)));
    }
    return curve.getPoints(segments2);
  }, []);
  React12.useLayoutEffect(() => {
    ref.current.setPoints = (start2, end2, mid2) => {
      const points2 = getPoints(start2, end2, mid2);
      if (ref.current.geometry)
        ref.current.geometry.setPositions(points2.map((p2) => p2.toArray()).flat());
    };
  }, []);
  const points = React12.useMemo(() => getPoints(start, end, mid, segments), [start, end, mid, segments]);
  return React12.createElement(Line, _extends({
    ref: react_merge_refs_esm_default([ref, forwardref]),
    points
  }, rest));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/CubicBezierLine.js
var React13 = __toESM(require_react());
var CubicBezierLine = React13.forwardRef(function CubicBezierLine2({
  start,
  end,
  midA,
  midB,
  segments = 20,
  ...rest
}, ref) {
  const points = React13.useMemo(() => {
    const startV = start instanceof Vector3 ? start : new Vector3(...start);
    const endV = end instanceof Vector3 ? end : new Vector3(...end);
    const midAV = midA instanceof Vector3 ? midA : new Vector3(...midA);
    const midBV = midB instanceof Vector3 ? midB : new Vector3(...midB);
    const interpolatedV = new CubicBezierCurve3(startV, midAV, midBV, endV).getPoints(segments);
    return interpolatedV;
  }, [start, end, midA, midB, segments]);
  return React13.createElement(Line, _extends({
    ref,
    points
  }, rest));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/CatmullRomLine.js
var React14 = __toESM(require_react());
var CatmullRomLine = React14.forwardRef(function CatmullRomLine2({
  points,
  closed = false,
  curveType = "centripetal",
  tension = 0.5,
  segments = 20,
  vertexColors,
  ...rest
}, ref) {
  const curve = React14.useMemo(() => {
    const mappedPoints = points.map((pt) => pt instanceof Vector3 ? pt : new Vector3(...pt));
    return new CatmullRomCurve3(mappedPoints, closed, curveType, tension);
  }, [points, closed, curveType, tension]);
  const segmentedPoints = React14.useMemo(() => curve.getPoints(segments), [curve, segments]);
  const interpolatedVertexColors = React14.useMemo(() => {
    if (!vertexColors || vertexColors.length < 2)
      return void 0;
    if (vertexColors.length === segments + 1)
      return vertexColors;
    const mappedColors = vertexColors.map((color) => color instanceof Color ? color : new Color(...color));
    if (closed)
      mappedColors.push(mappedColors[0].clone());
    const iColors = [mappedColors[0]];
    const divisions = segments / (mappedColors.length - 1);
    for (let i3 = 1; i3 < segments; i3++) {
      const alpha = i3 % divisions / divisions;
      const colorIndex = Math.floor(i3 / divisions);
      iColors.push(mappedColors[colorIndex].clone().lerp(mappedColors[colorIndex + 1], alpha));
    }
    iColors.push(mappedColors[mappedColors.length - 1]);
    return iColors;
  }, [vertexColors, segments]);
  return React14.createElement(Line, _extends({
    ref,
    points: segmentedPoints,
    vertexColors: interpolatedVertexColors
  }, rest));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/PositionalAudio.js
var React15 = __toESM(require_react());
var PositionalAudio = React15.forwardRef(({
  url,
  distance = 1,
  loop = true,
  autoplay,
  ...props
}, ref) => {
  const sound = React15.useRef();
  const camera = useThree(({
    camera: camera2
  }) => camera2);
  const [listener] = React15.useState(() => new AudioListener());
  const buffer = useLoader(AudioLoader, url);
  React15.useEffect(() => {
    const _sound = sound.current;
    if (_sound) {
      _sound.setBuffer(buffer);
      _sound.setRefDistance(distance);
      _sound.setLoop(loop);
      if (autoplay && !_sound.isPlaying)
        _sound.play();
    }
  }, [buffer, camera, distance, loop]);
  React15.useEffect(() => {
    const _sound = sound.current;
    camera.add(listener);
    return () => {
      camera.remove(listener);
      if (_sound) {
        if (_sound.isPlaying)
          _sound.stop();
        if (_sound.source && _sound.source._connected)
          _sound.disconnect();
      }
    };
  }, []);
  return React15.createElement("positionalAudio", _extends({
    ref: react_merge_refs_esm_default([sound, ref]),
    args: [listener]
  }, props));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Text.js
var React16 = __toESM(require_react());
var Text2 = React16.forwardRef(({
  sdfGlyphSize = 64,
  anchorX = "center",
  anchorY = "middle",
  font,
  fontSize = 1,
  children,
  characters,
  onSync,
  ...props
}, ref) => {
  const invalidate = useThree(({
    invalidate: invalidate2
  }) => invalidate2);
  const [troikaMesh] = React16.useState(() => new Text());
  const [nodes, text] = React16.useMemo(() => {
    const n2 = [];
    let t2 = "";
    React16.Children.forEach(children, (child) => {
      if (typeof child === "string" || typeof child === "number") {
        t2 += child;
      } else {
        n2.push(child);
      }
    });
    return [n2, t2];
  }, [children]);
  suspend(() => new Promise((res) => preloadFont({
    font,
    characters
  }, res)), ["troika-text", font, characters]);
  React16.useLayoutEffect(() => void troikaMesh.sync(() => {
    invalidate();
    if (onSync)
      onSync(troikaMesh);
  }));
  React16.useEffect(() => {
    return () => troikaMesh.dispose();
  }, [troikaMesh]);
  return React16.createElement("primitive", _extends({
    object: troikaMesh,
    ref,
    font,
    text,
    anchorX,
    anchorY,
    fontSize,
    sdfGlyphSize
  }, props), nodes);
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Text3D.js
var React17 = __toESM(require_react());
var import_react10 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/useFont.js
var fontLoader = null;
async function loader(font) {
  if (!fontLoader)
    fontLoader = new FontLoader();
  let data = typeof font === "string" ? await (await fetch(font)).json() : font;
  return fontLoader.parse(data);
}
function useFont(font) {
  return suspend(loader, [font]);
}
useFont.preload = (font) => preload(loader, [font]);
useFont.clear = (font) => clear([font]);

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Text3D.js
var types = ["string", "number"];
var getTextFromChildren = (children) => {
  let label = "";
  const rest = [];
  React17.Children.forEach(children, (child) => {
    if (types.includes(typeof child))
      label += child + "";
    else
      rest.push(child);
  });
  return [label, ...rest];
};
var Text3D = React17.forwardRef(({
  font: _font,
  letterSpacing = 0,
  lineHeight = 1,
  size = 1,
  height = 0.2,
  bevelThickness = 0.1,
  bevelSize = 0.01,
  bevelEnabled = false,
  bevelOffset = 0,
  bevelSegments = 4,
  curveSegments = 8,
  smooth,
  children,
  ...props
}, fref) => {
  React17.useMemo(() => extend({
    RenamedTextGeometry: TextGeometry
  }), []);
  const ref = React17.useRef(null);
  const font = useFont(_font);
  const opts = (0, import_react10.useMemo)(() => {
    return {
      font,
      size,
      height,
      bevelThickness,
      bevelSize,
      bevelEnabled,
      bevelSegments,
      bevelOffset,
      curveSegments,
      letterSpacing,
      lineHeight
    };
  }, [font, size, height, bevelThickness, bevelSize, bevelEnabled, bevelSegments, bevelOffset, curveSegments, letterSpacing, lineHeight]);
  const [label, ...rest] = (0, import_react10.useMemo)(() => getTextFromChildren(children), [children]);
  const args = React17.useMemo(() => [label, opts], [label, opts]);
  React17.useLayoutEffect(() => {
    if (smooth) {
      ref.current.geometry = mergeVertices(ref.current.geometry, smooth);
      ref.current.geometry.computeVertexNormals();
    }
  }, [args, smooth]);
  React17.useImperativeHandle(fref, () => ref.current, []);
  return React17.createElement("mesh", _extends({}, props, {
    ref
  }), React17.createElement("renamedTextGeometry", {
    args
  }), rest);
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Effects.js
var React18 = __toESM(require_react());
var Effects = React18.forwardRef(({
  children,
  multisamping = 8,
  renderIndex = 1,
  disableRender,
  disableGamma,
  disableRenderPass,
  depthBuffer = true,
  stencilBuffer = false,
  anisotropy = 1,
  encoding,
  type,
  ...props
}, ref) => {
  React18.useMemo(() => extend({
    EffectComposer,
    RenderPass,
    ShaderPass
  }), []);
  const composer = React18.useRef();
  const {
    scene,
    camera,
    gl,
    size,
    viewport
  } = useThree();
  const [target2] = React18.useState(() => {
    const t2 = new WebGLRenderTarget(size.width, size.height, {
      type: type || HalfFloatType,
      format: RGBAFormat,
      depthBuffer,
      stencilBuffer,
      anisotropy
    });
    if (type === UnsignedByteType && encoding != null) {
      if ("colorSpace" in t2)
        t2.texture.colorSpace = encoding;
      else
        t2.texture.encoding = encoding;
    }
    t2.samples = multisamping;
    return t2;
  });
  React18.useEffect(() => {
    var _composer$current, _composer$current2;
    (_composer$current = composer.current) == null ? void 0 : _composer$current.setSize(size.width, size.height);
    (_composer$current2 = composer.current) == null ? void 0 : _composer$current2.setPixelRatio(viewport.dpr);
  }, [gl, size, viewport.dpr]);
  useFrame(() => {
    var _composer$current3;
    if (!disableRender)
      (_composer$current3 = composer.current) == null ? void 0 : _composer$current3.render();
  }, renderIndex);
  const passes = [];
  if (!disableRenderPass)
    passes.push(React18.createElement("renderPass", {
      key: "renderpass",
      attach: `passes-${passes.length}`,
      args: [scene, camera]
    }));
  if (!disableGamma)
    passes.push(React18.createElement("shaderPass", {
      attach: `passes-${passes.length}`,
      key: "gammapass",
      args: [GammaCorrectionShader]
    }));
  React18.Children.forEach(children, (el) => {
    el && passes.push(React18.cloneElement(el, {
      key: passes.length,
      attach: `passes-${passes.length}`
    }));
  });
  return React18.createElement("effectComposer", _extends({
    ref: react_merge_refs_esm_default([ref, composer]),
    args: [gl, target2]
  }, props), passes);
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/GradientTexture.js
var React19 = __toESM(require_react());
var GradientType = function(GradientType2) {
  GradientType2["Linear"] = "linear";
  GradientType2["Radial"] = "radial";
  return GradientType2;
}({});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Image.js
var React20 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/shaderMaterial.js
function shaderMaterial(uniforms, vertexShader, fragmentShader, onInit) {
  const material = class material extends ShaderMaterial {
    constructor(parameters = {}) {
      const entries = Object.entries(uniforms);
      super({
        uniforms: entries.reduce((acc, [name, value]) => {
          const uniform = UniformsUtils.clone({
            [name]: {
              value
            }
          });
          return {
            ...acc,
            ...uniform
          };
        }, {}),
        vertexShader,
        fragmentShader
      });
      this.key = "";
      entries.forEach(([name]) => Object.defineProperty(this, name, {
        get: () => this.uniforms[name].value,
        set: (v5) => this.uniforms[name].value = v5
      }));
      Object.assign(this, parameters);
      if (onInit)
        onInit(this);
    }
  };
  material.key = MathUtils.generateUUID();
  return material;
}

// node_modules/r3f-perf/node_modules/@react-three/drei/core/useTexture.js
var import_react11 = __toESM(require_react());
var IsObject = (url) => url === Object(url) && !Array.isArray(url) && typeof url !== "function";
function useTexture(input, onLoad) {
  const gl = useThree((state) => state.gl);
  const textures = useLoader(TextureLoader, IsObject(input) ? Object.values(input) : input);
  (0, import_react11.useLayoutEffect)(() => {
    onLoad == null ? void 0 : onLoad(textures);
  }, [onLoad]);
  (0, import_react11.useEffect)(() => {
    const array = Array.isArray(textures) ? textures : [textures];
    array.forEach(gl.initTexture);
  }, [gl, textures]);
  if (IsObject(input)) {
    const keys = Object.keys(input);
    const keyed = {};
    keys.forEach((key) => Object.assign(keyed, {
      [key]: textures[keys.indexOf(key)]
    }));
    return keyed;
  } else {
    return textures;
  }
}
useTexture.preload = (url) => useLoader.preload(TextureLoader, url);
useTexture.clear = (input) => useLoader.clear(TextureLoader, input);

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Image.js
var ImageMaterialImpl = shaderMaterial(
  {
    color: new Color("white"),
    scale: [1, 1],
    imageBounds: [1, 1],
    map: null,
    zoom: 1,
    grayscale: 0,
    opacity: 1
  },
  /* glsl */
  `
  varying vec2 vUv;
  void main() {
    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);
    vUv = uv;
  }
`,
  /* glsl */
  `
  // mostly from https://gist.github.com/statico/df64c5d167362ecf7b34fca0b1459a44
  varying vec2 vUv;
  uniform vec2 scale;
  uniform vec2 imageBounds;
  uniform vec3 color;
  uniform sampler2D map;
  uniform float zoom;
  uniform float grayscale;
  uniform float opacity;
  const vec3 luma = vec3(.299, 0.587, 0.114);
  vec4 toGrayscale(vec4 color, float intensity) {
    return vec4(mix(color.rgb, vec3(dot(color.rgb, luma)), intensity), color.a);
  }
  vec2 aspect(vec2 size) {
    return size / min(size.x, size.y);
  }
  void main() {
    vec2 s = aspect(scale);
    vec2 i = aspect(imageBounds);
    float rs = s.x / s.y;
    float ri = i.x / i.y;
    vec2 new = rs < ri ? vec2(i.x * s.y / i.y, s.y) : vec2(s.x, i.y * s.x / i.x);
    vec2 offset = (rs < ri ? vec2((new.x - s.x) / 2.0, 0.0) : vec2(0.0, (new.y - s.y) / 2.0)) / new;
    vec2 uv = vUv * s / new + offset;
    vec2 zUv = (uv - vec2(0.5, 0.5)) / zoom + vec2(0.5, 0.5);
    gl_FragColor = toGrayscale(texture2D(map, zUv) * vec4(color, opacity), grayscale);
    
    #include <tonemapping_fragment>
    #include <encodings_fragment>
  }
`
);
var ImageBase = React20.forwardRef(({
  children,
  color,
  segments = 1,
  scale: scale2 = 1,
  zoom = 1,
  grayscale = 0,
  opacity = 1,
  texture,
  toneMapped,
  transparent,
  ...props
}, ref) => {
  extend({
    ImageMaterial: ImageMaterialImpl
  });
  const planeBounds = Array.isArray(scale2) ? [scale2[0], scale2[1]] : [scale2, scale2];
  const imageBounds = [texture.image.width, texture.image.height];
  return React20.createElement("mesh", _extends({
    ref,
    scale: Array.isArray(scale2) ? [...scale2, 1] : scale2
  }, props), React20.createElement("planeGeometry", {
    args: [1, 1, segments, segments]
  }), React20.createElement("imageMaterial", {
    color,
    map: texture,
    zoom,
    grayscale,
    opacity,
    scale: planeBounds,
    imageBounds,
    toneMapped,
    transparent
  }), children);
});
var ImageWithUrl = React20.forwardRef(({
  url,
  ...props
}, ref) => {
  const texture = useTexture(url);
  return React20.createElement(ImageBase, _extends({}, props, {
    texture,
    ref
  }));
});
var ImageWithTexture = React20.forwardRef(({
  url: _url,
  ...props
}, ref) => {
  return React20.createElement(ImageBase, _extends({}, props, {
    ref
  }));
});
var Image = React20.forwardRef((props, ref) => {
  if (props.url)
    return React20.createElement(ImageWithUrl, _extends({}, props, {
      ref
    }));
  else if (props.texture)
    return React20.createElement(ImageWithTexture, _extends({}, props, {
      ref
    }));
  else
    throw new Error("<Image /> requires a url or texture");
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Edges.js
var React21 = __toESM(require_react());
var Edges = React21.forwardRef(({
  userData,
  children,
  geometry,
  threshold = 15,
  color = "black",
  ...props
}, fref) => {
  const ref = React21.useRef(null);
  React21.useLayoutEffect(() => {
    const parent = ref.current.parent;
    if (parent) {
      const geom = geometry || parent.geometry;
      if (geom !== ref.current.userData.currentGeom || threshold !== ref.current.userData.currentThreshold) {
        ref.current.userData.currentGeom = geom;
        ref.current.userData.currentThreshold = threshold;
        ref.current.geometry = new EdgesGeometry(geom, threshold);
      }
    }
  });
  React21.useImperativeHandle(fref, () => ref.current);
  return React21.createElement("lineSegments", _extends({
    ref,
    raycast: () => null
  }, props), children ? children : React21.createElement("lineBasicMaterial", {
    color
  }));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Trail.js
var React22 = __toESM(require_react());
var defaults = {
  width: 0.2,
  length: 1,
  decay: 1,
  local: false,
  stride: 0,
  interval: 1
};
var shiftLeft = (collection, steps = 1) => {
  collection.set(collection.subarray(steps));
  collection.fill(-Infinity, -steps);
  return collection;
};
function useTrail(target2, settings) {
  const {
    length,
    local,
    decay,
    interval,
    stride
  } = {
    ...defaults,
    ...settings
  };
  const points = React22.useRef();
  const [worldPosition] = React22.useState(() => new Vector3());
  React22.useLayoutEffect(() => {
    if (target2) {
      points.current = Float32Array.from({
        length: length * 10 * 3
      }, (_, i3) => target2.position.getComponent(i3 % 3));
    }
  }, [length, target2]);
  const prevPosition = React22.useRef(new Vector3());
  const frameCount = React22.useRef(0);
  useFrame(() => {
    if (!target2)
      return;
    if (!points.current)
      return;
    if (frameCount.current === 0) {
      let newPosition;
      if (local) {
        newPosition = target2.position;
      } else {
        target2.getWorldPosition(worldPosition);
        newPosition = worldPosition;
      }
      const steps = 1 * decay;
      for (let i3 = 0; i3 < steps; i3++) {
        if (newPosition.distanceTo(prevPosition.current) < stride)
          continue;
        shiftLeft(points.current, 3);
        points.current.set(newPosition.toArray(), points.current.length - 3);
      }
      prevPosition.current.copy(newPosition);
    }
    frameCount.current++;
    frameCount.current = frameCount.current % interval;
  });
  return points;
}
var Trail = React22.forwardRef((props, forwardRef72) => {
  const {
    children
  } = props;
  const {
    width,
    length,
    decay,
    local,
    stride,
    interval
  } = {
    ...defaults,
    ...props
  };
  const {
    color = "hotpink",
    attenuation,
    target: target2
  } = props;
  const size = useThree((s2) => s2.size);
  const scene = useThree((s2) => s2.scene);
  const ref = React22.useRef(null);
  const [anchor, setAnchor] = React22.useState(null);
  const points = useTrail(anchor, {
    length,
    decay,
    local,
    stride,
    interval
  });
  React22.useEffect(() => {
    const t2 = (target2 == null ? void 0 : target2.current) || ref.current.children.find((o2) => {
      return o2 instanceof Object3D;
    });
    if (t2) {
      setAnchor(t2);
    }
  }, [points, target2]);
  const geo = React22.useMemo(() => new MeshLineGeometry(), []);
  const mat = React22.useMemo(() => {
    var _matOverride;
    const m2 = new MeshLineMaterial({
      lineWidth: 0.1 * width,
      color,
      sizeAttenuation: 1,
      resolution: new Vector2(size.width, size.height)
    });
    let matOverride;
    if (children) {
      if (Array.isArray(children)) {
        matOverride = children.find((child) => {
          const c2 = child;
          return typeof c2.type === "string" && c2.type === "meshLineMaterial";
        });
      } else {
        const c2 = children;
        if (typeof c2.type === "string" && c2.type === "meshLineMaterial") {
          matOverride = c2;
        }
      }
    }
    if (typeof ((_matOverride = matOverride) == null ? void 0 : _matOverride.props) === "object") {
      m2.setValues(matOverride.props);
    }
    return m2;
  }, [width, color, size, children]);
  React22.useEffect(() => {
    mat.uniforms.resolution.value.set(size.width, size.height);
  }, [size]);
  useFrame(() => {
    if (!points.current)
      return;
    geo.setPoints(points.current, attenuation);
  });
  return React22.createElement("group", null, createPortal(React22.createElement("mesh", {
    ref: forwardRef72,
    geometry: geo,
    material: mat
  }), scene), React22.createElement("group", {
    ref
  }, children));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Sampler.js
var React23 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/ComputedAttribute.js
var React24 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Clone.js
var React25 = __toESM(require_react());
var import_lodash = __toESM(require_lodash());
function createSpread(child, {
  keys = ["near", "far", "color", "distance", "decay", "penumbra", "angle", "intensity", "skeleton", "visible", "castShadow", "receiveShadow", "morphTargetDictionary", "morphTargetInfluences", "name", "geometry", "material", "position", "rotation", "scale", "up", "userData", "bindMode", "bindMatrix", "bindMatrixInverse", "skeleton"],
  deep,
  inject,
  castShadow,
  receiveShadow
}) {
  let spread = (0, import_lodash.default)(child, keys);
  if (deep) {
    if (spread.geometry && deep !== "materialsOnly")
      spread.geometry = spread.geometry.clone();
    if (spread.material && deep !== "geometriesOnly")
      spread.material = spread.material.clone();
  }
  if (inject) {
    if (typeof inject === "function")
      spread = {
        ...spread,
        children: inject(child)
      };
    else if (React25.isValidElement(inject))
      spread = {
        ...spread,
        children: inject
      };
    else
      spread = {
        ...spread,
        ...inject
      };
  }
  if (child instanceof Mesh) {
    if (castShadow)
      spread.castShadow = true;
    if (receiveShadow)
      spread.receiveShadow = true;
  }
  return spread;
}
var Clone = React25.forwardRef(({
  isChild = false,
  object,
  children,
  deep,
  castShadow,
  receiveShadow,
  inject,
  keys,
  ...props
}, forwardRef72) => {
  var _object;
  const config = {
    keys,
    deep,
    inject,
    castShadow,
    receiveShadow
  };
  object = React25.useMemo(() => {
    if (isChild === false && !Array.isArray(object)) {
      let isSkinned = false;
      object.traverse((object2) => {
        if (object2.isSkinnedMesh)
          isSkinned = true;
      });
      if (isSkinned)
        return SkeletonUtils.clone(object);
    }
    return object;
  }, [object, isChild]);
  if (Array.isArray(object)) {
    return React25.createElement("group", _extends({}, props, {
      ref: forwardRef72
    }), object.map((o2) => React25.createElement(Clone, _extends({
      key: o2.uuid,
      object: o2
    }, config))), children);
  }
  const {
    children: injectChildren,
    ...spread
  } = createSpread(object, config);
  const Element = object.type[0].toLowerCase() + object.type.slice(1);
  return React25.createElement(Element, _extends({}, spread, props, {
    ref: forwardRef72
  }), ((_object = object) == null ? void 0 : _object.children).map((child) => {
    if (child.type === "Bone")
      return React25.createElement("primitive", _extends({
        key: child.uuid,
        object: child
      }, config));
    return React25.createElement(Clone, _extends({
      key: child.uuid,
      object: child
    }, config, {
      isChild: true
    }));
  }), children, injectChildren);
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/MarchingCubes.js
var React26 = __toESM(require_react());
var globalContext = React26.createContext(null);
var MarchingCubes2 = React26.forwardRef(({
  resolution = 28,
  maxPolyCount = 1e4,
  enableUvs = false,
  enableColors = false,
  children,
  ...props
}, ref) => {
  const marchingCubesRef = React26.useRef(null);
  const marchingCubes = React26.useMemo(() => new MarchingCubes(resolution, null, enableUvs, enableColors, maxPolyCount), [resolution, maxPolyCount, enableUvs, enableColors]);
  const api = React26.useMemo(() => ({
    getParent: () => marchingCubesRef
  }), []);
  useFrame(() => {
    marchingCubes.update();
    marchingCubes.reset();
  }, -1);
  return React26.createElement(React26.Fragment, null, React26.createElement("primitive", _extends({
    object: marchingCubes,
    ref: react_merge_refs_esm_default([marchingCubesRef, ref])
  }, props), React26.createElement(globalContext.Provider, {
    value: api
  }, children)));
});
var MarchingCube = React26.forwardRef(({
  strength = 0.5,
  subtract = 12,
  color,
  ...props
}, ref) => {
  const {
    getParent
  } = React26.useContext(globalContext);
  const parentRef = React26.useMemo(() => getParent(), [getParent]);
  const cubeRef = React26.useRef();
  const vec = new Vector3();
  useFrame((state) => {
    if (!parentRef.current || !cubeRef.current)
      return;
    cubeRef.current.getWorldPosition(vec);
    parentRef.current.addBall(0.5 + vec.x * 0.5, 0.5 + vec.y * 0.5, 0.5 + vec.z * 0.5, strength, subtract, color);
  });
  return React26.createElement("group", _extends({
    ref: react_merge_refs_esm_default([ref, cubeRef])
  }, props));
});
var MarchingPlane = React26.forwardRef(({
  planeType: _planeType = "x",
  strength = 0.5,
  subtract = 12,
  ...props
}, ref) => {
  const {
    getParent
  } = React26.useContext(globalContext);
  const parentRef = React26.useMemo(() => getParent(), [getParent]);
  const wallRef = React26.useRef();
  const planeType = React26.useMemo(() => _planeType === "x" ? "addPlaneX" : _planeType === "y" ? "addPlaneY" : "addPlaneZ", [_planeType]);
  useFrame(() => {
    if (!parentRef.current || !wallRef.current)
      return;
    parentRef.current[planeType](strength, subtract);
  });
  return React26.createElement("group", _extends({
    ref: react_merge_refs_esm_default([ref, wallRef])
  }, props));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Decal.js
var React27 = __toESM(require_react());
function isArray(vec) {
  return Array.isArray(vec);
}
function vecToArray(vec = [0, 0, 0]) {
  if (isArray(vec)) {
    return vec;
  } else if (vec instanceof Vector3 || vec instanceof Euler) {
    return [vec.x, vec.y, vec.z];
  } else {
    return [vec, vec, vec];
  }
}
var Decal = React27.forwardRef(function Decal2({
  debug,
  depthTest = false,
  polygonOffsetFactor = -10,
  map,
  mesh,
  children,
  position: position2,
  rotation: rotation2,
  scale: scale2,
  ...props
}, forwardRef72) {
  const ref = React27.useRef(null);
  React27.useImperativeHandle(forwardRef72, () => ref.current);
  const helper = React27.useRef(null);
  React27.useLayoutEffect(() => {
    const parent = (mesh == null ? void 0 : mesh.current) || ref.current.parent;
    const target2 = ref.current;
    if (!(parent instanceof Mesh)) {
      throw new Error('Decal must have a Mesh as parent or specify its "mesh" prop');
    }
    const state = {
      position: new Vector3(),
      rotation: new Euler(),
      scale: new Vector3(1, 1, 1)
    };
    if (parent) {
      applyProps(state, {
        position: position2,
        scale: scale2
      });
      const matrixWorld = parent.matrixWorld.clone();
      parent.matrixWorld.identity();
      if (!rotation2 || typeof rotation2 === "number") {
        const o2 = new Object3D();
        o2.position.copy(state.position);
        o2.lookAt(parent.position);
        if (typeof rotation2 === "number")
          o2.rotateZ(rotation2);
        applyProps(state, {
          rotation: o2.rotation
        });
      } else {
        applyProps(state, {
          rotation: rotation2
        });
      }
      target2.geometry = new DecalGeometry(parent, state.position, state.rotation, state.scale);
      if (helper.current) {
        applyProps(helper.current, state);
        helper.current.traverse((child) => child.raycast = () => null);
      }
      parent.matrixWorld = matrixWorld;
      return () => {
        target2.geometry.dispose();
      };
    }
  }, [mesh, ...vecToArray(position2), ...vecToArray(scale2), ...vecToArray(rotation2)]);
  return React27.createElement("mesh", _extends({
    ref,
    "material-transparent": true,
    "material-polygonOffset": true,
    "material-polygonOffsetFactor": polygonOffsetFactor,
    "material-depthTest": depthTest,
    "material-map": map
  }, props), children, debug && React27.createElement("mesh", {
    ref: helper
  }, React27.createElement("boxGeometry", null), React27.createElement("meshNormalMaterial", {
    wireframe: true
  }), React27.createElement("axesHelper", null)));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Svg.js
var React28 = __toESM(require_react());
var import_react12 = __toESM(require_react());
var Svg = (0, import_react12.forwardRef)(function R3FSvg({
  src,
  skipFill,
  skipStrokes,
  fillMaterial,
  strokeMaterial,
  fillMeshProps,
  strokeMeshProps,
  ...props
}, ref) {
  const svg = useLoader(SVGLoader, !src.startsWith("<svg") ? src : `data:image/svg+xml;utf8,${src}`);
  const strokeGeometries = (0, import_react12.useMemo)(() => skipStrokes ? [] : svg.paths.map((path) => {
    var _path$userData;
    return ((_path$userData = path.userData) == null ? void 0 : _path$userData.style.stroke) === void 0 || path.userData.style.stroke === "none" ? null : path.subPaths.map((subPath) => SVGLoader.pointsToStroke(subPath.getPoints(), path.userData.style));
  }), [svg, skipStrokes]);
  (0, import_react12.useEffect)(() => {
    return () => strokeGeometries.forEach((group) => group && group.map((g2) => g2.dispose()));
  }, [strokeGeometries]);
  return React28.createElement("object3D", _extends({
    ref
  }, props), React28.createElement("object3D", {
    scale: [1, -1, 1]
  }, svg.paths.map((path, p2) => {
    var _path$userData2, _path$userData3;
    return React28.createElement(import_react12.Fragment, {
      key: p2
    }, !skipFill && ((_path$userData2 = path.userData) == null ? void 0 : _path$userData2.style.fill) !== void 0 && path.userData.style.fill !== "none" && SVGLoader.createShapes(path).map((shape, s2) => React28.createElement("mesh", _extends({
      key: s2
    }, fillMeshProps), React28.createElement("shapeGeometry", {
      args: [shape]
    }), React28.createElement("meshBasicMaterial", _extends({
      color: path.userData.style.fill,
      opacity: path.userData.style.fillOpacity,
      transparent: true,
      side: DoubleSide,
      depthWrite: false
    }, fillMaterial)))), !skipStrokes && ((_path$userData3 = path.userData) == null ? void 0 : _path$userData3.style.stroke) !== void 0 && path.userData.style.stroke !== "none" && path.subPaths.map((_subPath, s2) => React28.createElement("mesh", _extends({
      key: s2,
      geometry: strokeGeometries[p2][s2]
    }, strokeMeshProps), React28.createElement("meshBasicMaterial", _extends({
      color: path.userData.style.stroke,
      opacity: path.userData.style.strokeOpacity,
      transparent: true,
      side: DoubleSide,
      depthWrite: false
    }, strokeMaterial)))));
  })));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Gltf.js
var React29 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/useGLTF.js
var dracoLoader = null;
function extensions(useDraco, useMeshopt, extendLoader) {
  return (loader2) => {
    if (extendLoader) {
      extendLoader(loader2);
    }
    if (useDraco) {
      if (!dracoLoader) {
        dracoLoader = new DRACOLoader();
      }
      dracoLoader.setDecoderPath(typeof useDraco === "string" ? useDraco : "https://www.gstatic.com/draco/versioned/decoders/1.5.5/");
      loader2.setDRACOLoader(dracoLoader);
    }
    if (useMeshopt) {
      loader2.setMeshoptDecoder(typeof MeshoptDecoder === "function" ? MeshoptDecoder() : MeshoptDecoder);
    }
  };
}
function useGLTF(path, useDraco = true, useMeshOpt = true, extendLoader) {
  const gltf = useLoader(GLTFLoader, path, extensions(useDraco, useMeshOpt, extendLoader));
  return gltf;
}
useGLTF.preload = (path, useDraco = true, useMeshOpt = true, extendLoader) => useLoader.preload(GLTFLoader, path, extensions(useDraco, useMeshOpt, extendLoader));
useGLTF.clear = (input) => useLoader.clear(GLTFLoader, input);

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Gltf.js
var Gltf = React29.forwardRef(({
  src,
  ...props
}, ref) => {
  const {
    scene
  } = useGLTF(src);
  return React29.createElement(Clone, _extends({
    ref
  }, props, {
    object: scene
  }));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/AsciiRenderer.js
var React30 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/OrthographicCamera.js
var React32 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/useFBO.js
var React31 = __toESM(require_react());
function useFBO(width, height, settings) {
  const size = useThree((state) => state.size);
  const viewport = useThree((state) => state.viewport);
  const _width = typeof width === "number" ? width : size.width * viewport.dpr;
  const _height = typeof height === "number" ? height : size.height * viewport.dpr;
  const _settings = (typeof width === "number" ? settings : width) || {};
  const {
    samples = 0,
    depth,
    ...targetSettings
  } = _settings;
  const target2 = React31.useMemo(() => {
    const target3 = new WebGLRenderTarget(_width, _height, {
      minFilter: LinearFilter,
      magFilter: LinearFilter,
      type: HalfFloatType,
      ...targetSettings
    });
    if (depth) {
      target3.depthTexture = new DepthTexture(_width, _height, FloatType);
    }
    target3.samples = samples;
    return target3;
  }, []);
  React31.useLayoutEffect(() => {
    target2.setSize(_width, _height);
    if (samples)
      target2.samples = samples;
  }, [samples, target2, _width, _height]);
  React31.useEffect(() => {
    return () => target2.dispose();
  }, []);
  return target2;
}

// node_modules/r3f-perf/node_modules/@react-three/drei/core/OrthographicCamera.js
var isFunction = (node) => typeof node === "function";
var OrthographicCamera2 = React32.forwardRef(({
  envMap,
  resolution = 256,
  frames = Infinity,
  children,
  makeDefault,
  ...props
}, ref) => {
  const set = useThree(({
    set: set2
  }) => set2);
  const camera = useThree(({
    camera: camera2
  }) => camera2);
  const size = useThree(({
    size: size2
  }) => size2);
  const cameraRef = React32.useRef(null);
  const groupRef = React32.useRef(null);
  const fbo = useFBO(resolution);
  React32.useLayoutEffect(() => {
    if (!props.manual) {
      cameraRef.current.updateProjectionMatrix();
    }
  }, [size, props]);
  React32.useLayoutEffect(() => {
    cameraRef.current.updateProjectionMatrix();
  });
  React32.useLayoutEffect(() => {
    if (makeDefault) {
      const oldCam = camera;
      set(() => ({
        camera: cameraRef.current
      }));
      return () => set(() => ({
        camera: oldCam
      }));
    }
  }, [cameraRef, makeDefault, set]);
  let count = 0;
  let oldEnvMap = null;
  const functional = isFunction(children);
  useFrame((state) => {
    if (functional && (frames === Infinity || count < frames)) {
      groupRef.current.visible = false;
      state.gl.setRenderTarget(fbo);
      oldEnvMap = state.scene.background;
      if (envMap)
        state.scene.background = envMap;
      state.gl.render(state.scene, cameraRef.current);
      state.scene.background = oldEnvMap;
      state.gl.setRenderTarget(null);
      groupRef.current.visible = true;
      count++;
    }
  });
  return React32.createElement(React32.Fragment, null, React32.createElement("orthographicCamera", _extends({
    left: size.width / -2,
    right: size.width / 2,
    top: size.height / 2,
    bottom: size.height / -2,
    ref: react_merge_refs_esm_default([cameraRef, ref])
  }, props), !functional && children), React32.createElement("group", {
    ref: groupRef
  }, functional && children(fbo.texture)));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/PerspectiveCamera.js
var React33 = __toESM(require_react());
var isFunction2 = (node) => typeof node === "function";
var PerspectiveCamera2 = React33.forwardRef(({
  envMap,
  resolution = 256,
  frames = Infinity,
  makeDefault,
  children,
  ...props
}, ref) => {
  const set = useThree(({
    set: set2
  }) => set2);
  const camera = useThree(({
    camera: camera2
  }) => camera2);
  const size = useThree(({
    size: size2
  }) => size2);
  const cameraRef = React33.useRef(null);
  const groupRef = React33.useRef(null);
  const fbo = useFBO(resolution);
  React33.useLayoutEffect(() => {
    if (!props.manual) {
      cameraRef.current.aspect = size.width / size.height;
    }
  }, [size, props]);
  React33.useLayoutEffect(() => {
    cameraRef.current.updateProjectionMatrix();
  });
  let count = 0;
  let oldEnvMap = null;
  const functional = isFunction2(children);
  useFrame((state) => {
    if (functional && (frames === Infinity || count < frames)) {
      groupRef.current.visible = false;
      state.gl.setRenderTarget(fbo);
      oldEnvMap = state.scene.background;
      if (envMap)
        state.scene.background = envMap;
      state.gl.render(state.scene, cameraRef.current);
      state.scene.background = oldEnvMap;
      state.gl.setRenderTarget(null);
      groupRef.current.visible = true;
      count++;
    }
  });
  React33.useLayoutEffect(() => {
    if (makeDefault) {
      const oldCam = camera;
      set(() => ({
        camera: cameraRef.current
      }));
      return () => set(() => ({
        camera: oldCam
      }));
    }
  }, [cameraRef, makeDefault, set]);
  return React33.createElement(React33.Fragment, null, React33.createElement("perspectiveCamera", _extends({
    ref: react_merge_refs_esm_default([cameraRef, ref])
  }, props), !functional && children), React33.createElement("group", {
    ref: groupRef
  }, functional && children(fbo.texture)));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/CubeCamera.js
var React35 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/useCubeCamera.js
var React34 = __toESM(require_react());
var import_react13 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/DeviceOrientationControls.js
var React36 = __toESM(require_react());
var DeviceOrientationControls2 = React36.forwardRef((props, ref) => {
  const {
    camera,
    onChange,
    makeDefault,
    ...rest
  } = props;
  const defaultCamera = useThree((state) => state.camera);
  const invalidate = useThree((state) => state.invalidate);
  const get = useThree((state) => state.get);
  const set = useThree((state) => state.set);
  const explCamera = camera || defaultCamera;
  const [controls] = React36.useState(() => new DeviceOrientationControls(explCamera));
  React36.useEffect(() => {
    const callback = (e2) => {
      invalidate();
      if (onChange)
        onChange(e2);
    };
    controls == null ? void 0 : controls.addEventListener == null ? void 0 : controls.addEventListener("change", callback);
    return () => controls == null ? void 0 : controls.removeEventListener == null ? void 0 : controls.removeEventListener("change", callback);
  }, [onChange, controls, invalidate]);
  useFrame(() => controls == null ? void 0 : controls.update(), -1);
  React36.useEffect(() => {
    const current = controls;
    current == null ? void 0 : current.connect();
    return () => current == null ? void 0 : current.dispose();
  }, [controls]);
  React36.useEffect(() => {
    if (makeDefault) {
      const old = get().controls;
      set({
        controls
      });
      return () => set({
        controls: old
      });
    }
  }, [makeDefault, controls]);
  return controls ? React36.createElement("primitive", _extends({
    ref,
    object: controls
  }, rest)) : null;
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/FlyControls.js
var React37 = __toESM(require_react());
var FlyControls2 = React37.forwardRef(({
  domElement,
  ...props
}, fref) => {
  const {
    onChange,
    makeDefault,
    ...rest
  } = props;
  const invalidate = useThree((state) => state.invalidate);
  const camera = useThree((state) => state.camera);
  const gl = useThree((state) => state.gl);
  const events = useThree((state) => state.events);
  const get = useThree((state) => state.get);
  const set = useThree((state) => state.set);
  const explDomElement = domElement || events.connected || gl.domElement;
  const controls = React37.useMemo(() => new FlyControls(camera), [camera]);
  React37.useEffect(() => {
    controls.connect(explDomElement);
    return () => void controls.dispose();
  }, [explDomElement, controls, invalidate]);
  React37.useEffect(() => {
    const callback = (e2) => {
      invalidate();
      if (onChange)
        onChange(e2);
    };
    controls.addEventListener == null ? void 0 : controls.addEventListener("change", callback);
    return () => controls.removeEventListener == null ? void 0 : controls.removeEventListener("change", callback);
  }, [onChange, invalidate]);
  React37.useEffect(() => {
    if (makeDefault) {
      const old = get().controls;
      set({
        controls
      });
      return () => set({
        controls: old
      });
    }
  }, [makeDefault, controls]);
  useFrame((_, delta) => controls.update(delta));
  return React37.createElement("primitive", _extends({
    ref: fref,
    object: controls,
    args: [camera, explDomElement]
  }, rest));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/MapControls.js
var React38 = __toESM(require_react());
var MapControls2 = React38.forwardRef((props = {
  enableDamping: true
}, ref) => {
  const {
    domElement,
    camera,
    makeDefault,
    onChange,
    onStart,
    onEnd,
    ...rest
  } = props;
  const invalidate = useThree((state) => state.invalidate);
  const defaultCamera = useThree((state) => state.camera);
  const gl = useThree((state) => state.gl);
  const events = useThree((state) => state.events);
  const set = useThree((state) => state.set);
  const get = useThree((state) => state.get);
  const explDomElement = domElement || events.connected || gl.domElement;
  const explCamera = camera || defaultCamera;
  const controls = React38.useMemo(() => new MapControls(explCamera), [explCamera]);
  React38.useEffect(() => {
    controls.connect(explDomElement);
    const callback = (e2) => {
      invalidate();
      if (onChange)
        onChange(e2);
    };
    controls.addEventListener("change", callback);
    if (onStart)
      controls.addEventListener("start", onStart);
    if (onEnd)
      controls.addEventListener("end", onEnd);
    return () => {
      controls.dispose();
      controls.removeEventListener("change", callback);
      if (onStart)
        controls.removeEventListener("start", onStart);
      if (onEnd)
        controls.removeEventListener("end", onEnd);
    };
  }, [onChange, onStart, onEnd, controls, invalidate, explDomElement]);
  React38.useEffect(() => {
    if (makeDefault) {
      const old = get().controls;
      set({
        controls
      });
      return () => set({
        controls: old
      });
    }
  }, [makeDefault, controls]);
  useFrame(() => controls.update(), -1);
  return React38.createElement("primitive", _extends({
    ref,
    object: controls,
    enableDamping: true
  }, rest));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/OrbitControls.js
var React39 = __toESM(require_react());
var OrbitControls2 = React39.forwardRef(({
  makeDefault,
  camera,
  regress,
  domElement,
  enableDamping = true,
  keyEvents = false,
  onChange,
  onStart,
  onEnd,
  ...restProps
}, ref) => {
  const invalidate = useThree((state) => state.invalidate);
  const defaultCamera = useThree((state) => state.camera);
  const gl = useThree((state) => state.gl);
  const events = useThree((state) => state.events);
  const setEvents = useThree((state) => state.setEvents);
  const set = useThree((state) => state.set);
  const get = useThree((state) => state.get);
  const performance2 = useThree((state) => state.performance);
  const explCamera = camera || defaultCamera;
  const explDomElement = domElement || events.connected || gl.domElement;
  const controls = React39.useMemo(() => new OrbitControls(explCamera), [explCamera]);
  useFrame(() => {
    if (controls.enabled)
      controls.update();
  }, -1);
  React39.useEffect(() => {
    if (keyEvents) {
      controls.connect(keyEvents === true ? explDomElement : keyEvents);
    }
    controls.connect(explDomElement);
    return () => void controls.dispose();
  }, [keyEvents, explDomElement, regress, controls, invalidate]);
  React39.useEffect(() => {
    const callback = (e2) => {
      invalidate();
      if (regress)
        performance2.regress();
      if (onChange)
        onChange(e2);
    };
    const onStartCb = (e2) => {
      if (onStart)
        onStart(e2);
    };
    const onEndCb = (e2) => {
      if (onEnd)
        onEnd(e2);
    };
    controls.addEventListener("change", callback);
    controls.addEventListener("start", onStartCb);
    controls.addEventListener("end", onEndCb);
    return () => {
      controls.removeEventListener("start", onStartCb);
      controls.removeEventListener("end", onEndCb);
      controls.removeEventListener("change", callback);
    };
  }, [onChange, onStart, onEnd, controls, invalidate, setEvents]);
  React39.useEffect(() => {
    if (makeDefault) {
      const old = get().controls;
      set({
        controls
      });
      return () => set({
        controls: old
      });
    }
  }, [makeDefault, controls]);
  return React39.createElement("primitive", _extends({
    ref,
    object: controls,
    enableDamping
  }, restProps));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/TrackballControls.js
var React40 = __toESM(require_react());
var TrackballControls2 = React40.forwardRef(({
  makeDefault,
  camera,
  domElement,
  regress,
  onChange,
  onStart,
  onEnd,
  ...restProps
}, ref) => {
  const {
    invalidate,
    camera: defaultCamera,
    gl,
    events,
    set,
    get,
    performance: performance2,
    viewport
  } = useThree();
  const explCamera = camera || defaultCamera;
  const explDomElement = domElement || events.connected || gl.domElement;
  const controls = React40.useMemo(() => new TrackballControls(explCamera), [explCamera]);
  useFrame(() => {
    if (controls.enabled)
      controls.update();
  }, -1);
  React40.useEffect(() => {
    controls.connect(explDomElement);
    return () => void controls.dispose();
  }, [explDomElement, regress, controls, invalidate]);
  React40.useEffect(() => {
    const callback = (e2) => {
      invalidate();
      if (regress)
        performance2.regress();
      if (onChange)
        onChange(e2);
    };
    controls.addEventListener("change", callback);
    if (onStart)
      controls.addEventListener("start", onStart);
    if (onEnd)
      controls.addEventListener("end", onEnd);
    return () => {
      if (onStart)
        controls.removeEventListener("start", onStart);
      if (onEnd)
        controls.removeEventListener("end", onEnd);
      controls.removeEventListener("change", callback);
    };
  }, [onChange, onStart, onEnd, controls, invalidate]);
  React40.useEffect(() => {
    controls.handleResize();
  }, [viewport]);
  React40.useEffect(() => {
    if (makeDefault) {
      const old = get().controls;
      set({
        controls
      });
      return () => set({
        controls: old
      });
    }
  }, [makeDefault, controls]);
  return React40.createElement("primitive", _extends({
    ref,
    object: controls
  }, restProps));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/ArcballControls.js
var React41 = __toESM(require_react());
var import_react14 = __toESM(require_react());
var ArcballControls2 = (0, import_react14.forwardRef)(({
  camera,
  makeDefault,
  regress,
  domElement,
  onChange,
  onStart,
  onEnd,
  ...restProps
}, ref) => {
  const invalidate = useThree((state) => state.invalidate);
  const defaultCamera = useThree((state) => state.camera);
  const gl = useThree((state) => state.gl);
  const events = useThree((state) => state.events);
  const set = useThree((state) => state.set);
  const get = useThree((state) => state.get);
  const performance2 = useThree((state) => state.performance);
  const explCamera = camera || defaultCamera;
  const explDomElement = domElement || events.connected || gl.domElement;
  const controls = (0, import_react14.useMemo)(() => new ArcballControls(explCamera), [explCamera]);
  useFrame(() => {
    if (controls.enabled)
      controls.update();
  }, -1);
  (0, import_react14.useEffect)(() => {
    controls.connect(explDomElement);
    return () => void controls.dispose();
  }, [explDomElement, regress, controls, invalidate]);
  (0, import_react14.useEffect)(() => {
    const callback = (e2) => {
      invalidate();
      if (regress)
        performance2.regress();
      if (onChange)
        onChange(e2);
    };
    controls.addEventListener("change", callback);
    if (onStart)
      controls.addEventListener("start", onStart);
    if (onEnd)
      controls.addEventListener("end", onEnd);
    return () => {
      controls.removeEventListener("change", callback);
      if (onStart)
        controls.removeEventListener("start", onStart);
      if (onEnd)
        controls.removeEventListener("end", onEnd);
    };
  }, [onChange, onStart, onEnd]);
  (0, import_react14.useEffect)(() => {
    if (makeDefault) {
      const old = get().controls;
      set({
        controls
      });
      return () => set({
        controls: old
      });
    }
  }, [makeDefault, controls]);
  return React41.createElement("primitive", _extends({
    ref,
    object: controls
  }, restProps));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/TransformControls.js
var import_lodash2 = __toESM(require_lodash2());
var import_lodash3 = __toESM(require_lodash());
var React42 = __toESM(require_react());
var TransformControls2 = React42.forwardRef(({
  children,
  domElement,
  onChange,
  onMouseDown,
  onMouseUp,
  onObjectChange,
  object,
  makeDefault,
  ...props
}, ref) => {
  const transformOnlyPropNames = ["enabled", "axis", "mode", "translationSnap", "rotationSnap", "scaleSnap", "space", "size", "showX", "showY", "showZ"];
  const {
    camera,
    ...rest
  } = props;
  const transformProps = (0, import_lodash3.default)(rest, transformOnlyPropNames);
  const objectProps = (0, import_lodash2.default)(rest, transformOnlyPropNames);
  const defaultControls = useThree((state) => state.controls);
  const gl = useThree((state) => state.gl);
  const events = useThree((state) => state.events);
  const defaultCamera = useThree((state) => state.camera);
  const invalidate = useThree((state) => state.invalidate);
  const get = useThree((state) => state.get);
  const set = useThree((state) => state.set);
  const explCamera = camera || defaultCamera;
  const explDomElement = domElement || events.connected || gl.domElement;
  const controls = React42.useMemo(() => new TransformControls(explCamera, explDomElement), [explCamera, explDomElement]);
  const group = React42.useRef();
  React42.useLayoutEffect(() => {
    if (object) {
      controls.attach(object instanceof Object3D ? object : object.current);
    } else if (group.current instanceof Object3D) {
      controls.attach(group.current);
    }
    return () => void controls.detach();
  }, [object, children, controls]);
  React42.useEffect(() => {
    if (defaultControls) {
      const callback = (event) => defaultControls.enabled = !event.value;
      controls.addEventListener("dragging-changed", callback);
      return () => controls.removeEventListener("dragging-changed", callback);
    }
  }, [controls, defaultControls]);
  const onChangeRef = React42.useRef();
  const onMouseDownRef = React42.useRef();
  const onMouseUpRef = React42.useRef();
  const onObjectChangeRef = React42.useRef();
  React42.useLayoutEffect(() => void (onChangeRef.current = onChange), [onChange]);
  React42.useLayoutEffect(() => void (onMouseDownRef.current = onMouseDown), [onMouseDown]);
  React42.useLayoutEffect(() => void (onMouseUpRef.current = onMouseUp), [onMouseUp]);
  React42.useLayoutEffect(() => void (onObjectChangeRef.current = onObjectChange), [onObjectChange]);
  React42.useEffect(() => {
    const onChange2 = (e2) => {
      invalidate();
      onChangeRef.current == null ? void 0 : onChangeRef.current(e2);
    };
    const onMouseDown2 = (e2) => onMouseDownRef.current == null ? void 0 : onMouseDownRef.current(e2);
    const onMouseUp2 = (e2) => onMouseUpRef.current == null ? void 0 : onMouseUpRef.current(e2);
    const onObjectChange2 = (e2) => onObjectChangeRef.current == null ? void 0 : onObjectChangeRef.current(e2);
    controls.addEventListener("change", onChange2);
    controls.addEventListener("mouseDown", onMouseDown2);
    controls.addEventListener("mouseUp", onMouseUp2);
    controls.addEventListener("objectChange", onObjectChange2);
    return () => {
      controls.removeEventListener("change", onChange2);
      controls.removeEventListener("mouseDown", onMouseDown2);
      controls.removeEventListener("mouseUp", onMouseUp2);
      controls.removeEventListener("objectChange", onObjectChange2);
    };
  }, [invalidate, controls]);
  React42.useEffect(() => {
    if (makeDefault) {
      const old = get().controls;
      set({
        controls
      });
      return () => set({
        controls: old
      });
    }
  }, [makeDefault, controls]);
  return controls ? React42.createElement(React42.Fragment, null, React42.createElement("primitive", _extends({
    ref,
    object: controls
  }, transformProps)), React42.createElement("group", _extends({
    ref: group
  }, objectProps), children)) : null;
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/PointerLockControls.js
var React43 = __toESM(require_react());
var PointerLockControls2 = React43.forwardRef(({
  domElement,
  selector,
  onChange,
  onLock,
  onUnlock,
  enabled = true,
  makeDefault,
  ...props
}, ref) => {
  const {
    camera,
    ...rest
  } = props;
  const setEvents = useThree((state) => state.setEvents);
  const gl = useThree((state) => state.gl);
  const defaultCamera = useThree((state) => state.camera);
  const invalidate = useThree((state) => state.invalidate);
  const events = useThree((state) => state.events);
  const get = useThree((state) => state.get);
  const set = useThree((state) => state.set);
  const explCamera = camera || defaultCamera;
  const explDomElement = domElement || events.connected || gl.domElement;
  const [controls] = React43.useState(() => new PointerLockControls(explCamera));
  React43.useEffect(() => {
    if (enabled) {
      controls.connect(explDomElement);
      const oldComputeOffsets = get().events.compute;
      setEvents({
        compute(event, state) {
          const offsetX = state.size.width / 2;
          const offsetY = state.size.height / 2;
          state.pointer.set(offsetX / state.size.width * 2 - 1, -(offsetY / state.size.height) * 2 + 1);
          state.raycaster.setFromCamera(state.pointer, state.camera);
        }
      });
      return () => {
        controls.disconnect();
        setEvents({
          compute: oldComputeOffsets
        });
      };
    }
  }, [enabled, controls]);
  React43.useEffect(() => {
    const callback = (e2) => {
      invalidate();
      if (onChange)
        onChange(e2);
    };
    controls.addEventListener("change", callback);
    if (onLock)
      controls.addEventListener("lock", onLock);
    if (onUnlock)
      controls.addEventListener("unlock", onUnlock);
    const handler = () => controls.lock();
    const elements = selector ? Array.from(document.querySelectorAll(selector)) : [document];
    elements.forEach((element) => element && element.addEventListener("click", handler));
    return () => {
      controls.removeEventListener("change", callback);
      if (onLock)
        controls.addEventListener("lock", onLock);
      if (onUnlock)
        controls.addEventListener("unlock", onUnlock);
      elements.forEach((element) => element ? element.removeEventListener("click", handler) : void 0);
    };
  }, [onChange, onLock, onUnlock, selector, controls, invalidate]);
  React43.useEffect(() => {
    if (makeDefault) {
      const old = get().controls;
      set({
        controls
      });
      return () => set({
        controls: old
      });
    }
  }, [makeDefault, controls]);
  return React43.createElement("primitive", _extends({
    ref,
    object: controls
  }, rest));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/FirstPersonControls.js
var React44 = __toESM(require_react());
var FirstPersonControls2 = React44.forwardRef(({
  domElement,
  makeDefault,
  ...props
}, ref) => {
  const camera = useThree((state) => state.camera);
  const gl = useThree((state) => state.gl);
  const events = useThree((state) => state.events);
  const get = useThree((state) => state.get);
  const set = useThree((state) => state.set);
  const explDomElement = domElement || events.connected || gl.domElement;
  const [controls] = React44.useState(() => new FirstPersonControls(camera, explDomElement));
  React44.useEffect(() => {
    if (makeDefault) {
      const old = get().controls;
      set({
        controls
      });
      return () => set({
        controls: old
      });
    }
  }, [makeDefault, controls]);
  useFrame((_, delta) => {
    controls.update(delta);
  }, -1);
  return controls ? React44.createElement("primitive", _extends({
    ref,
    object: controls
  }, props)) : null;
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/CameraControls.js
var React45 = __toESM(require_react());
var import_react15 = __toESM(require_react());

// node_modules/camera-controls/dist/camera-controls.module.js
var MOUSE_BUTTON = {
  LEFT: 1,
  RIGHT: 2,
  MIDDLE: 4
};
var ACTION = Object.freeze({
  NONE: 0,
  ROTATE: 1,
  TRUCK: 2,
  OFFSET: 4,
  DOLLY: 8,
  ZOOM: 16,
  TOUCH_ROTATE: 32,
  TOUCH_TRUCK: 64,
  TOUCH_OFFSET: 128,
  TOUCH_DOLLY: 256,
  TOUCH_ZOOM: 512,
  TOUCH_DOLLY_TRUCK: 1024,
  TOUCH_DOLLY_OFFSET: 2048,
  TOUCH_DOLLY_ROTATE: 4096,
  TOUCH_ZOOM_TRUCK: 8192,
  TOUCH_ZOOM_OFFSET: 16384,
  TOUCH_ZOOM_ROTATE: 32768
});
var DOLLY_DIRECTION = {
  NONE: 0,
  IN: 1,
  OUT: -1
};
function isPerspectiveCamera(camera) {
  return camera.isPerspectiveCamera;
}
function isOrthographicCamera(camera) {
  return camera.isOrthographicCamera;
}
var PI_2 = Math.PI * 2;
var PI_HALF = Math.PI / 2;
var EPSILON = 1e-5;
var DEG2RAD = Math.PI / 180;
function clamp(value, min, max) {
  return Math.max(min, Math.min(max, value));
}
function approxZero(number, error = EPSILON) {
  return Math.abs(number) < error;
}
function approxEquals(a3, b2, error = EPSILON) {
  return approxZero(a3 - b2, error);
}
function roundToStep(value, step) {
  return Math.round(value / step) * step;
}
function infinityToMaxNumber(value) {
  if (isFinite(value))
    return value;
  if (value < 0)
    return -Number.MAX_VALUE;
  return Number.MAX_VALUE;
}
function maxNumberToInfinity(value) {
  if (Math.abs(value) < Number.MAX_VALUE)
    return value;
  return value * Infinity;
}
function smoothDamp(current, target2, currentVelocityRef, smoothTime, maxSpeed = Infinity, deltaTime) {
  smoothTime = Math.max(1e-4, smoothTime);
  const omega = 2 / smoothTime;
  const x2 = omega * deltaTime;
  const exp = 1 / (1 + x2 + 0.48 * x2 * x2 + 0.235 * x2 * x2 * x2);
  let change = current - target2;
  const originalTo = target2;
  const maxChange = maxSpeed * smoothTime;
  change = clamp(change, -maxChange, maxChange);
  target2 = current - change;
  const temp5 = (currentVelocityRef.value + omega * change) * deltaTime;
  currentVelocityRef.value = (currentVelocityRef.value - omega * temp5) * exp;
  let output = target2 + (change + temp5) * exp;
  if (originalTo - current > 0 === output > originalTo) {
    output = originalTo;
    currentVelocityRef.value = (output - originalTo) / deltaTime;
  }
  return output;
}
function smoothDampVec3(current, target2, currentVelocityRef, smoothTime, maxSpeed = Infinity, deltaTime, out) {
  smoothTime = Math.max(1e-4, smoothTime);
  const omega = 2 / smoothTime;
  const x2 = omega * deltaTime;
  const exp = 1 / (1 + x2 + 0.48 * x2 * x2 + 0.235 * x2 * x2 * x2);
  let targetX = target2.x;
  let targetY = target2.y;
  let targetZ = target2.z;
  let changeX = current.x - targetX;
  let changeY = current.y - targetY;
  let changeZ = current.z - targetZ;
  const originalToX = targetX;
  const originalToY = targetY;
  const originalToZ = targetZ;
  const maxChange = maxSpeed * smoothTime;
  const maxChangeSq = maxChange * maxChange;
  const magnitudeSq = changeX * changeX + changeY * changeY + changeZ * changeZ;
  if (magnitudeSq > maxChangeSq) {
    const magnitude = Math.sqrt(magnitudeSq);
    changeX = changeX / magnitude * maxChange;
    changeY = changeY / magnitude * maxChange;
    changeZ = changeZ / magnitude * maxChange;
  }
  targetX = current.x - changeX;
  targetY = current.y - changeY;
  targetZ = current.z - changeZ;
  const tempX = (currentVelocityRef.x + omega * changeX) * deltaTime;
  const tempY = (currentVelocityRef.y + omega * changeY) * deltaTime;
  const tempZ = (currentVelocityRef.z + omega * changeZ) * deltaTime;
  currentVelocityRef.x = (currentVelocityRef.x - omega * tempX) * exp;
  currentVelocityRef.y = (currentVelocityRef.y - omega * tempY) * exp;
  currentVelocityRef.z = (currentVelocityRef.z - omega * tempZ) * exp;
  out.x = targetX + (changeX + tempX) * exp;
  out.y = targetY + (changeY + tempY) * exp;
  out.z = targetZ + (changeZ + tempZ) * exp;
  const origMinusCurrentX = originalToX - current.x;
  const origMinusCurrentY = originalToY - current.y;
  const origMinusCurrentZ = originalToZ - current.z;
  const outMinusOrigX = out.x - originalToX;
  const outMinusOrigY = out.y - originalToY;
  const outMinusOrigZ = out.z - originalToZ;
  if (origMinusCurrentX * outMinusOrigX + origMinusCurrentY * outMinusOrigY + origMinusCurrentZ * outMinusOrigZ > 0) {
    out.x = originalToX;
    out.y = originalToY;
    out.z = originalToZ;
    currentVelocityRef.x = (out.x - originalToX) / deltaTime;
    currentVelocityRef.y = (out.y - originalToY) / deltaTime;
    currentVelocityRef.z = (out.z - originalToZ) / deltaTime;
  }
  return out;
}
function extractClientCoordFromEvent(pointers, out) {
  out.set(0, 0);
  pointers.forEach((pointer) => {
    out.x += pointer.clientX;
    out.y += pointer.clientY;
  });
  out.x /= pointers.length;
  out.y /= pointers.length;
}
function notSupportedInOrthographicCamera(camera, message) {
  if (isOrthographicCamera(camera)) {
    console.warn(`${message} is not supported in OrthographicCamera`);
    return true;
  }
  return false;
}
var EventDispatcher2 = class {
  constructor() {
    this._listeners = {};
  }
  /**
   * Adds the specified event listener.
   * @param type event name
   * @param listener handler function
   * @category Methods
   */
  addEventListener(type, listener) {
    const listeners = this._listeners;
    if (listeners[type] === void 0)
      listeners[type] = [];
    if (listeners[type].indexOf(listener) === -1)
      listeners[type].push(listener);
  }
  /**
   * Presence of the specified event listener.
   * @param type event name
   * @param listener handler function
   * @category Methods
   */
  hasEventListener(type, listener) {
    const listeners = this._listeners;
    return listeners[type] !== void 0 && listeners[type].indexOf(listener) !== -1;
  }
  /**
   * Removes the specified event listener
   * @param type event name
   * @param listener handler function
   * @category Methods
   */
  removeEventListener(type, listener) {
    const listeners = this._listeners;
    const listenerArray = listeners[type];
    if (listenerArray !== void 0) {
      const index = listenerArray.indexOf(listener);
      if (index !== -1)
        listenerArray.splice(index, 1);
    }
  }
  /**
   * Removes all event listeners
   * @param type event name
   * @category Methods
   */
  removeAllEventListeners(type) {
    if (!type) {
      this._listeners = {};
      return;
    }
    if (Array.isArray(this._listeners[type]))
      this._listeners[type].length = 0;
  }
  /**
   * Fire an event type.
   * @param event DispatcherEvent
   * @category Methods
   */
  dispatchEvent(event) {
    const listeners = this._listeners;
    const listenerArray = listeners[event.type];
    if (listenerArray !== void 0) {
      event.target = this;
      const array = listenerArray.slice(0);
      for (let i3 = 0, l2 = array.length; i3 < l2; i3++) {
        array[i3].call(this, event);
      }
    }
  }
};
var VERSION = "2.7.0";
var TOUCH_DOLLY_FACTOR = 1 / 8;
var isBrowser = typeof window !== "undefined";
var isMac = isBrowser && /Mac/.test(navigator.platform);
var isPointerEventsNotSupported = !(isBrowser && "PointerEvent" in window);
var THREE;
var _ORIGIN;
var _AXIS_Y;
var _AXIS_Z;
var _v2;
var _v3A;
var _v3B;
var _v3C;
var _cameraDirection;
var _xColumn;
var _yColumn;
var _zColumn;
var _deltaTarget;
var _deltaOffset;
var _sphericalA;
var _sphericalB;
var _box3A;
var _box3B;
var _sphere;
var _quaternionA;
var _quaternionB;
var _rotationMatrix;
var _raycaster;
var CameraControls = class extends EventDispatcher2 {
  /**
       * Injects THREE as the dependency. You can then proceed to use CameraControls.
       *
       * e.g
       * ```javascript
       * CameraControls.install( { THREE: THREE } );
       * ```
       *
       * Note: If you do not wish to use enter three.js to reduce file size(tree-shaking for example), make a subset to install.
       *
       * ```js
       * import {
       * 	Vector2,
       * 	Vector3,
       * 	Vector4,
       * 	Quaternion,
       * 	Matrix4,
       * 	Spherical,
       * 	Box3,
       * 	Sphere,
       * 	Raycaster,
       * 	MathUtils,
       * } from 'three';
       *
       * const subsetOfTHREE = {
       * 	Vector2   : Vector2,
       * 	Vector3   : Vector3,
       * 	Vector4   : Vector4,
       * 	Quaternion: Quaternion,
       * 	Matrix4   : Matrix4,
       * 	Spherical : Spherical,
       * 	Box3      : Box3,
       * 	Sphere    : Sphere,
       * 	Raycaster : Raycaster,
       * };
  
       * CameraControls.install( { THREE: subsetOfTHREE } );
       * ```
       * @category Statics
       */
  static install(libs) {
    THREE = libs.THREE;
    _ORIGIN = Object.freeze(new THREE.Vector3(0, 0, 0));
    _AXIS_Y = Object.freeze(new THREE.Vector3(0, 1, 0));
    _AXIS_Z = Object.freeze(new THREE.Vector3(0, 0, 1));
    _v2 = new THREE.Vector2();
    _v3A = new THREE.Vector3();
    _v3B = new THREE.Vector3();
    _v3C = new THREE.Vector3();
    _cameraDirection = new THREE.Vector3();
    _xColumn = new THREE.Vector3();
    _yColumn = new THREE.Vector3();
    _zColumn = new THREE.Vector3();
    _deltaTarget = new THREE.Vector3();
    _deltaOffset = new THREE.Vector3();
    _sphericalA = new THREE.Spherical();
    _sphericalB = new THREE.Spherical();
    _box3A = new THREE.Box3();
    _box3B = new THREE.Box3();
    _sphere = new THREE.Sphere();
    _quaternionA = new THREE.Quaternion();
    _quaternionB = new THREE.Quaternion();
    _rotationMatrix = new THREE.Matrix4();
    _raycaster = new THREE.Raycaster();
  }
  /**
   * list all ACTIONs
   * @category Statics
   */
  static get ACTION() {
    return ACTION;
  }
  /**
   * Creates a `CameraControls` instance.
   *
   * Note:
   * You **must install** three.js before using camera-controls. see [#install](#install)
   * Not doing so will lead to runtime errors (`undefined` references to THREE).
   *
   * e.g.
   * ```
   * CameraControls.install( { THREE } );
   * const cameraControls = new CameraControls( camera, domElement );
   * ```
   *
   * @param camera A `THREE.PerspectiveCamera` or `THREE.OrthographicCamera` to be controlled.
   * @param domElement A `HTMLElement` for the draggable area, usually `renderer.domElement`.
   * @category Constructor
   */
  constructor(camera, domElement) {
    super();
    this.minPolarAngle = 0;
    this.maxPolarAngle = Math.PI;
    this.minAzimuthAngle = -Infinity;
    this.maxAzimuthAngle = Infinity;
    this.minDistance = Number.EPSILON;
    this.maxDistance = Infinity;
    this.infinityDolly = false;
    this.minZoom = 0.01;
    this.maxZoom = Infinity;
    this.smoothTime = 0.25;
    this.draggingSmoothTime = 0.125;
    this.maxSpeed = Infinity;
    this.azimuthRotateSpeed = 1;
    this.polarRotateSpeed = 1;
    this.dollySpeed = 1;
    this.dollyDragInverted = false;
    this.truckSpeed = 2;
    this.dollyToCursor = false;
    this.dragToOffset = false;
    this.verticalDragToForward = false;
    this.boundaryFriction = 0;
    this.restThreshold = 0.01;
    this.colliderMeshes = [];
    this.cancel = () => {
    };
    this._enabled = true;
    this._state = ACTION.NONE;
    this._viewport = null;
    this._changedDolly = 0;
    this._changedZoom = 0;
    this._hasRested = true;
    this._boundaryEnclosesCamera = false;
    this._needsUpdate = true;
    this._updatedLastTime = false;
    this._elementRect = new DOMRect();
    this._isDragging = false;
    this._activePointers = [];
    this._lockedPointer = null;
    this._interactiveArea = new DOMRect(0, 0, 1, 1);
    this._isUserControllingRotate = false;
    this._isUserControllingDolly = false;
    this._isUserControllingTruck = false;
    this._isUserControllingOffset = false;
    this._isUserControllingZoom = false;
    this._lastDollyDirection = DOLLY_DIRECTION.NONE;
    this._thetaVelocity = { value: 0 };
    this._phiVelocity = { value: 0 };
    this._radiusVelocity = { value: 0 };
    this._targetVelocity = new THREE.Vector3();
    this._focalOffsetVelocity = new THREE.Vector3();
    this._zoomVelocity = { value: 0 };
    this._truckInternal = (deltaX, deltaY, dragToOffset) => {
      let truckX;
      let pedestalY;
      if (isPerspectiveCamera(this._camera)) {
        const offset = _v3A.copy(this._camera.position).sub(this._target);
        const fov = this._camera.getEffectiveFOV() * DEG2RAD;
        const targetDistance = offset.length() * Math.tan(fov * 0.5);
        truckX = this.truckSpeed * deltaX * targetDistance / this._elementRect.height;
        pedestalY = this.truckSpeed * deltaY * targetDistance / this._elementRect.height;
      } else if (isOrthographicCamera(this._camera)) {
        const camera2 = this._camera;
        truckX = deltaX * (camera2.right - camera2.left) / camera2.zoom / this._elementRect.width;
        pedestalY = deltaY * (camera2.top - camera2.bottom) / camera2.zoom / this._elementRect.height;
      } else {
        return;
      }
      if (this.verticalDragToForward) {
        dragToOffset ? this.setFocalOffset(this._focalOffsetEnd.x + truckX, this._focalOffsetEnd.y, this._focalOffsetEnd.z, true) : this.truck(truckX, 0, true);
        this.forward(-pedestalY, true);
      } else {
        dragToOffset ? this.setFocalOffset(this._focalOffsetEnd.x + truckX, this._focalOffsetEnd.y + pedestalY, this._focalOffsetEnd.z, true) : this.truck(truckX, pedestalY, true);
      }
    };
    this._rotateInternal = (deltaX, deltaY) => {
      const theta = PI_2 * this.azimuthRotateSpeed * deltaX / this._elementRect.height;
      const phi = PI_2 * this.polarRotateSpeed * deltaY / this._elementRect.height;
      this.rotate(theta, phi, true);
    };
    this._dollyInternal = (delta, x2, y2) => {
      const dollyScale = Math.pow(0.95, -delta * this.dollySpeed);
      const lastDistance = this._sphericalEnd.radius;
      const distance = this._sphericalEnd.radius * dollyScale;
      const clampedDistance = THREE.MathUtils.clamp(distance, this.minDistance, this.maxDistance);
      const overflowedDistance = clampedDistance - distance;
      if (this.infinityDolly && this.dollyToCursor) {
        this._dollyToNoClamp(distance, true);
      } else if (this.infinityDolly && !this.dollyToCursor) {
        this.dollyInFixed(overflowedDistance, true);
        this._dollyToNoClamp(clampedDistance, true);
      } else {
        this._dollyToNoClamp(clampedDistance, true);
      }
      if (this.dollyToCursor) {
        this._changedDolly += (this.infinityDolly ? distance : clampedDistance) - lastDistance;
        this._dollyControlCoord.set(x2, y2);
      }
      this._lastDollyDirection = Math.sign(-delta);
    };
    this._zoomInternal = (delta, x2, y2) => {
      const zoomScale = Math.pow(0.95, delta * this.dollySpeed);
      const lastZoom = this._zoom;
      const zoom = this._zoom * zoomScale;
      this.zoomTo(zoom, true);
      if (this.dollyToCursor) {
        this._changedZoom += zoom - lastZoom;
        this._dollyControlCoord.set(x2, y2);
      }
    };
    if (typeof THREE === "undefined") {
      console.error("camera-controls: `THREE` is undefined. You must first run `CameraControls.install( { THREE: THREE } )`. Check the docs for further information.");
    }
    this._camera = camera;
    this._yAxisUpSpace = new THREE.Quaternion().setFromUnitVectors(this._camera.up, _AXIS_Y);
    this._yAxisUpSpaceInverse = this._yAxisUpSpace.clone().invert();
    this._state = ACTION.NONE;
    this._target = new THREE.Vector3();
    this._targetEnd = this._target.clone();
    this._focalOffset = new THREE.Vector3();
    this._focalOffsetEnd = this._focalOffset.clone();
    this._spherical = new THREE.Spherical().setFromVector3(_v3A.copy(this._camera.position).applyQuaternion(this._yAxisUpSpace));
    this._sphericalEnd = this._spherical.clone();
    this._lastDistance = this._spherical.radius;
    this._zoom = this._camera.zoom;
    this._zoomEnd = this._zoom;
    this._lastZoom = this._zoom;
    this._nearPlaneCorners = [
      new THREE.Vector3(),
      new THREE.Vector3(),
      new THREE.Vector3(),
      new THREE.Vector3()
    ];
    this._updateNearPlaneCorners();
    this._boundary = new THREE.Box3(new THREE.Vector3(-Infinity, -Infinity, -Infinity), new THREE.Vector3(Infinity, Infinity, Infinity));
    this._cameraUp0 = this._camera.up.clone();
    this._target0 = this._target.clone();
    this._position0 = this._camera.position.clone();
    this._zoom0 = this._zoom;
    this._focalOffset0 = this._focalOffset.clone();
    this._dollyControlCoord = new THREE.Vector2();
    this.mouseButtons = {
      left: ACTION.ROTATE,
      middle: ACTION.DOLLY,
      right: ACTION.TRUCK,
      wheel: isPerspectiveCamera(this._camera) ? ACTION.DOLLY : isOrthographicCamera(this._camera) ? ACTION.ZOOM : ACTION.NONE
    };
    this.touches = {
      one: ACTION.TOUCH_ROTATE,
      two: isPerspectiveCamera(this._camera) ? ACTION.TOUCH_DOLLY_TRUCK : isOrthographicCamera(this._camera) ? ACTION.TOUCH_ZOOM_TRUCK : ACTION.NONE,
      three: ACTION.TOUCH_TRUCK
    };
    const dragStartPosition = new THREE.Vector2();
    const lastDragPosition = new THREE.Vector2();
    const dollyStart = new THREE.Vector2();
    const onPointerDown = (event) => {
      if (!this._enabled || !this._domElement)
        return;
      if (this._interactiveArea.left !== 0 || this._interactiveArea.top !== 0 || this._interactiveArea.width !== 1 || this._interactiveArea.height !== 1) {
        const elRect = this._domElement.getBoundingClientRect();
        const left = event.clientX / elRect.width;
        const top = event.clientY / elRect.height;
        if (left < this._interactiveArea.left || left > this._interactiveArea.right || top < this._interactiveArea.top || top > this._interactiveArea.bottom)
          return;
      }
      const mouseButton = event.pointerType !== "mouse" ? null : (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT ? MOUSE_BUTTON.LEFT : (event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE ? MOUSE_BUTTON.MIDDLE : (event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT ? MOUSE_BUTTON.RIGHT : null;
      if (mouseButton !== null) {
        const zombiePointer = this._findPointerByMouseButton(mouseButton);
        zombiePointer && this._disposePointer(zombiePointer);
      }
      if ((event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT && this._lockedPointer)
        return;
      const pointer = {
        pointerId: event.pointerId,
        clientX: event.clientX,
        clientY: event.clientY,
        deltaX: 0,
        deltaY: 0,
        mouseButton
      };
      this._activePointers.push(pointer);
      this._domElement.ownerDocument.removeEventListener("pointermove", onPointerMove, { passive: false });
      this._domElement.ownerDocument.removeEventListener("pointerup", onPointerUp);
      this._domElement.ownerDocument.addEventListener("pointermove", onPointerMove, { passive: false });
      this._domElement.ownerDocument.addEventListener("pointerup", onPointerUp);
      this._isDragging = true;
      startDragging(event);
    };
    const onMouseDown = (event) => {
      if (!this._enabled || !this._domElement || this._lockedPointer)
        return;
      if (this._interactiveArea.left !== 0 || this._interactiveArea.top !== 0 || this._interactiveArea.width !== 1 || this._interactiveArea.height !== 1) {
        const elRect = this._domElement.getBoundingClientRect();
        const left = event.clientX / elRect.width;
        const top = event.clientY / elRect.height;
        if (left < this._interactiveArea.left || left > this._interactiveArea.right || top < this._interactiveArea.top || top > this._interactiveArea.bottom)
          return;
      }
      const mouseButton = (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT ? MOUSE_BUTTON.LEFT : (event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE ? MOUSE_BUTTON.MIDDLE : (event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT ? MOUSE_BUTTON.RIGHT : null;
      if (mouseButton !== null) {
        const zombiePointer = this._findPointerByMouseButton(mouseButton);
        zombiePointer && this._disposePointer(zombiePointer);
      }
      const pointer = {
        pointerId: 1,
        clientX: event.clientX,
        clientY: event.clientY,
        deltaX: 0,
        deltaY: 0,
        mouseButton: (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT ? MOUSE_BUTTON.LEFT : (event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.LEFT ? MOUSE_BUTTON.MIDDLE : (event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.LEFT ? MOUSE_BUTTON.RIGHT : null
      };
      this._activePointers.push(pointer);
      this._domElement.ownerDocument.removeEventListener("mousemove", onMouseMove);
      this._domElement.ownerDocument.removeEventListener("mouseup", onMouseUp);
      this._domElement.ownerDocument.addEventListener("mousemove", onMouseMove);
      this._domElement.ownerDocument.addEventListener("mouseup", onMouseUp);
      this._isDragging = true;
      startDragging(event);
    };
    const onPointerMove = (event) => {
      if (event.cancelable)
        event.preventDefault();
      const pointerId = event.pointerId;
      const pointer = this._lockedPointer || this._findPointerById(pointerId);
      if (!pointer)
        return;
      pointer.clientX = event.clientX;
      pointer.clientY = event.clientY;
      pointer.deltaX = event.movementX;
      pointer.deltaY = event.movementY;
      this._state = 0;
      if (event.pointerType === "touch") {
        switch (this._activePointers.length) {
          case 1:
            this._state = this.touches.one;
            break;
          case 2:
            this._state = this.touches.two;
            break;
          case 3:
            this._state = this.touches.three;
            break;
        }
      } else {
        if (!this._isDragging && this._lockedPointer || this._isDragging && (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT) {
          this._state = this._state | this.mouseButtons.left;
        }
        if (this._isDragging && (event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE) {
          this._state = this._state | this.mouseButtons.middle;
        }
        if (this._isDragging && (event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT) {
          this._state = this._state | this.mouseButtons.right;
        }
      }
      dragging();
    };
    const onMouseMove = (event) => {
      const pointer = this._lockedPointer || this._findPointerById(1);
      if (!pointer)
        return;
      pointer.clientX = event.clientX;
      pointer.clientY = event.clientY;
      pointer.deltaX = event.movementX;
      pointer.deltaY = event.movementY;
      this._state = 0;
      if (this._lockedPointer || (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT) {
        this._state = this._state | this.mouseButtons.left;
      }
      if ((event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE) {
        this._state = this._state | this.mouseButtons.middle;
      }
      if ((event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT) {
        this._state = this._state | this.mouseButtons.right;
      }
      dragging();
    };
    const onPointerUp = (event) => {
      const pointer = this._findPointerById(event.pointerId);
      if (pointer && pointer === this._lockedPointer)
        return;
      pointer && this._disposePointer(pointer);
      if (event.pointerType === "touch") {
        switch (this._activePointers.length) {
          case 0:
            this._state = ACTION.NONE;
            break;
          case 1:
            this._state = this.touches.one;
            break;
          case 2:
            this._state = this.touches.two;
            break;
          case 3:
            this._state = this.touches.three;
            break;
        }
      } else {
        this._state = ACTION.NONE;
      }
      endDragging();
    };
    const onMouseUp = () => {
      const pointer = this._findPointerById(1);
      if (pointer && pointer === this._lockedPointer)
        return;
      pointer && this._disposePointer(pointer);
      this._state = ACTION.NONE;
      endDragging();
    };
    let lastScrollTimeStamp = -1;
    const onMouseWheel = (event) => {
      if (!this._domElement)
        return;
      if (!this._enabled || this.mouseButtons.wheel === ACTION.NONE)
        return;
      if (this._interactiveArea.left !== 0 || this._interactiveArea.top !== 0 || this._interactiveArea.width !== 1 || this._interactiveArea.height !== 1) {
        const elRect = this._domElement.getBoundingClientRect();
        const left = event.clientX / elRect.width;
        const top = event.clientY / elRect.height;
        if (left < this._interactiveArea.left || left > this._interactiveArea.right || top < this._interactiveArea.top || top > this._interactiveArea.bottom)
          return;
      }
      event.preventDefault();
      if (this.dollyToCursor || this.mouseButtons.wheel === ACTION.ROTATE || this.mouseButtons.wheel === ACTION.TRUCK) {
        const now = performance.now();
        if (lastScrollTimeStamp - now < 1e3)
          this._getClientRect(this._elementRect);
        lastScrollTimeStamp = now;
      }
      const deltaYFactor = isMac ? -1 : -3;
      const delta = event.deltaMode === 1 ? event.deltaY / deltaYFactor : event.deltaY / (deltaYFactor * 10);
      const x2 = this.dollyToCursor ? (event.clientX - this._elementRect.x) / this._elementRect.width * 2 - 1 : 0;
      const y2 = this.dollyToCursor ? (event.clientY - this._elementRect.y) / this._elementRect.height * -2 + 1 : 0;
      switch (this.mouseButtons.wheel) {
        case ACTION.ROTATE: {
          this._rotateInternal(event.deltaX, event.deltaY);
          this._isUserControllingRotate = true;
          break;
        }
        case ACTION.TRUCK: {
          this._truckInternal(event.deltaX, event.deltaY, false);
          this._isUserControllingTruck = true;
          break;
        }
        case ACTION.OFFSET: {
          this._truckInternal(event.deltaX, event.deltaY, true);
          this._isUserControllingOffset = true;
          break;
        }
        case ACTION.DOLLY: {
          this._dollyInternal(-delta, x2, y2);
          this._isUserControllingDolly = true;
          break;
        }
        case ACTION.ZOOM: {
          this._zoomInternal(-delta, x2, y2);
          this._isUserControllingZoom = true;
          break;
        }
      }
      this.dispatchEvent({ type: "control" });
    };
    const onContextMenu = (event) => {
      if (!this._domElement || !this._enabled)
        return;
      if (this.mouseButtons.right === CameraControls.ACTION.NONE) {
        const pointerId = event instanceof PointerEvent ? event.pointerId : event instanceof MouseEvent ? 0 : 0;
        const pointer = this._findPointerById(pointerId);
        pointer && this._disposePointer(pointer);
        this._domElement.ownerDocument.removeEventListener("pointermove", onPointerMove, { passive: false });
        this._domElement.ownerDocument.removeEventListener("pointerup", onPointerUp);
        this._domElement.ownerDocument.removeEventListener("mousemove", onMouseMove);
        this._domElement.ownerDocument.removeEventListener("mouseup", onMouseUp);
        return;
      }
      event.preventDefault();
    };
    const startDragging = (event) => {
      if (!this._enabled)
        return;
      extractClientCoordFromEvent(this._activePointers, _v2);
      this._getClientRect(this._elementRect);
      dragStartPosition.copy(_v2);
      lastDragPosition.copy(_v2);
      const isMultiTouch = this._activePointers.length >= 2;
      if (isMultiTouch) {
        const dx = _v2.x - this._activePointers[1].clientX;
        const dy = _v2.y - this._activePointers[1].clientY;
        const distance = Math.sqrt(dx * dx + dy * dy);
        dollyStart.set(0, distance);
        const x2 = (this._activePointers[0].clientX + this._activePointers[1].clientX) * 0.5;
        const y2 = (this._activePointers[0].clientY + this._activePointers[1].clientY) * 0.5;
        lastDragPosition.set(x2, y2);
      }
      this._state = 0;
      if (!event) {
        if (this._lockedPointer)
          this._state = this._state | this.mouseButtons.left;
      } else if ("pointerType" in event && event.pointerType === "touch") {
        switch (this._activePointers.length) {
          case 1:
            this._state = this.touches.one;
            break;
          case 2:
            this._state = this.touches.two;
            break;
          case 3:
            this._state = this.touches.three;
            break;
        }
      } else {
        if (!this._lockedPointer && (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT) {
          this._state = this._state | this.mouseButtons.left;
        }
        if ((event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE) {
          this._state = this._state | this.mouseButtons.middle;
        }
        if ((event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT) {
          this._state = this._state | this.mouseButtons.right;
        }
      }
      if ((this._state & ACTION.ROTATE) === ACTION.ROTATE || (this._state & ACTION.TOUCH_ROTATE) === ACTION.TOUCH_ROTATE || (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE || (this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {
        this._sphericalEnd.theta = this._spherical.theta;
        this._sphericalEnd.phi = this._spherical.phi;
        this._thetaVelocity.value = 0;
        this._phiVelocity.value = 0;
      }
      if ((this._state & ACTION.TRUCK) === ACTION.TRUCK || (this._state & ACTION.TOUCH_TRUCK) === ACTION.TOUCH_TRUCK || (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK || (this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK) {
        this._targetEnd.copy(this._target);
        this._targetVelocity.set(0, 0, 0);
      }
      if ((this._state & ACTION.DOLLY) === ACTION.DOLLY || (this._state & ACTION.TOUCH_DOLLY) === ACTION.TOUCH_DOLLY || (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK || (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET || (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE) {
        this._sphericalEnd.radius = this._spherical.radius;
        this._radiusVelocity.value = 0;
      }
      if ((this._state & ACTION.ZOOM) === ACTION.ZOOM || (this._state & ACTION.TOUCH_ZOOM) === ACTION.TOUCH_ZOOM || (this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK || (this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET || (this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {
        this._zoomEnd = this._zoom;
        this._zoomVelocity.value = 0;
      }
      if ((this._state & ACTION.OFFSET) === ACTION.OFFSET || (this._state & ACTION.TOUCH_OFFSET) === ACTION.TOUCH_OFFSET || (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET || (this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET) {
        this._focalOffsetEnd.copy(this._focalOffset);
        this._focalOffsetVelocity.set(0, 0, 0);
      }
      this.dispatchEvent({ type: "controlstart" });
    };
    const dragging = () => {
      if (!this._enabled)
        return;
      extractClientCoordFromEvent(this._activePointers, _v2);
      const isPointerLockActive = this._domElement && document.pointerLockElement === this._domElement;
      const lockedPointer = isPointerLockActive ? this._lockedPointer || this._activePointers[0] : null;
      const deltaX = lockedPointer ? -lockedPointer.deltaX : lastDragPosition.x - _v2.x;
      const deltaY = lockedPointer ? -lockedPointer.deltaY : lastDragPosition.y - _v2.y;
      lastDragPosition.copy(_v2);
      if ((this._state & ACTION.ROTATE) === ACTION.ROTATE || (this._state & ACTION.TOUCH_ROTATE) === ACTION.TOUCH_ROTATE || (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE || (this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {
        this._rotateInternal(deltaX, deltaY);
        this._isUserControllingRotate = true;
      }
      if ((this._state & ACTION.DOLLY) === ACTION.DOLLY || (this._state & ACTION.ZOOM) === ACTION.ZOOM) {
        const dollyX = this.dollyToCursor ? (dragStartPosition.x - this._elementRect.x) / this._elementRect.width * 2 - 1 : 0;
        const dollyY = this.dollyToCursor ? (dragStartPosition.y - this._elementRect.y) / this._elementRect.height * -2 + 1 : 0;
        const dollyDirection = this.dollyDragInverted ? -1 : 1;
        if ((this._state & ACTION.DOLLY) === ACTION.DOLLY) {
          this._dollyInternal(dollyDirection * deltaY * TOUCH_DOLLY_FACTOR, dollyX, dollyY);
          this._isUserControllingDolly = true;
        } else {
          this._zoomInternal(dollyDirection * deltaY * TOUCH_DOLLY_FACTOR, dollyX, dollyY);
          this._isUserControllingZoom = true;
        }
      }
      if ((this._state & ACTION.TOUCH_DOLLY) === ACTION.TOUCH_DOLLY || (this._state & ACTION.TOUCH_ZOOM) === ACTION.TOUCH_ZOOM || (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK || (this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK || (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET || (this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET || (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE || (this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {
        const dx = _v2.x - this._activePointers[1].clientX;
        const dy = _v2.y - this._activePointers[1].clientY;
        const distance = Math.sqrt(dx * dx + dy * dy);
        const dollyDelta = dollyStart.y - distance;
        dollyStart.set(0, distance);
        const dollyX = this.dollyToCursor ? (lastDragPosition.x - this._elementRect.x) / this._elementRect.width * 2 - 1 : 0;
        const dollyY = this.dollyToCursor ? (lastDragPosition.y - this._elementRect.y) / this._elementRect.height * -2 + 1 : 0;
        if ((this._state & ACTION.TOUCH_DOLLY) === ACTION.TOUCH_DOLLY || (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE || (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK || (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET) {
          this._dollyInternal(dollyDelta * TOUCH_DOLLY_FACTOR, dollyX, dollyY);
          this._isUserControllingDolly = true;
        } else {
          this._zoomInternal(dollyDelta * TOUCH_DOLLY_FACTOR, dollyX, dollyY);
          this._isUserControllingZoom = true;
        }
      }
      if ((this._state & ACTION.TRUCK) === ACTION.TRUCK || (this._state & ACTION.TOUCH_TRUCK) === ACTION.TOUCH_TRUCK || (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK || (this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK) {
        this._truckInternal(deltaX, deltaY, false);
        this._isUserControllingTruck = true;
      }
      if ((this._state & ACTION.OFFSET) === ACTION.OFFSET || (this._state & ACTION.TOUCH_OFFSET) === ACTION.TOUCH_OFFSET || (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET || (this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET) {
        this._truckInternal(deltaX, deltaY, true);
        this._isUserControllingOffset = true;
      }
      this.dispatchEvent({ type: "control" });
    };
    const endDragging = () => {
      extractClientCoordFromEvent(this._activePointers, _v2);
      lastDragPosition.copy(_v2);
      if (this._activePointers.length === 0 || this._activePointers.length === 1 && this._activePointers[0] === this._lockedPointer) {
        this._isDragging = false;
      }
      if (this._activePointers.length === 0 && this._domElement) {
        this._domElement.ownerDocument.removeEventListener("pointermove", onPointerMove, { passive: false });
        this._domElement.ownerDocument.removeEventListener("mousemove", onMouseMove);
        this._domElement.ownerDocument.removeEventListener("pointerup", onPointerUp);
        this._domElement.ownerDocument.removeEventListener("mouseup", onMouseUp);
        this.dispatchEvent({ type: "controlend" });
      }
    };
    this.lockPointer = () => {
      if (!this._enabled || !this._domElement)
        return;
      this.cancel();
      this._lockedPointer = {
        pointerId: -1,
        clientX: 0,
        clientY: 0,
        deltaX: 0,
        deltaY: 0,
        mouseButton: null
      };
      this._activePointers.push(this._lockedPointer);
      this._domElement.ownerDocument.removeEventListener("pointermove", onPointerMove, { passive: false });
      this._domElement.ownerDocument.removeEventListener("pointerup", onPointerUp);
      this._domElement.requestPointerLock();
      this._domElement.ownerDocument.addEventListener("pointerlockchange", onPointerLockChange);
      this._domElement.ownerDocument.addEventListener("pointerlockerror", onPointerLockError);
      this._domElement.ownerDocument.addEventListener("pointermove", onPointerMove, { passive: false });
      this._domElement.ownerDocument.addEventListener("pointerup", onPointerUp);
      startDragging();
    };
    this.unlockPointer = () => {
      if (this._lockedPointer !== null) {
        this._disposePointer(this._lockedPointer);
        this._lockedPointer = null;
      }
      document.exitPointerLock();
      this.cancel();
      if (!this._domElement)
        return;
      this._domElement.ownerDocument.removeEventListener("pointerlockchange", onPointerLockChange);
      this._domElement.ownerDocument.removeEventListener("pointerlockerror", onPointerLockError);
    };
    const onPointerLockChange = () => {
      const isPointerLockActive = this._domElement && this._domElement.ownerDocument.pointerLockElement === this._domElement;
      if (!isPointerLockActive)
        this.unlockPointer();
    };
    const onPointerLockError = () => {
      this.unlockPointer();
    };
    this._addAllEventListeners = (domElement2) => {
      this._domElement = domElement2;
      this._domElement.style.touchAction = "none";
      this._domElement.style.userSelect = "none";
      this._domElement.style.webkitUserSelect = "none";
      this._domElement.addEventListener("pointerdown", onPointerDown);
      isPointerEventsNotSupported && this._domElement.addEventListener("mousedown", onMouseDown);
      this._domElement.addEventListener("pointercancel", onPointerUp);
      this._domElement.addEventListener("wheel", onMouseWheel, { passive: false });
      this._domElement.addEventListener("contextmenu", onContextMenu);
    };
    this._removeAllEventListeners = () => {
      if (!this._domElement)
        return;
      this._domElement.style.touchAction = "";
      this._domElement.style.userSelect = "";
      this._domElement.style.webkitUserSelect = "";
      this._domElement.removeEventListener("pointerdown", onPointerDown);
      this._domElement.removeEventListener("mousedown", onMouseDown);
      this._domElement.removeEventListener("pointercancel", onPointerUp);
      this._domElement.removeEventListener("wheel", onMouseWheel, { passive: false });
      this._domElement.removeEventListener("contextmenu", onContextMenu);
      this._domElement.ownerDocument.removeEventListener("pointermove", onPointerMove, { passive: false });
      this._domElement.ownerDocument.removeEventListener("mousemove", onMouseMove);
      this._domElement.ownerDocument.removeEventListener("pointerup", onPointerUp);
      this._domElement.ownerDocument.removeEventListener("mouseup", onMouseUp);
      this._domElement.ownerDocument.removeEventListener("pointerlockchange", onPointerLockChange);
      this._domElement.ownerDocument.removeEventListener("pointerlockerror", onPointerLockError);
    };
    this.cancel = () => {
      if (this._state === ACTION.NONE)
        return;
      this._state = ACTION.NONE;
      this._activePointers.length = 0;
      endDragging();
    };
    if (domElement)
      this.connect(domElement);
    this.update(0);
  }
  /**
   * The camera to be controlled
   * @category Properties
   */
  get camera() {
    return this._camera;
  }
  set camera(camera) {
    this._camera = camera;
    this.updateCameraUp();
    this._camera.updateProjectionMatrix();
    this._updateNearPlaneCorners();
    this._needsUpdate = true;
  }
  /**
   * Whether or not the controls are enabled.
   * `false` to disable user dragging/touch-move, but all methods works.
   * @category Properties
   */
  get enabled() {
    return this._enabled;
  }
  set enabled(enabled) {
    this._enabled = enabled;
    if (!this._domElement)
      return;
    if (enabled) {
      this._domElement.style.touchAction = "none";
      this._domElement.style.userSelect = "none";
      this._domElement.style.webkitUserSelect = "none";
    } else {
      this.cancel();
      this._domElement.style.touchAction = "";
      this._domElement.style.userSelect = "";
      this._domElement.style.webkitUserSelect = "";
    }
  }
  /**
   * Returns `true` if the controls are active updating.
   * readonly value.
   * @category Properties
   */
  get active() {
    return !this._hasRested;
  }
  /**
   * Getter for the current `ACTION`.
   * readonly value.
   * @category Properties
   */
  get currentAction() {
    return this._state;
  }
  /**
   * get/set Current distance.
   * @category Properties
   */
  get distance() {
    return this._spherical.radius;
  }
  set distance(distance) {
    if (this._spherical.radius === distance && this._sphericalEnd.radius === distance)
      return;
    this._spherical.radius = distance;
    this._sphericalEnd.radius = distance;
    this._needsUpdate = true;
  }
  // horizontal angle
  /**
   * get/set the azimuth angle (horizontal) in radians.
   * Every 360 degrees turn is added to `.azimuthAngle` value, which is accumulative.
   * @category Properties
   */
  get azimuthAngle() {
    return this._spherical.theta;
  }
  set azimuthAngle(azimuthAngle) {
    if (this._spherical.theta === azimuthAngle && this._sphericalEnd.theta === azimuthAngle)
      return;
    this._spherical.theta = azimuthAngle;
    this._sphericalEnd.theta = azimuthAngle;
    this._needsUpdate = true;
  }
  // vertical angle
  /**
   * get/set the polar angle (vertical) in radians.
   * @category Properties
   */
  get polarAngle() {
    return this._spherical.phi;
  }
  set polarAngle(polarAngle) {
    if (this._spherical.phi === polarAngle && this._sphericalEnd.phi === polarAngle)
      return;
    this._spherical.phi = polarAngle;
    this._sphericalEnd.phi = polarAngle;
    this._needsUpdate = true;
  }
  /**
   * Whether camera position should be enclosed in the boundary or not.
   * @category Properties
   */
  get boundaryEnclosesCamera() {
    return this._boundaryEnclosesCamera;
  }
  set boundaryEnclosesCamera(boundaryEnclosesCamera) {
    this._boundaryEnclosesCamera = boundaryEnclosesCamera;
    this._needsUpdate = true;
  }
  /**
   * Set drag-start, touches and wheel enable area in the domElement.
   * each values are between `0` and `1` inclusive, where `0` is left/top and `1` is right/bottom of the screen.
   * e.g. `{ x: 0, y: 0, width: 1, height: 1 }` for entire area.
   * @category Properties
   */
  set interactiveArea(interactiveArea) {
    this._interactiveArea.width = clamp(interactiveArea.width, 0, 1);
    this._interactiveArea.height = clamp(interactiveArea.height, 0, 1);
    this._interactiveArea.x = clamp(interactiveArea.x, 0, 1 - this._interactiveArea.width);
    this._interactiveArea.y = clamp(interactiveArea.x, 0, 1 - this._interactiveArea.height);
  }
  /**
   * Adds the specified event listener.
   * Applicable event types (which is `K`) are:
   * | Event name          | Timing |
   * | ------------------- | ------ |
   * | `'controlstart'`    | When the user starts to control the camera via mouse / touches. ¹ |
   * | `'control'`         | When the user controls the camera (dragging). |
   * | `'controlend'`      | When the user ends to control the camera. ¹ |
   * | `'transitionstart'` | When any kind of transition starts, either user control or using a method with `enableTransition = true` |
   * | `'update'`          | When the camera position is updated. |
   * | `'wake'`            | When the camera starts moving. |
   * | `'rest'`            | When the camera movement is below `.restThreshold` ². |
   * | `'sleep'`           | When the camera end moving. |
   *
   * 1. `mouseButtons.wheel` (Mouse wheel control) does not emit `'controlstart'` and `'controlend'`. `mouseButtons.wheel` uses scroll-event internally, and scroll-event happens intermittently. That means "start" and "end" cannot be detected.
   * 2. Due to damping, `sleep` will usually fire a few seconds after the camera _appears_ to have stopped moving. If you want to do something (e.g. enable UI, perform another transition) at the point when the camera has stopped, you probably want the `rest` event. This can be fine tuned using the `.restThreshold` parameter. See the [Rest and Sleep Example](https://yomotsu.github.io/camera-controls/examples/rest-and-sleep.html).
   *
   * e.g.
   * ```
   * cameraControl.addEventListener( 'controlstart', myCallbackFunction );
   * ```
   * @param type event name
   * @param listener handler function
   * @category Methods
   */
  addEventListener(type, listener) {
    super.addEventListener(type, listener);
  }
  /**
   * Removes the specified event listener
   * e.g.
   * ```
   * cameraControl.addEventListener( 'controlstart', myCallbackFunction );
   * ```
   * @param type event name
   * @param listener handler function
   * @category Methods
   */
  removeEventListener(type, listener) {
    super.removeEventListener(type, listener);
  }
  /**
   * Rotate azimuthal angle(horizontal) and polar angle(vertical).
   * Every value is added to the current value.
   * @param azimuthAngle Azimuth rotate angle. In radian.
   * @param polarAngle Polar rotate angle. In radian.
   * @param enableTransition Whether to move smoothly or immediately
   * @category Methods
   */
  rotate(azimuthAngle, polarAngle, enableTransition = false) {
    return this.rotateTo(this._sphericalEnd.theta + azimuthAngle, this._sphericalEnd.phi + polarAngle, enableTransition);
  }
  /**
   * Rotate azimuthal angle(horizontal) to the given angle and keep the same polar angle(vertical) target.
   *
   * e.g.
   * ```
   * cameraControls.rotateAzimuthTo( 30 * THREE.MathUtils.DEG2RAD, true );
   * ```
   * @param azimuthAngle Azimuth rotate angle. In radian.
   * @param enableTransition Whether to move smoothly or immediately
   * @category Methods
   */
  rotateAzimuthTo(azimuthAngle, enableTransition = false) {
    return this.rotateTo(azimuthAngle, this._sphericalEnd.phi, enableTransition);
  }
  /**
   * Rotate polar angle(vertical) to the given angle and keep the same azimuthal angle(horizontal) target.
   *
   * e.g.
   * ```
   * cameraControls.rotatePolarTo( 30 * THREE.MathUtils.DEG2RAD, true );
   * ```
   * @param polarAngle Polar rotate angle. In radian.
   * @param enableTransition Whether to move smoothly or immediately
   * @category Methods
   */
  rotatePolarTo(polarAngle, enableTransition = false) {
    return this.rotateTo(this._sphericalEnd.theta, polarAngle, enableTransition);
  }
  /**
   * Rotate azimuthal angle(horizontal) and polar angle(vertical) to the given angle.
   * Camera view will rotate over the orbit pivot absolutely:
   *
   * azimuthAngle
   * ```
   *       0º
   *         \
   * 90º -----+----- -90º
   *           \
   *           180º
   * ```
   * | direction | angle                  |
   * | --------- | ---------------------- |
   * | front     | 0º                     |
   * | left      | 90º (`Math.PI / 2`)    |
   * | right     | -90º (`- Math.PI / 2`) |
   * | back      | 180º (`Math.PI`)       |
   *
   * polarAngle
   * ```
   *     180º
   *      |
   *      90º
   *      |
   *      0º
   * ```
   * | direction            | angle                  |
   * | -------------------- | ---------------------- |
   * | top/sky              | 180º (`Math.PI`)       |
   * | horizontal from view | 90º (`Math.PI / 2`)    |
   * | bottom/floor         | 0º                     |
   *
   * @param azimuthAngle Azimuth rotate angle to. In radian.
   * @param polarAngle Polar rotate angle to. In radian.
   * @param enableTransition  Whether to move smoothly or immediately
   * @category Methods
   */
  rotateTo(azimuthAngle, polarAngle, enableTransition = false) {
    this._isUserControllingRotate = false;
    const theta = clamp(azimuthAngle, this.minAzimuthAngle, this.maxAzimuthAngle);
    const phi = clamp(polarAngle, this.minPolarAngle, this.maxPolarAngle);
    this._sphericalEnd.theta = theta;
    this._sphericalEnd.phi = phi;
    this._sphericalEnd.makeSafe();
    this._needsUpdate = true;
    if (!enableTransition) {
      this._spherical.theta = this._sphericalEnd.theta;
      this._spherical.phi = this._sphericalEnd.phi;
    }
    const resolveImmediately = !enableTransition || approxEquals(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) && approxEquals(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold);
    return this._createOnRestPromise(resolveImmediately);
  }
  /**
   * Dolly in/out camera position.
   * @param distance Distance of dollyIn. Negative number for dollyOut.
   * @param enableTransition Whether to move smoothly or immediately.
   * @category Methods
   */
  dolly(distance, enableTransition = false) {
    return this.dollyTo(this._sphericalEnd.radius - distance, enableTransition);
  }
  /**
   * Dolly in/out camera position to given distance.
   * @param distance Distance of dolly.
   * @param enableTransition Whether to move smoothly or immediately.
   * @category Methods
   */
  dollyTo(distance, enableTransition = false) {
    this._isUserControllingDolly = false;
    this._lastDollyDirection = DOLLY_DIRECTION.NONE;
    this._changedDolly = 0;
    return this._dollyToNoClamp(clamp(distance, this.minDistance, this.maxDistance), enableTransition);
  }
  _dollyToNoClamp(distance, enableTransition = false) {
    const lastRadius = this._sphericalEnd.radius;
    const hasCollider = this.colliderMeshes.length >= 1;
    if (hasCollider) {
      const maxDistanceByCollisionTest = this._collisionTest();
      const isCollided = approxEquals(maxDistanceByCollisionTest, this._spherical.radius);
      const isDollyIn = lastRadius > distance;
      if (!isDollyIn && isCollided)
        return Promise.resolve();
      this._sphericalEnd.radius = Math.min(distance, maxDistanceByCollisionTest);
    } else {
      this._sphericalEnd.radius = distance;
    }
    this._needsUpdate = true;
    if (!enableTransition) {
      this._spherical.radius = this._sphericalEnd.radius;
    }
    const resolveImmediately = !enableTransition || approxEquals(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);
    return this._createOnRestPromise(resolveImmediately);
  }
  /**
   * Dolly in, but does not change the distance between the target and the camera, and moves the target position instead.
   * Specify a negative value for dolly out.
   * @param distance Distance of dolly.
   * @param enableTransition Whether to move smoothly or immediately.
   * @category Methods
   */
  dollyInFixed(distance, enableTransition = false) {
    this._targetEnd.add(this._getCameraDirection(_cameraDirection).multiplyScalar(distance));
    if (!enableTransition) {
      this._target.copy(this._targetEnd);
    }
    const resolveImmediately = !enableTransition || approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) && approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) && approxEquals(this._target.z, this._targetEnd.z, this.restThreshold);
    return this._createOnRestPromise(resolveImmediately);
  }
  /**
   * Zoom in/out camera. The value is added to camera zoom.
   * Limits set with `.minZoom` and `.maxZoom`
   * @param zoomStep zoom scale
   * @param enableTransition Whether to move smoothly or immediately
   * @category Methods
   */
  zoom(zoomStep, enableTransition = false) {
    return this.zoomTo(this._zoomEnd + zoomStep, enableTransition);
  }
  /**
   * Zoom in/out camera to given scale. The value overwrites camera zoom.
   * Limits set with .minZoom and .maxZoom
   * @param zoom
   * @param enableTransition
   * @category Methods
   */
  zoomTo(zoom, enableTransition = false) {
    this._isUserControllingZoom = false;
    this._zoomEnd = clamp(zoom, this.minZoom, this.maxZoom);
    this._needsUpdate = true;
    if (!enableTransition) {
      this._zoom = this._zoomEnd;
    }
    const resolveImmediately = !enableTransition || approxEquals(this._zoom, this._zoomEnd, this.restThreshold);
    this._changedZoom = 0;
    return this._createOnRestPromise(resolveImmediately);
  }
  /**
   * @deprecated `pan()` has been renamed to `truck()`
   * @category Methods
   */
  pan(x2, y2, enableTransition = false) {
    console.warn("`pan` has been renamed to `truck`");
    return this.truck(x2, y2, enableTransition);
  }
  /**
   * Truck and pedestal camera using current azimuthal angle
   * @param x Horizontal translate amount
   * @param y Vertical translate amount
   * @param enableTransition Whether to move smoothly or immediately
   * @category Methods
   */
  truck(x2, y2, enableTransition = false) {
    this._camera.updateMatrix();
    _xColumn.setFromMatrixColumn(this._camera.matrix, 0);
    _yColumn.setFromMatrixColumn(this._camera.matrix, 1);
    _xColumn.multiplyScalar(x2);
    _yColumn.multiplyScalar(-y2);
    const offset = _v3A.copy(_xColumn).add(_yColumn);
    const to = _v3B.copy(this._targetEnd).add(offset);
    return this.moveTo(to.x, to.y, to.z, enableTransition);
  }
  /**
   * Move forward / backward.
   * @param distance Amount to move forward / backward. Negative value to move backward
   * @param enableTransition Whether to move smoothly or immediately
   * @category Methods
   */
  forward(distance, enableTransition = false) {
    _v3A.setFromMatrixColumn(this._camera.matrix, 0);
    _v3A.crossVectors(this._camera.up, _v3A);
    _v3A.multiplyScalar(distance);
    const to = _v3B.copy(this._targetEnd).add(_v3A);
    return this.moveTo(to.x, to.y, to.z, enableTransition);
  }
  /**
   * Move up / down.
   * @param height Amount to move up / down. Negative value to move down
   * @param enableTransition Whether to move smoothly or immediately
   * @category Methods
   */
  elevate(height, enableTransition = false) {
    _v3A.copy(this._camera.up).multiplyScalar(height);
    return this.moveTo(this._targetEnd.x + _v3A.x, this._targetEnd.y + _v3A.y, this._targetEnd.z + _v3A.z, enableTransition);
  }
  /**
   * Move target position to given point.
   * @param x x coord to move center position
   * @param y y coord to move center position
   * @param z z coord to move center position
   * @param enableTransition Whether to move smoothly or immediately
   * @category Methods
   */
  moveTo(x2, y2, z2, enableTransition = false) {
    this._isUserControllingTruck = false;
    const offset = _v3A.set(x2, y2, z2).sub(this._targetEnd);
    this._encloseToBoundary(this._targetEnd, offset, this.boundaryFriction);
    this._needsUpdate = true;
    if (!enableTransition) {
      this._target.copy(this._targetEnd);
    }
    const resolveImmediately = !enableTransition || approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) && approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) && approxEquals(this._target.z, this._targetEnd.z, this.restThreshold);
    return this._createOnRestPromise(resolveImmediately);
  }
  /**
   * Look in the given point direction.
   * @param x point x.
   * @param y point y.
   * @param z point z.
   * @param enableTransition Whether to move smoothly or immediately.
   * @returns Transition end promise
   * @category Methods
   */
  lookInDirectionOf(x2, y2, z2, enableTransition = false) {
    const point = _v3A.set(x2, y2, z2);
    const direction = point.sub(this._targetEnd).normalize();
    const position2 = direction.multiplyScalar(-this._sphericalEnd.radius);
    return this.setPosition(position2.x, position2.y, position2.z, enableTransition);
  }
  /**
   * Fit the viewport to the box or the bounding box of the object, using the nearest axis. paddings are in unit.
   * set `cover: true` to fill enter screen.
   * e.g.
   * ```
   * cameraControls.fitToBox( myMesh );
   * ```
   * @param box3OrObject Axis aligned bounding box to fit the view.
   * @param enableTransition Whether to move smoothly or immediately.
   * @param options | `<object>` { cover: boolean, paddingTop: number, paddingLeft: number, paddingBottom: number, paddingRight: number }
   * @returns Transition end promise
   * @category Methods
   */
  fitToBox(box3OrObject, enableTransition, { cover = false, paddingLeft = 0, paddingRight = 0, paddingBottom = 0, paddingTop = 0 } = {}) {
    const promises = [];
    const aabb3 = box3OrObject.isBox3 ? _box3A.copy(box3OrObject) : _box3A.setFromObject(box3OrObject);
    if (aabb3.isEmpty()) {
      console.warn("camera-controls: fitTo() cannot be used with an empty box. Aborting");
      Promise.resolve();
    }
    const theta = roundToStep(this._sphericalEnd.theta, PI_HALF);
    const phi = roundToStep(this._sphericalEnd.phi, PI_HALF);
    promises.push(this.rotateTo(theta, phi, enableTransition));
    const normal2 = _v3A.setFromSpherical(this._sphericalEnd).normalize();
    const rotation2 = _quaternionA.setFromUnitVectors(normal2, _AXIS_Z);
    const viewFromPolar = approxEquals(Math.abs(normal2.y), 1);
    if (viewFromPolar) {
      rotation2.multiply(_quaternionB.setFromAxisAngle(_AXIS_Y, theta));
    }
    rotation2.multiply(this._yAxisUpSpaceInverse);
    const bb2 = _box3B.makeEmpty();
    _v3B.copy(aabb3.min).applyQuaternion(rotation2);
    bb2.expandByPoint(_v3B);
    _v3B.copy(aabb3.min).setX(aabb3.max.x).applyQuaternion(rotation2);
    bb2.expandByPoint(_v3B);
    _v3B.copy(aabb3.min).setY(aabb3.max.y).applyQuaternion(rotation2);
    bb2.expandByPoint(_v3B);
    _v3B.copy(aabb3.max).setZ(aabb3.min.z).applyQuaternion(rotation2);
    bb2.expandByPoint(_v3B);
    _v3B.copy(aabb3.min).setZ(aabb3.max.z).applyQuaternion(rotation2);
    bb2.expandByPoint(_v3B);
    _v3B.copy(aabb3.max).setY(aabb3.min.y).applyQuaternion(rotation2);
    bb2.expandByPoint(_v3B);
    _v3B.copy(aabb3.max).setX(aabb3.min.x).applyQuaternion(rotation2);
    bb2.expandByPoint(_v3B);
    _v3B.copy(aabb3.max).applyQuaternion(rotation2);
    bb2.expandByPoint(_v3B);
    bb2.min.x -= paddingLeft;
    bb2.min.y -= paddingBottom;
    bb2.max.x += paddingRight;
    bb2.max.y += paddingTop;
    rotation2.setFromUnitVectors(_AXIS_Z, normal2);
    if (viewFromPolar) {
      rotation2.premultiply(_quaternionB.invert());
    }
    rotation2.premultiply(this._yAxisUpSpace);
    const bbSize = bb2.getSize(_v3A);
    const center = bb2.getCenter(_v3B).applyQuaternion(rotation2);
    if (isPerspectiveCamera(this._camera)) {
      const distance = this.getDistanceToFitBox(bbSize.x, bbSize.y, bbSize.z, cover);
      promises.push(this.moveTo(center.x, center.y, center.z, enableTransition));
      promises.push(this.dollyTo(distance, enableTransition));
      promises.push(this.setFocalOffset(0, 0, 0, enableTransition));
    } else if (isOrthographicCamera(this._camera)) {
      const camera = this._camera;
      const width = camera.right - camera.left;
      const height = camera.top - camera.bottom;
      const zoom = cover ? Math.max(width / bbSize.x, height / bbSize.y) : Math.min(width / bbSize.x, height / bbSize.y);
      promises.push(this.moveTo(center.x, center.y, center.z, enableTransition));
      promises.push(this.zoomTo(zoom, enableTransition));
      promises.push(this.setFocalOffset(0, 0, 0, enableTransition));
    }
    return Promise.all(promises);
  }
  /**
   * Fit the viewport to the sphere or the bounding sphere of the object.
   * @param sphereOrMesh
   * @param enableTransition
   * @category Methods
   */
  fitToSphere(sphereOrMesh, enableTransition) {
    const promises = [];
    const isSphere = sphereOrMesh instanceof THREE.Sphere;
    const boundingSphere = isSphere ? _sphere.copy(sphereOrMesh) : CameraControls.createBoundingSphere(sphereOrMesh, _sphere);
    promises.push(this.moveTo(boundingSphere.center.x, boundingSphere.center.y, boundingSphere.center.z, enableTransition));
    if (isPerspectiveCamera(this._camera)) {
      const distanceToFit = this.getDistanceToFitSphere(boundingSphere.radius);
      promises.push(this.dollyTo(distanceToFit, enableTransition));
    } else if (isOrthographicCamera(this._camera)) {
      const width = this._camera.right - this._camera.left;
      const height = this._camera.top - this._camera.bottom;
      const diameter = 2 * boundingSphere.radius;
      const zoom = Math.min(width / diameter, height / diameter);
      promises.push(this.zoomTo(zoom, enableTransition));
    }
    promises.push(this.setFocalOffset(0, 0, 0, enableTransition));
    return Promise.all(promises);
  }
  /**
   * Look at the `target` from the `position`.
   * @param positionX
   * @param positionY
   * @param positionZ
   * @param targetX
   * @param targetY
   * @param targetZ
   * @param enableTransition
   * @category Methods
   */
  setLookAt(positionX, positionY, positionZ, targetX, targetY, targetZ, enableTransition = false) {
    this._isUserControllingRotate = false;
    this._isUserControllingDolly = false;
    this._isUserControllingTruck = false;
    this._lastDollyDirection = DOLLY_DIRECTION.NONE;
    this._changedDolly = 0;
    const target2 = _v3B.set(targetX, targetY, targetZ);
    const position2 = _v3A.set(positionX, positionY, positionZ);
    this._targetEnd.copy(target2);
    this._sphericalEnd.setFromVector3(position2.sub(target2).applyQuaternion(this._yAxisUpSpace));
    this.normalizeRotations();
    this._needsUpdate = true;
    if (!enableTransition) {
      this._target.copy(this._targetEnd);
      this._spherical.copy(this._sphericalEnd);
    }
    const resolveImmediately = !enableTransition || approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) && approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) && approxEquals(this._target.z, this._targetEnd.z, this.restThreshold) && approxEquals(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) && approxEquals(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold) && approxEquals(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);
    return this._createOnRestPromise(resolveImmediately);
  }
  /**
   * Similar to setLookAt, but it interpolates between two states.
   * @param positionAX
   * @param positionAY
   * @param positionAZ
   * @param targetAX
   * @param targetAY
   * @param targetAZ
   * @param positionBX
   * @param positionBY
   * @param positionBZ
   * @param targetBX
   * @param targetBY
   * @param targetBZ
   * @param t
   * @param enableTransition
   * @category Methods
   */
  lerpLookAt(positionAX, positionAY, positionAZ, targetAX, targetAY, targetAZ, positionBX, positionBY, positionBZ, targetBX, targetBY, targetBZ, t2, enableTransition = false) {
    this._isUserControllingRotate = false;
    this._isUserControllingDolly = false;
    this._isUserControllingTruck = false;
    this._lastDollyDirection = DOLLY_DIRECTION.NONE;
    this._changedDolly = 0;
    const targetA = _v3A.set(targetAX, targetAY, targetAZ);
    const positionA = _v3B.set(positionAX, positionAY, positionAZ);
    _sphericalA.setFromVector3(positionA.sub(targetA).applyQuaternion(this._yAxisUpSpace));
    const targetB = _v3C.set(targetBX, targetBY, targetBZ);
    const positionB = _v3B.set(positionBX, positionBY, positionBZ);
    _sphericalB.setFromVector3(positionB.sub(targetB).applyQuaternion(this._yAxisUpSpace));
    this._targetEnd.copy(targetA.lerp(targetB, t2));
    const deltaTheta = _sphericalB.theta - _sphericalA.theta;
    const deltaPhi = _sphericalB.phi - _sphericalA.phi;
    const deltaRadius = _sphericalB.radius - _sphericalA.radius;
    this._sphericalEnd.set(_sphericalA.radius + deltaRadius * t2, _sphericalA.phi + deltaPhi * t2, _sphericalA.theta + deltaTheta * t2);
    this.normalizeRotations();
    this._needsUpdate = true;
    if (!enableTransition) {
      this._target.copy(this._targetEnd);
      this._spherical.copy(this._sphericalEnd);
    }
    const resolveImmediately = !enableTransition || approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) && approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) && approxEquals(this._target.z, this._targetEnd.z, this.restThreshold) && approxEquals(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) && approxEquals(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold) && approxEquals(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);
    return this._createOnRestPromise(resolveImmediately);
  }
  /**
   * Set angle and distance by given position.
   * An alias of `setLookAt()`, without target change. Thus keep gazing at the current target
   * @param positionX
   * @param positionY
   * @param positionZ
   * @param enableTransition
   * @category Methods
   */
  setPosition(positionX, positionY, positionZ, enableTransition = false) {
    return this.setLookAt(positionX, positionY, positionZ, this._targetEnd.x, this._targetEnd.y, this._targetEnd.z, enableTransition);
  }
  /**
   * Set the target position where gaze at.
   * An alias of `setLookAt()`, without position change. Thus keep the same position.
   * @param targetX
   * @param targetY
   * @param targetZ
   * @param enableTransition
   * @category Methods
   */
  setTarget(targetX, targetY, targetZ, enableTransition = false) {
    const pos = this.getPosition(_v3A);
    const promise = this.setLookAt(pos.x, pos.y, pos.z, targetX, targetY, targetZ, enableTransition);
    this._sphericalEnd.phi = clamp(this._sphericalEnd.phi, this.minPolarAngle, this.maxPolarAngle);
    return promise;
  }
  /**
   * Set focal offset using the screen parallel coordinates. z doesn't affect in Orthographic as with Dolly.
   * @param x
   * @param y
   * @param z
   * @param enableTransition
   * @category Methods
   */
  setFocalOffset(x2, y2, z2, enableTransition = false) {
    this._isUserControllingOffset = false;
    this._focalOffsetEnd.set(x2, y2, z2);
    this._needsUpdate = true;
    if (!enableTransition)
      this._focalOffset.copy(this._focalOffsetEnd);
    const resolveImmediately = !enableTransition || approxEquals(this._focalOffset.x, this._focalOffsetEnd.x, this.restThreshold) && approxEquals(this._focalOffset.y, this._focalOffsetEnd.y, this.restThreshold) && approxEquals(this._focalOffset.z, this._focalOffsetEnd.z, this.restThreshold);
    return this._createOnRestPromise(resolveImmediately);
  }
  /**
   * Set orbit point without moving the camera.
   * SHOULD NOT RUN DURING ANIMATIONS. `setOrbitPoint()` will immediately fix the positions.
   * @param targetX
   * @param targetY
   * @param targetZ
   * @category Methods
   */
  setOrbitPoint(targetX, targetY, targetZ) {
    this._camera.updateMatrixWorld();
    _xColumn.setFromMatrixColumn(this._camera.matrixWorldInverse, 0);
    _yColumn.setFromMatrixColumn(this._camera.matrixWorldInverse, 1);
    _zColumn.setFromMatrixColumn(this._camera.matrixWorldInverse, 2);
    const position2 = _v3A.set(targetX, targetY, targetZ);
    const distance = position2.distanceTo(this._camera.position);
    const cameraToPoint = position2.sub(this._camera.position);
    _xColumn.multiplyScalar(cameraToPoint.x);
    _yColumn.multiplyScalar(cameraToPoint.y);
    _zColumn.multiplyScalar(cameraToPoint.z);
    _v3A.copy(_xColumn).add(_yColumn).add(_zColumn);
    _v3A.z = _v3A.z + distance;
    this.dollyTo(distance, false);
    this.setFocalOffset(-_v3A.x, _v3A.y, -_v3A.z, false);
    this.moveTo(targetX, targetY, targetZ, false);
  }
  /**
   * Set the boundary box that encloses the target of the camera. box3 is in THREE.Box3
   * @param box3
   * @category Methods
   */
  setBoundary(box3) {
    if (!box3) {
      this._boundary.min.set(-Infinity, -Infinity, -Infinity);
      this._boundary.max.set(Infinity, Infinity, Infinity);
      this._needsUpdate = true;
      return;
    }
    this._boundary.copy(box3);
    this._boundary.clampPoint(this._targetEnd, this._targetEnd);
    this._needsUpdate = true;
  }
  /**
   * Set (or unset) the current viewport.
   * Set this when you want to use renderer viewport and .dollyToCursor feature at the same time.
   * @param viewportOrX
   * @param y
   * @param width
   * @param height
   * @category Methods
   */
  setViewport(viewportOrX, y2, width, height) {
    if (viewportOrX === null) {
      this._viewport = null;
      return;
    }
    this._viewport = this._viewport || new THREE.Vector4();
    if (typeof viewportOrX === "number") {
      this._viewport.set(viewportOrX, y2, width, height);
    } else {
      this._viewport.copy(viewportOrX);
    }
  }
  /**
   * Calculate the distance to fit the box.
   * @param width box width
   * @param height box height
   * @param depth box depth
   * @returns distance
   * @category Methods
   */
  getDistanceToFitBox(width, height, depth, cover = false) {
    if (notSupportedInOrthographicCamera(this._camera, "getDistanceToFitBox"))
      return this._spherical.radius;
    const boundingRectAspect = width / height;
    const fov = this._camera.getEffectiveFOV() * DEG2RAD;
    const aspect = this._camera.aspect;
    const heightToFit = (cover ? boundingRectAspect > aspect : boundingRectAspect < aspect) ? height : width / aspect;
    return heightToFit * 0.5 / Math.tan(fov * 0.5) + depth * 0.5;
  }
  /**
   * Calculate the distance to fit the sphere.
   * @param radius sphere radius
   * @returns distance
   * @category Methods
   */
  getDistanceToFitSphere(radius) {
    if (notSupportedInOrthographicCamera(this._camera, "getDistanceToFitSphere"))
      return this._spherical.radius;
    const vFOV = this._camera.getEffectiveFOV() * DEG2RAD;
    const hFOV = Math.atan(Math.tan(vFOV * 0.5) * this._camera.aspect) * 2;
    const fov = 1 < this._camera.aspect ? vFOV : hFOV;
    return radius / Math.sin(fov * 0.5);
  }
  /**
   * Returns the orbit center position, where the camera looking at.
   * @param out The receiving Vector3 instance to copy the result
   * @param receiveEndValue Whether receive the transition end coords or current. default is `true`
   * @category Methods
   */
  getTarget(out, receiveEndValue = true) {
    const _out = !!out && out.isVector3 ? out : new THREE.Vector3();
    return _out.copy(receiveEndValue ? this._targetEnd : this._target);
  }
  /**
   * Returns the camera position.
   * @param out The receiving Vector3 instance to copy the result
   * @param receiveEndValue Whether receive the transition end coords or current. default is `true`
   * @category Methods
   */
  getPosition(out, receiveEndValue = true) {
    const _out = !!out && out.isVector3 ? out : new THREE.Vector3();
    return _out.setFromSpherical(receiveEndValue ? this._sphericalEnd : this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(receiveEndValue ? this._targetEnd : this._target);
  }
  /**
   * Returns the spherical coordinates of the orbit.
   * @param out The receiving Spherical instance to copy the result
   * @param receiveEndValue Whether receive the transition end coords or current. default is `true`
   * @category Methods
   */
  getSpherical(out, receiveEndValue = true) {
    const _out = !!out && out instanceof THREE.Spherical ? out : new THREE.Spherical();
    return _out.copy(receiveEndValue ? this._sphericalEnd : this._spherical);
  }
  /**
   * Returns the focal offset, which is how much the camera appears to be translated in screen parallel coordinates.
   * @param out The receiving Vector3 instance to copy the result
   * @param receiveEndValue Whether receive the transition end coords or current. default is `true`
   * @category Methods
   */
  getFocalOffset(out, receiveEndValue = true) {
    const _out = !!out && out.isVector3 ? out : new THREE.Vector3();
    return _out.copy(receiveEndValue ? this._focalOffsetEnd : this._focalOffset);
  }
  /**
   * Normalize camera azimuth angle rotation between 0 and 360 degrees.
   * @category Methods
   */
  normalizeRotations() {
    this._sphericalEnd.theta = this._sphericalEnd.theta % PI_2;
    if (this._sphericalEnd.theta < 0)
      this._sphericalEnd.theta += PI_2;
    this._spherical.theta += PI_2 * Math.round((this._sphericalEnd.theta - this._spherical.theta) / PI_2);
  }
  /**
   * Reset all rotation and position to defaults.
   * @param enableTransition
   * @category Methods
   */
  reset(enableTransition = false) {
    if (!approxEquals(this._camera.up.x, this._cameraUp0.x) || !approxEquals(this._camera.up.y, this._cameraUp0.y) || !approxEquals(this._camera.up.z, this._cameraUp0.z)) {
      this._camera.up.copy(this._cameraUp0);
      const position2 = this.getPosition(_v3A);
      this.updateCameraUp();
      this.setPosition(position2.x, position2.y, position2.z);
    }
    const promises = [
      this.setLookAt(this._position0.x, this._position0.y, this._position0.z, this._target0.x, this._target0.y, this._target0.z, enableTransition),
      this.setFocalOffset(this._focalOffset0.x, this._focalOffset0.y, this._focalOffset0.z, enableTransition),
      this.zoomTo(this._zoom0, enableTransition)
    ];
    return Promise.all(promises);
  }
  /**
   * Set current camera position as the default position.
   * @category Methods
   */
  saveState() {
    this._cameraUp0.copy(this._camera.up);
    this.getTarget(this._target0);
    this.getPosition(this._position0);
    this._zoom0 = this._zoom;
    this._focalOffset0.copy(this._focalOffset);
  }
  /**
   * Sync camera-up direction.
   * When camera-up vector is changed, `.updateCameraUp()` must be called.
   * @category Methods
   */
  updateCameraUp() {
    this._yAxisUpSpace.setFromUnitVectors(this._camera.up, _AXIS_Y);
    this._yAxisUpSpaceInverse.copy(this._yAxisUpSpace).invert();
  }
  /**
   * Apply current camera-up direction to the camera.
   * The orbit system will be re-initialized with the current position.
   * @category Methods
   */
  applyCameraUp() {
    const cameraDirection = _v3A.subVectors(this._target, this._camera.position).normalize();
    const side = _v3B.crossVectors(cameraDirection, this._camera.up);
    this._camera.up.crossVectors(side, cameraDirection);
    this._camera.updateMatrixWorld();
    const position2 = this.getPosition(_v3A);
    this.updateCameraUp();
    this.setPosition(position2.x, position2.y, position2.z);
  }
  /**
   * Update camera position and directions.
   * This should be called in your tick loop every time, and returns true if re-rendering is needed.
   * @param delta
   * @returns updated
   * @category Methods
   */
  update(delta) {
    const deltaTheta = this._sphericalEnd.theta - this._spherical.theta;
    const deltaPhi = this._sphericalEnd.phi - this._spherical.phi;
    const deltaRadius = this._sphericalEnd.radius - this._spherical.radius;
    const deltaTarget = _deltaTarget.subVectors(this._targetEnd, this._target);
    const deltaOffset = _deltaOffset.subVectors(this._focalOffsetEnd, this._focalOffset);
    const deltaZoom = this._zoomEnd - this._zoom;
    if (approxZero(deltaTheta)) {
      this._thetaVelocity.value = 0;
      this._spherical.theta = this._sphericalEnd.theta;
    } else {
      const smoothTime = this._isUserControllingRotate ? this.draggingSmoothTime : this.smoothTime;
      this._spherical.theta = smoothDamp(this._spherical.theta, this._sphericalEnd.theta, this._thetaVelocity, smoothTime, Infinity, delta);
      this._needsUpdate = true;
    }
    if (approxZero(deltaPhi)) {
      this._phiVelocity.value = 0;
      this._spherical.phi = this._sphericalEnd.phi;
    } else {
      const smoothTime = this._isUserControllingRotate ? this.draggingSmoothTime : this.smoothTime;
      this._spherical.phi = smoothDamp(this._spherical.phi, this._sphericalEnd.phi, this._phiVelocity, smoothTime, Infinity, delta);
      this._needsUpdate = true;
    }
    if (approxZero(deltaRadius)) {
      this._radiusVelocity.value = 0;
      this._spherical.radius = this._sphericalEnd.radius;
    } else {
      const smoothTime = this._isUserControllingDolly ? this.draggingSmoothTime : this.smoothTime;
      this._spherical.radius = smoothDamp(this._spherical.radius, this._sphericalEnd.radius, this._radiusVelocity, smoothTime, this.maxSpeed, delta);
      this._needsUpdate = true;
    }
    if (approxZero(deltaTarget.x) && approxZero(deltaTarget.y) && approxZero(deltaTarget.z)) {
      this._targetVelocity.set(0, 0, 0);
      this._target.copy(this._targetEnd);
    } else {
      const smoothTime = this._isUserControllingTruck ? this.draggingSmoothTime : this.smoothTime;
      smoothDampVec3(this._target, this._targetEnd, this._targetVelocity, smoothTime, this.maxSpeed, delta, this._target);
      this._needsUpdate = true;
    }
    if (approxZero(deltaOffset.x) && approxZero(deltaOffset.y) && approxZero(deltaOffset.z)) {
      this._focalOffsetVelocity.set(0, 0, 0);
      this._focalOffset.copy(this._focalOffsetEnd);
    } else {
      const smoothTime = this._isUserControllingOffset ? this.draggingSmoothTime : this.smoothTime;
      smoothDampVec3(this._focalOffset, this._focalOffsetEnd, this._focalOffsetVelocity, smoothTime, this.maxSpeed, delta, this._focalOffset);
      this._needsUpdate = true;
    }
    if (approxZero(deltaZoom)) {
      this._zoomVelocity.value = 0;
      this._zoom = this._zoomEnd;
    } else {
      const smoothTime = this._isUserControllingZoom ? this.draggingSmoothTime : this.smoothTime;
      this._zoom = smoothDamp(this._zoom, this._zoomEnd, this._zoomVelocity, smoothTime, Infinity, delta);
    }
    if (this.dollyToCursor) {
      if (isPerspectiveCamera(this._camera) && this._changedDolly !== 0) {
        const dollyControlAmount = this._spherical.radius - this._lastDistance;
        const camera = this._camera;
        const cameraDirection = this._getCameraDirection(_cameraDirection);
        const planeX = _v3A.copy(cameraDirection).cross(camera.up).normalize();
        if (planeX.lengthSq() === 0)
          planeX.x = 1;
        const planeY = _v3B.crossVectors(planeX, cameraDirection);
        const worldToScreen = this._sphericalEnd.radius * Math.tan(camera.getEffectiveFOV() * DEG2RAD * 0.5);
        const prevRadius = this._sphericalEnd.radius - dollyControlAmount;
        const lerpRatio = (prevRadius - this._sphericalEnd.radius) / this._sphericalEnd.radius;
        const cursor = _v3C.copy(this._targetEnd).add(planeX.multiplyScalar(this._dollyControlCoord.x * worldToScreen * camera.aspect)).add(planeY.multiplyScalar(this._dollyControlCoord.y * worldToScreen));
        const newTargetEnd = _v3A.copy(this._targetEnd).lerp(cursor, lerpRatio);
        const isMin = this._lastDollyDirection === DOLLY_DIRECTION.IN && this._spherical.radius <= this.minDistance;
        const isMax = this._lastDollyDirection === DOLLY_DIRECTION.OUT && this.maxDistance <= this._spherical.radius;
        if (this.infinityDolly && (isMin || isMax)) {
          this._sphericalEnd.radius -= dollyControlAmount;
          this._spherical.radius -= dollyControlAmount;
          const dollyAmount = _v3B.copy(cameraDirection).multiplyScalar(-dollyControlAmount);
          newTargetEnd.add(dollyAmount);
        }
        this._boundary.clampPoint(newTargetEnd, newTargetEnd);
        const targetEndDiff = _v3B.subVectors(newTargetEnd, this._targetEnd);
        this._targetEnd.copy(newTargetEnd);
        this._target.add(targetEndDiff);
        this._changedDolly -= dollyControlAmount;
        if (approxZero(this._changedDolly))
          this._changedDolly = 0;
      } else if (isOrthographicCamera(this._camera) && this._changedZoom !== 0) {
        const dollyControlAmount = this._zoom - this._lastZoom;
        const camera = this._camera;
        const worldCursorPosition = _v3A.set(this._dollyControlCoord.x, this._dollyControlCoord.y, (camera.near + camera.far) / (camera.near - camera.far)).unproject(camera);
        const quaternion = _v3B.set(0, 0, -1).applyQuaternion(camera.quaternion);
        const cursor = _v3C.copy(worldCursorPosition).add(quaternion.multiplyScalar(-worldCursorPosition.dot(camera.up)));
        const prevZoom = this._zoom - dollyControlAmount;
        const lerpRatio = -(prevZoom - this._zoom) / this._zoom;
        const cameraDirection = this._getCameraDirection(_cameraDirection);
        const prevPlaneConstant = this._targetEnd.dot(cameraDirection);
        const newTargetEnd = _v3A.copy(this._targetEnd).lerp(cursor, lerpRatio);
        const newPlaneConstant = newTargetEnd.dot(cameraDirection);
        const pullBack = cameraDirection.multiplyScalar(newPlaneConstant - prevPlaneConstant);
        newTargetEnd.sub(pullBack);
        this._boundary.clampPoint(newTargetEnd, newTargetEnd);
        const targetEndDiff = _v3B.subVectors(newTargetEnd, this._targetEnd);
        this._targetEnd.copy(newTargetEnd);
        this._target.add(targetEndDiff);
        this._changedZoom -= dollyControlAmount;
        if (approxZero(this._changedZoom))
          this._changedZoom = 0;
      }
    }
    if (this._camera.zoom !== this._zoom) {
      this._camera.zoom = this._zoom;
      this._camera.updateProjectionMatrix();
      this._updateNearPlaneCorners();
      this._needsUpdate = true;
    }
    const maxDistance = this._collisionTest();
    this._spherical.radius = Math.min(this._spherical.radius, maxDistance);
    this._spherical.makeSafe();
    this._camera.position.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(this._target);
    this._camera.lookAt(this._target);
    const affectOffset = !approxZero(this._focalOffset.x) || !approxZero(this._focalOffset.y) || !approxZero(this._focalOffset.z);
    if (affectOffset) {
      this._camera.updateMatrixWorld();
      _xColumn.setFromMatrixColumn(this._camera.matrix, 0);
      _yColumn.setFromMatrixColumn(this._camera.matrix, 1);
      _zColumn.setFromMatrixColumn(this._camera.matrix, 2);
      _xColumn.multiplyScalar(this._focalOffset.x);
      _yColumn.multiplyScalar(-this._focalOffset.y);
      _zColumn.multiplyScalar(this._focalOffset.z);
      _v3A.copy(_xColumn).add(_yColumn).add(_zColumn);
      this._camera.position.add(_v3A);
    }
    if (this._boundaryEnclosesCamera) {
      this._encloseToBoundary(this._camera.position.copy(this._target), _v3A.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse), 1);
    }
    const updated = this._needsUpdate;
    if (updated && !this._updatedLastTime) {
      this._hasRested = false;
      this.dispatchEvent({ type: "wake" });
      this.dispatchEvent({ type: "update" });
    } else if (updated) {
      this.dispatchEvent({ type: "update" });
      if (approxZero(deltaTheta, this.restThreshold) && approxZero(deltaPhi, this.restThreshold) && approxZero(deltaRadius, this.restThreshold) && approxZero(deltaTarget.x, this.restThreshold) && approxZero(deltaTarget.y, this.restThreshold) && approxZero(deltaTarget.z, this.restThreshold) && approxZero(deltaOffset.x, this.restThreshold) && approxZero(deltaOffset.y, this.restThreshold) && approxZero(deltaOffset.z, this.restThreshold) && approxZero(deltaZoom, this.restThreshold) && !this._hasRested) {
        this._hasRested = true;
        this.dispatchEvent({ type: "rest" });
      }
    } else if (!updated && this._updatedLastTime) {
      this.dispatchEvent({ type: "sleep" });
    }
    this._lastDistance = this._spherical.radius;
    this._lastZoom = this._zoom;
    this._updatedLastTime = updated;
    this._needsUpdate = false;
    return updated;
  }
  /**
   * Get all state in JSON string
   * @category Methods
   */
  toJSON() {
    return JSON.stringify({
      enabled: this._enabled,
      minDistance: this.minDistance,
      maxDistance: infinityToMaxNumber(this.maxDistance),
      minZoom: this.minZoom,
      maxZoom: infinityToMaxNumber(this.maxZoom),
      minPolarAngle: this.minPolarAngle,
      maxPolarAngle: infinityToMaxNumber(this.maxPolarAngle),
      minAzimuthAngle: infinityToMaxNumber(this.minAzimuthAngle),
      maxAzimuthAngle: infinityToMaxNumber(this.maxAzimuthAngle),
      smoothTime: this.smoothTime,
      draggingSmoothTime: this.draggingSmoothTime,
      dollySpeed: this.dollySpeed,
      truckSpeed: this.truckSpeed,
      dollyToCursor: this.dollyToCursor,
      verticalDragToForward: this.verticalDragToForward,
      target: this._targetEnd.toArray(),
      position: _v3A.setFromSpherical(this._sphericalEnd).add(this._targetEnd).toArray(),
      zoom: this._zoomEnd,
      focalOffset: this._focalOffsetEnd.toArray(),
      target0: this._target0.toArray(),
      position0: this._position0.toArray(),
      zoom0: this._zoom0,
      focalOffset0: this._focalOffset0.toArray()
    });
  }
  /**
   * Reproduce the control state with JSON. enableTransition is where anim or not in a boolean.
   * @param json
   * @param enableTransition
   * @category Methods
   */
  fromJSON(json, enableTransition = false) {
    const obj = JSON.parse(json);
    this.enabled = obj.enabled;
    this.minDistance = obj.minDistance;
    this.maxDistance = maxNumberToInfinity(obj.maxDistance);
    this.minZoom = obj.minZoom;
    this.maxZoom = maxNumberToInfinity(obj.maxZoom);
    this.minPolarAngle = obj.minPolarAngle;
    this.maxPolarAngle = maxNumberToInfinity(obj.maxPolarAngle);
    this.minAzimuthAngle = maxNumberToInfinity(obj.minAzimuthAngle);
    this.maxAzimuthAngle = maxNumberToInfinity(obj.maxAzimuthAngle);
    this.smoothTime = obj.smoothTime;
    this.draggingSmoothTime = obj.draggingSmoothTime;
    this.dollySpeed = obj.dollySpeed;
    this.truckSpeed = obj.truckSpeed;
    this.dollyToCursor = obj.dollyToCursor;
    this.verticalDragToForward = obj.verticalDragToForward;
    this._target0.fromArray(obj.target0);
    this._position0.fromArray(obj.position0);
    this._zoom0 = obj.zoom0;
    this._focalOffset0.fromArray(obj.focalOffset0);
    this.moveTo(obj.target[0], obj.target[1], obj.target[2], enableTransition);
    _sphericalA.setFromVector3(_v3A.fromArray(obj.position).sub(this._targetEnd).applyQuaternion(this._yAxisUpSpace));
    this.rotateTo(_sphericalA.theta, _sphericalA.phi, enableTransition);
    this.dollyTo(_sphericalA.radius, enableTransition);
    this.zoomTo(obj.zoom, enableTransition);
    this.setFocalOffset(obj.focalOffset[0], obj.focalOffset[1], obj.focalOffset[2], enableTransition);
    this._needsUpdate = true;
  }
  /**
   * Attach all internal event handlers to enable drag control.
   * @category Methods
   */
  connect(domElement) {
    if (this._domElement) {
      console.warn("camera-controls is already connected.");
      return;
    }
    domElement.setAttribute("data-camera-controls-version", VERSION);
    this._addAllEventListeners(domElement);
  }
  /**
   * Detach all internal event handlers to disable drag control.
   */
  disconnect() {
    this.cancel();
    this._removeAllEventListeners();
    if (this._domElement) {
      this._domElement.removeAttribute("data-camera-controls-version");
      this._domElement = void 0;
    }
  }
  /**
   * Dispose the cameraControls instance itself, remove all eventListeners.
   * @category Methods
   */
  dispose() {
    this.removeAllEventListeners();
    this.disconnect();
  }
  // it's okay to expose public though
  _getTargetDirection(out) {
    return out.setFromSpherical(this._spherical).divideScalar(this._spherical.radius).applyQuaternion(this._yAxisUpSpaceInverse);
  }
  // it's okay to expose public though
  _getCameraDirection(out) {
    return this._getTargetDirection(out).negate();
  }
  _findPointerById(pointerId) {
    return this._activePointers.find((activePointer) => activePointer.pointerId === pointerId);
  }
  _findPointerByMouseButton(mouseButton) {
    return this._activePointers.find((activePointer) => activePointer.mouseButton === mouseButton);
  }
  _disposePointer(pointer) {
    this._activePointers.splice(this._activePointers.indexOf(pointer), 1);
  }
  _encloseToBoundary(position2, offset, friction) {
    const offsetLength2 = offset.lengthSq();
    if (offsetLength2 === 0) {
      return position2;
    }
    const newTarget = _v3B.copy(offset).add(position2);
    const clampedTarget = this._boundary.clampPoint(newTarget, _v3C);
    const deltaClampedTarget = clampedTarget.sub(newTarget);
    const deltaClampedTargetLength2 = deltaClampedTarget.lengthSq();
    if (deltaClampedTargetLength2 === 0) {
      return position2.add(offset);
    } else if (deltaClampedTargetLength2 === offsetLength2) {
      return position2;
    } else if (friction === 0) {
      return position2.add(offset).add(deltaClampedTarget);
    } else {
      const offsetFactor = 1 + friction * deltaClampedTargetLength2 / offset.dot(deltaClampedTarget);
      return position2.add(_v3B.copy(offset).multiplyScalar(offsetFactor)).add(deltaClampedTarget.multiplyScalar(1 - friction));
    }
  }
  _updateNearPlaneCorners() {
    if (isPerspectiveCamera(this._camera)) {
      const camera = this._camera;
      const near = camera.near;
      const fov = camera.getEffectiveFOV() * DEG2RAD;
      const heightHalf = Math.tan(fov * 0.5) * near;
      const widthHalf = heightHalf * camera.aspect;
      this._nearPlaneCorners[0].set(-widthHalf, -heightHalf, 0);
      this._nearPlaneCorners[1].set(widthHalf, -heightHalf, 0);
      this._nearPlaneCorners[2].set(widthHalf, heightHalf, 0);
      this._nearPlaneCorners[3].set(-widthHalf, heightHalf, 0);
    } else if (isOrthographicCamera(this._camera)) {
      const camera = this._camera;
      const zoomInv = 1 / camera.zoom;
      const left = camera.left * zoomInv;
      const right = camera.right * zoomInv;
      const top = camera.top * zoomInv;
      const bottom = camera.bottom * zoomInv;
      this._nearPlaneCorners[0].set(left, top, 0);
      this._nearPlaneCorners[1].set(right, top, 0);
      this._nearPlaneCorners[2].set(right, bottom, 0);
      this._nearPlaneCorners[3].set(left, bottom, 0);
    }
  }
  // lateUpdate
  _collisionTest() {
    let distance = Infinity;
    const hasCollider = this.colliderMeshes.length >= 1;
    if (!hasCollider)
      return distance;
    if (notSupportedInOrthographicCamera(this._camera, "_collisionTest"))
      return distance;
    const rayDirection = this._getTargetDirection(_cameraDirection);
    _rotationMatrix.lookAt(_ORIGIN, rayDirection, this._camera.up);
    for (let i3 = 0; i3 < 4; i3++) {
      const nearPlaneCorner = _v3B.copy(this._nearPlaneCorners[i3]);
      nearPlaneCorner.applyMatrix4(_rotationMatrix);
      const origin = _v3C.addVectors(this._target, nearPlaneCorner);
      _raycaster.set(origin, rayDirection);
      _raycaster.far = this._spherical.radius + 1;
      const intersects = _raycaster.intersectObjects(this.colliderMeshes);
      if (intersects.length !== 0 && intersects[0].distance < distance) {
        distance = intersects[0].distance;
      }
    }
    return distance;
  }
  /**
   * Get its client rect and package into given `DOMRect` .
   */
  _getClientRect(target2) {
    if (!this._domElement)
      return;
    const rect = this._domElement.getBoundingClientRect();
    target2.x = rect.left;
    target2.y = rect.top;
    if (this._viewport) {
      target2.x += this._viewport.x;
      target2.y += rect.height - this._viewport.w - this._viewport.y;
      target2.width = this._viewport.z;
      target2.height = this._viewport.w;
    } else {
      target2.width = rect.width;
      target2.height = rect.height;
    }
    return target2;
  }
  _createOnRestPromise(resolveImmediately) {
    if (resolveImmediately)
      return Promise.resolve();
    this._hasRested = false;
    this.dispatchEvent({ type: "transitionstart" });
    return new Promise((resolve2) => {
      const onResolve = () => {
        this.removeEventListener("rest", onResolve);
        resolve2();
      };
      this.addEventListener("rest", onResolve);
    });
  }
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  _addAllEventListeners(_domElement) {
  }
  _removeAllEventListeners() {
  }
  /**
   * backward compatible
   * @deprecated use smoothTime (in seconds) instead
   * @category Properties
   */
  get dampingFactor() {
    console.warn(".dampingFactor has been deprecated. use smoothTime (in seconds) instead.");
    return 0;
  }
  /**
   * backward compatible
   * @deprecated use smoothTime (in seconds) instead
   * @category Properties
   */
  set dampingFactor(_) {
    console.warn(".dampingFactor has been deprecated. use smoothTime (in seconds) instead.");
  }
  /**
   * backward compatible
   * @deprecated use draggingSmoothTime (in seconds) instead
   * @category Properties
   */
  get draggingDampingFactor() {
    console.warn(".draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.");
    return 0;
  }
  /**
   * backward compatible
   * @deprecated use draggingSmoothTime (in seconds) instead
   * @category Properties
   */
  set draggingDampingFactor(_) {
    console.warn(".draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.");
  }
  static createBoundingSphere(object3d, out = new THREE.Sphere()) {
    const boundingSphere = out;
    const center = boundingSphere.center;
    _box3A.makeEmpty();
    object3d.traverseVisible((object) => {
      if (!object.isMesh)
        return;
      _box3A.expandByObject(object);
    });
    _box3A.getCenter(center);
    let maxRadiusSq = 0;
    object3d.traverseVisible((object) => {
      if (!object.isMesh)
        return;
      const mesh = object;
      const geometry = mesh.geometry.clone();
      geometry.applyMatrix4(mesh.matrixWorld);
      const bufferGeometry = geometry;
      const position2 = bufferGeometry.attributes.position;
      for (let i3 = 0, l2 = position2.count; i3 < l2; i3++) {
        _v3A.fromBufferAttribute(position2, i3);
        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_v3A));
      }
    });
    boundingSphere.radius = Math.sqrt(maxRadiusSq);
    return boundingSphere;
  }
};

// node_modules/r3f-perf/node_modules/@react-three/drei/core/CameraControls.js
var CameraControls2 = (0, import_react15.forwardRef)((props, ref) => {
  (0, import_react15.useMemo)(() => {
    const subsetOfTHREE = {
      Box3,
      MathUtils: {
        clamp: MathUtils.clamp
      },
      Matrix4,
      Quaternion,
      Raycaster,
      Sphere,
      Spherical,
      Vector2,
      Vector3,
      Vector4
    };
    CameraControls.install({
      THREE: subsetOfTHREE
    });
    extend({
      CameraControlsImpl: CameraControls
    });
  }, []);
  const {
    camera,
    domElement,
    makeDefault,
    onStart,
    onEnd,
    onChange,
    regress,
    ...restProps
  } = props;
  const defaultCamera = useThree((state) => state.camera);
  const gl = useThree((state) => state.gl);
  const invalidate = useThree((state) => state.invalidate);
  const events = useThree((state) => state.events);
  const setEvents = useThree((state) => state.setEvents);
  const set = useThree((state) => state.set);
  const get = useThree((state) => state.get);
  const performance2 = useThree((state) => state.performance);
  const explCamera = camera || defaultCamera;
  const explDomElement = domElement || events.connected || gl.domElement;
  const controls = (0, import_react15.useMemo)(() => new CameraControls(explCamera), [explCamera]);
  useFrame((state, delta) => {
    if (controls.enabled)
      controls.update(delta);
  }, -1);
  (0, import_react15.useEffect)(() => {
    controls.connect(explDomElement);
    return () => void controls.disconnect();
  }, [explDomElement, controls]);
  (0, import_react15.useEffect)(() => {
    const callback = (e2) => {
      invalidate();
      if (regress)
        performance2.regress();
      if (onChange)
        onChange(e2);
    };
    const onStartCb = (e2) => {
      if (onStart)
        onStart(e2);
    };
    const onEndCb = (e2) => {
      if (onEnd)
        onEnd(e2);
    };
    controls.addEventListener("update", callback);
    controls.addEventListener("controlstart", onStartCb);
    controls.addEventListener("controlend", onEndCb);
    controls.addEventListener("control", callback);
    controls.addEventListener("transitionstart", callback);
    controls.addEventListener("wake", callback);
    return () => {
      controls.removeEventListener("update", callback);
      controls.removeEventListener("controlstart", onStartCb);
      controls.removeEventListener("controlend", onEndCb);
      controls.removeEventListener("control", callback);
      controls.removeEventListener("transitionstart", callback);
      controls.removeEventListener("wake", callback);
    };
  }, [controls, onStart, onEnd, invalidate, setEvents, regress, onChange]);
  (0, import_react15.useEffect)(() => {
    if (makeDefault) {
      const old = get().controls;
      set({
        controls
      });
      return () => set({
        controls: old
      });
    }
  }, [makeDefault, controls]);
  return React45.createElement("primitive", _extends({
    ref,
    object: controls
  }, restProps));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/FaceControls.js
var React48 = __toESM(require_react());
var import_react18 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/useVideoTexture.js
var import_react16 = __toESM(require_react());
function useVideoTexture(src, props) {
  const {
    unsuspend,
    start,
    crossOrigin,
    muted,
    loop,
    ...rest
  } = {
    unsuspend: "loadedmetadata",
    crossOrigin: "Anonymous",
    muted: true,
    loop: true,
    start: true,
    playsInline: true,
    ...props
  };
  const gl = useThree((state) => state.gl);
  const texture = suspend(() => new Promise((res, rej) => {
    const video = Object.assign(document.createElement("video"), {
      src: typeof src === "string" && src || void 0,
      srcObject: src instanceof MediaStream && src || void 0,
      crossOrigin,
      loop,
      muted,
      ...rest
    });
    const texture2 = new VideoTexture(video);
    if ("colorSpace" in texture2)
      texture2.colorSpace = gl.outputColorSpace;
    else
      texture2.encoding = gl.outputEncoding;
    video.addEventListener(unsuspend, () => res(texture2));
  }), [src]);
  (0, import_react16.useEffect)(() => void (start && texture.image.play()), [texture, start]);
  return texture;
}

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Facemesh.js
var React46 = __toESM(require_react());
var defaultLookAt = new Vector3(0, 0, -1);
var normal = function() {
  const a3 = new Vector3();
  const b2 = new Vector3();
  const c2 = new Vector3();
  const ab = new Vector3();
  const ac = new Vector3();
  return function(v12, v22, v32, v5) {
    a3.copy(v12);
    b2.copy(v22);
    c2.copy(v32);
    ab.copy(b2).sub(a3);
    ac.copy(c2).sub(a3);
    return v5.crossVectors(ac, ab).normalize();
  };
}();
function mean(v12, v22) {
  return v12.clone().add(v22).multiplyScalar(0.5);
}
var Facemesh = React46.forwardRef(({
  points = FacemeshDatas.SAMPLE_FACELANDMARKER_RESULT.faceLandmarks[0],
  face,
  facialTransformationMatrix,
  faceBlendshapes,
  offset,
  offsetScalar = 80,
  width,
  height,
  depth = 1,
  verticalTri = [159, 386, 152],
  origin,
  eyes = true,
  eyesAsOrigin = false,
  debug = false,
  children,
  ...props
}, fref) => {
  var _meshRef$current3;
  if (face) {
    points = face.keypoints;
    console.warn("Facemesh `face` prop is deprecated: use `points` instead");
  }
  const offsetRef = React46.useRef(null);
  const scaleRef = React46.useRef(null);
  const originRef = React46.useRef(null);
  const outerRef = React46.useRef(null);
  const meshRef = React46.useRef(null);
  const eyeRightRef = React46.useRef(null);
  const eyeLeftRef = React46.useRef(null);
  const [sightDir] = React46.useState(() => new Vector3());
  const [transform] = React46.useState(() => new Object3D());
  const [sightDirQuaternion] = React46.useState(() => new Quaternion());
  const [_origin] = React46.useState(() => new Vector3());
  const {
    invalidate
  } = useThree();
  React46.useEffect(() => {
    var _meshRef$current;
    (_meshRef$current = meshRef.current) == null ? void 0 : _meshRef$current.geometry.setIndex(FacemeshDatas.TRIANGULATION);
  }, []);
  const [bboxSize] = React46.useState(() => new Vector3());
  React46.useEffect(() => {
    var _meshRef$current2, _outerRef$current;
    const faceGeometry = (_meshRef$current2 = meshRef.current) == null ? void 0 : _meshRef$current2.geometry;
    if (!faceGeometry)
      return;
    faceGeometry.setFromPoints(points);
    faceGeometry.setDrawRange(0, FacemeshDatas.TRIANGULATION.length);
    if (facialTransformationMatrix) {
      transform.matrix.fromArray(facialTransformationMatrix.data);
      transform.matrix.decompose(transform.position, transform.quaternion, transform.scale);
      transform.rotation.y *= -1;
      transform.rotation.z *= -1;
      sightDirQuaternion.setFromEuler(transform.rotation);
      if (offset) {
        var _offsetRef$current;
        transform.position.y *= -1;
        transform.position.z *= -1;
        (_offsetRef$current = offsetRef.current) == null ? void 0 : _offsetRef$current.position.copy(transform.position.divideScalar(offsetScalar));
      } else {
        var _offsetRef$current2;
        (_offsetRef$current2 = offsetRef.current) == null ? void 0 : _offsetRef$current2.position.set(0, 0, 0);
      }
    } else {
      normal(points[verticalTri[0]], points[verticalTri[1]], points[verticalTri[2]], sightDir);
      sightDirQuaternion.setFromUnitVectors(defaultLookAt, sightDir);
    }
    const sightDirQuaternionInverse = sightDirQuaternion.clone().invert();
    faceGeometry.computeBoundingBox();
    if (debug)
      invalidate();
    faceGeometry.center();
    faceGeometry.applyQuaternion(sightDirQuaternionInverse);
    (_outerRef$current = outerRef.current) == null ? void 0 : _outerRef$current.setRotationFromQuaternion(sightDirQuaternion);
    if (eyes) {
      if (!faceBlendshapes) {
        console.warn("Facemesh `eyes` option only works if `faceBlendshapes` is provided: skipping.");
      } else {
        if (eyeRightRef.current && eyeLeftRef.current && originRef.current) {
          if (eyesAsOrigin) {
            const eyeRightSphere = eyeRightRef.current._computeSphere(faceGeometry);
            const eyeLeftSphere = eyeLeftRef.current._computeSphere(faceGeometry);
            const eyesCenter = mean(eyeRightSphere.center, eyeLeftSphere.center);
            origin = eyesCenter.negate();
            eyeRightRef.current._update(faceGeometry, faceBlendshapes, eyeRightSphere);
            eyeLeftRef.current._update(faceGeometry, faceBlendshapes, eyeLeftSphere);
          } else {
            eyeRightRef.current._update(faceGeometry, faceBlendshapes);
            eyeLeftRef.current._update(faceGeometry, faceBlendshapes);
          }
        }
      }
    }
    if (originRef.current) {
      if (origin !== void 0) {
        if (typeof origin === "number") {
          const position2 = faceGeometry.getAttribute("position");
          _origin.set(-position2.getX(origin), -position2.getY(origin), -position2.getZ(origin));
        } else if (origin.isVector3) {
          _origin.copy(origin);
        }
      } else {
        _origin.setScalar(0);
      }
      originRef.current.position.copy(_origin);
    }
    if (scaleRef.current) {
      let scale2 = 1;
      if (width || height || depth) {
        faceGeometry.boundingBox.getSize(bboxSize);
        if (width)
          scale2 = width / bboxSize.x;
        if (height)
          scale2 = height / bboxSize.y;
        if (depth)
          scale2 = depth / bboxSize.z;
      }
      scaleRef.current.scale.setScalar(scale2 !== 1 ? scale2 : 1);
    }
    faceGeometry.computeVertexNormals();
    faceGeometry.attributes.position.needsUpdate = true;
  }, [points, facialTransformationMatrix, faceBlendshapes, transform, offset, offsetScalar, width, height, depth, verticalTri, origin, eyes, debug, invalidate, sightDir, sightDirQuaternion, bboxSize, _origin]);
  const api = React46.useMemo(() => ({
    outerRef,
    meshRef,
    eyeRightRef,
    eyeLeftRef
  }), []);
  React46.useImperativeHandle(fref, () => api, [api]);
  const [meshBboxSize] = React46.useState(() => new Vector3());
  const bbox = (_meshRef$current3 = meshRef.current) == null ? void 0 : _meshRef$current3.geometry.boundingBox;
  const one = (bbox == null ? void 0 : bbox.getSize(meshBboxSize).z) || 1;
  return React46.createElement("group", props, React46.createElement("group", {
    ref: offsetRef
  }, React46.createElement("group", {
    ref: outerRef
  }, React46.createElement("group", {
    ref: scaleRef
  }, debug ? React46.createElement(React46.Fragment, null, React46.createElement("axesHelper", {
    args: [one]
  }), React46.createElement(Line, {
    points: [[0, 0, 0], [0, 0, -one]],
    color: 65535
  })) : null, React46.createElement("group", {
    ref: originRef
  }, eyes && faceBlendshapes && React46.createElement("group", {
    name: "eyes"
  }, React46.createElement(FacemeshEye, {
    side: "left",
    ref: eyeRightRef,
    debug
  }), React46.createElement(FacemeshEye, {
    side: "right",
    ref: eyeLeftRef,
    debug
  })), React46.createElement("mesh", {
    ref: meshRef,
    name: "face"
  }, children, debug ? React46.createElement(React46.Fragment, null, bbox && React46.createElement("box3Helper", {
    args: [bbox]
  })) : null))))));
});
var FacemeshEyeDefaults = {
  contourLandmarks: {
    right: [33, 133, 159, 145, 153],
    left: [263, 362, 386, 374, 380]
  },
  blendshapes: {
    right: [14, 16, 18, 12],
    // lookIn,lookOut, lookUp,lookDown
    left: [13, 15, 17, 11]
    // lookIn,lookOut, lookUp,lookDown
  },
  color: {
    right: "red",
    left: "#00ff00"
  },
  fov: {
    horizontal: 100,
    vertical: 90
  }
};
var FacemeshEye = React46.forwardRef(({
  side,
  debug = true
}, fref) => {
  const eyeMeshRef = React46.useRef(null);
  const irisDirRef = React46.useRef(null);
  const [sphere] = React46.useState(() => new Sphere());
  const _computeSphere = React46.useCallback((faceGeometry) => {
    const position2 = faceGeometry.getAttribute("position");
    const eyeContourLandmarks = FacemeshEyeDefaults.contourLandmarks[side];
    const eyeContourPoints = eyeContourLandmarks.map((i3) => new Vector3(position2.getX(i3), position2.getY(i3), position2.getZ(i3)));
    sphere.center.set(0, 0, 0);
    eyeContourPoints.forEach((v5) => sphere.center.add(v5));
    sphere.center.divideScalar(eyeContourPoints.length);
    sphere.radius = eyeContourPoints[0].sub(eyeContourPoints[1]).length() / 2;
    return sphere;
  }, [sphere, side]);
  const [rotation2] = React46.useState(() => new Euler());
  const _update = React46.useCallback((faceGeometry, faceBlendshapes, sphere2) => {
    if (eyeMeshRef.current) {
      var _sphere4;
      (_sphere4 = sphere2) !== null && _sphere4 !== void 0 ? _sphere4 : sphere2 = _computeSphere(faceGeometry);
      eyeMeshRef.current.position.copy(sphere2.center);
      eyeMeshRef.current.scale.setScalar(sphere2.radius);
    }
    if (faceBlendshapes && irisDirRef.current) {
      const blendshapes = FacemeshEyeDefaults.blendshapes[side];
      const lookIn = faceBlendshapes.categories[blendshapes[0]].score;
      const lookOut = faceBlendshapes.categories[blendshapes[1]].score;
      const lookUp = faceBlendshapes.categories[blendshapes[2]].score;
      const lookDown = faceBlendshapes.categories[blendshapes[3]].score;
      const hfov = FacemeshEyeDefaults.fov.horizontal * MathUtils.DEG2RAD;
      const vfov = FacemeshEyeDefaults.fov.vertical * MathUtils.DEG2RAD;
      const rx = hfov * 0.5 * (lookDown - lookUp);
      const ry = vfov * 0.5 * (lookIn - lookOut) * (side === "left" ? 1 : -1);
      rotation2.set(rx, ry, 0);
      irisDirRef.current.setRotationFromEuler(rotation2);
    }
  }, [_computeSphere, side, rotation2]);
  const api = React46.useMemo(() => ({
    eyeMeshRef,
    irisDirRef,
    _computeSphere,
    _update
  }), [_computeSphere, _update]);
  React46.useImperativeHandle(fref, () => api, [api]);
  const color = FacemeshEyeDefaults.color[side];
  return React46.createElement("group", null, React46.createElement("group", {
    ref: eyeMeshRef
  }, debug && React46.createElement("axesHelper", null), React46.createElement("group", {
    ref: irisDirRef
  }, React46.createElement(React46.Fragment, null, debug && React46.createElement(Line, {
    points: [[0, 0, 0], [0, 0, -2]],
    lineWidth: 1,
    color
  })))));
});
var FacemeshDatas = {
  // Extracted from: https://github.com/tensorflow/tfjs-models/blob/a8f500809f5afe38feea27870c77e7ba03a6ece4/face-landmarks-detection/demos/shared/triangulation.js
  // prettier-ignore
  TRIANGULATION: [127, 34, 139, 11, 0, 37, 232, 231, 120, 72, 37, 39, 128, 121, 47, 232, 121, 128, 104, 69, 67, 175, 171, 148, 157, 154, 155, 118, 50, 101, 73, 39, 40, 9, 151, 108, 48, 115, 131, 194, 204, 211, 74, 40, 185, 80, 42, 183, 40, 92, 186, 230, 229, 118, 202, 212, 214, 83, 18, 17, 76, 61, 146, 160, 29, 30, 56, 157, 173, 106, 204, 194, 135, 214, 192, 203, 165, 98, 21, 71, 68, 51, 45, 4, 144, 24, 23, 77, 146, 91, 205, 50, 187, 201, 200, 18, 91, 106, 182, 90, 91, 181, 85, 84, 17, 206, 203, 36, 148, 171, 140, 92, 40, 39, 193, 189, 244, 159, 158, 28, 247, 246, 161, 236, 3, 196, 54, 68, 104, 193, 168, 8, 117, 228, 31, 189, 193, 55, 98, 97, 99, 126, 47, 100, 166, 79, 218, 155, 154, 26, 209, 49, 131, 135, 136, 150, 47, 126, 217, 223, 52, 53, 45, 51, 134, 211, 170, 140, 67, 69, 108, 43, 106, 91, 230, 119, 120, 226, 130, 247, 63, 53, 52, 238, 20, 242, 46, 70, 156, 78, 62, 96, 46, 53, 63, 143, 34, 227, 173, 155, 133, 123, 117, 111, 44, 125, 19, 236, 134, 51, 216, 206, 205, 154, 153, 22, 39, 37, 167, 200, 201, 208, 36, 142, 100, 57, 212, 202, 20, 60, 99, 28, 158, 157, 35, 226, 113, 160, 159, 27, 204, 202, 210, 113, 225, 46, 43, 202, 204, 62, 76, 77, 137, 123, 116, 41, 38, 72, 203, 129, 142, 64, 98, 240, 49, 102, 64, 41, 73, 74, 212, 216, 207, 42, 74, 184, 169, 170, 211, 170, 149, 176, 105, 66, 69, 122, 6, 168, 123, 147, 187, 96, 77, 90, 65, 55, 107, 89, 90, 180, 101, 100, 120, 63, 105, 104, 93, 137, 227, 15, 86, 85, 129, 102, 49, 14, 87, 86, 55, 8, 9, 100, 47, 121, 145, 23, 22, 88, 89, 179, 6, 122, 196, 88, 95, 96, 138, 172, 136, 215, 58, 172, 115, 48, 219, 42, 80, 81, 195, 3, 51, 43, 146, 61, 171, 175, 199, 81, 82, 38, 53, 46, 225, 144, 163, 110, 246, 33, 7, 52, 65, 66, 229, 228, 117, 34, 127, 234, 107, 108, 69, 109, 108, 151, 48, 64, 235, 62, 78, 191, 129, 209, 126, 111, 35, 143, 163, 161, 246, 117, 123, 50, 222, 65, 52, 19, 125, 141, 221, 55, 65, 3, 195, 197, 25, 7, 33, 220, 237, 44, 70, 71, 139, 122, 193, 245, 247, 130, 33, 71, 21, 162, 153, 158, 159, 170, 169, 150, 188, 174, 196, 216, 186, 92, 144, 160, 161, 2, 97, 167, 141, 125, 241, 164, 167, 37, 72, 38, 12, 145, 159, 160, 38, 82, 13, 63, 68, 71, 226, 35, 111, 158, 153, 154, 101, 50, 205, 206, 92, 165, 209, 198, 217, 165, 167, 97, 220, 115, 218, 133, 112, 243, 239, 238, 241, 214, 135, 169, 190, 173, 133, 171, 208, 32, 125, 44, 237, 86, 87, 178, 85, 86, 179, 84, 85, 180, 83, 84, 181, 201, 83, 182, 137, 93, 132, 76, 62, 183, 61, 76, 184, 57, 61, 185, 212, 57, 186, 214, 207, 187, 34, 143, 156, 79, 239, 237, 123, 137, 177, 44, 1, 4, 201, 194, 32, 64, 102, 129, 213, 215, 138, 59, 166, 219, 242, 99, 97, 2, 94, 141, 75, 59, 235, 24, 110, 228, 25, 130, 226, 23, 24, 229, 22, 23, 230, 26, 22, 231, 112, 26, 232, 189, 190, 243, 221, 56, 190, 28, 56, 221, 27, 28, 222, 29, 27, 223, 30, 29, 224, 247, 30, 225, 238, 79, 20, 166, 59, 75, 60, 75, 240, 147, 177, 215, 20, 79, 166, 187, 147, 213, 112, 233, 244, 233, 128, 245, 128, 114, 188, 114, 217, 174, 131, 115, 220, 217, 198, 236, 198, 131, 134, 177, 132, 58, 143, 35, 124, 110, 163, 7, 228, 110, 25, 356, 389, 368, 11, 302, 267, 452, 350, 349, 302, 303, 269, 357, 343, 277, 452, 453, 357, 333, 332, 297, 175, 152, 377, 384, 398, 382, 347, 348, 330, 303, 304, 270, 9, 336, 337, 278, 279, 360, 418, 262, 431, 304, 408, 409, 310, 415, 407, 270, 409, 410, 450, 348, 347, 422, 430, 434, 313, 314, 17, 306, 307, 375, 387, 388, 260, 286, 414, 398, 335, 406, 418, 364, 367, 416, 423, 358, 327, 251, 284, 298, 281, 5, 4, 373, 374, 253, 307, 320, 321, 425, 427, 411, 421, 313, 18, 321, 405, 406, 320, 404, 405, 315, 16, 17, 426, 425, 266, 377, 400, 369, 322, 391, 269, 417, 465, 464, 386, 257, 258, 466, 260, 388, 456, 399, 419, 284, 332, 333, 417, 285, 8, 346, 340, 261, 413, 441, 285, 327, 460, 328, 355, 371, 329, 392, 439, 438, 382, 341, 256, 429, 420, 360, 364, 394, 379, 277, 343, 437, 443, 444, 283, 275, 440, 363, 431, 262, 369, 297, 338, 337, 273, 375, 321, 450, 451, 349, 446, 342, 467, 293, 334, 282, 458, 461, 462, 276, 353, 383, 308, 324, 325, 276, 300, 293, 372, 345, 447, 382, 398, 362, 352, 345, 340, 274, 1, 19, 456, 248, 281, 436, 427, 425, 381, 256, 252, 269, 391, 393, 200, 199, 428, 266, 330, 329, 287, 273, 422, 250, 462, 328, 258, 286, 384, 265, 353, 342, 387, 259, 257, 424, 431, 430, 342, 353, 276, 273, 335, 424, 292, 325, 307, 366, 447, 345, 271, 303, 302, 423, 266, 371, 294, 455, 460, 279, 278, 294, 271, 272, 304, 432, 434, 427, 272, 407, 408, 394, 430, 431, 395, 369, 400, 334, 333, 299, 351, 417, 168, 352, 280, 411, 325, 319, 320, 295, 296, 336, 319, 403, 404, 330, 348, 349, 293, 298, 333, 323, 454, 447, 15, 16, 315, 358, 429, 279, 14, 15, 316, 285, 336, 9, 329, 349, 350, 374, 380, 252, 318, 402, 403, 6, 197, 419, 318, 319, 325, 367, 364, 365, 435, 367, 397, 344, 438, 439, 272, 271, 311, 195, 5, 281, 273, 287, 291, 396, 428, 199, 311, 271, 268, 283, 444, 445, 373, 254, 339, 263, 466, 249, 282, 334, 296, 449, 347, 346, 264, 447, 454, 336, 296, 299, 338, 10, 151, 278, 439, 455, 292, 407, 415, 358, 371, 355, 340, 345, 372, 390, 249, 466, 346, 347, 280, 442, 443, 282, 19, 94, 370, 441, 442, 295, 248, 419, 197, 263, 255, 359, 440, 275, 274, 300, 383, 368, 351, 412, 465, 263, 467, 466, 301, 368, 389, 380, 374, 386, 395, 378, 379, 412, 351, 419, 436, 426, 322, 373, 390, 388, 2, 164, 393, 370, 462, 461, 164, 0, 267, 302, 11, 12, 374, 373, 387, 268, 12, 13, 293, 300, 301, 446, 261, 340, 385, 384, 381, 330, 266, 425, 426, 423, 391, 429, 355, 437, 391, 327, 326, 440, 457, 438, 341, 382, 362, 459, 457, 461, 434, 430, 394, 414, 463, 362, 396, 369, 262, 354, 461, 457, 316, 403, 402, 315, 404, 403, 314, 405, 404, 313, 406, 405, 421, 418, 406, 366, 401, 361, 306, 408, 407, 291, 409, 408, 287, 410, 409, 432, 436, 410, 434, 416, 411, 264, 368, 383, 309, 438, 457, 352, 376, 401, 274, 275, 4, 421, 428, 262, 294, 327, 358, 433, 416, 367, 289, 455, 439, 462, 370, 326, 2, 326, 370, 305, 460, 455, 254, 449, 448, 255, 261, 446, 253, 450, 449, 252, 451, 450, 256, 452, 451, 341, 453, 452, 413, 464, 463, 441, 413, 414, 258, 442, 441, 257, 443, 442, 259, 444, 443, 260, 445, 444, 467, 342, 445, 459, 458, 250, 289, 392, 290, 290, 328, 460, 376, 433, 435, 250, 290, 392, 411, 416, 433, 341, 463, 464, 453, 464, 465, 357, 465, 412, 343, 412, 399, 360, 363, 440, 437, 399, 456, 420, 456, 363, 401, 435, 288, 372, 383, 353, 339, 255, 249, 448, 261, 255, 133, 243, 190, 133, 155, 112, 33, 246, 247, 33, 130, 25, 398, 384, 286, 362, 398, 414, 362, 463, 341, 263, 359, 467, 263, 249, 255, 466, 467, 260, 75, 60, 166, 238, 239, 79, 162, 127, 139, 72, 11, 37, 121, 232, 120, 73, 72, 39, 114, 128, 47, 233, 232, 128, 103, 104, 67, 152, 175, 148, 173, 157, 155, 119, 118, 101, 74, 73, 40, 107, 9, 108, 49, 48, 131, 32, 194, 211, 184, 74, 185, 191, 80, 183, 185, 40, 186, 119, 230, 118, 210, 202, 214, 84, 83, 17, 77, 76, 146, 161, 160, 30, 190, 56, 173, 182, 106, 194, 138, 135, 192, 129, 203, 98, 54, 21, 68, 5, 51, 4, 145, 144, 23, 90, 77, 91, 207, 205, 187, 83, 201, 18, 181, 91, 182, 180, 90, 181, 16, 85, 17, 205, 206, 36, 176, 148, 140, 165, 92, 39, 245, 193, 244, 27, 159, 28, 30, 247, 161, 174, 236, 196, 103, 54, 104, 55, 193, 8, 111, 117, 31, 221, 189, 55, 240, 98, 99, 142, 126, 100, 219, 166, 218, 112, 155, 26, 198, 209, 131, 169, 135, 150, 114, 47, 217, 224, 223, 53, 220, 45, 134, 32, 211, 140, 109, 67, 108, 146, 43, 91, 231, 230, 120, 113, 226, 247, 105, 63, 52, 241, 238, 242, 124, 46, 156, 95, 78, 96, 70, 46, 63, 116, 143, 227, 116, 123, 111, 1, 44, 19, 3, 236, 51, 207, 216, 205, 26, 154, 22, 165, 39, 167, 199, 200, 208, 101, 36, 100, 43, 57, 202, 242, 20, 99, 56, 28, 157, 124, 35, 113, 29, 160, 27, 211, 204, 210, 124, 113, 46, 106, 43, 204, 96, 62, 77, 227, 137, 116, 73, 41, 72, 36, 203, 142, 235, 64, 240, 48, 49, 64, 42, 41, 74, 214, 212, 207, 183, 42, 184, 210, 169, 211, 140, 170, 176, 104, 105, 69, 193, 122, 168, 50, 123, 187, 89, 96, 90, 66, 65, 107, 179, 89, 180, 119, 101, 120, 68, 63, 104, 234, 93, 227, 16, 15, 85, 209, 129, 49, 15, 14, 86, 107, 55, 9, 120, 100, 121, 153, 145, 22, 178, 88, 179, 197, 6, 196, 89, 88, 96, 135, 138, 136, 138, 215, 172, 218, 115, 219, 41, 42, 81, 5, 195, 51, 57, 43, 61, 208, 171, 199, 41, 81, 38, 224, 53, 225, 24, 144, 110, 105, 52, 66, 118, 229, 117, 227, 34, 234, 66, 107, 69, 10, 109, 151, 219, 48, 235, 183, 62, 191, 142, 129, 126, 116, 111, 143, 7, 163, 246, 118, 117, 50, 223, 222, 52, 94, 19, 141, 222, 221, 65, 196, 3, 197, 45, 220, 44, 156, 70, 139, 188, 122, 245, 139, 71, 162, 145, 153, 159, 149, 170, 150, 122, 188, 196, 206, 216, 92, 163, 144, 161, 164, 2, 167, 242, 141, 241, 0, 164, 37, 11, 72, 12, 144, 145, 160, 12, 38, 13, 70, 63, 71, 31, 226, 111, 157, 158, 154, 36, 101, 205, 203, 206, 165, 126, 209, 217, 98, 165, 97, 237, 220, 218, 237, 239, 241, 210, 214, 169, 140, 171, 32, 241, 125, 237, 179, 86, 178, 180, 85, 179, 181, 84, 180, 182, 83, 181, 194, 201, 182, 177, 137, 132, 184, 76, 183, 185, 61, 184, 186, 57, 185, 216, 212, 186, 192, 214, 187, 139, 34, 156, 218, 79, 237, 147, 123, 177, 45, 44, 4, 208, 201, 32, 98, 64, 129, 192, 213, 138, 235, 59, 219, 141, 242, 97, 97, 2, 141, 240, 75, 235, 229, 24, 228, 31, 25, 226, 230, 23, 229, 231, 22, 230, 232, 26, 231, 233, 112, 232, 244, 189, 243, 189, 221, 190, 222, 28, 221, 223, 27, 222, 224, 29, 223, 225, 30, 224, 113, 247, 225, 99, 60, 240, 213, 147, 215, 60, 20, 166, 192, 187, 213, 243, 112, 244, 244, 233, 245, 245, 128, 188, 188, 114, 174, 134, 131, 220, 174, 217, 236, 236, 198, 134, 215, 177, 58, 156, 143, 124, 25, 110, 7, 31, 228, 25, 264, 356, 368, 0, 11, 267, 451, 452, 349, 267, 302, 269, 350, 357, 277, 350, 452, 357, 299, 333, 297, 396, 175, 377, 381, 384, 382, 280, 347, 330, 269, 303, 270, 151, 9, 337, 344, 278, 360, 424, 418, 431, 270, 304, 409, 272, 310, 407, 322, 270, 410, 449, 450, 347, 432, 422, 434, 18, 313, 17, 291, 306, 375, 259, 387, 260, 424, 335, 418, 434, 364, 416, 391, 423, 327, 301, 251, 298, 275, 281, 4, 254, 373, 253, 375, 307, 321, 280, 425, 411, 200, 421, 18, 335, 321, 406, 321, 320, 405, 314, 315, 17, 423, 426, 266, 396, 377, 369, 270, 322, 269, 413, 417, 464, 385, 386, 258, 248, 456, 419, 298, 284, 333, 168, 417, 8, 448, 346, 261, 417, 413, 285, 326, 327, 328, 277, 355, 329, 309, 392, 438, 381, 382, 256, 279, 429, 360, 365, 364, 379, 355, 277, 437, 282, 443, 283, 281, 275, 363, 395, 431, 369, 299, 297, 337, 335, 273, 321, 348, 450, 349, 359, 446, 467, 283, 293, 282, 250, 458, 462, 300, 276, 383, 292, 308, 325, 283, 276, 293, 264, 372, 447, 346, 352, 340, 354, 274, 19, 363, 456, 281, 426, 436, 425, 380, 381, 252, 267, 269, 393, 421, 200, 428, 371, 266, 329, 432, 287, 422, 290, 250, 328, 385, 258, 384, 446, 265, 342, 386, 387, 257, 422, 424, 430, 445, 342, 276, 422, 273, 424, 306, 292, 307, 352, 366, 345, 268, 271, 302, 358, 423, 371, 327, 294, 460, 331, 279, 294, 303, 271, 304, 436, 432, 427, 304, 272, 408, 395, 394, 431, 378, 395, 400, 296, 334, 299, 6, 351, 168, 376, 352, 411, 307, 325, 320, 285, 295, 336, 320, 319, 404, 329, 330, 349, 334, 293, 333, 366, 323, 447, 316, 15, 315, 331, 358, 279, 317, 14, 316, 8, 285, 9, 277, 329, 350, 253, 374, 252, 319, 318, 403, 351, 6, 419, 324, 318, 325, 397, 367, 365, 288, 435, 397, 278, 344, 439, 310, 272, 311, 248, 195, 281, 375, 273, 291, 175, 396, 199, 312, 311, 268, 276, 283, 445, 390, 373, 339, 295, 282, 296, 448, 449, 346, 356, 264, 454, 337, 336, 299, 337, 338, 151, 294, 278, 455, 308, 292, 415, 429, 358, 355, 265, 340, 372, 388, 390, 466, 352, 346, 280, 295, 442, 282, 354, 19, 370, 285, 441, 295, 195, 248, 197, 457, 440, 274, 301, 300, 368, 417, 351, 465, 251, 301, 389, 385, 380, 386, 394, 395, 379, 399, 412, 419, 410, 436, 322, 387, 373, 388, 326, 2, 393, 354, 370, 461, 393, 164, 267, 268, 302, 12, 386, 374, 387, 312, 268, 13, 298, 293, 301, 265, 446, 340, 380, 385, 381, 280, 330, 425, 322, 426, 391, 420, 429, 437, 393, 391, 326, 344, 440, 438, 458, 459, 461, 364, 434, 394, 428, 396, 262, 274, 354, 457, 317, 316, 402, 316, 315, 403, 315, 314, 404, 314, 313, 405, 313, 421, 406, 323, 366, 361, 292, 306, 407, 306, 291, 408, 291, 287, 409, 287, 432, 410, 427, 434, 411, 372, 264, 383, 459, 309, 457, 366, 352, 401, 1, 274, 4, 418, 421, 262, 331, 294, 358, 435, 433, 367, 392, 289, 439, 328, 462, 326, 94, 2, 370, 289, 305, 455, 339, 254, 448, 359, 255, 446, 254, 253, 449, 253, 252, 450, 252, 256, 451, 256, 341, 452, 414, 413, 463, 286, 441, 414, 286, 258, 441, 258, 257, 442, 257, 259, 443, 259, 260, 444, 260, 467, 445, 309, 459, 250, 305, 289, 290, 305, 290, 460, 401, 376, 435, 309, 250, 392, 376, 411, 433, 453, 341, 464, 357, 453, 465, 343, 357, 412, 437, 343, 399, 344, 360, 440, 420, 437, 456, 360, 420, 363, 361, 401, 288, 265, 372, 353, 390, 339, 249, 339, 448, 255],
  // My face as default (captured with a 640x480 webcam)
  // prettier-ignore
  SAMPLE_FACE: {
    "keypoints": [{
      "x": 356.2804412841797,
      "y": 295.1960563659668,
      "z": -23.786449432373047,
      "name": "lips"
    }, {
      "x": 354.8859405517578,
      "y": 264.69520568847656,
      "z": -36.718435287475586
    }, {
      "x": 355.2180862426758,
      "y": 275.3360366821289,
      "z": -21.183712482452393
    }, {
      "x": 347.349853515625,
      "y": 242.4400234222412,
      "z": -25.093655586242676
    }, {
      "x": 354.40135955810547,
      "y": 256.67933464050293,
      "z": -38.23572635650635
    }, {
      "x": 353.7689971923828,
      "y": 247.54886627197266,
      "z": -34.5475435256958
    }, {
      "x": 352.1288299560547,
      "y": 227.34312057495117,
      "z": -13.095386028289795
    }, {
      "x": 303.5013198852539,
      "y": 234.67002868652344,
      "z": 12.500141859054565,
      "name": "rightEye"
    }, {
      "x": 351.09378814697266,
      "y": 211.87547206878662,
      "z": -6.413471698760986
    }, {
      "x": 350.7115936279297,
      "y": 202.1251630783081,
      "z": -6.413471698760986
    }, {
      "x": 348.33667755126953,
      "y": 168.7741756439209,
      "z": 6.483500003814697,
      "name": "faceOval"
    }, {
      "x": 356.4806365966797,
      "y": 299.2995357513428,
      "z": -23.144519329071045
    }, {
      "x": 356.5511703491211,
      "y": 302.66146659851074,
      "z": -21.020312309265137
    }, {
      "x": 356.6239547729492,
      "y": 304.1536331176758,
      "z": -18.137459754943848,
      "name": "lips"
    }, {
      "x": 356.5807342529297,
      "y": 305.1840591430664,
      "z": -18.767719268798828,
      "name": "lips"
    }, {
      "x": 356.8241500854492,
      "y": 308.25711250305176,
      "z": -20.16829490661621
    }, {
      "x": 357.113037109375,
      "y": 312.26277351379395,
      "z": -22.10575819015503
    }, {
      "x": 357.34962463378906,
      "y": 317.1123218536377,
      "z": -21.837315559387207,
      "name": "lips"
    }, {
      "x": 357.6658630371094,
      "y": 325.51036834716797,
      "z": -16.27002477645874
    }, {
      "x": 355.0201416015625,
      "y": 269.36279296875,
      "z": -33.73054027557373
    }, {
      "x": 348.5237503051758,
      "y": 270.33411026000977,
      "z": -24.93025302886963
    }, {
      "x": 279.97331619262695,
      "y": 213.24176788330078,
      "z": 47.759642601013184,
      "name": "faceOval"
    }, {
      "x": 322.66529083251953,
      "y": 238.5027265548706,
      "z": 5.535193085670471
    }, {
      "x": 316.0983657836914,
      "y": 239.94489669799805,
      "z": 5.777376294136047
    }, {
      "x": 309.9431610107422,
      "y": 240.24518966674805,
      "z": 7.510589361190796
    }, {
      "x": 301.31994247436523,
      "y": 237.86138534545898,
      "z": 13.118728399276733
    }, {
      "x": 328.14266204833984,
      "y": 235.80496788024902,
      "z": 6.646900177001953
    }, {
      "x": 313.7326431274414,
      "y": 222.11161136627197,
      "z": 3.9887237548828125
    }, {
      "x": 320.45196533203125,
      "y": 221.87729358673096,
      "z": 4.601476192474365
    }, {
      "x": 307.35679626464844,
      "y": 223.63793849945068,
      "z": 5.932023525238037
    }, {
      "x": 303.0031204223633,
      "y": 226.3743782043457,
      "z": 8.479321002960205
    }, {
      "x": 296.80023193359375,
      "y": 242.94299125671387,
      "z": 15.931552648544312
    }, {
      "x": 332.2352981567383,
      "y": 340.77341079711914,
      "z": -10.165848731994629
    }, {
      "x": 301.38587951660156,
      "y": 233.46447944641113,
      "z": 14.764405488967896,
      "name": "rightEye"
    }, {
      "x": 279.0147018432617,
      "y": 244.37155723571777,
      "z": 45.77549457550049
    }, {
      "x": 289.60548400878906,
      "y": 239.1807460784912,
      "z": 23.191204071044922
    }, {
      "x": 320.32257080078125,
      "y": 267.1292781829834,
      "z": -4.954537749290466
    }, {
      "x": 347.64583587646484,
      "y": 294.4955062866211,
      "z": -23.062820434570312,
      "name": "lips"
    }, {
      "x": 349.28138732910156,
      "y": 303.1095886230469,
      "z": -20.238323211669922
    }, {
      "x": 338.9453125,
      "y": 298.19186210632324,
      "z": -19.456336498260498,
      "name": "lips"
    }, {
      "x": 333.36788177490234,
      "y": 302.6706790924072,
      "z": -14.776077270507812,
      "name": "lips"
    }, {
      "x": 342.89188385009766,
      "y": 304.3561363220215,
      "z": -17.752301692962646
    }, {
      "x": 337.7375030517578,
      "y": 306.0098361968994,
      "z": -13.410515785217285
    }, {
      "x": 325.6159210205078,
      "y": 316.22995376586914,
      "z": -6.681914925575256
    }, {
      "x": 349.0104675292969,
      "y": 264.9818515777588,
      "z": -36.274919509887695
    }, {
      "x": 347.7138900756836,
      "y": 257.5664806365967,
      "z": -37.67549514770508
    }, {
      "x": 291.79357528686523,
      "y": 218.88171672821045,
      "z": 11.578094959259033,
      "name": "rightEyebrow"
    }, {
      "x": 332.2689437866211,
      "y": 247.56946563720703,
      "z": -3.3730539679527283
    }, {
      "x": 332.0074462890625,
      "y": 267.1201229095459,
      "z": -19.969879388809204
    }, {
      "x": 331.27952575683594,
      "y": 263.6967658996582,
      "z": -17.47218608856201
    }, {
      "x": 301.04373931884766,
      "y": 269.56552505493164,
      "z": 3.61815482378006
    }, {
      "x": 347.4863815307617,
      "y": 249.0706443786621,
      "z": -32.633421421051025
    }, {
      "x": 307.26118087768555,
      "y": 208.2646894454956,
      "z": 1.1591226607561111,
      "name": "rightEyebrow"
    }, {
      "x": 297.91919708251953,
      "y": 212.22604751586914,
      "z": 5.914516448974609,
      "name": "rightEyebrow"
    }, {
      "x": 285.1651382446289,
      "y": 197.98450469970703,
      "z": 36.391637325286865,
      "name": "faceOval"
    }, {
      "x": 337.04097747802734,
      "y": 211.25229835510254,
      "z": -4.548954665660858
    }, {
      "x": 326.5912628173828,
      "y": 223.16698551177979,
      "z": 6.670243740081787
    }, {
      "x": 320.05664825439453,
      "y": 309.5834255218506,
      "z": -4.055835008621216
    }, {
      "x": 289.6866226196289,
      "y": 314.617395401001,
      "z": 53.875489234924316,
      "name": "faceOval"
    }, {
      "x": 337.4256896972656,
      "y": 270.8755302429199,
      "z": -17.67060160636902
    }, {
      "x": 343.69922637939453,
      "y": 273.0000400543213,
      "z": -18.756048679351807
    }, {
      "x": 327.4242401123047,
      "y": 309.22399520874023,
      "z": -4.703601002693176,
      "name": "lips"
    }, {
      "x": 330.37220001220703,
      "y": 308.3323001861572,
      "z": -6.442649960517883
    }, {
      "x": 293.87027740478516,
      "y": 207.7961826324463,
      "z": 9.821539521217346,
      "name": "rightEyebrow"
    }, {
      "x": 332.11437225341797,
      "y": 271.22812271118164,
      "z": -16.64351224899292
    }, {
      "x": 320.1197814941406,
      "y": 207.40366458892822,
      "z": -2.48164564371109,
      "name": "rightEyebrow"
    }, {
      "x": 318.59575271606445,
      "y": 201.07443809509277,
      "z": -3.110446035861969,
      "name": "rightEyebrow"
    }, {
      "x": 310.72303771972656,
      "y": 175.75075149536133,
      "z": 13.328815698623657,
      "name": "faceOval"
    }, {
      "x": 289.67578887939453,
      "y": 202.29835510253906,
      "z": 21.370456218719482
    }, {
      "x": 315.30879974365234,
      "y": 187.35260009765625,
      "z": 5.0304025411605835
    }, {
      "x": 287.8936767578125,
      "y": 216.54793739318848,
      "z": 17.81065821647644,
      "name": "rightEyebrow"
    }, {
      "x": 283.9391899108887,
      "y": 215.01142501831055,
      "z": 32.04984903335571
    }, {
      "x": 348.35330963134766,
      "y": 299.4155788421631,
      "z": -22.47924566268921
    }, {
      "x": 341.1790466308594,
      "y": 301.8221855163574,
      "z": -18.977805376052856
    }, {
      "x": 335.69713592529297,
      "y": 304.4266891479492,
      "z": -14.682706594467163
    }, {
      "x": 339.4615173339844,
      "y": 272.3654365539551,
      "z": -16.38674020767212
    }, {
      "x": 328.99600982666016,
      "y": 308.86685371398926,
      "z": -5.616893768310547
    }, {
      "x": 332.00313568115234,
      "y": 309.1875743865967,
      "z": -10.335084199905396
    }, {
      "x": 331.0068130493164,
      "y": 307.9274368286133,
      "z": -6.681914925575256,
      "name": "lips"
    }, {
      "x": 341.13792419433594,
      "y": 266.4876937866211,
      "z": -26.56425952911377
    }, {
      "x": 339.02950286865234,
      "y": 305.6663703918457,
      "z": -12.33674168586731,
      "name": "lips"
    }, {
      "x": 344.22935485839844,
      "y": 304.9452781677246,
      "z": -15.161235332489014,
      "name": "lips"
    }, {
      "x": 350.1844024658203,
      "y": 304.374303817749,
      "z": -17.5305438041687,
      "name": "lips"
    }, {
      "x": 348.52630615234375,
      "y": 325.9562301635742,
      "z": -16.164982318878174
    }, {
      "x": 348.6581802368164,
      "y": 317.1624183654785,
      "z": -21.510512828826904,
      "name": "lips"
    }, {
      "x": 348.9766311645508,
      "y": 312.1923065185547,
      "z": -21.708929538726807
    }, {
      "x": 349.2427444458008,
      "y": 308.0660820007324,
      "z": -19.643079042434692
    }, {
      "x": 349.67491149902344,
      "y": 305.42747497558594,
      "z": -18.16080331802368,
      "name": "lips"
    }, {
      "x": 337.95589447021484,
      "y": 306.6535949707031,
      "z": -12.803598642349243,
      "name": "lips"
    }, {
      "x": 337.06878662109375,
      "y": 307.63169288635254,
      "z": -14.274203777313232
    }, {
      "x": 335.77449798583984,
      "y": 309.8449516296387,
      "z": -15.698124170303345
    }, {
      "x": 334.6099090576172,
      "y": 312.7997016906738,
      "z": -14.764405488967896,
      "name": "lips"
    }, {
      "x": 327.2330856323242,
      "y": 293.80866050720215,
      "z": -11.864047050476074
    }, {
      "x": 280.97679138183594,
      "y": 279.79928970336914,
      "z": 68.90834331512451,
      "name": "faceOval"
    }, {
      "x": 355.13843536376953,
      "y": 271.7875671386719,
      "z": -25.350427627563477
    }, {
      "x": 334.7235870361328,
      "y": 307.4656391143799,
      "z": -9.302158951759338,
      "name": "lips"
    }, {
      "x": 333.5293960571289,
      "y": 307.89782524108887,
      "z": -10.200862884521484
    }, {
      "x": 346.29688262939453,
      "y": 276.4256286621094,
      "z": -19.748122692108154
    }, {
      "x": 335.16246795654297,
      "y": 276.22097969055176,
      "z": -12.313398122787476
    }, {
      "x": 345.09132385253906,
      "y": 274.7082996368408,
      "z": -19.304605722427368
    }, {
      "x": 325.4267883300781,
      "y": 252.95130729675293,
      "z": -1.6661019623279572
    }, {
      "x": 315.347843170166,
      "y": 259.05200958251953,
      "z": -0.25604281574487686
    }, {
      "x": 330.44933319091797,
      "y": 267.7570152282715,
      "z": -14.017432928085327
    }, {
      "x": 294.96768951416016,
      "y": 185.26001930236816,
      "z": 23.903164863586426,
      "name": "faceOval"
    }, {
      "x": 299.63531494140625,
      "y": 192.7913761138916,
      "z": 12.640198469161987
    }, {
      "x": 304.5452117919922,
      "y": 202.4142837524414,
      "z": 3.244667649269104,
      "name": "rightEyebrow"
    }, {
      "x": 331.6915512084961,
      "y": 320.0467872619629,
      "z": -10.632705688476562
    }, {
      "x": 334.5911407470703,
      "y": 201.27566814422607,
      "z": -6.133356094360352,
      "name": "rightEyebrow"
    }, {
      "x": 331.4815902709961,
      "y": 185.44180870056152,
      "z": 0.6627205014228821
    }, {
      "x": 328.05816650390625,
      "y": 170.8385467529297,
      "z": 7.358860373497009,
      "name": "faceOval"
    }, {
      "x": 304.49764251708984,
      "y": 239.76297855377197,
      "z": 10.387605428695679
    }, {
      "x": 290.6382179260254,
      "y": 248.85257720947266,
      "z": 19.03616428375244
    }, {
      "x": 331.5682601928711,
      "y": 233.20727348327637,
      "z": 7.837390303611755
    }, {
      "x": 295.5115509033203,
      "y": 228.9834451675415,
      "z": 14.41426157951355
    }, {
      "x": 336.94332122802734,
      "y": 241.8259334564209,
      "z": -5.27842104434967
    }, {
      "x": 336.2792205810547,
      "y": 262.7049922943115,
      "z": -26.12074375152588
    }, {
      "x": 284.4102478027344,
      "y": 255.3262710571289,
      "z": 25.467140674591064
    }, {
      "x": 295.1420593261719,
      "y": 253.02655220031738,
      "z": 12.430112361907959
    }, {
      "x": 303.5196113586426,
      "y": 254.20703887939453,
      "z": 6.139191389083862
    }, {
      "x": 315.73450088500977,
      "y": 251.64799690246582,
      "z": 3.3788898587226868
    }, {
      "x": 324.69661712646484,
      "y": 247.56494522094727,
      "z": 2.3328344523906708
    }, {
      "x": 331.57970428466797,
      "y": 243.02241325378418,
      "z": 1.1423448473215103
    }, {
      "x": 345.6210708618164,
      "y": 229.9976634979248,
      "z": -10.825285911560059
    }, {
      "x": 286.26644134521484,
      "y": 270.37991523742676,
      "z": 21.708929538726807
    }, {
      "x": 290.2525520324707,
      "y": 228.4921360015869,
      "z": 17.71728754043579
    }, {
      "x": 351.65367126464844,
      "y": 269.3400764465332,
      "z": -33.450424671173096
    }, {
      "x": 333.1378936767578,
      "y": 253.88388633728027,
      "z": -7.230473756790161
    }, {
      "x": 277.8318977355957,
      "y": 246.95331573486328,
      "z": 68.20805549621582,
      "name": "faceOval"
    }, {
      "x": 336.6680908203125,
      "y": 238.10003757476807,
      "z": 0.7688578963279724
    }, {
      "x": 329.95800018310547,
      "y": 269.18323516845703,
      "z": -7.207130789756775
    }, {
      "x": 299.17491912841797,
      "y": 234.13324356079102,
      "z": 15.95489501953125
    }, {
      "x": 335.61729431152344,
      "y": 258.71752738952637,
      "z": -23.016133308410645
    }, {
      "x": 284.1079330444336,
      "y": 297.0343494415283,
      "z": 63.25934886932373,
      "name": "faceOval"
    }, {
      "x": 331.44542694091797,
      "y": 230.6892442703247,
      "z": 9.92658257484436,
      "name": "rightEye"
    }, {
      "x": 341.41536712646484,
      "y": 253.01264762878418,
      "z": -29.038610458374023
    }, {
      "x": 303.5472869873047,
      "y": 327.5896739959717,
      "z": 16.725212335586548
    }, {
      "x": 304.7756576538086,
      "y": 337.4389457702637,
      "z": 27.38126277923584,
      "name": "faceOval"
    }, {
      "x": 280.80501556396484,
      "y": 275.32050132751465,
      "z": 45.0752067565918
    }, {
      "x": 295.43582916259766,
      "y": 318.4501647949219,
      "z": 26.2608003616333
    }, {
      "x": 281.4303207397461,
      "y": 228.7355661392212,
      "z": 40.94350814819336
    }, {
      "x": 331.2549591064453,
      "y": 349.4216537475586,
      "z": -7.376367449760437
    }, {
      "x": 352.4247741699219,
      "y": 271.7330074310303,
      "z": -24.953596591949463
    }, {
      "x": 327.5672912597656,
      "y": 260.41900634765625,
      "z": -5.456410646438599
    }, {
      "x": 284.5432472229004,
      "y": 241.7647933959961,
      "z": 29.668869972229004
    }, {
      "x": 310,
      "y": 235.66174507141113,
      "z": 8.502663969993591,
      "name": "rightEye"
    }, {
      "x": 315.7071113586426,
      "y": 235.7572603225708,
      "z": 6.938687562942505,
      "name": "rightEye"
    }, {
      "x": 330.41088104248047,
      "y": 311.04143142700195,
      "z": -9.325502514839172,
      "name": "lips"
    }, {
      "x": 288.5377502441406,
      "y": 285.31983375549316,
      "z": 21.837315559387207
    }, {
      "x": 344.55039978027344,
      "y": 359.4300842285156,
      "z": -6.705257892608643,
      "name": "faceOval"
    }, {
      "x": 323.41880798339844,
      "y": 351.67362213134766,
      "z": 7.802375555038452,
      "name": "faceOval"
    }, {
      "x": 314.64088439941406,
      "y": 346.11894607543945,
      "z": 16.36339783668518,
      "name": "faceOval"
    }, {
      "x": 349.4945526123047,
      "y": 184.8434829711914,
      "z": -0.21847527474164963
    }, {
      "x": 359.24694061279297,
      "y": 359.8348903656006,
      "z": -8.403456211090088,
      "name": "faceOval"
    }, {
      "x": 321.26182556152344,
      "y": 234.64492321014404,
      "z": 6.90950870513916,
      "name": "rightEye"
    }, {
      "x": 326.318359375,
      "y": 232.90250301361084,
      "z": 8.029969334602356,
      "name": "rightEye"
    }, {
      "x": 329.6211624145508,
      "y": 231.6195774078369,
      "z": 9.722331762313843,
      "name": "rightEye"
    }, {
      "x": 285.9398078918457,
      "y": 228.2351303100586,
      "z": 24.650139808654785
    }, {
      "x": 325.79288482666016,
      "y": 227.88007736206055,
      "z": 7.469738721847534,
      "name": "rightEye"
    }, {
      "x": 320.1699447631836,
      "y": 227.5934886932373,
      "z": 6.168370842933655,
      "name": "rightEye"
    }, {
      "x": 314.85408782958984,
      "y": 227.85282611846924,
      "z": 6.2675780057907104,
      "name": "rightEye"
    }, {
      "x": 309.3084907531738,
      "y": 229.1516876220703,
      "z": 7.7031683921813965,
      "name": "rightEye"
    }, {
      "x": 305.5621337890625,
      "y": 230.92366218566895,
      "z": 9.722331762313843,
      "name": "rightEye"
    }, {
      "x": 277.8681945800781,
      "y": 228.5354232788086,
      "z": 59.71122741699219,
      "name": "faceOval"
    }, {
      "x": 306.1444664001465,
      "y": 235.1954698562622,
      "z": 10.603528022766113,
      "name": "rightEye"
    }, {
      "x": 355.4478454589844,
      "y": 281.96210861206055,
      "z": -20.565123558044434
    }, {
      "x": 333.02661895751953,
      "y": 288.0105400085449,
      "z": -14.72939133644104
    }, {
      "x": 337.15728759765625,
      "y": 269.2059516906738,
      "z": -19.8414945602417
    }, {
      "x": 345.9898376464844,
      "y": 283.5453128814697,
      "z": -20.4834246635437
    }, {
      "x": 351.48963928222656,
      "y": 219.98916149139404,
      "z": -7.0378947257995605
    }, {
      "x": 312.39574432373047,
      "y": 336.50628089904785,
      "z": 8.671900033950806
    }, {
      "x": 321.32152557373047,
      "y": 343.1755256652832,
      "z": 0.9067271649837494
    }, {
      "x": 343.78379821777344,
      "y": 353.2975959777832,
      "z": -14.355905055999756
    }, {
      "x": 296.8791389465332,
      "y": 327.91497230529785,
      "z": 41.01353645324707,
      "name": "faceOval"
    }, {
      "x": 329.6939468383789,
      "y": 229.27897453308105,
      "z": 8.934508562088013,
      "name": "rightEye"
    }, {
      "x": 341.6905212402344,
      "y": 241.4073657989502,
      "z": -14.589333534240723
    }, {
      "x": 359.03079986572266,
      "y": 353.48859786987305,
      "z": -15.803166627883911
    }, {
      "x": 333.1861877441406,
      "y": 356.43213272094727,
      "z": -1.0234417766332626,
      "name": "faceOval"
    }, {
      "x": 283.97483825683594,
      "y": 291.4318656921387,
      "z": 41.94725513458252
    }, {
      "x": 343.33770751953125,
      "y": 305.830135345459,
      "z": -15.756480693817139,
      "name": "lips"
    }, {
      "x": 342.40283966064453,
      "y": 307.7453899383545,
      "z": -17.4021577835083
    }, {
      "x": 341.53621673583984,
      "y": 311.0595703125,
      "z": -19.047834873199463
    }, {
      "x": 340.9107208251953,
      "y": 315.4837703704834,
      "z": -18.5576331615448,
      "name": "lips"
    }, {
      "x": 339.1478729248047,
      "y": 323.42233657836914,
      "z": -14.367576837539673
    }, {
      "x": 333.3201599121094,
      "y": 307.4406337738037,
      "z": -9.617288708686829
    }, {
      "x": 331.2411117553711,
      "y": 306.9811820983887,
      "z": -9.669809937477112
    }, {
      "x": 329.23255920410156,
      "y": 306.0508346557617,
      "z": -9.582273960113525,
      "name": "lips"
    }, {
      "x": 322.4586486816406,
      "y": 301.33323669433594,
      "z": -7.720675468444824
    }, {
      "x": 297.1712112426758,
      "y": 286.9552803039551,
      "z": 8.240055441856384
    }, {
      "x": 341.3060760498047,
      "y": 235.4432201385498,
      "z": -7.504753470420837
    }, {
      "x": 336.9318389892578,
      "y": 224.3451976776123,
      "z": 5.829898118972778
    }, {
      "x": 332.65323638916016,
      "y": 226.70403957366943,
      "z": 8.105834126472473
    }, {
      "x": 334.67357635498047,
      "y": 306.4397621154785,
      "z": -8.981193900108337,
      "name": "lips"
    }, {
      "x": 297.4601936340332,
      "y": 306.29210472106934,
      "z": 15.476365089416504
    }, {
      "x": 342.9119110107422,
      "y": 222.37077713012695,
      "z": -2.754466235637665
    }, {
      "x": 335.4629898071289,
      "y": 332.20250129699707,
      "z": -11.823196411132812
    }, {
      "x": 353.2412338256836,
      "y": 240.56339263916016,
      "z": -27.147831916809082
    }, {
      "x": 346.3080596923828,
      "y": 236.41446590423584,
      "z": -18.452589511871338
    }, {
      "x": 352.6475143432617,
      "y": 234.1420555114746,
      "z": -19.748122692108154
    }, {
      "x": 337.3209762573242,
      "y": 253.39937210083008,
      "z": -16.024924516677856
    }, {
      "x": 358.6122131347656,
      "y": 344.90861892700195,
      "z": -18.592647314071655
    }, {
      "x": 358.1117248535156,
      "y": 334.64990615844727,
      "z": -17.49552845954895
    }, {
      "x": 346.4450454711914,
      "y": 335.0321102142334,
      "z": -16.32838249206543
    }, {
      "x": 319.17640686035156,
      "y": 320.2833938598633,
      "z": -3.276764452457428
    }, {
      "x": 325.2540588378906,
      "y": 276.2369728088379,
      "z": -6.460157036781311
    }, {
      "x": 326.7214584350586,
      "y": 327.3939514160156,
      "z": -7.417217493057251
    }, {
      "x": 310.7190132141113,
      "y": 277.2265148162842,
      "z": -3.5452082753181458
    }, {
      "x": 319.78355407714844,
      "y": 284.8238182067871,
      "z": -6.4543211460113525
    }, {
      "x": 305.773983001709,
      "y": 290.83580017089844,
      "z": 0.06907138042151928
    }, {
      "x": 344.4001770019531,
      "y": 344.85408782958984,
      "z": -16.946970224380493
    }, {
      "x": 333.1879425048828,
      "y": 258.74256134033203,
      "z": -11.90489649772644
    }, {
      "x": 313.80598068237305,
      "y": 327.08919525146484,
      "z": 2.2277912497520447
    }, {
      "x": 322.9637908935547,
      "y": 334.6819496154785,
      "z": -3.3643004298210144
    }, {
      "x": 313.4055519104004,
      "y": 311.2166690826416,
      "z": -1.1175429821014404
    }, {
      "x": 291.0865783691406,
      "y": 298.2831001281738,
      "z": 22.467575073242188
    }, {
      "x": 305.6580924987793,
      "y": 313.3707904815674,
      "z": 5.561453700065613
    }, {
      "x": 288.23760986328125,
      "y": 305.9941864013672,
      "z": 36.765122413635254
    }, {
      "x": 315.10692596435547,
      "y": 296.26991271972656,
      "z": -4.604393839836121
    }, {
      "x": 337.50518798828125,
      "y": 247.5944423675537,
      "z": -10.597691535949707
    }, {
      "x": 338.8450622558594,
      "y": 265.47778129577637,
      "z": -27.778091430664062
    }, {
      "x": 334.25254821777344,
      "y": 269.0671920776367,
      "z": -20.938611030578613
    }, {
      "x": 341.64512634277344,
      "y": 259.6387195587158,
      "z": -32.189905643463135
    }, {
      "x": 331.44081115722656,
      "y": 219.0976095199585,
      "z": 4.207563698291779
    }, {
      "x": 320.56339263916016,
      "y": 216.49658203125,
      "z": 2.930997312068939
    }, {
      "x": 311.21912002563477,
      "y": 216.57853603363037,
      "z": 2.9674705862998962
    }, {
      "x": 303.46256256103516,
      "y": 218.54614734649658,
      "z": 5.357203483581543
    }, {
      "x": 297.99999237060547,
      "y": 222.505202293396,
      "z": 9.325502514839172
    }, {
      "x": 294.93839263916016,
      "y": 236.39654159545898,
      "z": 18.534289598464966
    }, {
      "x": 278.87489318847656,
      "y": 259.7095584869385,
      "z": 45.68212032318115
    }, {
      "x": 300.3782653808594,
      "y": 245.38593292236328,
      "z": 12.278382778167725
    }, {
      "x": 307.06348419189453,
      "y": 246.36857986450195,
      "z": 8.164191246032715
    }, {
      "x": 315.5229187011719,
      "y": 245.3949737548828,
      "z": 5.503097176551819
    }, {
      "x": 323.71395111083984,
      "y": 242.75178909301758,
      "z": 4.6335723996162415
    }, {
      "x": 330.2785873413086,
      "y": 239.34658527374268,
      "z": 4.937030673027039
    }, {
      "x": 334.6982192993164,
      "y": 236.0460376739502,
      "z": 4.823233783245087
    }, {
      "x": 279.3412208557129,
      "y": 263.5196113586426,
      "z": 70.91583728790283,
      "name": "faceOval"
    }, {
      "x": 334.65972900390625,
      "y": 271.6648578643799,
      "z": -17.775644063949585
    }, {
      "x": 342.05677032470703,
      "y": 246.99846267700195,
      "z": -20.84523916244507
    }, {
      "x": 344.0357971191406,
      "y": 264.5701503753662,
      "z": -32.936880588531494
    }, {
      "x": 348.25531005859375,
      "y": 268.6645030975342,
      "z": -30.695960521697998
    }, {
      "x": 344.12227630615234,
      "y": 266.34212493896484,
      "z": -29.808926582336426
    }, {
      "x": 337.12318420410156,
      "y": 274.2556858062744,
      "z": -15.768152475357056
    }, {
      "x": 349.49047088623047,
      "y": 269.071683883667,
      "z": -32.51670837402344
    }, {
      "x": 350.1683044433594,
      "y": 271.4691352844238,
      "z": -24.93025302886963
    }, {
      "x": 333.9634704589844,
      "y": 230.56639194488525,
      "z": 8.89949381351471
    }, {
      "x": 338.2147979736328,
      "y": 231.4807891845703,
      "z": 4.6715047955513
    }, {
      "x": 340.4712677001953,
      "y": 231.74463272094727,
      "z": -0.34996166825294495
    }, {
      "x": 303.28975677490234,
      "y": 232.24980354309082,
      "z": 11.916568279266357,
      "name": "rightEye"
    }, {
      "x": 299.4649124145508,
      "y": 229.53842639923096,
      "z": 12.325069904327393
    }, {
      "x": 359.09618377685547,
      "y": 241.77349090576172,
      "z": -24.650139808654785
    }, {
      "x": 399.46216583251953,
      "y": 229.89503860473633,
      "z": 15.919880867004395,
      "name": "leftEye"
    }, {
      "x": 361.38919830322266,
      "y": 269.6129894256592,
      "z": -24.510080814361572
    }, {
      "x": 416.9973373413086,
      "y": 206.0895538330078,
      "z": 53.26857566833496,
      "name": "faceOval"
    }, {
      "x": 381.32179260253906,
      "y": 235.5476474761963,
      "z": 7.6214683055877686
    }, {
      "x": 387.8068542480469,
      "y": 236.25958442687988,
      "z": 8.345099091529846
    }, {
      "x": 393.95751953125,
      "y": 235.8660364151001,
      "z": 10.475142002105713
    }, {
      "x": 401.84600830078125,
      "y": 232.77019500732422,
      "z": 16.760226488113403
    }, {
      "x": 375.70568084716797,
      "y": 233.48456382751465,
      "z": 8.234220147132874
    }, {
      "x": 388.17752838134766,
      "y": 218.94717693328857,
      "z": 6.810300946235657
    }, {
      "x": 381.64928436279297,
      "y": 219.2656660079956,
      "z": 6.711093783378601
    }, {
      "x": 394.4760513305664,
      "y": 219.66821193695068,
      "z": 9.173773527145386
    }, {
      "x": 398.8843536376953,
      "y": 221.8837022781372,
      "z": 12.03328251838684
    }, {
      "x": 406.5454864501953,
      "y": 237.12156772613525,
      "z": 19.7131085395813
    }, {
      "x": 383.87447357177734,
      "y": 337.6932907104492,
      "z": -8.631049990653992
    }, {
      "x": 401.2682342529297,
      "y": 228.5916566848755,
      "z": 18.359217643737793,
      "name": "leftEye"
    }, {
      "x": 422.0449447631836,
      "y": 236.73934936523438,
      "z": 51.16771221160889
    }, {
      "x": 412.69153594970703,
      "y": 232.80198097229004,
      "z": 27.52131938934326
    }, {
      "x": 387.3497772216797,
      "y": 263.298397064209,
      "z": -2.8609684109687805
    }, {
      "x": 364.5124053955078,
      "y": 293.39221000671387,
      "z": -22.397546768188477,
      "name": "lips"
    }, {
      "x": 363.62987518310547,
      "y": 302.1291446685791,
      "z": -19.643079042434692
    }, {
      "x": 373.2334518432617,
      "y": 295.8647060394287,
      "z": -18.125789165496826,
      "name": "lips"
    }, {
      "x": 378.83365631103516,
      "y": 299.5177745819092,
      "z": -13.153743743896484,
      "name": "lips"
    }, {
      "x": 369.91477966308594,
      "y": 302.5704002380371,
      "z": -16.65518283843994
    }, {
      "x": 374.9167251586914,
      "y": 303.5416603088379,
      "z": -11.963253021240234
    }, {
      "x": 387.58888244628906,
      "y": 312.2716999053955,
      "z": -4.680258631706238
    }, {
      "x": 360.6635284423828,
      "y": 264.31986808776855,
      "z": -35.94811677932739
    }, {
      "x": 361.04564666748047,
      "y": 256.8225860595703,
      "z": -37.278664112091064
    }, {
      "x": 408.3855438232422,
      "y": 213.52088928222656,
      "z": 15.756480693817139,
      "name": "leftEyebrow"
    }, {
      "x": 373.2946014404297,
      "y": 245.38101196289062,
      "z": -1.9316278398036957
    }, {
      "x": 376.83860778808594,
      "y": 264.3721103668213,
      "z": -18.510947227478027
    }, {
      "x": 376.9546127319336,
      "y": 261.0010528564453,
      "z": -15.989909172058105
    }, {
      "x": 406.1498260498047,
      "y": 263.5030174255371,
      "z": 7.072908878326416
    }, {
      "x": 360.07205963134766,
      "y": 248.3631706237793,
      "z": -32.16656446456909
    }, {
      "x": 393.11119079589844,
      "y": 205.10473251342773,
      "z": 3.7786373496055603,
      "name": "leftEyebrow"
    }, {
      "x": 402.12791442871094,
      "y": 207.89000988006592,
      "z": 9.383859634399414,
      "name": "leftEyebrow"
    }, {
      "x": 410.8693313598633,
      "y": 191.6182279586792,
      "z": 41.27030849456787,
      "name": "faceOval"
    }, {
      "x": 364.9509811401367,
      "y": 210.40483474731445,
      "z": -3.758212625980377
    }, {
      "x": 375.94444274902344,
      "y": 221.1331844329834,
      "z": 8.368442058563232
    }, {
      "x": 392.1904754638672,
      "y": 305.0360298156738,
      "z": -1.752179116010666
    }, {
      "x": 419.50225830078125,
      "y": 307.25592613220215,
      "z": 58.96425247192383,
      "name": "faceOval"
    }, {
      "x": 372.0027160644531,
      "y": 268.7212657928467,
      "z": -16.631840467453003
    }, {
      "x": 366.1614227294922,
      "y": 271.6237449645996,
      "z": -18.219159841537476
    }, {
      "x": 385.00938415527344,
      "y": 305.3863334655762,
      "z": -2.567722797393799
    }, {
      "x": 381.99771881103516,
      "y": 304.9723720550537,
      "z": -4.575215280056
    }, {
      "x": 405.078125,
      "y": 203.21216583251953,
      "z": 13.713973760604858,
      "name": "leftEyebrow"
    }, {
      "x": 377.13207244873047,
      "y": 268.4710121154785,
      "z": -15.266278982162476
    }, {
      "x": 380.9713363647461,
      "y": 205.36980628967285,
      "z": -0.7250899076461792,
      "name": "leftEyebrow"
    }, {
      "x": 381.7788314819336,
      "y": 198.9268398284912,
      "z": -1.184653863310814,
      "name": "leftEyebrow"
    }, {
      "x": 385.5204772949219,
      "y": 172.1484375,
      "z": 16.04826807975769,
      "name": "faceOval"
    }, {
      "x": 407.94189453125,
      "y": 196.76236152648926,
      "z": 25.723915100097656
    }, {
      "x": 383.03890228271484,
      "y": 184.5157527923584,
      "z": 7.393874526023865
    }, {
      "x": 411.61781311035156,
      "y": 210.79241752624512,
      "z": 22.315845489501953,
      "name": "leftEyebrow"
    }, {
      "x": 414.30870056152344,
      "y": 208.4643030166626,
      "z": 37.021894454956055
    }, {
      "x": 364.28722381591797,
      "y": 298.35777282714844,
      "z": -21.86065673828125
    }, {
      "x": 371.3682556152344,
      "y": 299.78848457336426,
      "z": -17.834001779556274
    }, {
      "x": 376.88201904296875,
      "y": 301.6696071624756,
      "z": -13.153743743896484
    }, {
      "x": 370.2193832397461,
      "y": 270.49095153808594,
      "z": -15.569736957550049
    }, {
      "x": 383.5081100463867,
      "y": 305.2726364135742,
      "z": -3.673594295978546
    }, {
      "x": 380.73760986328125,
      "y": 305.96869468688965,
      "z": -8.660228252410889
    }, {
      "x": 381.2334442138672,
      "y": 304.63574409484863,
      "z": -4.820316135883331,
      "name": "lips"
    }, {
      "x": 368.1698989868164,
      "y": 264.8884963989258,
      "z": -25.653886795043945
    }, {
      "x": 373.5087203979492,
      "y": 303.4233856201172,
      "z": -10.95950722694397,
      "name": "lips"
    }, {
      "x": 368.4544372558594,
      "y": 303.29601287841797,
      "z": -14.169161319732666,
      "name": "lips"
    }, {
      "x": 362.76554107666016,
      "y": 303.5735607147217,
      "z": -16.911956071853638,
      "name": "lips"
    }, {
      "x": 366.60980224609375,
      "y": 324.8870658874512,
      "z": -15.616422891616821
    }, {
      "x": 365.7067108154297,
      "y": 315.95678329467773,
      "z": -20.903596878051758,
      "name": "lips"
    }, {
      "x": 365.0083923339844,
      "y": 311.2232208251953,
      "z": -21.066999435424805
    }, {
      "x": 364.1508102416992,
      "y": 307.0583438873291,
      "z": -18.907777070999146
    }, {
      "x": 363.37512969970703,
      "y": 304.5721435546875,
      "z": -17.42550015449524,
      "name": "lips"
    }, {
      "x": 374.580078125,
      "y": 304.3059539794922,
      "z": -11.40302300453186,
      "name": "lips"
    }, {
      "x": 375.55362701416016,
      "y": 305.0998020172119,
      "z": -12.861957550048828
    }, {
      "x": 377.2437286376953,
      "y": 307.1674346923828,
      "z": -14.215847253799438
    }, {
      "x": 378.68587493896484,
      "y": 309.9015712738037,
      "z": -13.223772048950195,
      "name": "lips"
    }, {
      "x": 383.8992691040039,
      "y": 290.29629707336426,
      "z": -9.97326910495758
    }, {
      "x": 423.3871841430664,
      "y": 271.91688537597656,
      "z": 74.37058925628662,
      "name": "faceOval"
    }, {
      "x": 377.68043518066406,
      "y": 304.62209701538086,
      "z": -7.603961229324341,
      "name": "lips"
    }, {
      "x": 379.00428771972656,
      "y": 304.9314594268799,
      "z": -8.57852816581726
    }, {
      "x": 364.00279998779297,
      "y": 275.2813911437988,
      "z": -19.25792098045349
    }, {
      "x": 374.68231201171875,
      "y": 273.82555961608887,
      "z": -11.28047227859497
    }, {
      "x": 365.0354766845703,
      "y": 273.4548568725586,
      "z": -18.791062831878662
    }, {
      "x": 380.61901092529297,
      "y": 249.8848056793213,
      "z": 0.15501167625188828
    }, {
      "x": 391.14158630371094,
      "y": 254.7934627532959,
      "z": 2.0906515419483185
    }, {
      "x": 378.1761169433594,
      "y": 264.9612236022949,
      "z": -12.605184316635132
    }, {
      "x": 400.9540557861328,
      "y": 179.99592304229736,
      "z": 27.82477855682373,
      "name": "faceOval"
    }, {
      "x": 398.0038833618164,
      "y": 188.50656509399414,
      "z": 16.094952821731567
    }, {
      "x": 394.8717498779297,
      "y": 199.0359592437744,
      "z": 6.226727366447449,
      "name": "leftEyebrow"
    }, {
      "x": 382.10926055908203,
      "y": 316.83926582336426,
      "z": -8.946179747581482
    }, {
      "x": 366.51588439941406,
      "y": 200.32583713531494,
      "z": -5.24632453918457,
      "name": "leftEyebrow"
    }, {
      "x": 367.4893569946289,
      "y": 183.87210845947266,
      "z": 1.9039081037044525
    }, {
      "x": 368.6243438720703,
      "y": 168.8127565383911,
      "z": 8.736093044281006,
      "name": "faceOval"
    }, {
      "x": 398.96175384521484,
      "y": 234.9675178527832,
      "z": 13.713973760604858
    }, {
      "x": 412.9645538330078,
      "y": 242.23042488098145,
      "z": 23.272905349731445
    }, {
      "x": 372.05257415771484,
      "y": 231.41919136047363,
      "z": 9.226294755935669
    }, {
      "x": 406.0722351074219,
      "y": 223.58965873718262,
      "z": 18.370890617370605
    }, {
      "x": 368.27442169189453,
      "y": 240.2039337158203,
      "z": -4.166713654994965
    }, {
      "x": 372.3575210571289,
      "y": 260.66442489624023,
      "z": -24.976940155029297
    }, {
      "x": 419.2244338989258,
      "y": 247.9079246520996,
      "z": 30.299127101898193
    }, {
      "x": 409.43885803222656,
      "y": 246.60913467407227,
      "z": 16.398411989212036
    }, {
      "x": 401.69139862060547,
      "y": 248.76328468322754,
      "z": 9.395531415939331
    }, {
      "x": 389.7608184814453,
      "y": 247.56915092468262,
      "z": 5.841569304466248
    }, {
      "x": 380.5461883544922,
      "y": 244.55984115600586,
      "z": 4.263003468513489
    }, {
      "x": 373.25817108154297,
      "y": 240.80214500427246,
      "z": 2.5356262922286987
    }, {
      "x": 358.77086639404297,
      "y": 229.35615062713623,
      "z": -10.387605428695679
    }, {
      "x": 419.5793914794922,
      "y": 262.8478717803955,
      "z": 26.5175724029541
    }, {
      "x": 410.8808898925781,
      "y": 222.51372814178467,
      "z": 22.199130058288574
    }, {
      "x": 358.45714569091797,
      "y": 268.91467094421387,
      "z": -33.17030906677246
    }, {
      "x": 373.4129333496094,
      "y": 251.6385841369629,
      "z": -5.771540403366089
    }, {
      "x": 422.5408172607422,
      "y": 239.23919677734375,
      "z": 74.04378890991211,
      "name": "faceOval"
    }, {
      "x": 367.8171920776367,
      "y": 236.58040523529053,
      "z": 1.820748895406723
    }, {
      "x": 378.51959228515625,
      "y": 266.2532329559326,
      "z": -5.74819803237915
    }, {
      "x": 403.3472442626953,
      "y": 229.05112266540527,
      "z": 19.689764976501465
    }, {
      "x": 372.34840393066406,
      "y": 256.6451168060303,
      "z": -21.872329711914062
    }, {
      "x": 422.54566192626953,
      "y": 289.1587829589844,
      "z": 68.67491245269775,
      "name": "faceOval"
    }, {
      "x": 371.9297409057617,
      "y": 228.90116214752197,
      "z": 11.432201862335205,
      "name": "leftEye"
    }, {
      "x": 366.21360778808594,
      "y": 251.6158962249756,
      "z": -28.19826364517212
    }, {
      "x": 409.1571807861328,
      "y": 321.3156223297119,
      "z": 20.2266526222229
    }, {
      "x": 408.52943420410156,
      "y": 331.44238471984863,
      "z": 31.09278917312622,
      "name": "faceOval"
    }, {
      "x": 424.2788314819336,
      "y": 267.1992301940918,
      "z": 50.467424392700195
    }, {
      "x": 415.60352325439453,
      "y": 311.6528606414795,
      "z": 30.579242706298828
    }, {
      "x": 418.12793731689453,
      "y": 221.59927368164062,
      "z": 46.26569747924805
    }, {
      "x": 385.68286895751953,
      "y": 346.0184955596924,
      "z": -5.70151150226593
    }, {
      "x": 357.82936096191406,
      "y": 271.3758373260498,
      "z": -24.836881160736084
    }, {
      "x": 379.588623046875,
      "y": 257.5071716308594,
      "z": -3.755294680595398
    }, {
      "x": 417.4592590332031,
      "y": 234.71948146820068,
      "z": 34.5475435256958
    }, {
      "x": 393.4684371948242,
      "y": 231.58967971801758,
      "z": 11.408859491348267,
      "name": "leftEye"
    }, {
      "x": 387.8864288330078,
      "y": 232.14245796203613,
      "z": 9.51808214187622,
      "name": "leftEye"
    }, {
      "x": 382.4981689453125,
      "y": 307.5654888153076,
      "z": -7.522260546684265,
      "name": "lips"
    }, {
      "x": 419.00169372558594,
      "y": 277.8332805633545,
      "z": 26.424202919006348
    }, {
      "x": 373.62953186035156,
      "y": 357.6375102996826,
      "z": -5.75986921787262,
      "name": "faceOval"
    }, {
      "x": 392.8708267211914,
      "y": 347.72446632385254,
      "z": 10.154176950454712,
      "name": "faceOval"
    }, {
      "x": 400.3953552246094,
      "y": 341.0005187988281,
      "z": 19.39797878265381,
      "name": "faceOval"
    }, {
      "x": 382.25440979003906,
      "y": 231.66935920715332,
      "z": 8.998700976371765,
      "name": "leftEye"
    }, {
      "x": 377.14550018310547,
      "y": 230.4228687286377,
      "z": 9.804032444953918,
      "name": "leftEye"
    }, {
      "x": 373.8358688354492,
      "y": 229.64950561523438,
      "z": 11.292144060134888,
      "name": "leftEye"
    }, {
      "x": 414.5794677734375,
      "y": 221.67891025543213,
      "z": 29.412097930908203
    }, {
      "x": 377.00672149658203,
      "y": 225.66201210021973,
      "z": 9.360517263412476,
      "name": "leftEye"
    }, {
      "x": 382.29530334472656,
      "y": 224.8431158065796,
      "z": 8.32175612449646,
      "name": "leftEye"
    }, {
      "x": 387.5133514404297,
      "y": 224.49507236480713,
      "z": 8.917000889778137,
      "name": "leftEye"
    }, {
      "x": 393.15906524658203,
      "y": 225.24795055389404,
      "z": 10.737749338150024,
      "name": "leftEye"
    }, {
      "x": 397.05554962158203,
      "y": 226.55359268188477,
      "z": 13.002015352249146,
      "name": "leftEye"
    }, {
      "x": 420.5299377441406,
      "y": 221.014666557312,
      "z": 65.40690422058105,
      "name": "faceOval"
    }, {
      "x": 397.06920623779297,
      "y": 230.6661558151245,
      "z": 13.807345628738403,
      "name": "leftEye"
    }, {
      "x": 377.94647216796875,
      "y": 285.1647090911865,
      "z": -13.305472135543823
    }, {
      "x": 372.1118927001953,
      "y": 267.1267318725586,
      "z": -18.83774757385254
    }, {
      "x": 364.9968719482422,
      "y": 282.24411964416504,
      "z": -19.818150997161865
    }, {
      "x": 401.973876953125,
      "y": 331.20131492614746,
      "z": 11.566424369812012
    }, {
      "x": 394.3083190917969,
      "y": 338.86693954467773,
      "z": 3.142542541027069
    }, {
      "x": 373.9820861816406,
      "y": 351.4504623413086,
      "z": -13.50388765335083
    }, {
      "x": 414.3888854980469,
      "y": 321.24735832214355,
      "z": 45.51872253417969,
      "name": "faceOval"
    }, {
      "x": 373.44234466552734,
      "y": 227.33163356781006,
      "z": 10.626870393753052,
      "name": "leftEye"
    }, {
      "x": 364.0731430053711,
      "y": 240.31539916992188,
      "z": -13.807345628738403
    }, {
      "x": 384.2658233642578,
      "y": 353.3793067932129,
      "z": 0.7385850697755814,
      "name": "faceOval"
    }, {
      "x": 423.20526123046875,
      "y": 283.5176181793213,
      "z": 47.152724266052246
    }, {
      "x": 369.42798614501953,
      "y": 304.0898895263672,
      "z": -14.647691249847412,
      "name": "lips"
    }, {
      "x": 370.63812255859375,
      "y": 305.90051651000977,
      "z": -16.211668252944946
    }, {
      "x": 371.91192626953125,
      "y": 309.0167713165283,
      "z": -17.84567356109619
    }, {
      "x": 373.0583953857422,
      "y": 313.3545398712158,
      "z": -17.378815412521362,
      "name": "lips"
    }, {
      "x": 375.39905548095703,
      "y": 321.09289169311523,
      "z": -13.118728399276733
    }, {
      "x": 379.2567825317383,
      "y": 304.3582534790039,
      "z": -7.924926280975342
    }, {
      "x": 381.18797302246094,
      "y": 303.7031364440918,
      "z": -7.843226194381714
    }, {
      "x": 383.0918502807617,
      "y": 302.4884605407715,
      "z": -7.6506465673446655,
      "name": "lips"
    }, {
      "x": 389.09461975097656,
      "y": 297.1475315093994,
      "z": -5.5497825145721436
    }, {
      "x": 411.6408920288086,
      "y": 280.24898529052734,
      "z": 12.02161192893982
    }, {
      "x": 363.3110809326172,
      "y": 234.27620887756348,
      "z": -6.775286793708801
    }, {
      "x": 366.0474395751953,
      "y": 223.29872131347656,
      "z": 6.827808618545532
    }, {
      "x": 370.34427642822266,
      "y": 225.1457118988037,
      "z": 9.558931589126587
    }, {
      "x": 377.5371551513672,
      "y": 303.60079765319824,
      "z": -7.358860373497009,
      "name": "lips"
    }, {
      "x": 412.9557800292969,
      "y": 299.53579902648926,
      "z": 19.39797878265381
    }, {
      "x": 360.0810241699219,
      "y": 221.72012329101562,
      "z": -2.153385728597641
    }, {
      "x": 379.82784271240234,
      "y": 329.47723388671875,
      "z": -10.48097848892212
    }, {
      "x": 359.08477783203125,
      "y": 235.7911491394043,
      "z": -18.079102039337158
    }, {
      "x": 369.6688461303711,
      "y": 251.5407943725586,
      "z": -14.962821006774902
    }, {
      "x": 369.5555114746094,
      "y": 333.5307312011719,
      "z": -15.67478060722351
    }, {
      "x": 394.0193176269531,
      "y": 315.6973171234131,
      "z": -0.9920747578144073
    }, {
      "x": 383.78997802734375,
      "y": 272.7268695831299,
      "z": -4.689012169837952
    }, {
      "x": 387.67765045166016,
      "y": 323.6722755432129,
      "z": -5.640236139297485
    }, {
      "x": 397.8769302368164,
      "y": 272.1331214904785,
      "z": -0.9395531564950943
    }, {
      "x": 389.87476348876953,
      "y": 280.5630111694336,
      "z": -4.29218202829361
    }, {
      "x": 403.83888244628906,
      "y": 285.1167869567871,
      "z": 3.0229100584983826
    }, {
      "x": 372.5467300415039,
      "y": 343.1070327758789,
      "z": -16.153310537338257
    }, {
      "x": 374.1112518310547,
      "y": 256.3721466064453,
      "z": -10.574349164962769
    }, {
      "x": 399.73785400390625,
      "y": 321.77515983581543,
      "z": 4.849494695663452
    }, {
      "x": 392.03365325927734,
      "y": 330.56447982788086,
      "z": -1.3407598435878754
    }, {
      "x": 398.59134674072266,
      "y": 305.93902587890625,
      "z": 1.517290621995926
    }, {
      "x": 417.95997619628906,
      "y": 290.9716987609863,
      "z": 26.89105987548828
    }, {
      "x": 406.04541778564453,
      "y": 307.35154151916504,
      "z": 8.666064143180847
    }, {
      "x": 420.75328826904297,
      "y": 298.40752601623535,
      "z": 41.78385257720947
    }, {
      "x": 395.4522705078125,
      "y": 291.4153575897217,
      "z": -2.1752697229385376
    }, {
      "x": 368.6452102661133,
      "y": 245.8882999420166,
      "z": -9.453888535499573
    }, {
      "x": 370.34900665283203,
      "y": 263.56690406799316,
      "z": -26.75100326538086
    }, {
      "x": 374.98477935791016,
      "y": 266.6126346588135,
      "z": -19.77146625518799
    }, {
      "x": 366.99840545654297,
      "y": 258.12140464782715,
      "z": -31.372904777526855
    }, {
      "x": 371.00616455078125,
      "y": 217.63479709625244,
      "z": 5.60522198677063
    }, {
      "x": 381.30577087402344,
      "y": 214.14087295532227,
      "z": 4.983716309070587
    }, {
      "x": 390.1496124267578,
      "y": 213.38221549987793,
      "z": 5.593550801277161
    }, {
      "x": 397.7696990966797,
      "y": 214.3659782409668,
      "z": 8.57852816581726
    }, {
      "x": 403.1652069091797,
      "y": 217.65509605407715,
      "z": 13.013685941696167
    }, {
      "x": 407.3551940917969,
      "y": 230.72525024414062,
      "z": 22.444231510162354
    }, {
      "x": 424.0876770019531,
      "y": 251.7839241027832,
      "z": 51.16771221160889
    }, {
      "x": 403.50196838378906,
      "y": 239.88757610321045,
      "z": 15.803166627883911
    }, {
      "x": 397.31719970703125,
      "y": 241.49806022644043,
      "z": 11.233787536621094
    }, {
      "x": 388.99425506591797,
      "y": 241.4366912841797,
      "z": 7.948269248008728
    }, {
      "x": 380.7804489135742,
      "y": 239.78078842163086,
      "z": 6.600214838981628
    }, {
      "x": 374.01336669921875,
      "y": 237.11946487426758,
      "z": 6.349278092384338
    }, {
      "x": 369.39125061035156,
      "y": 234.35351371765137,
      "z": 5.987462401390076
    }, {
      "x": 422.9730987548828,
      "y": 255.76455116271973,
      "z": 76.61150932312012,
      "name": "faceOval"
    }, {
      "x": 374.73915100097656,
      "y": 269.24214363098145,
      "z": -16.608498096466064
    }, {
      "x": 364.61681365966797,
      "y": 245.71088790893555,
      "z": -20.02823829650879
    }, {
      "x": 365.3834533691406,
      "y": 263.34174156188965,
      "z": -32.32996463775635
    }, {
      "x": 361.58252716064453,
      "y": 267.8273677825928,
      "z": -30.345816612243652
    }, {
      "x": 365.37208557128906,
      "y": 265.0249671936035,
      "z": -29.178667068481445
    }, {
      "x": 372.72605895996094,
      "y": 272.05135345458984,
      "z": -14.834434986114502
    }, {
      "x": 360.48614501953125,
      "y": 268.34827423095703,
      "z": -32.189905643463135
    }, {
      "x": 359.9516296386719,
      "y": 270.8049201965332,
      "z": -24.650139808654785
    }, {
      "x": 369.5049285888672,
      "y": 229.01945114135742,
      "z": 10.107489824295044
    }, {
      "x": 365.5447769165039,
      "y": 230.24096488952637,
      "z": 5.593550801277161
    }, {
      "x": 363.50669860839844,
      "y": 230.6208372116089,
      "z": 0.43622106313705444
    }, {
      "x": 399.3529510498047,
      "y": 227.65677452087402,
      "z": 15.35965085029602,
      "name": "leftEye"
    }, {
      "x": 402.5693130493164,
      "y": 224.60190296173096,
      "z": 15.931552648544312
    }],
    "box": {
      "xMin": 277.8318977355957,
      "yMin": 168.7741756439209,
      "xMax": 424.2788314819336,
      "yMax": 359.8348903656006,
      "width": 146.4469337463379,
      "height": 191.0607147216797
    }
  },
  // Tasks-vision: https://developers.google.com/mediapipe/solutions/vision/face_landmarker/web_js
  // prettier-ignore
  SAMPLE_FACELANDMARKER_RESULT: {
    "faceLandmarks": [[{
      "x": 0.5760777592658997,
      "y": 0.8639070391654968,
      "z": -0.030997956171631813
    }, {
      "x": 0.572094738483429,
      "y": 0.7886289358139038,
      "z": -0.07189624011516571
    }, {
      "x": 0.5723551511764526,
      "y": 0.8075382709503174,
      "z": -0.03578168898820877
    }, {
      "x": 0.5548420548439026,
      "y": 0.7188365459442139,
      "z": -0.057787876576185226
    }, {
      "x": 0.5706077814102173,
      "y": 0.7674974799156189,
      "z": -0.07740399986505508
    }, {
      "x": 0.5681378245353699,
      "y": 0.7387768030166626,
      "z": -0.07356284558773041
    }, {
      "x": 0.5621535181999207,
      "y": 0.6681165099143982,
      "z": -0.04189874976873398
    }, {
      "x": 0.46613582968711853,
      "y": 0.6679812073707581,
      "z": 0.011289681307971478
    }, {
      "x": 0.5579932928085327,
      "y": 0.6174106597900391,
      "z": -0.03502821549773216
    }, {
      "x": 0.5563451647758484,
      "y": 0.5905600190162659,
      "z": -0.03928658738732338
    }, {
      "x": 0.5487832427024841,
      "y": 0.4900572597980499,
      "z": -0.029898937791585922
    }, {
      "x": 0.5765544176101685,
      "y": 0.8692144751548767,
      "z": -0.02831427752971649
    }, {
      "x": 0.5771114230155945,
      "y": 0.873644232749939,
      "z": -0.02345779910683632
    }, {
      "x": 0.5771905779838562,
      "y": 0.877016007900238,
      "z": -0.016658689826726913
    }, {
      "x": 0.5778058767318726,
      "y": 0.8770116567611694,
      "z": -0.014505492523312569
    }, {
      "x": 0.5783766508102417,
      "y": 0.8835000991821289,
      "z": -0.015996402129530907
    }, {
      "x": 0.5792440176010132,
      "y": 0.8913810849189758,
      "z": -0.01924579218029976
    }, {
      "x": 0.5796768069267273,
      "y": 0.8996334671974182,
      "z": -0.018261712044477463
    }, {
      "x": 0.5817288160324097,
      "y": 0.9255813956260681,
      "z": -0.007126849144697189
    }, {
      "x": 0.5726592540740967,
      "y": 0.7992473244667053,
      "z": -0.0643521398305893
    }, {
      "x": 0.5579419136047363,
      "y": 0.7996989488601685,
      "z": -0.04566684365272522
    }, {
      "x": 0.4216199815273285,
      "y": 0.5958762764930725,
      "z": 0.06776496022939682
    }, {
      "x": 0.5052269697189331,
      "y": 0.6796539425849915,
      "z": -0.0010737782577052712
    }, {
      "x": 0.49243026971817017,
      "y": 0.6838865876197815,
      "z": -5227324436418712e-19
    }, {
      "x": 0.4796970784664154,
      "y": 0.6856290102005005,
      "z": 0.002684245817363262
    }, {
      "x": 0.4618356227874756,
      "y": 0.6764569878578186,
      "z": 0.013439622707664967
    }, {
      "x": 0.5160380601882935,
      "y": 0.6737282276153564,
      "z": -17607348127057776e-21
    }, {
      "x": 0.48070961236953735,
      "y": 0.6255870461463928,
      "z": -0.008339674212038517
    }, {
      "x": 0.49719780683517456,
      "y": 0.6256808042526245,
      "z": -0.008027955889701843
    }, {
      "x": 0.46674346923828125,
      "y": 0.6317623853683472,
      "z": -0.004460199736058712
    }, {
      "x": 0.4582492709159851,
      "y": 0.641118049621582,
      "z": 0.0011905613355338573
    }, {
      "x": 0.45408669114112854,
      "y": 0.6911458969116211,
      "z": 0.020514748990535736
    }, {
      "x": 0.535312294960022,
      "y": 0.9619986414909363,
      "z": 0.012499462813138962
    }, {
      "x": 0.4608460068702698,
      "y": 0.6628725528717041,
      "z": 0.01517564244568348
    }, {
      "x": 0.4206731915473938,
      "y": 0.6828458309173584,
      "z": 0.07848648726940155
    }, {
      "x": 0.4390624463558197,
      "y": 0.6796106696128845,
      "z": 0.03283142298460007
    }, {
      "x": 0.5029968619346619,
      "y": 0.7701570391654968,
      "z": -0.009734481573104858
    }, {
      "x": 0.5595027208328247,
      "y": 0.8607323169708252,
      "z": -0.030043255537748337
    }, {
      "x": 0.5621269941329956,
      "y": 0.8738374710083008,
      "z": -0.021709579974412918
    }, {
      "x": 0.5451499819755554,
      "y": 0.865527331829071,
      "z": -0.022014077752828598
    }, {
      "x": 0.5351184010505676,
      "y": 0.8705098032951355,
      "z": -0.011602800339460373
    }, {
      "x": 0.5495014190673828,
      "y": 0.8744956254959106,
      "z": -0.016490943729877472
    }, {
      "x": 0.5395170450210571,
      "y": 0.8759440779685974,
      "z": -0.007333362940698862
    }, {
      "x": 0.5183624029159546,
      "y": 0.8959754705429077,
      "z": 0.010520773939788342
    }, {
      "x": 0.5604349374771118,
      "y": 0.7895449995994568,
      "z": -0.07082037627696991
    }, {
      "x": 0.557381272315979,
      "y": 0.7687489986419678,
      "z": -0.07590588927268982
    }, {
      "x": 0.4432901442050934,
      "y": 0.6308897733688354,
      "z": 0.0027153254486620426
    }, {
      "x": 0.5258325338363647,
      "y": 0.7151225805282593,
      "z": -0.014676518738269806
    }, {
      "x": 0.5271827578544617,
      "y": 0.7833116054534912,
      "z": -0.037643320858478546
    }, {
      "x": 0.5257382988929749,
      "y": 0.7717816233634949,
      "z": -0.03401920944452286
    }, {
      "x": 0.46516409516334534,
      "y": 0.7705106735229492,
      "z": 0.0065747760236263275
    }, {
      "x": 0.5558893084526062,
      "y": 0.7420997619628906,
      "z": -0.0694495290517807
    }, {
      "x": 0.4720408320426941,
      "y": 0.6066038608551025,
      "z": -0.021204356104135513
    }, {
      "x": 0.45432573556900024,
      "y": 0.6158540844917297,
      "z": -0.011054684408009052
    }, {
      "x": 0.4305151402950287,
      "y": 0.5608053803443909,
      "z": 0.0396830290555954
    }, {
      "x": 0.5310865640640259,
      "y": 0.6157484650611877,
      "z": -0.03081176057457924
    }, {
      "x": 0.5114666223526001,
      "y": 0.6329749226570129,
      "z": -0.00335998204536736
    }, {
      "x": 0.506435751914978,
      "y": 0.8786543607711792,
      "z": 0.012980876490473747
    }, {
      "x": 0.4480472207069397,
      "y": 0.8640613555908203,
      "z": 0.12569651007652283
    }, {
      "x": 0.5372058153152466,
      "y": 0.7942581176757812,
      "z": -0.03168361634016037
    }, {
      "x": 0.5488379597663879,
      "y": 0.8001630306243896,
      "z": -0.03280917927622795
    }, {
      "x": 0.5213388204574585,
      "y": 0.8794381618499756,
      "z": 0.011892606504261494
    }, {
      "x": 0.5242055654525757,
      "y": 0.8789222240447998,
      "z": 0.008370225317776203
    }, {
      "x": 0.4477175176143646,
      "y": 0.6039950251579285,
      "z": -0.0050799972377717495
    }, {
      "x": 0.526964008808136,
      "y": 0.7916748523712158,
      "z": -0.02968614175915718
    }, {
      "x": 0.4971255660057068,
      "y": 0.6050706505775452,
      "z": -0.028175678104162216
    }, {
      "x": 0.4938119053840637,
      "y": 0.5882453918457031,
      "z": -0.03210941329598427
    }, {
      "x": 0.4757143557071686,
      "y": 0.5094879865646362,
      "z": -0.01300730835646391
    }, {
      "x": 0.43947282433509827,
      "y": 0.5816648006439209,
      "z": 0.01415177434682846
    }, {
      "x": 0.485664039850235,
      "y": 0.5477864146232605,
      "z": -0.023685332387685776
    }, {
      "x": 0.43635931611061096,
      "y": 0.6226438283920288,
      "z": 0.013606148771941662
    }, {
      "x": 0.42910251021385193,
      "y": 0.6102726459503174,
      "z": 0.03926564007997513
    }, {
      "x": 0.5605402588844299,
      "y": 0.8680099248886108,
      "z": -0.027318159118294716
    }, {
      "x": 0.5474816560745239,
      "y": 0.8702861070632935,
      "z": -0.019686367362737656
    }, {
      "x": 0.5373021364212036,
      "y": 0.8728838562965393,
      "z": -0.010484928265213966
    }, {
      "x": 0.540735125541687,
      "y": 0.7979167103767395,
      "z": -0.029073253273963928
    }, {
      "x": 0.5228585004806519,
      "y": 0.87913578748703,
      "z": 0.009915109723806381
    }, {
      "x": 0.530497670173645,
      "y": 0.8815253973007202,
      "z": 0.0020524784922599792
    }, {
      "x": 0.5259912610054016,
      "y": 0.8790552616119385,
      "z": 0.007895970717072487
    }, {
      "x": 0.5433906316757202,
      "y": 0.7882310748100281,
      "z": -0.05121905356645584
    }, {
      "x": 0.541388213634491,
      "y": 0.8777219653129578,
      "z": -0.00466804439201951
    }, {
      "x": 0.5515822172164917,
      "y": 0.8767023086547852,
      "z": -0.010475946590304375
    }, {
      "x": 0.5637003779411316,
      "y": 0.877059817314148,
      "z": -0.015273625031113625
    }, {
      "x": 0.5640299320220947,
      "y": 0.9263423085212708,
      "z": -0.00658724969252944
    }, {
      "x": 0.5642300248146057,
      "y": 0.8993074893951416,
      "z": -0.017653480172157288
    }, {
      "x": 0.5637336373329163,
      "y": 0.8910360932350159,
      "z": -0.01852807030081749
    }, {
      "x": 0.5637134313583374,
      "y": 0.8837276697158813,
      "z": -0.01482592523097992
    }, {
      "x": 0.564205527305603,
      "y": 0.8768964409828186,
      "z": -0.01331155002117157
    }, {
      "x": 0.5419867634773254,
      "y": 0.8778373599052429,
      "z": -0.0037720394320786
    }, {
      "x": 0.5404468774795532,
      "y": 0.880696177482605,
      "z": -0.005610354244709015
    }, {
      "x": 0.5392338633537292,
      "y": 0.8845721483230591,
      "z": -0.007352025713771582
    }, {
      "x": 0.538469672203064,
      "y": 0.8891173601150513,
      "z": -0.005154991988092661
    }, {
      "x": 0.5189250111579895,
      "y": 0.8452741503715515,
      "z": -0.009755070321261883
    }, {
      "x": 0.4258975088596344,
      "y": 0.7662280797958374,
      "z": 0.1387351155281067
    }, {
      "x": 0.5725725293159485,
      "y": 0.8041572570800781,
      "z": -0.04583907872438431
    }, {
      "x": 0.5342061519622803,
      "y": 0.8785833120346069,
      "z": 0.002659974154084921
    }, {
      "x": 0.5324031114578247,
      "y": 0.8804071545600891,
      "z": 0.0017832003068178892
    }, {
      "x": 0.5538818836212158,
      "y": 0.8078407645225525,
      "z": -0.03254539892077446
    }, {
      "x": 0.5325431823730469,
      "y": 0.8026832938194275,
      "z": -0.019140373915433884
    }, {
      "x": 0.5514076948165894,
      "y": 0.8043903112411499,
      "z": -0.03313535451889038
    }, {
      "x": 0.5131856203079224,
      "y": 0.7284771800041199,
      "z": -0.009399853646755219
    }, {
      "x": 0.49331504106521606,
      "y": 0.7443980574607849,
      "z": -0.005225230939686298
    }, {
      "x": 0.5239617824554443,
      "y": 0.7807451486587524,
      "z": -0.025881027802824974
    }, {
      "x": 0.4473606050014496,
      "y": 0.5315827131271362,
      "z": 0.011164786294102669
    }, {
      "x": 0.45718759298324585,
      "y": 0.5604941248893738,
      "z": -0.005943301599472761
    }, {
      "x": 0.4670005738735199,
      "y": 0.5909327268600464,
      "z": -0.019681761041283607
    }, {
      "x": 0.5311570167541504,
      "y": 0.9076261520385742,
      "z": 0.00389476353302598
    }, {
      "x": 0.5249923467636108,
      "y": 0.5893563628196716,
      "z": -0.037981919944286346
    }, {
      "x": 0.5166932344436646,
      "y": 0.5429551005363464,
      "z": -0.03319704160094261
    }, {
      "x": 0.5085030198097229,
      "y": 0.49676206707954407,
      "z": -0.02691275253891945
    }, {
      "x": 0.4687720239162445,
      "y": 0.6834565997123718,
      "z": 0.008113506250083447
    }, {
      "x": 0.4426414966583252,
      "y": 0.7069531679153442,
      "z": 0.028577271848917007
    }, {
      "x": 0.5230373740196228,
      "y": 0.6675713658332825,
      "z": 0.001773772411979735
    }, {
      "x": 0.4481240212917328,
      "y": 0.6527872085571289,
      "z": 0.012414850294589996
    }, {
      "x": 0.5339856743812561,
      "y": 0.7012367844581604,
      "z": -0.020220188423991203
    }, {
      "x": 0.5347223281860352,
      "y": 0.7761190533638,
      "z": -0.05141595005989075
    }, {
      "x": 0.4315067231655121,
      "y": 0.7211957573890686,
      "z": 0.04381405934691429
    }, {
      "x": 0.45203351974487305,
      "y": 0.7206180095672607,
      "z": 0.017288070172071457
    }, {
      "x": 0.46892452239990234,
      "y": 0.7265436053276062,
      "z": 0.005602988880127668
    }, {
      "x": 0.49314674735069275,
      "y": 0.7202282547950745,
      "z": -6408205372281373e-19
    }, {
      "x": 0.5104925632476807,
      "y": 0.7091827392578125,
      "z": -0.00362918758764863
    }, {
      "x": 0.5232142210006714,
      "y": 0.698553740978241,
      "z": -0.00787867046892643
    }, {
      "x": 0.5497883558273315,
      "y": 0.6743605136871338,
      "z": -0.036349106580019
    }, {
      "x": 0.43658503890037537,
      "y": 0.7627100348472595,
      "z": 0.042555369436740875
    }, {
      "x": 0.4397648870944977,
      "y": 0.6528646349906921,
      "z": 0.017956094816327095
    }, {
      "x": 0.5653332471847534,
      "y": 0.7992802858352661,
      "z": -0.06365057826042175
    }, {
      "x": 0.5285563468933105,
      "y": 0.736810564994812,
      "z": -0.018836988136172295
    }, {
      "x": 0.4180678725242615,
      "y": 0.6792560815811157,
      "z": 0.12284679710865021
    }, {
      "x": 0.5328429937362671,
      "y": 0.6865872144699097,
      "z": -0.010484723374247551
    }, {
      "x": 0.5230283141136169,
      "y": 0.7809416055679321,
      "z": -0.011922398582100868
    }, {
      "x": 0.4551771283149719,
      "y": 0.6650775074958801,
      "z": 0.01774493046104908
    }, {
      "x": 0.5337203741073608,
      "y": 0.7618928551673889,
      "z": -0.04697106033563614
    }, {
      "x": 0.43463975191116333,
      "y": 0.8133478164672852,
      "z": 0.1354849934577942
    }, {
      "x": 0.5225707292556763,
      "y": 0.6605283617973328,
      "z": 0.004980515688657761
    }, {
      "x": 0.5441933870315552,
      "y": 0.7497199773788452,
      "z": -0.06091512367129326
    }, {
      "x": 0.4774007797241211,
      "y": 0.9159183502197266,
      "z": 0.059622734785079956
    }, {
      "x": 0.48068761825561523,
      "y": 0.9364941716194153,
      "z": 0.08404944837093353
    }, {
      "x": 0.4268292486667633,
      "y": 0.7657528519630432,
      "z": 0.09051097184419632
    }, {
      "x": 0.46051913499832153,
      "y": 0.8880485892295837,
      "z": 0.0738474428653717
    }, {
      "x": 0.4243420660495758,
      "y": 0.6434382200241089,
      "z": 0.06230505183339119
    }, {
      "x": 0.5342157483100891,
      "y": 0.9835634231567383,
      "z": 0.021662971004843712
    }, {
      "x": 0.5668109655380249,
      "y": 0.8042187094688416,
      "z": -0.044937074184417725
    }, {
      "x": 0.5176341533660889,
      "y": 0.7530587315559387,
      "z": -0.012967454269528389
    }, {
      "x": 0.430206298828125,
      "y": 0.6835605502128601,
      "z": 0.04612284153699875
    }, {
      "x": 0.4794231951236725,
      "y": 0.6732114553451538,
      "z": 0.003970044665038586
    }, {
      "x": 0.49073347449302673,
      "y": 0.6722435355186462,
      "z": 8692514384165406e-19
    }, {
      "x": 0.5294116139411926,
      "y": 0.884677529335022,
      "z": 0.004413890186697245
    }, {
      "x": 0.4430122375488281,
      "y": 0.80235356092453,
      "z": 0.04987282305955887
    }, {
      "x": 0.5603825449943542,
      "y": 1.0092442035675049,
      "z": 0.026417359709739685
    }, {
      "x": 0.5186598300933838,
      "y": 0.9828659892082214,
      "z": 0.0513598807156086
    }, {
      "x": 0.5010536909103394,
      "y": 0.9640932679176331,
      "z": 0.06591596454381943
    }, {
      "x": 0.5524769425392151,
      "y": 0.539441704750061,
      "z": -0.035816047340631485
    }, {
      "x": 0.5879997611045837,
      "y": 1.0091472864151,
      "z": 0.02285068854689598
    }, {
      "x": 0.5016193985939026,
      "y": 0.6684437990188599,
      "z": 28415941051207483e-20
    }, {
      "x": 0.511952817440033,
      "y": 0.6642197370529175,
      "z": 0.0021144719794392586
    }, {
      "x": 0.5194343328475952,
      "y": 0.6623469591140747,
      "z": 0.004674181342124939
    }, {
      "x": 0.4321230351924896,
      "y": 0.6496355533599854,
      "z": 0.03124697133898735
    }, {
      "x": 0.508686363697052,
      "y": 0.6479565501213074,
      "z": -44765998609364033e-20
    }, {
      "x": 0.4963986277580261,
      "y": 0.6431032419204712,
      "z": -0.0032507688738405704
    }, {
      "x": 0.4845542013645172,
      "y": 0.6430778503417969,
      "z": -0.002903624437749386
    }, {
      "x": 0.4733612537384033,
      "y": 0.647506833076477,
      "z": 23347247042693198e-20
    }, {
      "x": 0.4668654501438141,
      "y": 0.653346598148346,
      "z": 0.004762572236359119
    }, {
      "x": 0.41815051436424255,
      "y": 0.633708119392395,
      "z": 0.09809435904026031
    }, {
      "x": 0.47159942984580994,
      "y": 0.6711485385894775,
      "z": 0.007849935442209244
    }, {
      "x": 0.5734396576881409,
      "y": 0.8256140351295471,
      "z": -0.03155219927430153
    }, {
      "x": 0.5306524038314819,
      "y": 0.8337990641593933,
      "z": -0.018351426348090172
    }, {
      "x": 0.5371729135513306,
      "y": 0.7910830974578857,
      "z": -0.037286680191755295
    }, {
      "x": 0.5549534559249878,
      "y": 0.8275275826454163,
      "z": -0.030664825811982155
    }, {
      "x": 0.5597432255744934,
      "y": 0.6418541669845581,
      "z": -0.03318847343325615
    }, {
      "x": 0.4958484172821045,
      "y": 0.9429569244384766,
      "z": 0.048340678215026855
    }, {
      "x": 0.5140507817268372,
      "y": 0.9634028077125549,
      "z": 0.03589847311377525
    }, {
      "x": 0.5587693452835083,
      "y": 0.9951097369194031,
      "z": 0.00908728688955307
    }, {
      "x": 0.46411189436912537,
      "y": 0.9051855206489563,
      "z": 0.10601935535669327
    }, {
      "x": 0.5181609392166138,
      "y": 0.6554316878318787,
      "z": 0.002546071307733655
    }, {
      "x": 0.5436590909957886,
      "y": 0.7085841298103333,
      "z": -0.03844436630606651
    }, {
      "x": 0.5872187614440918,
      "y": 0.9960382580757141,
      "z": 0.0063423276878893375
    }, {
      "x": 0.5379653573036194,
      "y": 0.9989125728607178,
      "z": 0.03636329993605614
    }, {
      "x": 0.4350326955318451,
      "y": 0.8088565468788147,
      "z": 0.09147704392671585
    }, {
      "x": 0.5523084998130798,
      "y": 0.8773422837257385,
      "z": -0.009068487212061882
    }, {
      "x": 0.5510149598121643,
      "y": 0.8816931843757629,
      "z": -0.011043853126466274
    }, {
      "x": 0.5503793954849243,
      "y": 0.88776695728302,
      "z": -0.01348799467086792
    }, {
      "x": 0.5501549243927002,
      "y": 0.8954370617866516,
      "z": -0.012142189778387547
    }, {
      "x": 0.546072781085968,
      "y": 0.9192524552345276,
      "z": -0.003157563041895628
    }, {
      "x": 0.5314661860466003,
      "y": 0.8771666884422302,
      "z": 5075141089037061e-19
    }, {
      "x": 0.5293324589729309,
      "y": 0.8762547969818115,
      "z": 39177737198770046e-20
    }, {
      "x": 0.5275698900222778,
      "y": 0.8750609755516052,
      "z": 47732755774632096e-21
    }, {
      "x": 0.5104271173477173,
      "y": 0.8607332110404968,
      "z": 0.0012934643309563398
    }, {
      "x": 0.45938700437545776,
      "y": 0.8134918212890625,
      "z": 0.023569690063595772
    }, {
      "x": 0.5418947339057922,
      "y": 0.6864100694656372,
      "z": -0.027333909645676613
    }, {
      "x": 0.531914234161377,
      "y": 0.6456130743026733,
      "z": -0.005434140563011169
    }, {
      "x": 0.523697018623352,
      "y": 0.647885262966156,
      "z": -2466466394253075e-19
    }, {
      "x": 0.5338191390037537,
      "y": 0.8783687353134155,
      "z": 0.002268768846988678
    }, {
      "x": 0.46226605772972107,
      "y": 0.8610277771949768,
      "z": 0.04718952998518944
    }, {
      "x": 0.5434442758560181,
      "y": 0.6456181406974792,
      "z": -0.02327350154519081
    }, {
      "x": 0.5399754643440247,
      "y": 0.940219521522522,
      "z": 0.005075343884527683
    }, {
      "x": 0.5661457777023315,
      "y": 0.71457839012146,
      "z": -0.06242101639509201
    }, {
      "x": 0.5523148775100708,
      "y": 0.6974870562553406,
      "z": -0.04863070324063301
    }, {
      "x": 0.5639959573745728,
      "y": 0.6923378109931946,
      "z": -0.05180761218070984
    }, {
      "x": 0.5367592573165894,
      "y": 0.7423217296600342,
      "z": -0.03623027727007866
    }, {
      "x": 0.5853689908981323,
      "y": 0.9752064943313599,
      "z": -0.002361974213272333
    }, {
      "x": 0.5835235118865967,
      "y": 0.9493685960769653,
      "z": -0.003941743168979883
    }, {
      "x": 0.5615018606185913,
      "y": 0.949194610118866,
      "z": -0.0015953965485095978
    }, {
      "x": 0.5068561434745789,
      "y": 0.9048219323158264,
      "z": 0.01862684078514576
    }, {
      "x": 0.5134067535400391,
      "y": 0.7971825003623962,
      "z": -0.008485661819577217
    }, {
      "x": 0.5223897099494934,
      "y": 0.925589919090271,
      "z": 0.01249657291918993
    }, {
      "x": 0.48500555753707886,
      "y": 0.7959478497505188,
      "z": -0.0032065745908766985
    }, {
      "x": 0.5037734508514404,
      "y": 0.8184596300125122,
      "z": -0.004932103678584099
    }, {
      "x": 0.4766361117362976,
      "y": 0.828806459903717,
      "z": 0.01027688942849636
    }, {
      "x": 0.5589827299118042,
      "y": 0.974656343460083,
      "z": 9666886180639267e-19
    }, {
      "x": 0.5294582843780518,
      "y": 0.7541216611862183,
      "z": -0.025603046640753746
    }, {
      "x": 0.4973002076148987,
      "y": 0.9208990931510925,
      "z": 0.031931452453136444
    }, {
      "x": 0.5163551568984985,
      "y": 0.9432790875434875,
      "z": 0.024321340024471283
    }, {
      "x": 0.49399662017822266,
      "y": 0.8814862370491028,
      "z": 0.018687399104237556
    }, {
      "x": 0.44948166608810425,
      "y": 0.836137592792511,
      "z": 0.05702034756541252
    }, {
      "x": 0.47898444533348083,
      "y": 0.8836610913276672,
      "z": 0.03150695189833641
    }, {
      "x": 0.4454479217529297,
      "y": 0.8499438166618347,
      "z": 0.08868525922298431
    }, {
      "x": 0.49572959542274475,
      "y": 0.8452823758125305,
      "z": 0.0036111653316766024
    }, {
      "x": 0.5362502336502075,
      "y": 0.7222585678100586,
      "z": -0.027912352234125137
    }, {
      "x": 0.5393770337104797,
      "y": 0.7850722074508667,
      "z": -0.05415399745106697
    }, {
      "x": 0.531399667263031,
      "y": 0.7898418307304382,
      "z": -0.03883346915245056
    }, {
      "x": 0.5451627373695374,
      "y": 0.7717036604881287,
      "z": -0.06480253487825394
    }, {
      "x": 0.5206395983695984,
      "y": 0.6287745833396912,
      "z": -0.010521138086915016
    }, {
      "x": 0.4974782466888428,
      "y": 0.6191938519477844,
      "z": -0.014098240062594414
    }, {
      "x": 0.4774145185947418,
      "y": 0.6193130612373352,
      "z": -0.013643337413668633
    }, {
      "x": 0.4616098403930664,
      "y": 0.6259890198707581,
      "z": -0.008448202162981033
    }, {
      "x": 0.4516478478908539,
      "y": 0.6368461847305298,
      "z": 9050309745362028e-20
    }, {
      "x": 0.4485096037387848,
      "y": 0.6719120740890503,
      "z": 0.022984720766544342
    }, {
      "x": 0.42177659273147583,
      "y": 0.7240667343139648,
      "z": 0.08511673659086227
    }, {
      "x": 0.4616215229034424,
      "y": 0.6988231539726257,
      "z": 0.014238474890589714
    }, {
      "x": 0.4755798876285553,
      "y": 0.7034608721733093,
      "z": 0.00625590980052948
    }, {
      "x": 0.4924992024898529,
      "y": 0.7005885243415833,
      "z": 9391739731654525e-19
    }, {
      "x": 0.5082254409790039,
      "y": 0.693384051322937,
      "z": -9464038303121924e-19
    }, {
      "x": 0.5203112959861755,
      "y": 0.6849707961082458,
      "z": -0.0022114769089967012
    }, {
      "x": 0.52867591381073,
      "y": 0.6779075860977173,
      "z": -0.002962538506835699
    }, {
      "x": 0.4213953912258148,
      "y": 0.7219811677932739,
      "z": 0.1350894570350647
    }, {
      "x": 0.5320829749107361,
      "y": 0.794858992099762,
      "z": -0.03181503340601921
    }, {
      "x": 0.5452795028686523,
      "y": 0.7286570072174072,
      "z": -0.04771539941430092
    }, {
      "x": 0.5496407747268677,
      "y": 0.7866933345794678,
      "z": -0.06452003121376038
    }, {
      "x": 0.557040274143219,
      "y": 0.7962084412574768,
      "z": -0.05837344378232956
    }, {
      "x": 0.549176812171936,
      "y": 0.7895247936248779,
      "z": -0.057761140167713165
    }, {
      "x": 0.5362890362739563,
      "y": 0.8005836606025696,
      "z": -0.026903774589300156
    }, {
      "x": 0.560200035572052,
      "y": 0.7983731031417847,
      "z": -0.06172555685043335
    }, {
      "x": 0.5616944432258606,
      "y": 0.8022753596305847,
      "z": -0.045200999826192856
    }, {
      "x": 0.5273328423500061,
      "y": 0.6611284017562866,
      "z": 0.0029021520167589188
    }, {
      "x": 0.534850537776947,
      "y": 0.6660012006759644,
      "z": -0.005215510260313749
    }, {
      "x": 0.5394860506057739,
      "y": 0.6701375246047974,
      "z": -0.014931917190551758
    }, {
      "x": 0.4634307324886322,
      "y": 0.658291757106781,
      "z": 0.009295716881752014
    }, {
      "x": 0.4538393020629883,
      "y": 0.6519932150840759,
      "z": 0.00930330716073513
    }, {
      "x": 0.5776031613349915,
      "y": 0.7159298658370972,
      "z": -0.057365912944078445
    }, {
      "x": 0.6504855155944824,
      "y": 0.6461779475212097,
      "z": 0.014184834435582161
    }, {
      "x": 0.5860154032707214,
      "y": 0.7962266206741333,
      "z": -0.04522843658924103
    }, {
      "x": 0.6842049360275269,
      "y": 0.5631637573242188,
      "z": 0.07207967340946198
    }, {
      "x": 0.6152560710906982,
      "y": 0.6674962639808655,
      "z": 7529259892180562e-19
    }, {
      "x": 0.6280948519706726,
      "y": 0.6684326529502869,
      "z": 0.0016892586136236787
    }, {
      "x": 0.6408625245094299,
      "y": 0.6663892269134521,
      "z": 0.005331226624548435
    }, {
      "x": 0.6557814478874207,
      "y": 0.6534678936004639,
      "z": 0.01646413467824459
    }, {
      "x": 0.6035663485527039,
      "y": 0.6639701724052429,
      "z": 0.0013799630105495453
    }, {
      "x": 0.6329053044319153,
      "y": 0.608010470867157,
      "z": -0.006195899099111557
    }, {
      "x": 0.6167260408401489,
      "y": 0.6117533445358276,
      "z": -0.006319951266050339
    }, {
      "x": 0.6471013426780701,
      "y": 0.6112449765205383,
      "z": -0.0017843559617176652
    }, {
      "x": 0.6560901999473572,
      "y": 0.6185776591300964,
      "z": 0.004047257360070944
    }, {
      "x": 0.6666946411132812,
      "y": 0.6651176810264587,
      "z": 0.023647578433156013
    }, {
      "x": 0.6311345100402832,
      "y": 0.9495396018028259,
      "z": 0.014004078693687916
    }, {
      "x": 0.6544655561447144,
      "y": 0.6397901773452759,
      "z": 0.01809609681367874
    }, {
      "x": 0.6965808868408203,
      "y": 0.6482675075531006,
      "z": 0.08304904401302338
    }, {
      "x": 0.679817259311676,
      "y": 0.650188148021698,
      "z": 0.03632688894867897
    }, {
      "x": 0.6336516737937927,
      "y": 0.7541458010673523,
      "z": -0.007742783520370722
    }, {
      "x": 0.5921701192855835,
      "y": 0.8567668199539185,
      "z": -0.029399123042821884
    }, {
      "x": 0.591663658618927,
      "y": 0.870215654373169,
      "z": -0.02103729173541069
    }, {
      "x": 0.6068367958068848,
      "y": 0.8584195375442505,
      "z": -0.020668085664510727
    }, {
      "x": 0.6176617741584778,
      "y": 0.860965371131897,
      "z": -0.009790095500648022
    }, {
      "x": 0.6040634512901306,
      "y": 0.8686612844467163,
      "z": -0.015289564616978168
    }, {
      "x": 0.6143736839294434,
      "y": 0.8671170473098755,
      "z": -0.005712216719985008
    }, {
      "x": 0.6373105049133301,
      "y": 0.8815656900405884,
      "z": 0.012672550976276398
    }, {
      "x": 0.5832505822181702,
      "y": 0.7866312861442566,
      "z": -0.07051534950733185
    }, {
      "x": 0.5836675763130188,
      "y": 0.7658692598342896,
      "z": -0.07566110789775848
    }, {
      "x": 0.6709531545639038,
      "y": 0.604898989200592,
      "z": 0.005951565690338612
    }, {
      "x": 0.6029891967773438,
      "y": 0.705652117729187,
      "z": -0.013388276100158691
    }, {
      "x": 0.6131622195243835,
      "y": 0.7728396058082581,
      "z": -0.036248479038476944
    }, {
      "x": 0.6123163104057312,
      "y": 0.7612020373344421,
      "z": -0.03264721855521202
    }, {
      "x": 0.6696187853813171,
      "y": 0.744706928730011,
      "z": 0.009673702530562878
    }, {
      "x": 0.5803102254867554,
      "y": 0.7385968565940857,
      "z": -0.0689152330160141
    }, {
      "x": 0.6404349207878113,
      "y": 0.5877999663352966,
      "z": -0.01929756999015808
    }, {
      "x": 0.6588467955589294,
      "y": 0.5929454565048218,
      "z": -0.008487257175147533
    }, {
      "x": 0.6720337867736816,
      "y": 0.530631422996521,
      "z": 0.043437421321868896
    }, {
      "x": 0.584305465221405,
      "y": 0.6099005341529846,
      "z": -0.030301367864012718
    }, {
      "x": 0.6034283638000488,
      "y": 0.6217452883720398,
      "z": -0.001970183802768588
    }, {
      "x": 0.6460927724838257,
      "y": 0.8608663082122803,
      "z": 0.015541625209152699
    }, {
      "x": 0.6957815289497375,
      "y": 0.8326103091239929,
      "z": 0.13015234470367432
    }, {
      "x": 0.6043362617492676,
      "y": 0.7861682772636414,
      "z": -0.030476901680231094
    }, {
      "x": 0.594293475151062,
      "y": 0.7942103147506714,
      "z": -0.032218821346759796
    }, {
      "x": 0.6324057579040527,
      "y": 0.8665139675140381,
      "z": 0.014255806803703308
    }, {
      "x": 0.6296147704124451,
      "y": 0.8667733669281006,
      "z": 0.010388285852968693
    }, {
      "x": 0.663644552230835,
      "y": 0.5798642635345459,
      "z": -0.0022301070857793093
    }, {
      "x": 0.6140630841255188,
      "y": 0.7809288501739502,
      "z": -0.02835679054260254
    }, {
      "x": 0.615908145904541,
      "y": 0.5921698212623596,
      "z": -0.026804860681295395
    }, {
      "x": 0.617181122303009,
      "y": 0.5748661756515503,
      "z": -0.03060605563223362
    }, {
      "x": 0.6222207546234131,
      "y": 0.49137672781944275,
      "z": -0.011151673272252083
    }, {
      "x": 0.6669357419013977,
      "y": 0.5541607141494751,
      "z": 0.017466170713305473
    }, {
      "x": 0.6182981729507446,
      "y": 0.5320425629615784,
      "z": -0.021793590858578682
    }, {
      "x": 0.6760554313659668,
      "y": 0.595052182674408,
      "z": 0.017115700989961624
    }, {
      "x": 0.6801463961601257,
      "y": 0.5800720453262329,
      "z": 0.043127160519361496
    }, {
      "x": 0.5922210812568665,
      "y": 0.8644017577171326,
      "z": -0.02662893570959568
    }, {
      "x": 0.6054555177688599,
      "y": 0.8637874722480774,
      "z": -0.018363753333687782
    }, {
      "x": 0.6161889433860779,
      "y": 0.8641164898872375,
      "z": -0.008808949030935764
    }, {
      "x": 0.6017249822616577,
      "y": 0.7901403307914734,
      "z": -0.028126630932092667
    }, {
      "x": 0.631446123123169,
      "y": 0.8664817810058594,
      "z": 0.012112865224480629
    }, {
      "x": 0.6249198913574219,
      "y": 0.8716511130332947,
      "z": 0.003882825840264559
    }, {
      "x": 0.6281915903091431,
      "y": 0.867301881313324,
      "z": 0.009891441091895103
    }, {
      "x": 0.5986843109130859,
      "y": 0.7813931703567505,
      "z": -0.050227612257003784
    }, {
      "x": 0.6126407384872437,
      "y": 0.869275689125061,
      "z": -0.0031255714129656553
    }, {
      "x": 0.6027271151542664,
      "y": 0.8711842894554138,
      "z": -0.009324162267148495
    }, {
      "x": 0.59088134765625,
      "y": 0.8742044568061829,
      "z": -0.014608660712838173
    }, {
      "x": 0.5984604358673096,
      "y": 0.9216185212135315,
      "z": -0.005981989670544863
    }, {
      "x": 0.5950398445129395,
      "y": 0.8964707255363464,
      "z": -0.01703473925590515
    }, {
      "x": 0.5941568613052368,
      "y": 0.8882410526275635,
      "z": -0.017784785479307175
    }, {
      "x": 0.5928806662559509,
      "y": 0.8803883194923401,
      "z": -0.014153128489851952
    }, {
      "x": 0.5909661054611206,
      "y": 0.8748103976249695,
      "z": -0.012609979137778282
    }, {
      "x": 0.6128016710281372,
      "y": 0.8702545762062073,
      "z": -0.0022550546564161777
    }, {
      "x": 0.6150846481323242,
      "y": 0.8726804256439209,
      "z": -0.00414019962772727
    }, {
      "x": 0.6173093914985657,
      "y": 0.8770190477371216,
      "z": -0.005970994010567665
    }, {
      "x": 0.619335412979126,
      "y": 0.8814800977706909,
      "z": -0.0036864024586975574
    }, {
      "x": 0.6292637586593628,
      "y": 0.8314558267593384,
      "z": -0.007714875973761082
    }, {
      "x": 0.702275276184082,
      "y": 0.7320667505264282,
      "z": 0.1433621346950531
    }, {
      "x": 0.6204835176467896,
      "y": 0.8689177632331848,
      "z": 0.0044869170524179935
    }, {
      "x": 0.6223508715629578,
      "y": 0.8704851269721985,
      "z": 0.00352082890458405
    }, {
      "x": 0.590448260307312,
      "y": 0.8029727935791016,
      "z": -0.03200828656554222
    }, {
      "x": 0.6097423434257507,
      "y": 0.7933741211891174,
      "z": -0.018042555078864098
    }, {
      "x": 0.59229576587677,
      "y": 0.7993767261505127,
      "z": -0.032564569264650345
    }, {
      "x": 0.6171364188194275,
      "y": 0.7153720259666443,
      "z": -0.007672437466681004
    }, {
      "x": 0.6389747858047485,
      "y": 0.726390540599823,
      "z": -0.002999067772179842
    }, {
      "x": 0.6151940226554871,
      "y": 0.769412100315094,
      "z": -0.024427521973848343
    }, {
      "x": 0.6526776552200317,
      "y": 0.505868136882782,
      "z": 0.01412637997418642
    }, {
      "x": 0.6475822329521179,
      "y": 0.5375454425811768,
      "z": -0.0033899128902703524
    }, {
      "x": 0.6433356404304504,
      "y": 0.5714520215988159,
      "z": -0.017428796738386154
    }, {
      "x": 0.626949667930603,
      "y": 0.8962116837501526,
      "z": 0.005602736957371235
    }, {
      "x": 0.5868416428565979,
      "y": 0.5829002261161804,
      "z": -0.03727729618549347
    }, {
      "x": 0.5877229571342468,
      "y": 0.5345035791397095,
      "z": -0.032396964728832245
    }, {
      "x": 0.5887066125869751,
      "y": 0.48655083775520325,
      "z": -0.025856535881757736
    }, {
      "x": 0.6507197618484497,
      "y": 0.6612282991409302,
      "z": 0.011114613153040409
    }, {
      "x": 0.6803066730499268,
      "y": 0.677992045879364,
      "z": 0.032125361263751984
    }, {
      "x": 0.5963194370269775,
      "y": 0.6598632335662842,
      "z": 0.002976928371936083
    }, {
      "x": 0.667536199092865,
      "y": 0.6274255514144897,
      "z": 0.015618261881172657
    }, {
      "x": 0.5930740833282471,
      "y": 0.6940041780471802,
      "z": -0.019217798486351967
    }, {
      "x": 0.6053346395492554,
      "y": 0.7676517963409424,
      "z": -0.050308309495449066
    }, {
      "x": 0.6934473514556885,
      "y": 0.6884298920631409,
      "z": 0.04794462397694588
    }, {
      "x": 0.6738007664680481,
      "y": 0.6934011578559875,
      "z": 0.020697161555290222
    }, {
      "x": 0.6588084697723389,
      "y": 0.7033141851425171,
      "z": 0.008462334051728249
    }, {
      "x": 0.6346072554588318,
      "y": 0.7029502391815186,
      "z": 0.001542167621664703
    }, {
      "x": 0.6157816648483276,
      "y": 0.6966525912284851,
      "z": -0.002009218093007803
    }, {
      "x": 0.6015574336051941,
      "y": 0.688928484916687,
      "z": -0.006588225718587637
    }, {
      "x": 0.5746836066246033,
      "y": 0.6711069345474243,
      "z": -0.03597589209675789
    }, {
      "x": 0.6947521567344666,
      "y": 0.7309479117393494,
      "z": 0.046707939356565475
    }, {
      "x": 0.6759101152420044,
      "y": 0.6249120831489563,
      "z": 0.021654341369867325
    }, {
      "x": 0.5794773101806641,
      "y": 0.7971615195274353,
      "z": -0.06339326500892639
    }, {
      "x": 0.6041849851608276,
      "y": 0.727514922618866,
      "z": -0.017512541264295578
    }, {
      "x": 0.6968844532966614,
      "y": 0.6440950036048889,
      "z": 0.12727996706962585
    }, {
      "x": 0.5910853147506714,
      "y": 0.679325520992279,
      "z": -0.009497715160250664
    }, {
      "x": 0.6157375574111938,
      "y": 0.7695677280426025,
      "z": -0.010624290443956852
    }, {
      "x": 0.6606494784355164,
      "y": 0.6410489678382874,
      "z": 0.0208158977329731
    }, {
      "x": 0.6040687561035156,
      "y": 0.7531470656394958,
      "z": -0.045887019485235214
    }, {
      "x": 0.7012156248092651,
      "y": 0.780247151851654,
      "z": 0.14028730988502502
    }, {
      "x": 0.595149576663971,
      "y": 0.6527782678604126,
      "z": 0.006308757700026035
    }, {
      "x": 0.5925500392913818,
      "y": 0.7436665892601013,
      "z": -0.060151755809783936
    }, {
      "x": 0.6780198812484741,
      "y": 0.8905693888664246,
      "z": 0.0626060739159584
    }, {
      "x": 0.676746666431427,
      "y": 0.9113880395889282,
      "z": 0.08726003766059875
    }, {
      "x": 0.7030686140060425,
      "y": 0.7312687635421753,
      "z": 0.09529774636030197
    }, {
      "x": 0.688987135887146,
      "y": 0.8588417172431946,
      "z": 0.07752864807844162
    }, {
      "x": 0.6883691549301147,
      "y": 0.6109960675239563,
      "z": 0.06669612973928452
    }, {
      "x": 0.6358906030654907,
      "y": 0.9702065587043762,
      "z": 0.023120900616049767
    }, {
      "x": 0.5781539678573608,
      "y": 0.8023634552955627,
      "z": -0.044763918966054916
    }, {
      "x": 0.6170316934585571,
      "y": 0.7408350706100464,
      "z": -0.011375460773706436
    }, {
      "x": 0.688542366027832,
      "y": 0.6516284346580505,
      "z": 0.050206027925014496
    }, {
      "x": 0.6385149359703064,
      "y": 0.6540714502334595,
      "z": 0.006462941411882639
    }, {
      "x": 0.6279382109642029,
      "y": 0.6563615798950195,
      "z": 0.003062846139073372
    }, {
      "x": 0.6268895268440247,
      "y": 0.8736732006072998,
      "z": 0.00627936702221632
    }, {
      "x": 0.6944946050643921,
      "y": 0.7709181308746338,
      "z": 0.053824134171009064
    }, {
      "x": 0.614617109298706,
      "y": 1.0022112131118774,
      "z": 0.02719894051551819
    }, {
      "x": 0.6493719220161438,
      "y": 0.9665167927742004,
      "z": 0.053563784807920456
    }, {
      "x": 0.6624587178230286,
      "y": 0.943530797958374,
      "z": 0.068605437874794
    }, {
      "x": 0.6162528991699219,
      "y": 0.6558693051338196,
      "z": 0.002187855076044798
    }, {
      "x": 0.6058168411254883,
      "y": 0.654328465461731,
      "z": 0.0036193584091961384
    }, {
      "x": 0.5987918972969055,
      "y": 0.6536934971809387,
      "z": 0.006134530063718557
    }, {
      "x": 0.6831037402153015,
      "y": 0.6195642948150635,
      "z": 0.03511790186166763
    }, {
      "x": 0.6062582731246948,
      "y": 0.6356398463249207,
      "z": 0.001280312892049551
    }, {
      "x": 0.6174948811531067,
      "y": 0.62776118516922,
      "z": -0.0013642468256875873
    }, {
      "x": 0.6297246217727661,
      "y": 0.6253792643547058,
      "z": -7034156005829573e-19
    }, {
      "x": 0.6407091617584229,
      "y": 0.627578616142273,
      "z": 0.0028144705574959517
    }, {
      "x": 0.6479622721672058,
      "y": 0.6322650909423828,
      "z": 0.00750273372977972
    }, {
      "x": 0.6915091276168823,
      "y": 0.5990704298019409,
      "z": 0.10270945727825165
    }, {
      "x": 0.6457163095474243,
      "y": 0.6504453420639038,
      "z": 0.010696077719330788
    }, {
      "x": 0.6164222955703735,
      "y": 0.8231936097145081,
      "z": -0.016772059723734856
    }, {
      "x": 0.6042401194572449,
      "y": 0.7830976843833923,
      "z": -0.03630910441279411
    }, {
      "x": 0.5922216773033142,
      "y": 0.8228387236595154,
      "z": -0.029992375522851944
    }, {
      "x": 0.6646111011505127,
      "y": 0.92097008228302,
      "z": 0.050967294722795486
    }, {
      "x": 0.651232898235321,
      "y": 0.9460107088088989,
      "z": 0.038000158965587616
    }, {
      "x": 0.6140977144241333,
      "y": 0.9882472157478333,
      "z": 0.009882091544568539
    }, {
      "x": 0.6870781183242798,
      "y": 0.8768675327301025,
      "z": 0.10980932414531708
    }, {
      "x": 0.5986856818199158,
      "y": 0.6456438899040222,
      "z": 0.003999010659754276
    }, {
      "x": 0.585981547832489,
      "y": 0.7034481763839722,
      "z": -0.0377722829580307
    }, {
      "x": 0.6342031359672546,
      "y": 0.9867448806762695,
      "z": 0.03786521404981613
    }, {
      "x": 0.7013950943946838,
      "y": 0.776049017906189,
      "z": 0.09598205983638763
    }, {
      "x": 0.6030206680297852,
      "y": 0.8719133138656616,
      "z": -0.007931148633360863
    }, {
      "x": 0.6050592064857483,
      "y": 0.8767156004905701,
      "z": -0.009791925549507141
    }, {
      "x": 0.6073468923568726,
      "y": 0.8831382393836975,
      "z": -0.012361008673906326
    }, {
      "x": 0.6087977290153503,
      "y": 0.890143632888794,
      "z": -0.01098148338496685
    }, {
      "x": 0.6147705316543579,
      "y": 0.9110084772109985,
      "z": -0.0018823575228452682
    }, {
      "x": 0.622577965259552,
      "y": 0.8670604825019836,
      "z": 0.002609190298244357
    }, {
      "x": 0.6241236329078674,
      "y": 0.8651344180107117,
      "z": 0.0025534380692988634
    }, {
      "x": 0.6257084608078003,
      "y": 0.8638408184051514,
      "z": 0.0023300074972212315
    }, {
      "x": 0.639931321144104,
      "y": 0.8449671268463135,
      "z": 0.0038123116828501225
    }, {
      "x": 0.6810906529426575,
      "y": 0.7856625318527222,
      "z": 0.02717764675617218
    }, {
      "x": 0.583532452583313,
      "y": 0.6811994910240173,
      "z": -0.026588857173919678
    }, {
      "x": 0.5855660438537598,
      "y": 0.6393819451332092,
      "z": -0.004512844607234001
    }, {
      "x": 0.5932201743125916,
      "y": 0.6398029327392578,
      "z": 8020466193556786e-19
    }, {
      "x": 0.6200879812240601,
      "y": 0.8683351874351501,
      "z": 0.00417016725987196
    }, {
      "x": 0.6842559576034546,
      "y": 0.8330534100532532,
      "z": 0.050836317241191864
    }, {
      "x": 0.5754412412643433,
      "y": 0.6418221592903137,
      "z": -0.022838059812784195
    }, {
      "x": 0.6232790350914001,
      "y": 0.9295297265052795,
      "z": 0.006339520215988159
    }, {
      "x": 0.5764067769050598,
      "y": 0.694546639919281,
      "z": -0.04825803264975548
    }, {
      "x": 0.59778892993927,
      "y": 0.7343927621841431,
      "z": -0.035004377365112305
    }, {
      "x": 0.6042810678482056,
      "y": 0.9441440105438232,
      "z": -0.0010970570147037506
    }, {
      "x": 0.6496372222900391,
      "y": 0.8869078159332275,
      "z": 0.021036235615611076
    }, {
      "x": 0.6274012327194214,
      "y": 0.7830310463905334,
      "z": -0.006658440921455622
    }, {
      "x": 0.637792706489563,
      "y": 0.9104999899864197,
      "z": 0.014290250837802887
    }, {
      "x": 0.6549934148788452,
      "y": 0.7748609185218811,
      "z": -6672973395325243e-19
    }, {
      "x": 0.6404005289077759,
      "y": 0.801220715045929,
      "z": -0.0026642554439604282
    }, {
      "x": 0.6671456694602966,
      "y": 0.8045546412467957,
      "z": 0.013180811889469624
    }, {
      "x": 0.6107483506202698,
      "y": 0.9680658578872681,
      "z": 0.001778992242179811
    }, {
      "x": 0.6060343980789185,
      "y": 0.744587242603302,
      "z": -0.024382334202528
    }, {
      "x": 0.6602751612663269,
      "y": 0.8998945355415344,
      "z": 0.0344940721988678
    }, {
      "x": 0.6463775038719177,
      "y": 0.9262562394142151,
      "z": 0.02617623284459114
    }, {
      "x": 0.6579852104187012,
      "y": 0.8602304458618164,
      "z": 0.021586716175079346
    }, {
      "x": 0.6926165223121643,
      "y": 0.8053340315818787,
      "z": 0.061075080186128616
    }, {
      "x": 0.6724731922149658,
      "y": 0.8594399690628052,
      "z": 0.03457934781908989
    }, {
      "x": 0.6975721716880798,
      "y": 0.8183245062828064,
      "z": 0.09300774335861206
    }, {
      "x": 0.6512877941131592,
      "y": 0.8258221745491028,
      "z": 0.006324059329926968
    }, {
      "x": 0.594887375831604,
      "y": 0.7148372530937195,
      "z": -0.026898479089140892
    }, {
      "x": 0.6017440557479858,
      "y": 0.7773507833480835,
      "z": -0.05312420800328255
    }, {
      "x": 0.6096571683883667,
      "y": 0.7806998491287231,
      "z": -0.037646256387233734
    }, {
      "x": 0.5952993035316467,
      "y": 0.7654367685317993,
      "z": -0.06398405134677887
    }, {
      "x": 0.5950021147727966,
      "y": 0.6201304793357849,
      "z": -0.009297547861933708
    }, {
      "x": 0.6165438890457153,
      "y": 0.6052900552749634,
      "z": -0.012455573305487633
    }, {
      "x": 0.6362661719322205,
      "y": 0.6015968918800354,
      "z": -0.011649220250546932
    }, {
      "x": 0.6522727608680725,
      "y": 0.6046400666236877,
      "z": -0.005903332494199276
    }, {
      "x": 0.6625409722328186,
      "y": 0.6128141283988953,
      "z": 0.0030042496509850025
    }, {
      "x": 0.6688099503517151,
      "y": 0.6457712054252625,
      "z": 0.026322703808546066
    }, {
      "x": 0.7013440728187561,
      "y": 0.6893666386604309,
      "z": 0.08984331786632538
    }, {
      "x": 0.6608623266220093,
      "y": 0.6749406456947327,
      "z": 0.0172116681933403
    }, {
      "x": 0.6482325196266174,
      "y": 0.6823726296424866,
      "z": 0.008881398476660252
    }, {
      "x": 0.6313265562057495,
      "y": 0.6842025518417358,
      "z": 0.0031308617908507586
    }, {
      "x": 0.6147016286849976,
      "y": 0.6809731721878052,
      "z": 7630771724507213e-19
    }, {
      "x": 0.6018834114074707,
      "y": 0.6755372285842896,
      "z": -8834321051836014e-19
    }, {
      "x": 0.5925027132034302,
      "y": 0.670681357383728,
      "z": -0.001968748401850462
    }, {
      "x": 0.700127363204956,
      "y": 0.6871103644371033,
      "z": 0.13980500400066376
    }, {
      "x": 0.6095665693283081,
      "y": 0.7853189706802368,
      "z": -0.03074747882783413
    }, {
      "x": 0.5880423784255981,
      "y": 0.7229287028312683,
      "z": -0.04691500961780548
    }, {
      "x": 0.5930182337760925,
      "y": 0.7811514139175415,
      "z": -0.06398335844278336
    }, {
      "x": 0.5867722034454346,
      "y": 0.7922660112380981,
      "z": -0.05794971063733101
    }, {
      "x": 0.5933279991149902,
      "y": 0.7842848896980286,
      "z": -0.05714067071676254
    }, {
      "x": 0.6063535809516907,
      "y": 0.7920218706130981,
      "z": -0.02590685710310936
    }, {
      "x": 0.5839452743530273,
      "y": 0.794978141784668,
      "z": -0.0615212507545948
    }, {
      "x": 0.5828126072883606,
      "y": 0.8000800013542175,
      "z": -0.0449722595512867
    }, {
      "x": 0.5909603834152222,
      "y": 0.6541213393211365,
      "z": 0.003991890233010054
    }, {
      "x": 0.5852181911468506,
      "y": 0.6602938771247864,
      "z": -0.004428438376635313
    }, {
      "x": 0.5825737714767456,
      "y": 0.6651063561439514,
      "z": -0.014345290139317513
    }, {
      "x": 0.6517343521118164,
      "y": 0.6362385153770447,
      "z": 0.012151890434324741
    }, {
      "x": 0.6615052819252014,
      "y": 0.6281577944755554,
      "z": 0.0123682152479887
    }, {
      "x": 0.4856873154640198,
      "y": 0.6568945646286011,
      "z": 720038078725338e-18
    }, {
      "x": 0.49988406896591187,
      "y": 0.6547410488128662,
      "z": 6949726957827806e-19
    }, {
      "x": 0.48438939452171326,
      "y": 0.6392973065376282,
      "z": 705525919329375e-18
    }, {
      "x": 0.47143134474754333,
      "y": 0.6589511632919312,
      "z": 6980331381782889e-19
    }, {
      "x": 0.48704618215560913,
      "y": 0.6752797961235046,
      "z": 6921177846379578e-19
    }, {
      "x": 0.6243702173233032,
      "y": 0.640461802482605,
      "z": -6592126737814397e-20
    }, {
      "x": 0.6390967965126038,
      "y": 0.6385173797607422,
      "z": -16105435497593135e-20
    }, {
      "x": 0.6230536699295044,
      "y": 0.6224825382232666,
      "z": -16136496560648084e-20
    }, {
      "x": 0.6095397472381592,
      "y": 0.641917884349823,
      "z": -1803556369850412e-19
    }, {
      "x": 0.6250996589660645,
      "y": 0.6586247682571411,
      "z": -1785515050869435e-19
    }]],
    "faceBlendshapes": [{
      "categories": [{
        "index": 0,
        "score": 5187174338061595e-21,
        "categoryName": "_neutral",
        "displayName": ""
      }, {
        "index": 1,
        "score": 0.24521504342556,
        "categoryName": "browDownLeft",
        "displayName": ""
      }, {
        "index": 2,
        "score": 0.1987743377685547,
        "categoryName": "browDownRight",
        "displayName": ""
      }, {
        "index": 3,
        "score": 0.013400448486208916,
        "categoryName": "browInnerUp",
        "displayName": ""
      }, {
        "index": 4,
        "score": 0.012361560948193073,
        "categoryName": "browOuterUpLeft",
        "displayName": ""
      }, {
        "index": 5,
        "score": 0.019305096939206123,
        "categoryName": "browOuterUpRight",
        "displayName": ""
      }, {
        "index": 6,
        "score": 28426356948330067e-21,
        "categoryName": "cheekPuff",
        "displayName": ""
      }, {
        "index": 7,
        "score": 34500112633395474e-23,
        "categoryName": "cheekSquintLeft",
        "displayName": ""
      }, {
        "index": 8,
        "score": 483789051486383e-21,
        "categoryName": "cheekSquintRight",
        "displayName": ""
      }, {
        "index": 9,
        "score": 0.07650448381900787,
        "categoryName": "eyeBlinkLeft",
        "displayName": ""
      }, {
        "index": 10,
        "score": 0.05070012807846069,
        "categoryName": "eyeBlinkRight",
        "displayName": ""
      }, {
        "index": 11,
        "score": 0.13978900015354156,
        "categoryName": "eyeLookDownLeft",
        "displayName": ""
      }, {
        "index": 12,
        "score": 0.14198613166809082,
        "categoryName": "eyeLookDownRight",
        "displayName": ""
      }, {
        "index": 13,
        "score": 0.2177766114473343,
        "categoryName": "eyeLookInLeft",
        "displayName": ""
      }, {
        "index": 14,
        "score": 0.014739357866346836,
        "categoryName": "eyeLookInRight",
        "displayName": ""
      }, {
        "index": 15,
        "score": 0.02361512929201126,
        "categoryName": "eyeLookOutLeft",
        "displayName": ""
      }, {
        "index": 16,
        "score": 0.19679604470729828,
        "categoryName": "eyeLookOutRight",
        "displayName": ""
      }, {
        "index": 17,
        "score": 0.04874616861343384,
        "categoryName": "eyeLookUpLeft",
        "displayName": ""
      }, {
        "index": 18,
        "score": 0.049392376095056534,
        "categoryName": "eyeLookUpRight",
        "displayName": ""
      }, {
        "index": 19,
        "score": 0.34944331645965576,
        "categoryName": "eyeSquintLeft",
        "displayName": ""
      }, {
        "index": 20,
        "score": 0.2939716875553131,
        "categoryName": "eyeSquintRight",
        "displayName": ""
      }, {
        "index": 21,
        "score": 0.005955042317509651,
        "categoryName": "eyeWideLeft",
        "displayName": ""
      }, {
        "index": 22,
        "score": 0.006776117719709873,
        "categoryName": "eyeWideRight",
        "displayName": ""
      }, {
        "index": 23,
        "score": 16942436559475027e-21,
        "categoryName": "jawForward",
        "displayName": ""
      }, {
        "index": 24,
        "score": 0.0045165494084358215,
        "categoryName": "jawLeft",
        "displayName": ""
      }, {
        "index": 25,
        "score": 0.07803940027952194,
        "categoryName": "jawOpen",
        "displayName": ""
      }, {
        "index": 26,
        "score": 2090057751047425e-20,
        "categoryName": "jawRight",
        "displayName": ""
      }, {
        "index": 27,
        "score": 0.06032035872340202,
        "categoryName": "mouthClose",
        "displayName": ""
      }, {
        "index": 28,
        "score": 0.00228882092051208,
        "categoryName": "mouthDimpleLeft",
        "displayName": ""
      }, {
        "index": 29,
        "score": 0.00781762320548296,
        "categoryName": "mouthDimpleRight",
        "displayName": ""
      }, {
        "index": 30,
        "score": 0.0017093931091949344,
        "categoryName": "mouthFrownLeft",
        "displayName": ""
      }, {
        "index": 31,
        "score": 0.0019319106359034777,
        "categoryName": "mouthFrownRight",
        "displayName": ""
      }, {
        "index": 32,
        "score": 8485237776767462e-20,
        "categoryName": "mouthFunnel",
        "displayName": ""
      }, {
        "index": 33,
        "score": 9051355300471187e-19,
        "categoryName": "mouthLeft",
        "displayName": ""
      }, {
        "index": 34,
        "score": 3630454302765429e-19,
        "categoryName": "mouthLowerDownLeft",
        "displayName": ""
      }, {
        "index": 35,
        "score": 17601238505449146e-20,
        "categoryName": "mouthLowerDownRight",
        "displayName": ""
      }, {
        "index": 36,
        "score": 0.12865161895751953,
        "categoryName": "mouthPressLeft",
        "displayName": ""
      }, {
        "index": 37,
        "score": 0.20137207210063934,
        "categoryName": "mouthPressRight",
        "displayName": ""
      }, {
        "index": 38,
        "score": 0.0022203284315764904,
        "categoryName": "mouthPucker",
        "displayName": ""
      }, {
        "index": 39,
        "score": 9096377179957926e-19,
        "categoryName": "mouthRight",
        "displayName": ""
      }, {
        "index": 40,
        "score": 0.34189721941947937,
        "categoryName": "mouthRollLower",
        "displayName": ""
      }, {
        "index": 41,
        "score": 0.11409689486026764,
        "categoryName": "mouthRollUpper",
        "displayName": ""
      }, {
        "index": 42,
        "score": 0.17172536253929138,
        "categoryName": "mouthShrugLower",
        "displayName": ""
      }, {
        "index": 43,
        "score": 0.004038424696773291,
        "categoryName": "mouthShrugUpper",
        "displayName": ""
      }, {
        "index": 44,
        "score": 23205230536404997e-20,
        "categoryName": "mouthSmileLeft",
        "displayName": ""
      }, {
        "index": 45,
        "score": 19313619122840464e-20,
        "categoryName": "mouthSmileRight",
        "displayName": ""
      }, {
        "index": 46,
        "score": 0.0018571305554360151,
        "categoryName": "mouthStretchLeft",
        "displayName": ""
      }, {
        "index": 47,
        "score": 0.0023813238367438316,
        "categoryName": "mouthStretchRight",
        "displayName": ""
      }, {
        "index": 48,
        "score": 24323100660694763e-21,
        "categoryName": "mouthUpperUpLeft",
        "displayName": ""
      }, {
        "index": 49,
        "score": 3161552012898028e-20,
        "categoryName": "mouthUpperUpRight",
        "displayName": ""
      }, {
        "index": 50,
        "score": 108198406678639e-21,
        "categoryName": "noseSneerLeft",
        "displayName": ""
      }, {
        "index": 51,
        "score": 12652527630052646e-22,
        "categoryName": "noseSneerRight",
        "displayName": ""
      }],
      "headIndex": -1,
      "headName": ""
    }],
    "facialTransformationMatrixes": [{
      "rows": 4,
      "columns": 4,
      "data": [0.9947517514228821, 0.10230544209480286, 0.0013679931871592999, 0, -0.10230997204780579, 0.9947447776794434, 0.003816320328041911, 0, -970348424743861e-18, -0.0039362297393381596, 0.9999914169311523, 0, 2.8888821601867676, -7.808934211730957, -30.52109146118164, 1]
    }]
  }
};

// node_modules/r3f-perf/node_modules/@react-three/drei/core/FaceLandmarker.js
var React47 = __toESM(require_react());
var import_react17 = __toESM(require_react());

// node_modules/@mediapipe/tasks-vision/vision_bundle.mjs
var commonjsGlobal = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};
var vision = {};
var fileset_resolver = {};
var supportsSimd;
Object.defineProperty(fileset_resolver, "__esModule", { value: true }), fileset_resolver.FilesetResolver = void 0;
var WASM_SIMD_CHECK = new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 5, 1, 96, 0, 1, 123, 3, 2, 1, 0, 10, 10, 1, 8, 0, 65, 0, 253, 15, 253, 98, 11]);
async function isSimdSupported() {
  if (void 0 === supportsSimd)
    try {
      await WebAssembly.instantiate(WASM_SIMD_CHECK), supportsSimd = true;
    } catch (e2) {
      supportsSimd = false;
    }
  return supportsSimd;
}
async function createFileset(e2, t2 = "") {
  const r2 = await isSimdSupported() ? "wasm_internal" : "wasm_nosimd_internal";
  return { wasmLoaderPath: `${t2}/${e2}_${r2}.js`, wasmBinaryPath: `${t2}/${e2}_${r2}.wasm` };
}
var FilesetResolver$1 = class {
  static isSimdSupported() {
    return isSimdSupported();
  }
  static forAudioTasks(e2) {
    return createFileset("audio", e2);
  }
  static forTextTasks(e2) {
    return createFileset("text", e2);
  }
  static forVisionTasks(e2) {
    return createFileset("vision", e2);
  }
};
fileset_resolver.FilesetResolver = FilesetResolver$1;
var drawing_utils = {};
Object.defineProperty(drawing_utils, "__esModule", { value: true }), drawing_utils.DrawingUtils = void 0;
var DEFAULT_OPTIONS = { color: "white", lineWidth: 4, radius: 6 };
function addDefaultOptions(e2) {
  return e2 = e2 || {}, Object.assign(Object.assign(Object.assign({}, DEFAULT_OPTIONS), { fillColor: e2.color }), e2);
}
function resolve(e2, t2) {
  return e2 instanceof Function ? e2(t2) : e2;
}
var DrawingUtils$1 = class {
  constructor(e2) {
    this.ctx = e2;
  }
  static clamp(e2, t2, r2) {
    const o2 = Math.min(t2, r2), i3 = Math.max(t2, r2);
    return Math.max(o2, Math.min(i3, e2));
  }
  static lerp(e2, t2, r2, o2, i3) {
    const a3 = o2 * (1 - (e2 - t2) / (r2 - t2)) + i3 * (1 - (r2 - e2) / (r2 - t2));
    return DrawingUtils$1.clamp(a3, o2, i3);
  }
  drawLandmarks(e2, t2) {
    if (!e2)
      return;
    const r2 = this.ctx, o2 = addDefaultOptions(t2);
    r2.save();
    const i3 = r2.canvas;
    let a3 = 0;
    for (const t3 of e2) {
      r2.fillStyle = resolve(o2.fillColor, { index: a3, from: t3 }), r2.strokeStyle = resolve(o2.color, { index: a3, from: t3 }), r2.lineWidth = resolve(o2.lineWidth, { index: a3, from: t3 });
      const e3 = new Path2D();
      e3.arc(t3.x * i3.width, t3.y * i3.height, resolve(o2.radius, { index: a3, from: t3 }), 0, 2 * Math.PI), r2.fill(e3), r2.stroke(e3), ++a3;
    }
    r2.restore();
  }
  drawConnectors(e2, t2, r2) {
    if (!e2 || !t2)
      return;
    const o2 = this.ctx, i3 = addDefaultOptions(r2);
    o2.save();
    const a3 = o2.canvas;
    let n2 = 0;
    for (const r3 of t2) {
      o2.beginPath();
      const t3 = e2[r3.start], s2 = e2[r3.end];
      t3 && s2 && (o2.strokeStyle = resolve(i3.color, { index: n2, from: t3, to: s2 }), o2.lineWidth = resolve(i3.lineWidth, { index: n2, from: t3, to: s2 }), o2.moveTo(t3.x * a3.width, t3.y * a3.height), o2.lineTo(s2.x * a3.width, s2.y * a3.height)), ++n2, o2.stroke();
    }
    o2.restore();
  }
  drawBoundingBox(e2, t2) {
    const r2 = this.ctx, o2 = addDefaultOptions(t2);
    r2.save(), r2.beginPath(), r2.lineWidth = resolve(o2.lineWidth, {}), r2.strokeStyle = resolve(o2.color, {}), r2.fillStyle = resolve(o2.fillColor, {}), r2.moveTo(e2.originX, e2.originY), r2.lineTo(e2.originX + e2.width, e2.originY), r2.lineTo(e2.originX + e2.width, e2.originY + e2.height), r2.lineTo(e2.originX, e2.originY + e2.height), r2.lineTo(e2.originX, e2.originY), r2.stroke(), r2.fill(), r2.restore();
  }
};
drawing_utils.DrawingUtils = DrawingUtils$1;
var image = {};
var image_shader_context = {};
Object.defineProperty(image_shader_context, "__esModule", { value: true }), image_shader_context.MPImageShaderContext = image_shader_context.assertNotNull = void 0;
var VERTEX_SHADER = "\n  attribute vec2 aVertex;\n  attribute vec2 aTex;\n  varying vec2 vTex;\n  void main(void) {\n    gl_Position = vec4(aVertex, 0.0, 1.0);\n    vTex = aTex;\n  }";
var FRAGMENT_SHADER = "\n  precision mediump float;\n  varying vec2 vTex;\n  uniform sampler2D inputTexture;\n   void main() {\n     gl_FragColor = texture2D(inputTexture, vTex);\n   }\n ";
function assertNotNull(e2, t2) {
  if (null === e2)
    throw new Error(`Unable to obtain required WebGL resource: ${t2}`);
  return e2;
}
image_shader_context.assertNotNull = assertNotNull;
var MPImageShaderBuffers = class {
  constructor(e2, t2, r2, o2) {
    this.gl = e2, this.vertexArrayObject = t2, this.vertexBuffer = r2, this.textureBuffer = o2;
  }
  bind() {
    this.gl.bindVertexArray(this.vertexArrayObject);
  }
  unbind() {
    this.gl.bindVertexArray(null);
  }
  close() {
    this.gl.deleteVertexArray(this.vertexArrayObject), this.gl.deleteBuffer(this.vertexBuffer), this.gl.deleteBuffer(this.textureBuffer);
  }
};
var MPImageShaderContext = class {
  compileShader(e2, t2) {
    const r2 = this.gl, o2 = assertNotNull(r2.createShader(t2), "Failed to create WebGL shader");
    if (r2.shaderSource(o2, e2), r2.compileShader(o2), !r2.getShaderParameter(o2, r2.COMPILE_STATUS)) {
      const e3 = r2.getShaderInfoLog(o2);
      throw new Error(`Could not compile WebGL shader: ${e3}`);
    }
    return r2.attachShader(this.program, o2), o2;
  }
  setupShaders() {
    const e2 = this.gl;
    this.program = assertNotNull(e2.createProgram(), "Failed to create WebGL program"), this.vertexShader = this.compileShader(VERTEX_SHADER, e2.VERTEX_SHADER), this.fragmentShader = this.compileShader(FRAGMENT_SHADER, e2.FRAGMENT_SHADER), e2.linkProgram(this.program);
    if (!e2.getProgramParameter(this.program, e2.LINK_STATUS)) {
      const t2 = e2.getProgramInfoLog(this.program);
      throw new Error(`Error during program linking: ${t2}`);
    }
    this.aVertex = e2.getAttribLocation(this.program, "aVertex"), this.aTex = e2.getAttribLocation(this.program, "aTex");
  }
  createBuffers(e2) {
    const t2 = this.gl, r2 = assertNotNull(t2.createVertexArray(), "Failed to create vertex array");
    t2.bindVertexArray(r2);
    const o2 = assertNotNull(t2.createBuffer(), "Failed to create buffer");
    t2.bindBuffer(t2.ARRAY_BUFFER, o2), t2.enableVertexAttribArray(this.aVertex), t2.vertexAttribPointer(this.aVertex, 2, t2.FLOAT, false, 0, 0), t2.bufferData(t2.ARRAY_BUFFER, new Float32Array([-1, -1, -1, 1, 1, 1, 1, -1]), t2.STATIC_DRAW);
    const i3 = assertNotNull(t2.createBuffer(), "Failed to create buffer");
    t2.bindBuffer(t2.ARRAY_BUFFER, i3), t2.enableVertexAttribArray(this.aTex), t2.vertexAttribPointer(this.aTex, 2, t2.FLOAT, false, 0, 0);
    const a3 = e2 ? [0, 1, 0, 0, 1, 0, 1, 1] : [0, 0, 0, 1, 1, 1, 1, 0];
    return t2.bufferData(t2.ARRAY_BUFFER, new Float32Array(a3), t2.STATIC_DRAW), t2.bindBuffer(t2.ARRAY_BUFFER, null), t2.bindVertexArray(null), new MPImageShaderBuffers(t2, r2, o2, i3);
  }
  getShaderBuffers(e2) {
    return e2 ? (this.shaderBuffersFlipVertically || (this.shaderBuffersFlipVertically = this.createBuffers(true)), this.shaderBuffersFlipVertically) : (this.shaderBuffersPassthrough || (this.shaderBuffersPassthrough = this.createBuffers(false)), this.shaderBuffersPassthrough);
  }
  maybeInitGL(e2) {
    if (this.gl) {
      if (e2 !== this.gl)
        throw new Error("Cannot change GL context once initialized");
    } else
      this.gl = e2;
  }
  run(e2, t2, r2) {
    this.maybeInitGL(e2), this.program || this.setupShaders();
    const o2 = this.getShaderBuffers(t2);
    e2.useProgram(this.program), o2.bind();
    const i3 = r2();
    return o2.unbind(), i3;
  }
  bindFramebuffer(e2, t2) {
    this.maybeInitGL(e2), this.framebuffer || (this.framebuffer = assertNotNull(e2.createFramebuffer(), "Failed to create framebuffe.")), e2.bindFramebuffer(e2.FRAMEBUFFER, this.framebuffer), e2.framebufferTexture2D(e2.FRAMEBUFFER, e2.COLOR_ATTACHMENT0, e2.TEXTURE_2D, t2, 0);
  }
  unbindFramebuffer() {
    var e2;
    null === (e2 = this.gl) || void 0 === e2 || e2.bindFramebuffer(this.gl.FRAMEBUFFER, null);
  }
  close() {
    if (this.program) {
      const e2 = this.gl;
      e2.deleteProgram(this.program), e2.deleteShader(this.vertexShader), e2.deleteShader(this.fragmentShader);
    }
    this.framebuffer && this.gl.deleteFramebuffer(this.framebuffer), this.shaderBuffersPassthrough && this.shaderBuffersPassthrough.close(), this.shaderBuffersFlipVertically && this.shaderBuffersFlipVertically.close();
  }
};
image_shader_context.MPImageShaderContext = MPImageShaderContext, Object.defineProperty(image, "__esModule", { value: true }), image.MPImage = void 0;
var image_shader_context_1$2 = image_shader_context;
var INSTANCE_COUNT_WARNING_THRESHOLD$1 = 250;
var MPImageType;
!function(e2) {
  e2[e2.IMAGE_DATA = 0] = "IMAGE_DATA", e2[e2.IMAGE_BITMAP = 1] = "IMAGE_BITMAP", e2[e2.WEBGL_TEXTURE = 2] = "WEBGL_TEXTURE";
}(MPImageType || (MPImageType = {}));
var MPImage$1 = class {
  constructor(e2, t2, r2, o2, i3, a3, n2) {
    this.containers = e2, this.ownsImageBitmap = t2, this.ownsWebGLTexture = r2, this.canvas = o2, this.shaderContext = i3, this.width = a3, this.height = n2, (this.ownsImageBitmap || this.ownsWebGLTexture) && (--MPImage$1.instancesBeforeWarning, 0 === MPImage$1.instancesBeforeWarning && console.error("You seem to be creating MPImage instances without invoking .close(). This leaks resources."));
  }
  hasImageData() {
    return !!this.getContainer(MPImageType.IMAGE_DATA);
  }
  hasImageBitmap() {
    return !!this.getContainer(MPImageType.IMAGE_BITMAP);
  }
  hasWebGLTexture() {
    return !!this.getContainer(MPImageType.WEBGL_TEXTURE);
  }
  getAsImageData() {
    return this.convertToImageData();
  }
  getAsImageBitmap() {
    return this.convertToImageBitmap();
  }
  getAsWebGLTexture() {
    return this.convertToWebGLTexture();
  }
  getContainer(e2) {
    switch (e2) {
      case MPImageType.IMAGE_DATA:
        return this.containers.find((e3) => e3 instanceof ImageData);
      case MPImageType.IMAGE_BITMAP:
        return this.containers.find((e3) => "undefined" != typeof ImageBitmap && e3 instanceof ImageBitmap);
      case MPImageType.WEBGL_TEXTURE:
        return this.containers.find((e3) => "undefined" != typeof WebGLTexture && e3 instanceof WebGLTexture);
      default:
        throw new Error(`Type is not supported: ${e2}`);
    }
  }
  clone() {
    const e2 = [];
    for (const t2 of this.containers) {
      let r2;
      if (t2 instanceof ImageData)
        r2 = new ImageData(t2.data, this.width, this.height);
      else if (t2 instanceof WebGLTexture) {
        const e3 = this.getGL(), t3 = this.getShaderContext();
        e3.activeTexture(e3.TEXTURE1), r2 = (0, image_shader_context_1$2.assertNotNull)(e3.createTexture(), "Failed to create texture"), e3.bindTexture(e3.TEXTURE_2D, r2), this.configureTextureParams(), e3.texImage2D(e3.TEXTURE_2D, 0, e3.RGBA, this.width, this.height, 0, e3.RGBA, e3.UNSIGNED_BYTE, null), e3.bindTexture(e3.TEXTURE_2D, null), t3.bindFramebuffer(e3, r2), t3.run(e3, false, () => {
          this.bindTexture(), e3.clearColor(0, 0, 0, 0), e3.clear(e3.COLOR_BUFFER_BIT), e3.drawArrays(e3.TRIANGLE_FAN, 0, 4), this.unbindTexture();
        }), t3.unbindFramebuffer(), this.unbindTexture();
      } else {
        if (!(t2 instanceof ImageBitmap))
          throw new Error(`Type is not supported: ${t2}`);
        this.convertToWebGLTexture(), this.bindTexture(), r2 = this.copyTextureToBitmap(), this.unbindTexture();
      }
      e2.push(r2);
    }
    return new MPImage$1(e2, this.hasImageBitmap(), this.hasWebGLTexture(), this.canvas, this.shaderContext, this.width, this.height);
  }
  getOffscreenCanvas() {
    if (!(this.canvas instanceof OffscreenCanvas))
      throw new Error("Conversion to ImageBitmap requires that the MediaPipe Tasks is initialized with an OffscreenCanvas");
    return this.canvas;
  }
  getGL() {
    if (!this.canvas)
      throw new Error("Conversion to different image formats require that a canvas is passed when iniitializing the image.");
    return this.gl || (this.gl = (0, image_shader_context_1$2.assertNotNull)(this.canvas.getContext("webgl2"), "You cannot use a canvas that is already bound to a different type of rendering context.")), this.gl;
  }
  getShaderContext() {
    return this.shaderContext || (this.shaderContext = new image_shader_context_1$2.MPImageShaderContext()), this.shaderContext;
  }
  convertToImageBitmap() {
    let e2 = this.getContainer(MPImageType.IMAGE_BITMAP);
    return e2 || (this.convertToWebGLTexture(), e2 = this.convertWebGLTextureToImageBitmap(), this.containers.push(e2), this.ownsImageBitmap = true), e2;
  }
  convertToImageData() {
    let e2 = this.getContainer(MPImageType.IMAGE_DATA);
    if (!e2) {
      const t2 = this.getGL(), r2 = this.getShaderContext(), o2 = new Uint8Array(this.width * this.height * 4), i3 = this.convertToWebGLTexture();
      r2.bindFramebuffer(t2, i3), t2.readPixels(0, 0, this.width, this.height, t2.RGBA, t2.UNSIGNED_BYTE, o2), r2.unbindFramebuffer(), e2 = new ImageData(new Uint8ClampedArray(o2.buffer), this.width, this.height), this.containers.push(e2);
    }
    return e2;
  }
  convertToWebGLTexture() {
    let e2 = this.getContainer(MPImageType.WEBGL_TEXTURE);
    if (!e2) {
      const t2 = this.getGL();
      e2 = this.bindTexture();
      const r2 = this.getContainer(MPImageType.IMAGE_BITMAP) || this.convertToImageData();
      t2.texImage2D(t2.TEXTURE_2D, 0, t2.RGBA, t2.RGBA, t2.UNSIGNED_BYTE, r2), this.unbindTexture();
    }
    return e2;
  }
  configureTextureParams() {
    const e2 = this.getGL();
    e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_WRAP_S, e2.CLAMP_TO_EDGE), e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_WRAP_T, e2.CLAMP_TO_EDGE), e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_MIN_FILTER, e2.LINEAR), e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_MAG_FILTER, e2.LINEAR);
  }
  bindTexture() {
    const e2 = this.getGL();
    e2.viewport(0, 0, this.width, this.height), e2.activeTexture(e2.TEXTURE0);
    let t2 = this.getContainer(MPImageType.WEBGL_TEXTURE);
    return t2 ? e2.bindTexture(e2.TEXTURE_2D, t2) : (t2 = (0, image_shader_context_1$2.assertNotNull)(e2.createTexture(), "Failed to create texture"), this.containers.push(t2), this.ownsWebGLTexture = true, e2.bindTexture(e2.TEXTURE_2D, t2), this.configureTextureParams()), t2;
  }
  unbindTexture() {
    this.gl.bindTexture(this.gl.TEXTURE_2D, null);
  }
  copyTextureToBitmap() {
    const e2 = this.getGL();
    return this.getShaderContext().run(e2, true, () => this.runWithResizedCanvas(() => (e2.bindFramebuffer(e2.FRAMEBUFFER, null), e2.clearColor(0, 0, 0, 0), e2.clear(e2.COLOR_BUFFER_BIT), e2.drawArrays(e2.TRIANGLE_FAN, 0, 4), this.getOffscreenCanvas().transferToImageBitmap())));
  }
  convertWebGLTextureToImageBitmap() {
    this.bindTexture();
    const e2 = this.copyTextureToBitmap();
    return this.unbindTexture(), e2;
  }
  runWithResizedCanvas(e2) {
    const t2 = this.canvas;
    if (t2.width === this.width && t2.height === this.height)
      return e2();
    const r2 = t2.width, o2 = t2.height;
    t2.width = this.width, t2.height = this.height;
    const i3 = e2();
    return t2.width = r2, t2.height = o2, i3;
  }
  close() {
    if (this.ownsImageBitmap && this.getContainer(MPImageType.IMAGE_BITMAP).close(), this.ownsWebGLTexture) {
      this.getGL().deleteTexture(this.getContainer(MPImageType.WEBGL_TEXTURE));
    }
    MPImage$1.instancesBeforeWarning = -1;
  }
};
image.MPImage = MPImage$1, MPImage$1.instancesBeforeWarning = INSTANCE_COUNT_WARNING_THRESHOLD$1;
var mask = {};
var platform_utils = {};
function isWebKit(e2 = navigator) {
  const t2 = e2.userAgent;
  return t2.includes("Safari") && !t2.includes("Chrome");
}
function isIOS() {
  return ["iPad Simulator", "iPhone Simulator", "iPod Simulator", "iPad", "iPhone", "iPod"].includes(navigator.platform) || navigator.userAgent.includes("Mac") && "ontouchend" in document;
}
Object.defineProperty(platform_utils, "__esModule", { value: true }), platform_utils.isIOS = platform_utils.isWebKit = void 0, platform_utils.isWebKit = isWebKit, platform_utils.isIOS = isIOS, Object.defineProperty(mask, "__esModule", { value: true }), mask.MPMask = void 0;
var image_shader_context_1$1 = image_shader_context;
var platform_utils_1$1 = platform_utils;
var INSTANCE_COUNT_WARNING_THRESHOLD = 250;
var MPMaskType;
!function(e2) {
  e2[e2.UINT8_ARRAY = 0] = "UINT8_ARRAY", e2[e2.FLOAT32_ARRAY = 1] = "FLOAT32_ARRAY", e2[e2.WEBGL_TEXTURE = 2] = "WEBGL_TEXTURE";
}(MPMaskType || (MPMaskType = {}));
var MPMask$1 = class {
  constructor(e2, t2, r2, o2, i3, a3) {
    this.containers = e2, this.ownsWebGLTexture = t2, this.canvas = r2, this.shaderContext = o2, this.width = i3, this.height = a3, this.ownsWebGLTexture && (--MPMask$1.instancesBeforeWarning, 0 === MPMask$1.instancesBeforeWarning && console.error("You seem to be creating MPMask instances without invoking .close(). This leaks resources."));
  }
  hasUint8Array() {
    return !!this.getContainer(MPMaskType.UINT8_ARRAY);
  }
  hasFloat32Array() {
    return !!this.getContainer(MPMaskType.FLOAT32_ARRAY);
  }
  hasWebGLTexture() {
    return !!this.getContainer(MPMaskType.WEBGL_TEXTURE);
  }
  getAsUint8Array() {
    return this.convertToUint8Array();
  }
  getAsFloat32Array() {
    return this.convertToFloat32Array();
  }
  getAsWebGLTexture() {
    return this.convertToWebGLTexture();
  }
  getTexImage2DFormat() {
    const e2 = this.getGL();
    if (!MPMask$1.texImage2DFormat)
      if (e2.getExtension("EXT_color_buffer_float") && e2.getExtension("OES_texture_float_linear") && e2.getExtension("EXT_float_blend"))
        MPMask$1.texImage2DFormat = e2.R32F;
      else {
        if (!e2.getExtension("EXT_color_buffer_half_float"))
          throw new Error("GPU does not fully support 4-channel float32 or float16 formats");
        MPMask$1.texImage2DFormat = e2.R16F;
      }
    return MPMask$1.texImage2DFormat;
  }
  getContainer(e2) {
    switch (e2) {
      case MPMaskType.UINT8_ARRAY:
        return this.containers.find((e3) => e3 instanceof Uint8Array);
      case MPMaskType.FLOAT32_ARRAY:
        return this.containers.find((e3) => e3 instanceof Float32Array);
      case MPMaskType.WEBGL_TEXTURE:
        return this.containers.find((e3) => "undefined" != typeof WebGLTexture && e3 instanceof WebGLTexture);
      default:
        throw new Error(`Type is not supported: ${e2}`);
    }
  }
  clone() {
    const e2 = [];
    for (const t2 of this.containers) {
      let r2;
      if (t2 instanceof Uint8Array)
        r2 = new Uint8Array(t2);
      else if (t2 instanceof Float32Array)
        r2 = new Float32Array(t2);
      else {
        if (!(t2 instanceof WebGLTexture))
          throw new Error(`Type is not supported: ${t2}`);
        {
          const e3 = this.getGL(), t3 = this.getShaderContext();
          e3.activeTexture(e3.TEXTURE1), r2 = (0, image_shader_context_1$1.assertNotNull)(e3.createTexture(), "Failed to create texture"), e3.bindTexture(e3.TEXTURE_2D, r2), this.configureTextureParams();
          const o2 = this.getTexImage2DFormat();
          e3.texImage2D(e3.TEXTURE_2D, 0, o2, this.width, this.height, 0, e3.RED, e3.FLOAT, null), e3.bindTexture(e3.TEXTURE_2D, null), t3.bindFramebuffer(e3, r2), t3.run(e3, false, () => {
            this.bindTexture(), e3.clearColor(0, 0, 0, 0), e3.clear(e3.COLOR_BUFFER_BIT), e3.drawArrays(e3.TRIANGLE_FAN, 0, 4), this.unbindTexture();
          }), t3.unbindFramebuffer(), this.unbindTexture();
        }
      }
      e2.push(r2);
    }
    return new MPMask$1(e2, this.hasWebGLTexture(), this.canvas, this.shaderContext, this.width, this.height);
  }
  getGL() {
    if (!this.canvas)
      throw new Error("Conversion to different image formats require that a canvas is passed when initializing the image.");
    return this.gl || (this.gl = (0, image_shader_context_1$1.assertNotNull)(this.canvas.getContext("webgl2"), "You cannot use a canvas that is already bound to a different type of rendering context.")), this.gl;
  }
  getShaderContext() {
    return this.shaderContext || (this.shaderContext = new image_shader_context_1$1.MPImageShaderContext()), this.shaderContext;
  }
  convertToFloat32Array() {
    let e2 = this.getContainer(MPMaskType.FLOAT32_ARRAY);
    if (!e2) {
      const t2 = this.getContainer(MPMaskType.UINT8_ARRAY);
      if (t2)
        e2 = new Float32Array(t2).map((e3) => e3 / 255);
      else {
        e2 = new Float32Array(this.width * this.height);
        const t3 = this.getGL(), r2 = this.getShaderContext(), o2 = this.convertToWebGLTexture();
        if (r2.bindFramebuffer(t3, o2), (0, platform_utils_1$1.isIOS)()) {
          const r3 = new Float32Array(this.width * this.height * 4);
          t3.readPixels(0, 0, this.width, this.height, t3.RGBA, t3.FLOAT, r3);
          for (let t4 = 0, o3 = 0; t4 < e2.length; ++t4, o3 += 4)
            e2[t4] = r3[o3];
        } else
          t3.readPixels(0, 0, this.width, this.height, t3.RED, t3.FLOAT, e2);
      }
      this.containers.push(e2);
    }
    return e2;
  }
  convertToUint8Array() {
    let e2 = this.getContainer(MPMaskType.UINT8_ARRAY);
    if (!e2) {
      const t2 = this.convertToFloat32Array();
      e2 = new Uint8Array(t2.map((e3) => 255 * e3)), this.containers.push(e2);
    }
    return e2;
  }
  convertToWebGLTexture() {
    let e2 = this.getContainer(MPMaskType.WEBGL_TEXTURE);
    if (!e2) {
      const t2 = this.getGL();
      e2 = this.bindTexture();
      const r2 = this.convertToFloat32Array(), o2 = this.getTexImage2DFormat();
      t2.texImage2D(t2.TEXTURE_2D, 0, o2, this.width, this.height, 0, t2.RED, t2.FLOAT, r2), this.unbindTexture();
    }
    return e2;
  }
  configureTextureParams() {
    const e2 = this.getGL();
    e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_WRAP_S, e2.CLAMP_TO_EDGE), e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_WRAP_T, e2.CLAMP_TO_EDGE), e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_MIN_FILTER, e2.NEAREST), e2.texParameteri(e2.TEXTURE_2D, e2.TEXTURE_MAG_FILTER, e2.NEAREST);
  }
  bindTexture() {
    const e2 = this.getGL();
    e2.viewport(0, 0, this.width, this.height), e2.activeTexture(e2.TEXTURE0);
    let t2 = this.getContainer(MPMaskType.WEBGL_TEXTURE);
    return t2 ? e2.bindTexture(e2.TEXTURE_2D, t2) : (t2 = (0, image_shader_context_1$1.assertNotNull)(e2.createTexture(), "Failed to create texture"), this.containers.push(t2), this.ownsWebGLTexture = true, e2.bindTexture(e2.TEXTURE_2D, t2), this.configureTextureParams()), t2;
  }
  unbindTexture() {
    this.gl.bindTexture(this.gl.TEXTURE_2D, null);
  }
  close() {
    if (this.ownsWebGLTexture) {
      this.getGL().deleteTexture(this.getContainer(MPMaskType.WEBGL_TEXTURE));
    }
    MPMask$1.instancesBeforeWarning = -1;
  }
};
mask.MPMask = MPMask$1, MPMask$1.instancesBeforeWarning = INSTANCE_COUNT_WARNING_THRESHOLD;
var face_detector = {};
var calculator_pb = {};
var googleProtobuf = {};
(function(exports) {
  var $jscomp = $jscomp || {};
  $jscomp.scope = {}, $jscomp.findInternal = function(e2, t2, r2) {
    e2 instanceof String && (e2 = String(e2));
    for (var o2 = e2.length, i3 = 0; i3 < o2; i3++) {
      var a3 = e2[i3];
      if (t2.call(r2, a3, i3, e2))
        return { i: i3, v: a3 };
    }
    return { i: -1, v: void 0 };
  }, $jscomp.ASSUME_ES5 = false, $jscomp.ASSUME_NO_NATIVE_MAP = false, $jscomp.ASSUME_NO_NATIVE_SET = false, $jscomp.SIMPLE_FROUND_POLYFILL = false, $jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function(e2, t2, r2) {
    e2 != Array.prototype && e2 != Object.prototype && (e2[t2] = r2.value);
  }, $jscomp.getGlobal = function(e2) {
    return "undefined" != typeof window && window === e2 ? e2 : void 0 !== commonjsGlobal && null != commonjsGlobal ? commonjsGlobal : e2;
  }, $jscomp.global = $jscomp.getGlobal(commonjsGlobal), $jscomp.polyfill = function(e2, t2, r2, o2) {
    if (t2) {
      for (r2 = $jscomp.global, e2 = e2.split("."), o2 = 0; o2 < e2.length - 1; o2++) {
        var i3 = e2[o2];
        i3 in r2 || (r2[i3] = {}), r2 = r2[i3];
      }
      (t2 = t2(o2 = r2[e2 = e2[e2.length - 1]])) != o2 && null != t2 && $jscomp.defineProperty(r2, e2, { configurable: true, writable: true, value: t2 });
    }
  }, $jscomp.polyfill("Array.prototype.findIndex", function(e2) {
    return e2 || function(e3, t2) {
      return $jscomp.findInternal(this, e3, t2).i;
    };
  }, "es6", "es3"), $jscomp.checkStringArgs = function(e2, t2, r2) {
    if (null == e2)
      throw new TypeError("The 'this' value for String.prototype." + r2 + " must not be null or undefined");
    if (t2 instanceof RegExp)
      throw new TypeError("First argument to String.prototype." + r2 + " must not be a regular expression");
    return e2 + "";
  }, $jscomp.polyfill("String.prototype.endsWith", function(e2) {
    return e2 || function(e3, t2) {
      var r2 = $jscomp.checkStringArgs(this, e3, "endsWith");
      e3 += "", void 0 === t2 && (t2 = r2.length), t2 = Math.max(0, Math.min(0 | t2, r2.length));
      for (var o2 = e3.length; 0 < o2 && 0 < t2; )
        if (r2[--t2] != e3[--o2])
          return false;
      return 0 >= o2;
    };
  }, "es6", "es3"), $jscomp.polyfill("Array.prototype.find", function(e2) {
    return e2 || function(e3, t2) {
      return $jscomp.findInternal(this, e3, t2).v;
    };
  }, "es6", "es3"), $jscomp.polyfill("String.prototype.startsWith", function(e2) {
    return e2 || function(e3, t2) {
      var r2 = $jscomp.checkStringArgs(this, e3, "startsWith");
      e3 += "";
      var o2 = r2.length, i3 = e3.length;
      t2 = Math.max(0, Math.min(0 | t2, r2.length));
      for (var a3 = 0; a3 < i3 && t2 < o2; )
        if (r2[t2++] != e3[a3++])
          return false;
      return a3 >= i3;
    };
  }, "es6", "es3"), $jscomp.polyfill("String.prototype.repeat", function(e2) {
    return e2 || function(e3) {
      var t2 = $jscomp.checkStringArgs(this, null, "repeat");
      if (0 > e3 || 1342177279 < e3)
        throw new RangeError("Invalid count value");
      e3 |= 0;
      for (var r2 = ""; e3; )
        1 & e3 && (r2 += t2), (e3 >>>= 1) && (t2 += t2);
      return r2;
    };
  }, "es6", "es3");
  var COMPILED = true, goog = goog || {};
  goog.global = commonjsGlobal || self, goog.exportPath_ = function(e2, t2, r2) {
    e2 = e2.split("."), r2 = r2 || goog.global, e2[0] in r2 || void 0 === r2.execScript || r2.execScript("var " + e2[0]);
    for (var o2; e2.length && (o2 = e2.shift()); )
      e2.length || void 0 === t2 ? r2 = r2[o2] && r2[o2] !== Object.prototype[o2] ? r2[o2] : r2[o2] = {} : r2[o2] = t2;
  }, goog.define = function(e2, t2) {
    return t2;
  }, goog.FEATURESET_YEAR = 2012, goog.DEBUG = true, goog.LOCALE = "en", goog.TRUSTED_SITE = true, goog.STRICT_MODE_COMPATIBLE = false, goog.DISALLOW_TEST_ONLY_CODE = !goog.DEBUG, goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING = false, goog.provide = function(e2) {
    if (goog.isInModuleLoader_())
      throw Error("goog.provide cannot be used within a module.");
    goog.constructNamespace_(e2);
  }, goog.constructNamespace_ = function(e2, t2) {
    goog.exportPath_(e2, t2);
  }, goog.getScriptNonce = function(e2) {
    return e2 && e2 != goog.global ? goog.getScriptNonce_(e2.document) : (null === goog.cspNonce_ && (goog.cspNonce_ = goog.getScriptNonce_(goog.global.document)), goog.cspNonce_);
  }, goog.NONCE_PATTERN_ = /^[\w+/_-]+[=]{0,2}$/, goog.cspNonce_ = null, goog.getScriptNonce_ = function(e2) {
    return (e2 = e2.querySelector && e2.querySelector("script[nonce]")) && (e2 = e2.nonce || e2.getAttribute("nonce")) && goog.NONCE_PATTERN_.test(e2) ? e2 : "";
  }, goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/, goog.module = function(e2) {
    if ("string" != typeof e2 || !e2 || -1 == e2.search(goog.VALID_MODULE_RE_))
      throw Error("Invalid module identifier");
    if (!goog.isInGoogModuleLoader_())
      throw Error("Module " + e2 + " has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
    if (goog.moduleLoaderState_.moduleName)
      throw Error("goog.module may only be called once per module.");
    goog.moduleLoaderState_.moduleName = e2;
  }, goog.module.get = function(e2) {
    return goog.module.getInternal_(e2);
  }, goog.module.getInternal_ = function(e2) {
    return null;
  }, goog.ModuleType = { ES6: "es6", GOOG: "goog" }, goog.moduleLoaderState_ = null, goog.isInModuleLoader_ = function() {
    return goog.isInGoogModuleLoader_() || goog.isInEs6ModuleLoader_();
  }, goog.isInGoogModuleLoader_ = function() {
    return !!goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.GOOG;
  }, goog.isInEs6ModuleLoader_ = function() {
    if (goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.ES6)
      return true;
    var e2 = goog.global.$jscomp;
    return !!e2 && ("function" == typeof e2.getCurrentModulePath && !!e2.getCurrentModulePath());
  }, goog.module.declareLegacyNamespace = function() {
    goog.moduleLoaderState_.declareLegacyNamespace = true;
  }, goog.declareModuleId = function(e2) {
    if (goog.moduleLoaderState_)
      goog.moduleLoaderState_.moduleName = e2;
    else {
      var t2 = goog.global.$jscomp;
      if (!t2 || "function" != typeof t2.getCurrentModulePath)
        throw Error('Module with namespace "' + e2 + '" has been loaded incorrectly.');
      t2 = t2.require(t2.getCurrentModulePath()), goog.loadedModules_[e2] = { exports: t2, type: goog.ModuleType.ES6, moduleId: e2 };
    }
  }, goog.setTestOnly = function(e2) {
    if (goog.DISALLOW_TEST_ONLY_CODE)
      throw e2 = e2 || "", Error("Importing test-only code into non-debug environment" + (e2 ? ": " + e2 : "."));
  }, goog.forwardDeclare = function(e2) {
  }, goog.getObjectByName = function(e2, t2) {
    e2 = e2.split("."), t2 = t2 || goog.global;
    for (var r2 = 0; r2 < e2.length; r2++)
      if (null == (t2 = t2[e2[r2]]))
        return null;
    return t2;
  }, goog.globalize = function(e2, t2) {
    for (var r2 in t2 = t2 || goog.global, e2)
      t2[r2] = e2[r2];
  }, goog.addDependency = function(e2, t2, r2, o2) {
  }, goog.ENABLE_DEBUG_LOADER = true, goog.logToConsole_ = function(e2) {
    goog.global.console && goog.global.console.error(e2);
  }, goog.require = function(e2) {
  }, goog.requireType = function(e2) {
    return {};
  }, goog.basePath = "", goog.nullFunction = function() {
  }, goog.abstractMethod = function() {
    throw Error("unimplemented abstract method");
  }, goog.addSingletonGetter = function(e2) {
    e2.instance_ = void 0, e2.getInstance = function() {
      return e2.instance_ ? e2.instance_ : (goog.DEBUG && (goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = e2), e2.instance_ = new e2());
    };
  }, goog.instantiatedSingletons_ = [], goog.LOAD_MODULE_USING_EVAL = true, goog.SEAL_MODULE_EXPORTS = goog.DEBUG, goog.loadedModules_ = {}, goog.DEPENDENCIES_ENABLED = !COMPILED, goog.TRANSPILE = "detect", goog.ASSUME_ES_MODULES_TRANSPILED = false, goog.TRANSPILE_TO_LANGUAGE = "", goog.TRANSPILER = "transpile.js", goog.hasBadLetScoping = null, goog.useSafari10Workaround = function() {
    if (null == goog.hasBadLetScoping) {
      try {
        var a = !eval('"use strict";let x = 1; function f() { return typeof x; };f() == "number";');
      } catch (e2) {
        a = false;
      }
      goog.hasBadLetScoping = a;
    }
    return goog.hasBadLetScoping;
  }, goog.workaroundSafari10EvalBug = function(e2) {
    return "(function(){" + e2 + "\n;})();\n";
  }, goog.loadModule = function(e2) {
    var t2 = goog.moduleLoaderState_;
    try {
      if (goog.moduleLoaderState_ = { moduleName: "", declareLegacyNamespace: false, type: goog.ModuleType.GOOG }, goog.isFunction(e2))
        var r2 = e2.call(void 0, {});
      else {
        if ("string" != typeof e2)
          throw Error("Invalid module definition");
        goog.useSafari10Workaround() && (e2 = goog.workaroundSafari10EvalBug(e2)), r2 = goog.loadModuleFromSource_.call(void 0, e2);
      }
      var o2 = goog.moduleLoaderState_.moduleName;
      if ("string" != typeof o2 || !o2)
        throw Error('Invalid module name "' + o2 + '"');
      goog.moduleLoaderState_.declareLegacyNamespace ? goog.constructNamespace_(o2, r2) : goog.SEAL_MODULE_EXPORTS && Object.seal && "object" == typeof r2 && null != r2 && Object.seal(r2), goog.loadedModules_[o2] = { exports: r2, type: goog.ModuleType.GOOG, moduleId: goog.moduleLoaderState_.moduleName };
    } finally {
      goog.moduleLoaderState_ = t2;
    }
  }, goog.loadModuleFromSource_ = function(a) {
    return eval(a), {};
  }, goog.normalizePath_ = function(e2) {
    e2 = e2.split("/");
    for (var t2 = 0; t2 < e2.length; )
      "." == e2[t2] ? e2.splice(t2, 1) : t2 && ".." == e2[t2] && e2[t2 - 1] && ".." != e2[t2 - 1] ? e2.splice(--t2, 2) : t2++;
    return e2.join("/");
  }, goog.loadFileSync_ = function(e2) {
    if (goog.global.CLOSURE_LOAD_FILE_SYNC)
      return goog.global.CLOSURE_LOAD_FILE_SYNC(e2);
    try {
      var t2 = new goog.global.XMLHttpRequest();
      return t2.open("get", e2, false), t2.send(), 0 == t2.status || 200 == t2.status ? t2.responseText : null;
    } catch (e3) {
      return null;
    }
  }, goog.transpile_ = function(e2, t2, r2) {
    var o2 = goog.global.$jscomp;
    o2 || (goog.global.$jscomp = o2 = {});
    var i3 = o2.transpile;
    if (!i3) {
      var a3 = goog.basePath + goog.TRANSPILER, n2 = goog.loadFileSync_(a3);
      if (n2) {
        if (function() {
          (0, eval)(n2 + "\n//# sourceURL=" + a3);
        }.call(goog.global), goog.global.$gwtExport && goog.global.$gwtExport.$jscomp && !goog.global.$gwtExport.$jscomp.transpile)
          throw Error('The transpiler did not properly export the "transpile" method. $gwtExport: ' + JSON.stringify(goog.global.$gwtExport));
        goog.global.$jscomp.transpile = goog.global.$gwtExport.$jscomp.transpile, i3 = (o2 = goog.global.$jscomp).transpile;
      }
    }
    return i3 || (i3 = o2.transpile = function(e3, t3) {
      return goog.logToConsole_(t3 + " requires transpilation but no transpiler was found."), e3;
    }), i3(e2, t2, r2);
  }, goog.typeOf = function(e2) {
    var t2 = typeof e2;
    if ("object" == t2) {
      if (!e2)
        return "null";
      if (e2 instanceof Array)
        return "array";
      if (e2 instanceof Object)
        return t2;
      var r2 = Object.prototype.toString.call(e2);
      if ("[object Window]" == r2)
        return "object";
      if ("[object Array]" == r2 || "number" == typeof e2.length && void 0 !== e2.splice && void 0 !== e2.propertyIsEnumerable && !e2.propertyIsEnumerable("splice"))
        return "array";
      if ("[object Function]" == r2 || void 0 !== e2.call && void 0 !== e2.propertyIsEnumerable && !e2.propertyIsEnumerable("call"))
        return "function";
    } else if ("function" == t2 && void 0 === e2.call)
      return "object";
    return t2;
  }, goog.isArray = function(e2) {
    return "array" == goog.typeOf(e2);
  }, goog.isArrayLike = function(e2) {
    var t2 = goog.typeOf(e2);
    return "array" == t2 || "object" == t2 && "number" == typeof e2.length;
  }, goog.isDateLike = function(e2) {
    return goog.isObject(e2) && "function" == typeof e2.getFullYear;
  }, goog.isFunction = function(e2) {
    return "function" == goog.typeOf(e2);
  }, goog.isObject = function(e2) {
    var t2 = typeof e2;
    return "object" == t2 && null != e2 || "function" == t2;
  }, goog.getUid = function(e2) {
    return Object.prototype.hasOwnProperty.call(e2, goog.UID_PROPERTY_) && e2[goog.UID_PROPERTY_] || (e2[goog.UID_PROPERTY_] = ++goog.uidCounter_);
  }, goog.hasUid = function(e2) {
    return !!e2[goog.UID_PROPERTY_];
  }, goog.removeUid = function(e2) {
    null !== e2 && "removeAttribute" in e2 && e2.removeAttribute(goog.UID_PROPERTY_);
    try {
      delete e2[goog.UID_PROPERTY_];
    } catch (e3) {
    }
  }, goog.UID_PROPERTY_ = "closure_uid_" + (1e9 * Math.random() >>> 0), goog.uidCounter_ = 0, goog.getHashCode = goog.getUid, goog.removeHashCode = goog.removeUid, goog.cloneObject = function(e2) {
    var t2 = goog.typeOf(e2);
    if ("object" == t2 || "array" == t2) {
      if ("function" == typeof e2.clone)
        return e2.clone();
      for (var r2 in t2 = "array" == t2 ? [] : {}, e2)
        t2[r2] = goog.cloneObject(e2[r2]);
      return t2;
    }
    return e2;
  }, goog.bindNative_ = function(e2, t2, r2) {
    return e2.call.apply(e2.bind, arguments);
  }, goog.bindJs_ = function(e2, t2, r2) {
    if (!e2)
      throw Error();
    if (2 < arguments.length) {
      var o2 = Array.prototype.slice.call(arguments, 2);
      return function() {
        var r3 = Array.prototype.slice.call(arguments);
        return Array.prototype.unshift.apply(r3, o2), e2.apply(t2, r3);
      };
    }
    return function() {
      return e2.apply(t2, arguments);
    };
  }, goog.bind = function(e2, t2, r2) {
    return Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? goog.bind = goog.bindNative_ : goog.bind = goog.bindJs_, goog.bind.apply(null, arguments);
  }, goog.partial = function(e2, t2) {
    var r2 = Array.prototype.slice.call(arguments, 1);
    return function() {
      var t3 = r2.slice();
      return t3.push.apply(t3, arguments), e2.apply(this, t3);
    };
  }, goog.mixin = function(e2, t2) {
    for (var r2 in t2)
      e2[r2] = t2[r2];
  }, goog.now = goog.TRUSTED_SITE && Date.now || function() {
    return +/* @__PURE__ */ new Date();
  }, goog.globalEval = function(e2) {
    if (goog.global.execScript)
      goog.global.execScript(e2, "JavaScript");
    else {
      if (!goog.global.eval)
        throw Error("goog.globalEval not available");
      if (null == goog.evalWorksForGlobals_) {
        try {
          goog.global.eval("var _evalTest_ = 1;");
        } catch (e3) {
        }
        if (void 0 !== goog.global._evalTest_) {
          try {
            delete goog.global._evalTest_;
          } catch (e3) {
          }
          goog.evalWorksForGlobals_ = true;
        } else
          goog.evalWorksForGlobals_ = false;
      }
      if (goog.evalWorksForGlobals_)
        goog.global.eval(e2);
      else {
        var t2 = goog.global.document, r2 = t2.createElement("script");
        r2.type = "text/javascript", r2.defer = false, r2.appendChild(t2.createTextNode(e2)), t2.head.appendChild(r2), t2.head.removeChild(r2);
      }
    }
  }, goog.evalWorksForGlobals_ = null, goog.getCssName = function(e2, t2) {
    if ("." == String(e2).charAt(0))
      throw Error('className passed in goog.getCssName must not start with ".". You passed: ' + e2);
    var r2 = function(e3) {
      return goog.cssNameMapping_[e3] || e3;
    }, o2 = function(e3) {
      e3 = e3.split("-");
      for (var t3 = [], o3 = 0; o3 < e3.length; o3++)
        t3.push(r2(e3[o3]));
      return t3.join("-");
    };
    return o2 = goog.cssNameMapping_ ? "BY_WHOLE" == goog.cssNameMappingStyle_ ? r2 : o2 : function(e3) {
      return e3;
    }, e2 = t2 ? e2 + "-" + o2(t2) : o2(e2), goog.global.CLOSURE_CSS_NAME_MAP_FN ? goog.global.CLOSURE_CSS_NAME_MAP_FN(e2) : e2;
  }, goog.setCssNameMapping = function(e2, t2) {
    goog.cssNameMapping_ = e2, goog.cssNameMappingStyle_ = t2;
  }, goog.getMsg = function(e2, t2, r2) {
    return r2 && r2.html && (e2 = e2.replace(/</g, "&lt;")), t2 && (e2 = e2.replace(/\{\$([^}]+)}/g, function(e3, r3) {
      return null != t2 && r3 in t2 ? t2[r3] : e3;
    })), e2;
  }, goog.getMsgWithFallback = function(e2, t2) {
    return e2;
  }, goog.exportSymbol = function(e2, t2, r2) {
    goog.exportPath_(e2, t2, r2);
  }, goog.exportProperty = function(e2, t2, r2) {
    e2[t2] = r2;
  }, goog.inherits = function(e2, t2) {
    function r2() {
    }
    r2.prototype = t2.prototype, e2.superClass_ = t2.prototype, e2.prototype = new r2(), e2.prototype.constructor = e2, e2.base = function(e3, r3, o2) {
      for (var i3 = Array(arguments.length - 2), a3 = 2; a3 < arguments.length; a3++)
        i3[a3 - 2] = arguments[a3];
      return t2.prototype[r3].apply(e3, i3);
    };
  }, goog.scope = function(e2) {
    if (goog.isInModuleLoader_())
      throw Error("goog.scope is not supported within a module.");
    e2.call(goog.global);
  }, goog.defineClass = function(e2, t2) {
    var r2 = t2.constructor, o2 = t2.statics;
    return r2 && r2 != Object.prototype.constructor || (r2 = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    }), r2 = goog.defineClass.createSealingConstructor_(r2, e2), e2 && goog.inherits(r2, e2), delete t2.constructor, delete t2.statics, goog.defineClass.applyProperties_(r2.prototype, t2), null != o2 && (o2 instanceof Function ? o2(r2) : goog.defineClass.applyProperties_(r2, o2)), r2;
  }, goog.defineClass.SEAL_CLASS_INSTANCES = goog.DEBUG, goog.defineClass.createSealingConstructor_ = function(e2, t2) {
    if (!goog.defineClass.SEAL_CLASS_INSTANCES)
      return e2;
    var r2 = !goog.defineClass.isUnsealable_(t2), o2 = function() {
      var t3 = e2.apply(this, arguments) || this;
      return t3[goog.UID_PROPERTY_] = t3[goog.UID_PROPERTY_], this.constructor === o2 && r2 && Object.seal instanceof Function && Object.seal(t3), t3;
    };
    return o2;
  }, goog.defineClass.isUnsealable_ = function(e2) {
    return e2 && e2.prototype && e2.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_];
  }, goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" "), goog.defineClass.applyProperties_ = function(e2, t2) {
    for (var r2 in t2)
      Object.prototype.hasOwnProperty.call(t2, r2) && (e2[r2] = t2[r2]);
    for (var o2 = 0; o2 < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; o2++)
      r2 = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[o2], Object.prototype.hasOwnProperty.call(t2, r2) && (e2[r2] = t2[r2]);
  }, goog.tagUnsealableClass = function(e2) {
  }, goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable", goog.TRUSTED_TYPES_POLICY_NAME = "", goog.identity_ = function(e2) {
    return e2;
  }, goog.createTrustedTypesPolicy = function(e2) {
    var t2 = null, r2 = goog.global.trustedTypes || goog.global.TrustedTypes;
    if (!r2 || !r2.createPolicy)
      return t2;
    try {
      t2 = r2.createPolicy(e2, { createHTML: goog.identity_, createScript: goog.identity_, createScriptURL: goog.identity_, createURL: goog.identity_ });
    } catch (e3) {
      goog.logToConsole_(e3.message);
    }
    return t2;
  }, goog.TRUSTED_TYPES_POLICY_ = goog.TRUSTED_TYPES_POLICY_NAME ? goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + "#base") : null, goog.object = {}, goog.object.is = function(e2, t2) {
    return e2 === t2 ? 0 !== e2 || 1 / e2 == 1 / t2 : e2 != e2 && t2 != t2;
  }, goog.object.forEach = function(e2, t2, r2) {
    for (var o2 in e2)
      t2.call(r2, e2[o2], o2, e2);
  }, goog.object.filter = function(e2, t2, r2) {
    var o2, i3 = {};
    for (o2 in e2)
      t2.call(r2, e2[o2], o2, e2) && (i3[o2] = e2[o2]);
    return i3;
  }, goog.object.map = function(e2, t2, r2) {
    var o2, i3 = {};
    for (o2 in e2)
      i3[o2] = t2.call(r2, e2[o2], o2, e2);
    return i3;
  }, goog.object.some = function(e2, t2, r2) {
    for (var o2 in e2)
      if (t2.call(r2, e2[o2], o2, e2))
        return true;
    return false;
  }, goog.object.every = function(e2, t2, r2) {
    for (var o2 in e2)
      if (!t2.call(r2, e2[o2], o2, e2))
        return false;
    return true;
  }, goog.object.getCount = function(e2) {
    var t2, r2 = 0;
    for (t2 in e2)
      r2++;
    return r2;
  }, goog.object.getAnyKey = function(e2) {
    for (var t2 in e2)
      return t2;
  }, goog.object.getAnyValue = function(e2) {
    for (var t2 in e2)
      return e2[t2];
  }, goog.object.contains = function(e2, t2) {
    return goog.object.containsValue(e2, t2);
  }, goog.object.getValues = function(e2) {
    var t2, r2 = [], o2 = 0;
    for (t2 in e2)
      r2[o2++] = e2[t2];
    return r2;
  }, goog.object.getKeys = function(e2) {
    var t2, r2 = [], o2 = 0;
    for (t2 in e2)
      r2[o2++] = t2;
    return r2;
  }, goog.object.getValueByKeys = function(e2, t2) {
    var r2 = goog.isArrayLike(t2), o2 = r2 ? t2 : arguments;
    for (r2 = r2 ? 0 : 1; r2 < o2.length; r2++) {
      if (null == e2)
        return;
      e2 = e2[o2[r2]];
    }
    return e2;
  }, goog.object.containsKey = function(e2, t2) {
    return null !== e2 && t2 in e2;
  }, goog.object.containsValue = function(e2, t2) {
    for (var r2 in e2)
      if (e2[r2] == t2)
        return true;
    return false;
  }, goog.object.findKey = function(e2, t2, r2) {
    for (var o2 in e2)
      if (t2.call(r2, e2[o2], o2, e2))
        return o2;
  }, goog.object.findValue = function(e2, t2, r2) {
    return (t2 = goog.object.findKey(e2, t2, r2)) && e2[t2];
  }, goog.object.isEmpty = function(e2) {
    for (var t2 in e2)
      return false;
    return true;
  }, goog.object.clear = function(e2) {
    for (var t2 in e2)
      delete e2[t2];
  }, goog.object.remove = function(e2, t2) {
    var r2;
    return (r2 = t2 in e2) && delete e2[t2], r2;
  }, goog.object.add = function(e2, t2, r2) {
    if (null !== e2 && t2 in e2)
      throw Error('The object already contains the key "' + t2 + '"');
    goog.object.set(e2, t2, r2);
  }, goog.object.get = function(e2, t2, r2) {
    return null !== e2 && t2 in e2 ? e2[t2] : r2;
  }, goog.object.set = function(e2, t2, r2) {
    e2[t2] = r2;
  }, goog.object.setIfUndefined = function(e2, t2, r2) {
    return t2 in e2 ? e2[t2] : e2[t2] = r2;
  }, goog.object.setWithReturnValueIfNotSet = function(e2, t2, r2) {
    return t2 in e2 ? e2[t2] : (r2 = r2(), e2[t2] = r2);
  }, goog.object.equals = function(e2, t2) {
    for (var r2 in e2)
      if (!(r2 in t2) || e2[r2] !== t2[r2])
        return false;
    for (var o2 in t2)
      if (!(o2 in e2))
        return false;
    return true;
  }, goog.object.clone = function(e2) {
    var t2, r2 = {};
    for (t2 in e2)
      r2[t2] = e2[t2];
    return r2;
  }, goog.object.unsafeClone = function(e2) {
    var t2 = goog.typeOf(e2);
    if ("object" == t2 || "array" == t2) {
      if (goog.isFunction(e2.clone))
        return e2.clone();
      for (var r2 in t2 = "array" == t2 ? [] : {}, e2)
        t2[r2] = goog.object.unsafeClone(e2[r2]);
      return t2;
    }
    return e2;
  }, goog.object.transpose = function(e2) {
    var t2, r2 = {};
    for (t2 in e2)
      r2[e2[t2]] = t2;
    return r2;
  }, goog.object.PROTOTYPE_FIELDS_ = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" "), goog.object.extend = function(e2, t2) {
    for (var r2, o2, i3 = 1; i3 < arguments.length; i3++) {
      for (r2 in o2 = arguments[i3])
        e2[r2] = o2[r2];
      for (var a3 = 0; a3 < goog.object.PROTOTYPE_FIELDS_.length; a3++)
        r2 = goog.object.PROTOTYPE_FIELDS_[a3], Object.prototype.hasOwnProperty.call(o2, r2) && (e2[r2] = o2[r2]);
    }
  }, goog.object.create = function(e2) {
    var t2 = arguments.length;
    if (1 == t2 && Array.isArray(arguments[0]))
      return goog.object.create.apply(null, arguments[0]);
    if (t2 % 2)
      throw Error("Uneven number of arguments");
    for (var r2 = {}, o2 = 0; o2 < t2; o2 += 2)
      r2[arguments[o2]] = arguments[o2 + 1];
    return r2;
  }, goog.object.createSet = function(e2) {
    var t2 = arguments.length;
    if (1 == t2 && Array.isArray(arguments[0]))
      return goog.object.createSet.apply(null, arguments[0]);
    for (var r2 = {}, o2 = 0; o2 < t2; o2++)
      r2[arguments[o2]] = true;
    return r2;
  }, goog.object.createImmutableView = function(e2) {
    var t2 = e2;
    return Object.isFrozen && !Object.isFrozen(e2) && (t2 = Object.create(e2), Object.freeze(t2)), t2;
  }, goog.object.isImmutableView = function(e2) {
    return !!Object.isFrozen && Object.isFrozen(e2);
  }, goog.object.getAllPropertyNames = function(e2, t2, r2) {
    if (!e2)
      return [];
    if (!Object.getOwnPropertyNames || !Object.getPrototypeOf)
      return goog.object.getKeys(e2);
    for (var o2 = {}; e2 && (e2 !== Object.prototype || t2) && (e2 !== Function.prototype || r2); ) {
      for (var i3 = Object.getOwnPropertyNames(e2), a3 = 0; a3 < i3.length; a3++)
        o2[i3[a3]] = true;
      e2 = Object.getPrototypeOf(e2);
    }
    return goog.object.getKeys(o2);
  }, goog.object.getSuperClass = function(e2) {
    return (e2 = Object.getPrototypeOf(e2.prototype)) && e2.constructor;
  };
  var jspb = { asserts: {} };
  jspb.asserts.doAssertFailure = function(e2, t2, r2, o2) {
    var i3 = "Assertion failed";
    if (r2) {
      i3 += ": " + r2;
      var a3 = o2;
    } else
      e2 && (i3 += ": " + e2, a3 = t2);
    throw Error("" + i3, a3 || []);
  }, jspb.asserts.assert = function(e2, t2, r2) {
    for (var o2 = [], i3 = 2; i3 < arguments.length; ++i3)
      o2[i3 - 2] = arguments[i3];
    return e2 || jspb.asserts.doAssertFailure("", null, t2, o2), e2;
  }, jspb.asserts.assertString = function(e2, t2, r2) {
    for (var o2 = [], i3 = 2; i3 < arguments.length; ++i3)
      o2[i3 - 2] = arguments[i3];
    return "string" != typeof e2 && jspb.asserts.doAssertFailure("Expected string but got %s: %s.", [goog.typeOf(e2), e2], t2, o2), e2;
  }, jspb.asserts.assertArray = function(e2, t2, r2) {
    for (var o2 = [], i3 = 2; i3 < arguments.length; ++i3)
      o2[i3 - 2] = arguments[i3];
    return Array.isArray(e2) || jspb.asserts.doAssertFailure("Expected array but got %s: %s.", [goog.typeOf(e2), e2], t2, o2), e2;
  }, jspb.asserts.fail = function(e2, t2) {
    for (var r2 = [], o2 = 1; o2 < arguments.length; ++o2)
      r2[o2 - 1] = arguments[o2];
    throw Error("Failure" + (e2 ? ": " + e2 : ""), r2);
  }, jspb.asserts.assertInstanceof = function(e2, t2, r2, o2) {
    for (var i3 = [], a3 = 3; a3 < arguments.length; ++a3)
      i3[a3 - 3] = arguments[a3];
    return e2 instanceof t2 || jspb.asserts.doAssertFailure("Expected instanceof %s but got %s.", [jspb.asserts.getType(t2), jspb.asserts.getType(e2)], r2, i3), e2;
  }, jspb.asserts.getType = function(e2) {
    return e2 instanceof Function ? e2.displayName || e2.name || "unknown type name" : e2 instanceof Object ? e2.constructor.displayName || e2.constructor.name || Object.prototype.toString.call(e2) : null === e2 ? "null" : typeof e2;
  }, jspb.BinaryConstants = {}, jspb.ConstBinaryMessage = function() {
  }, jspb.BinaryMessage = function() {
  }, jspb.BinaryConstants.FieldType = { INVALID: -1, DOUBLE: 1, FLOAT: 2, INT64: 3, UINT64: 4, INT32: 5, FIXED64: 6, FIXED32: 7, BOOL: 8, STRING: 9, GROUP: 10, MESSAGE: 11, BYTES: 12, UINT32: 13, ENUM: 14, SFIXED32: 15, SFIXED64: 16, SINT32: 17, SINT64: 18, FHASH64: 30, VHASH64: 31 }, jspb.BinaryConstants.WireType = { INVALID: -1, VARINT: 0, FIXED64: 1, DELIMITED: 2, START_GROUP: 3, END_GROUP: 4, FIXED32: 5 }, jspb.BinaryConstants.FieldTypeToWireType = function(e2) {
    var t2 = jspb.BinaryConstants.FieldType, r2 = jspb.BinaryConstants.WireType;
    switch (e2) {
      case t2.INT32:
      case t2.INT64:
      case t2.UINT32:
      case t2.UINT64:
      case t2.SINT32:
      case t2.SINT64:
      case t2.BOOL:
      case t2.ENUM:
      case t2.VHASH64:
        return r2.VARINT;
      case t2.DOUBLE:
      case t2.FIXED64:
      case t2.SFIXED64:
      case t2.FHASH64:
        return r2.FIXED64;
      case t2.STRING:
      case t2.MESSAGE:
      case t2.BYTES:
        return r2.DELIMITED;
      case t2.FLOAT:
      case t2.FIXED32:
      case t2.SFIXED32:
        return r2.FIXED32;
      default:
        return r2.INVALID;
    }
  }, jspb.BinaryConstants.INVALID_FIELD_NUMBER = -1, jspb.BinaryConstants.FLOAT32_EPS = 1401298464324817e-60, jspb.BinaryConstants.FLOAT32_MIN = 11754943508222875e-54, jspb.BinaryConstants.FLOAT32_MAX = 34028234663852886e22, jspb.BinaryConstants.FLOAT64_EPS = 5e-324, jspb.BinaryConstants.FLOAT64_MIN = 22250738585072014e-324, jspb.BinaryConstants.FLOAT64_MAX = 17976931348623157e292, jspb.BinaryConstants.TWO_TO_20 = 1048576, jspb.BinaryConstants.TWO_TO_23 = 8388608, jspb.BinaryConstants.TWO_TO_31 = 2147483648, jspb.BinaryConstants.TWO_TO_32 = 4294967296, jspb.BinaryConstants.TWO_TO_52 = 4503599627370496, jspb.BinaryConstants.TWO_TO_63 = 9223372036854776e3, jspb.BinaryConstants.TWO_TO_64 = 18446744073709552e3, jspb.BinaryConstants.ZERO_HASH = "\0\0\0\0\0\0\0\0", goog.debug = {}, goog.debug.Error = function(e2) {
    if (Error.captureStackTrace)
      Error.captureStackTrace(this, goog.debug.Error);
    else {
      var t2 = Error().stack;
      t2 && (this.stack = t2);
    }
    e2 && (this.message = String(e2)), this.reportErrorToServer = true;
  }, goog.inherits(goog.debug.Error, Error), goog.debug.Error.prototype.name = "CustomError", goog.dom = {}, goog.dom.NodeType = { ELEMENT: 1, ATTRIBUTE: 2, TEXT: 3, CDATA_SECTION: 4, ENTITY_REFERENCE: 5, ENTITY: 6, PROCESSING_INSTRUCTION: 7, COMMENT: 8, DOCUMENT: 9, DOCUMENT_TYPE: 10, DOCUMENT_FRAGMENT: 11, NOTATION: 12 }, goog.asserts = {}, goog.asserts.ENABLE_ASSERTS = goog.DEBUG, goog.asserts.AssertionError = function(e2, t2) {
    goog.debug.Error.call(this, goog.asserts.subs_(e2, t2)), this.messagePattern = e2;
  }, goog.inherits(goog.asserts.AssertionError, goog.debug.Error), goog.asserts.AssertionError.prototype.name = "AssertionError", goog.asserts.DEFAULT_ERROR_HANDLER = function(e2) {
    throw e2;
  }, goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER, goog.asserts.subs_ = function(e2, t2) {
    for (var r2 = "", o2 = (e2 = e2.split("%s")).length - 1, i3 = 0; i3 < o2; i3++)
      r2 += e2[i3] + (i3 < t2.length ? t2[i3] : "%s");
    return r2 + e2[o2];
  }, goog.asserts.doAssertFailure_ = function(e2, t2, r2, o2) {
    var i3 = "Assertion failed";
    if (r2) {
      i3 += ": " + r2;
      var a3 = o2;
    } else
      e2 && (i3 += ": " + e2, a3 = t2);
    e2 = new goog.asserts.AssertionError("" + i3, a3 || []), goog.asserts.errorHandler_(e2);
  }, goog.asserts.setErrorHandler = function(e2) {
    goog.asserts.ENABLE_ASSERTS && (goog.asserts.errorHandler_ = e2);
  }, goog.asserts.assert = function(e2, t2, r2) {
    return goog.asserts.ENABLE_ASSERTS && !e2 && goog.asserts.doAssertFailure_("", null, t2, Array.prototype.slice.call(arguments, 2)), e2;
  }, goog.asserts.assertExists = function(e2, t2, r2) {
    return goog.asserts.ENABLE_ASSERTS && null == e2 && goog.asserts.doAssertFailure_("Expected to exist: %s.", [e2], t2, Array.prototype.slice.call(arguments, 2)), e2;
  }, goog.asserts.fail = function(e2, t2) {
    goog.asserts.ENABLE_ASSERTS && goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (e2 ? ": " + e2 : ""), Array.prototype.slice.call(arguments, 1)));
  }, goog.asserts.assertNumber = function(e2, t2, r2) {
    return goog.asserts.ENABLE_ASSERTS && "number" != typeof e2 && goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(e2), e2], t2, Array.prototype.slice.call(arguments, 2)), e2;
  }, goog.asserts.assertString = function(e2, t2, r2) {
    return goog.asserts.ENABLE_ASSERTS && "string" != typeof e2 && goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(e2), e2], t2, Array.prototype.slice.call(arguments, 2)), e2;
  }, goog.asserts.assertFunction = function(e2, t2, r2) {
    return goog.asserts.ENABLE_ASSERTS && !goog.isFunction(e2) && goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(e2), e2], t2, Array.prototype.slice.call(arguments, 2)), e2;
  }, goog.asserts.assertObject = function(e2, t2, r2) {
    return goog.asserts.ENABLE_ASSERTS && !goog.isObject(e2) && goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(e2), e2], t2, Array.prototype.slice.call(arguments, 2)), e2;
  }, goog.asserts.assertArray = function(e2, t2, r2) {
    return goog.asserts.ENABLE_ASSERTS && !Array.isArray(e2) && goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(e2), e2], t2, Array.prototype.slice.call(arguments, 2)), e2;
  }, goog.asserts.assertBoolean = function(e2, t2, r2) {
    return goog.asserts.ENABLE_ASSERTS && "boolean" != typeof e2 && goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(e2), e2], t2, Array.prototype.slice.call(arguments, 2)), e2;
  }, goog.asserts.assertElement = function(e2, t2, r2) {
    return !goog.asserts.ENABLE_ASSERTS || goog.isObject(e2) && e2.nodeType == goog.dom.NodeType.ELEMENT || goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(e2), e2], t2, Array.prototype.slice.call(arguments, 2)), e2;
  }, goog.asserts.assertInstanceof = function(e2, t2, r2, o2) {
    return !goog.asserts.ENABLE_ASSERTS || e2 instanceof t2 || goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(t2), goog.asserts.getType_(e2)], r2, Array.prototype.slice.call(arguments, 3)), e2;
  }, goog.asserts.assertFinite = function(e2, t2, r2) {
    return !goog.asserts.ENABLE_ASSERTS || "number" == typeof e2 && isFinite(e2) || goog.asserts.doAssertFailure_("Expected %s to be a finite number but it is not.", [e2], t2, Array.prototype.slice.call(arguments, 2)), e2;
  }, goog.asserts.assertObjectPrototypeIsIntact = function() {
    for (var e2 in Object.prototype)
      goog.asserts.fail(e2 + " should not be enumerable in Object.prototype.");
  }, goog.asserts.getType_ = function(e2) {
    return e2 instanceof Function ? e2.displayName || e2.name || "unknown type name" : e2 instanceof Object ? e2.constructor.displayName || e2.constructor.name || Object.prototype.toString.call(e2) : null === e2 ? "null" : typeof e2;
  }, goog.array = {}, goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE, goog.array.ASSUME_NATIVE_FUNCTIONS = 2012 < goog.FEATURESET_YEAR, goog.array.peek = function(e2) {
    return e2[e2.length - 1];
  }, goog.array.last = goog.array.peek, goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function(e2, t2, r2) {
    return goog.asserts.assert(null != e2.length), Array.prototype.indexOf.call(e2, t2, r2);
  } : function(e2, t2, r2) {
    if (r2 = null == r2 ? 0 : 0 > r2 ? Math.max(0, e2.length + r2) : r2, "string" == typeof e2)
      return "string" != typeof t2 || 1 != t2.length ? -1 : e2.indexOf(t2, r2);
    for (; r2 < e2.length; r2++)
      if (r2 in e2 && e2[r2] === t2)
        return r2;
    return -1;
  }, goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function(e2, t2, r2) {
    return goog.asserts.assert(null != e2.length), Array.prototype.lastIndexOf.call(e2, t2, null == r2 ? e2.length - 1 : r2);
  } : function(e2, t2, r2) {
    if (0 > (r2 = null == r2 ? e2.length - 1 : r2) && (r2 = Math.max(0, e2.length + r2)), "string" == typeof e2)
      return "string" != typeof t2 || 1 != t2.length ? -1 : e2.lastIndexOf(t2, r2);
    for (; 0 <= r2; r2--)
      if (r2 in e2 && e2[r2] === t2)
        return r2;
    return -1;
  }, goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function(e2, t2, r2) {
    goog.asserts.assert(null != e2.length), Array.prototype.forEach.call(e2, t2, r2);
  } : function(e2, t2, r2) {
    for (var o2 = e2.length, i3 = "string" == typeof e2 ? e2.split("") : e2, a3 = 0; a3 < o2; a3++)
      a3 in i3 && t2.call(r2, i3[a3], a3, e2);
  }, goog.array.forEachRight = function(e2, t2, r2) {
    var o2 = e2.length, i3 = "string" == typeof e2 ? e2.split("") : e2;
    for (--o2; 0 <= o2; --o2)
      o2 in i3 && t2.call(r2, i3[o2], o2, e2);
  }, goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function(e2, t2, r2) {
    return goog.asserts.assert(null != e2.length), Array.prototype.filter.call(e2, t2, r2);
  } : function(e2, t2, r2) {
    for (var o2 = e2.length, i3 = [], a3 = 0, n2 = "string" == typeof e2 ? e2.split("") : e2, s2 = 0; s2 < o2; s2++)
      if (s2 in n2) {
        var p2 = n2[s2];
        t2.call(r2, p2, s2, e2) && (i3[a3++] = p2);
      }
    return i3;
  }, goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function(e2, t2, r2) {
    return goog.asserts.assert(null != e2.length), Array.prototype.map.call(e2, t2, r2);
  } : function(e2, t2, r2) {
    for (var o2 = e2.length, i3 = Array(o2), a3 = "string" == typeof e2 ? e2.split("") : e2, n2 = 0; n2 < o2; n2++)
      n2 in a3 && (i3[n2] = t2.call(r2, a3[n2], n2, e2));
    return i3;
  }, goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function(e2, t2, r2, o2) {
    return goog.asserts.assert(null != e2.length), o2 && (t2 = goog.bind(t2, o2)), Array.prototype.reduce.call(e2, t2, r2);
  } : function(e2, t2, r2, o2) {
    var i3 = r2;
    return goog.array.forEach(e2, function(r3, a3) {
      i3 = t2.call(o2, i3, r3, a3, e2);
    }), i3;
  }, goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function(e2, t2, r2, o2) {
    return goog.asserts.assert(null != e2.length), goog.asserts.assert(null != t2), o2 && (t2 = goog.bind(t2, o2)), Array.prototype.reduceRight.call(e2, t2, r2);
  } : function(e2, t2, r2, o2) {
    var i3 = r2;
    return goog.array.forEachRight(e2, function(r3, a3) {
      i3 = t2.call(o2, i3, r3, a3, e2);
    }), i3;
  }, goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function(e2, t2, r2) {
    return goog.asserts.assert(null != e2.length), Array.prototype.some.call(e2, t2, r2);
  } : function(e2, t2, r2) {
    for (var o2 = e2.length, i3 = "string" == typeof e2 ? e2.split("") : e2, a3 = 0; a3 < o2; a3++)
      if (a3 in i3 && t2.call(r2, i3[a3], a3, e2))
        return true;
    return false;
  }, goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function(e2, t2, r2) {
    return goog.asserts.assert(null != e2.length), Array.prototype.every.call(e2, t2, r2);
  } : function(e2, t2, r2) {
    for (var o2 = e2.length, i3 = "string" == typeof e2 ? e2.split("") : e2, a3 = 0; a3 < o2; a3++)
      if (a3 in i3 && !t2.call(r2, i3[a3], a3, e2))
        return false;
    return true;
  }, goog.array.count = function(e2, t2, r2) {
    var o2 = 0;
    return goog.array.forEach(e2, function(e3, i3, a3) {
      t2.call(r2, e3, i3, a3) && ++o2;
    }, r2), o2;
  }, goog.array.find = function(e2, t2, r2) {
    return 0 > (t2 = goog.array.findIndex(e2, t2, r2)) ? null : "string" == typeof e2 ? e2.charAt(t2) : e2[t2];
  }, goog.array.findIndex = function(e2, t2, r2) {
    for (var o2 = e2.length, i3 = "string" == typeof e2 ? e2.split("") : e2, a3 = 0; a3 < o2; a3++)
      if (a3 in i3 && t2.call(r2, i3[a3], a3, e2))
        return a3;
    return -1;
  }, goog.array.findRight = function(e2, t2, r2) {
    return 0 > (t2 = goog.array.findIndexRight(e2, t2, r2)) ? null : "string" == typeof e2 ? e2.charAt(t2) : e2[t2];
  }, goog.array.findIndexRight = function(e2, t2, r2) {
    var o2 = e2.length, i3 = "string" == typeof e2 ? e2.split("") : e2;
    for (--o2; 0 <= o2; o2--)
      if (o2 in i3 && t2.call(r2, i3[o2], o2, e2))
        return o2;
    return -1;
  }, goog.array.contains = function(e2, t2) {
    return 0 <= goog.array.indexOf(e2, t2);
  }, goog.array.isEmpty = function(e2) {
    return 0 == e2.length;
  }, goog.array.clear = function(e2) {
    if (!Array.isArray(e2))
      for (var t2 = e2.length - 1; 0 <= t2; t2--)
        delete e2[t2];
    e2.length = 0;
  }, goog.array.insert = function(e2, t2) {
    goog.array.contains(e2, t2) || e2.push(t2);
  }, goog.array.insertAt = function(e2, t2, r2) {
    goog.array.splice(e2, r2, 0, t2);
  }, goog.array.insertArrayAt = function(e2, t2, r2) {
    goog.partial(goog.array.splice, e2, r2, 0).apply(null, t2);
  }, goog.array.insertBefore = function(e2, t2, r2) {
    var o2;
    2 == arguments.length || 0 > (o2 = goog.array.indexOf(e2, r2)) ? e2.push(t2) : goog.array.insertAt(e2, t2, o2);
  }, goog.array.remove = function(e2, t2) {
    var r2;
    return (r2 = 0 <= (t2 = goog.array.indexOf(e2, t2))) && goog.array.removeAt(e2, t2), r2;
  }, goog.array.removeLast = function(e2, t2) {
    return 0 <= (t2 = goog.array.lastIndexOf(e2, t2)) && (goog.array.removeAt(e2, t2), true);
  }, goog.array.removeAt = function(e2, t2) {
    return goog.asserts.assert(null != e2.length), 1 == Array.prototype.splice.call(e2, t2, 1).length;
  }, goog.array.removeIf = function(e2, t2, r2) {
    return 0 <= (t2 = goog.array.findIndex(e2, t2, r2)) && (goog.array.removeAt(e2, t2), true);
  }, goog.array.removeAllIf = function(e2, t2, r2) {
    var o2 = 0;
    return goog.array.forEachRight(e2, function(i3, a3) {
      t2.call(r2, i3, a3, e2) && goog.array.removeAt(e2, a3) && o2++;
    }), o2;
  }, goog.array.concat = function(e2) {
    return Array.prototype.concat.apply([], arguments);
  }, goog.array.join = function(e2) {
    return Array.prototype.concat.apply([], arguments);
  }, goog.array.toArray = function(e2) {
    var t2 = e2.length;
    if (0 < t2) {
      for (var r2 = Array(t2), o2 = 0; o2 < t2; o2++)
        r2[o2] = e2[o2];
      return r2;
    }
    return [];
  }, goog.array.clone = goog.array.toArray, goog.array.extend = function(e2, t2) {
    for (var r2 = 1; r2 < arguments.length; r2++) {
      var o2 = arguments[r2];
      if (goog.isArrayLike(o2)) {
        var i3 = e2.length || 0, a3 = o2.length || 0;
        e2.length = i3 + a3;
        for (var n2 = 0; n2 < a3; n2++)
          e2[i3 + n2] = o2[n2];
      } else
        e2.push(o2);
    }
  }, goog.array.splice = function(e2, t2, r2, o2) {
    return goog.asserts.assert(null != e2.length), Array.prototype.splice.apply(e2, goog.array.slice(arguments, 1));
  }, goog.array.slice = function(e2, t2, r2) {
    return goog.asserts.assert(null != e2.length), 2 >= arguments.length ? Array.prototype.slice.call(e2, t2) : Array.prototype.slice.call(e2, t2, r2);
  }, goog.array.removeDuplicates = function(e2, t2, r2) {
    t2 = t2 || e2;
    var o2 = function(e3) {
      return goog.isObject(e3) ? "o" + goog.getUid(e3) : (typeof e3).charAt(0) + e3;
    };
    r2 = r2 || o2, o2 = {};
    for (var i3 = 0, a3 = 0; a3 < e2.length; ) {
      var n2 = e2[a3++], s2 = r2(n2);
      Object.prototype.hasOwnProperty.call(o2, s2) || (o2[s2] = true, t2[i3++] = n2);
    }
    t2.length = i3;
  }, goog.array.binarySearch = function(e2, t2, r2) {
    return goog.array.binarySearch_(e2, r2 || goog.array.defaultCompare, false, t2);
  }, goog.array.binarySelect = function(e2, t2, r2) {
    return goog.array.binarySearch_(e2, t2, true, void 0, r2);
  }, goog.array.binarySearch_ = function(e2, t2, r2, o2, i3) {
    for (var a3, n2 = 0, s2 = e2.length; n2 < s2; ) {
      var p2 = n2 + (s2 - n2 >>> 1), d2 = r2 ? t2.call(i3, e2[p2], p2, e2) : t2(o2, e2[p2]);
      0 < d2 ? n2 = p2 + 1 : (s2 = p2, a3 = !d2);
    }
    return a3 ? n2 : -n2 - 1;
  }, goog.array.sort = function(e2, t2) {
    e2.sort(t2 || goog.array.defaultCompare);
  }, goog.array.stableSort = function(e2, t2) {
    for (var r2 = Array(e2.length), o2 = 0; o2 < e2.length; o2++)
      r2[o2] = { index: o2, value: e2[o2] };
    var i3 = t2 || goog.array.defaultCompare;
    for (goog.array.sort(r2, function(e3, t3) {
      return i3(e3.value, t3.value) || e3.index - t3.index;
    }), o2 = 0; o2 < e2.length; o2++)
      e2[o2] = r2[o2].value;
  }, goog.array.sortByKey = function(e2, t2, r2) {
    var o2 = r2 || goog.array.defaultCompare;
    goog.array.sort(e2, function(e3, r3) {
      return o2(t2(e3), t2(r3));
    });
  }, goog.array.sortObjectsByKey = function(e2, t2, r2) {
    goog.array.sortByKey(e2, function(e3) {
      return e3[t2];
    }, r2);
  }, goog.array.isSorted = function(e2, t2, r2) {
    t2 = t2 || goog.array.defaultCompare;
    for (var o2 = 1; o2 < e2.length; o2++) {
      var i3 = t2(e2[o2 - 1], e2[o2]);
      if (0 < i3 || 0 == i3 && r2)
        return false;
    }
    return true;
  }, goog.array.equals = function(e2, t2, r2) {
    if (!goog.isArrayLike(e2) || !goog.isArrayLike(t2) || e2.length != t2.length)
      return false;
    var o2 = e2.length;
    r2 = r2 || goog.array.defaultCompareEquality;
    for (var i3 = 0; i3 < o2; i3++)
      if (!r2(e2[i3], t2[i3]))
        return false;
    return true;
  }, goog.array.compare3 = function(e2, t2, r2) {
    r2 = r2 || goog.array.defaultCompare;
    for (var o2 = Math.min(e2.length, t2.length), i3 = 0; i3 < o2; i3++) {
      var a3 = r2(e2[i3], t2[i3]);
      if (0 != a3)
        return a3;
    }
    return goog.array.defaultCompare(e2.length, t2.length);
  }, goog.array.defaultCompare = function(e2, t2) {
    return e2 > t2 ? 1 : e2 < t2 ? -1 : 0;
  }, goog.array.inverseDefaultCompare = function(e2, t2) {
    return -goog.array.defaultCompare(e2, t2);
  }, goog.array.defaultCompareEquality = function(e2, t2) {
    return e2 === t2;
  }, goog.array.binaryInsert = function(e2, t2, r2) {
    return 0 > (r2 = goog.array.binarySearch(e2, t2, r2)) && (goog.array.insertAt(e2, t2, -(r2 + 1)), true);
  }, goog.array.binaryRemove = function(e2, t2, r2) {
    return 0 <= (t2 = goog.array.binarySearch(e2, t2, r2)) && goog.array.removeAt(e2, t2);
  }, goog.array.bucket = function(e2, t2, r2) {
    for (var o2 = {}, i3 = 0; i3 < e2.length; i3++) {
      var a3 = e2[i3], n2 = t2.call(r2, a3, i3, e2);
      void 0 !== n2 && (o2[n2] || (o2[n2] = [])).push(a3);
    }
    return o2;
  }, goog.array.toObject = function(e2, t2, r2) {
    var o2 = {};
    return goog.array.forEach(e2, function(i3, a3) {
      o2[t2.call(r2, i3, a3, e2)] = i3;
    }), o2;
  }, goog.array.range = function(e2, t2, r2) {
    var o2 = [], i3 = 0, a3 = e2;
    if (void 0 !== t2 && (i3 = e2, a3 = t2), 0 > (r2 = r2 || 1) * (a3 - i3))
      return [];
    if (0 < r2)
      for (e2 = i3; e2 < a3; e2 += r2)
        o2.push(e2);
    else
      for (e2 = i3; e2 > a3; e2 += r2)
        o2.push(e2);
    return o2;
  }, goog.array.repeat = function(e2, t2) {
    for (var r2 = [], o2 = 0; o2 < t2; o2++)
      r2[o2] = e2;
    return r2;
  }, goog.array.flatten = function(e2) {
    for (var t2 = [], r2 = 0; r2 < arguments.length; r2++) {
      var o2 = arguments[r2];
      if (Array.isArray(o2))
        for (var i3 = 0; i3 < o2.length; i3 += 8192) {
          var a3 = goog.array.slice(o2, i3, i3 + 8192);
          a3 = goog.array.flatten.apply(null, a3);
          for (var n2 = 0; n2 < a3.length; n2++)
            t2.push(a3[n2]);
        }
      else
        t2.push(o2);
    }
    return t2;
  }, goog.array.rotate = function(e2, t2) {
    return goog.asserts.assert(null != e2.length), e2.length && (0 < (t2 %= e2.length) ? Array.prototype.unshift.apply(e2, e2.splice(-t2, t2)) : 0 > t2 && Array.prototype.push.apply(e2, e2.splice(0, -t2))), e2;
  }, goog.array.moveItem = function(e2, t2, r2) {
    goog.asserts.assert(0 <= t2 && t2 < e2.length), goog.asserts.assert(0 <= r2 && r2 < e2.length), t2 = Array.prototype.splice.call(e2, t2, 1), Array.prototype.splice.call(e2, r2, 0, t2[0]);
  }, goog.array.zip = function(e2) {
    if (!arguments.length)
      return [];
    for (var t2 = [], r2 = arguments[0].length, o2 = 1; o2 < arguments.length; o2++)
      arguments[o2].length < r2 && (r2 = arguments[o2].length);
    for (o2 = 0; o2 < r2; o2++) {
      for (var i3 = [], a3 = 0; a3 < arguments.length; a3++)
        i3.push(arguments[a3][o2]);
      t2.push(i3);
    }
    return t2;
  }, goog.array.shuffle = function(e2, t2) {
    t2 = t2 || Math.random;
    for (var r2 = e2.length - 1; 0 < r2; r2--) {
      var o2 = Math.floor(t2() * (r2 + 1)), i3 = e2[r2];
      e2[r2] = e2[o2], e2[o2] = i3;
    }
  }, goog.array.copyByIndex = function(e2, t2) {
    var r2 = [];
    return goog.array.forEach(t2, function(t3) {
      r2.push(e2[t3]);
    }), r2;
  }, goog.array.concatMap = function(e2, t2, r2) {
    return goog.array.concat.apply([], goog.array.map(e2, t2, r2));
  }, goog.crypt = {}, goog.crypt.stringToByteArray = function(e2) {
    for (var t2 = [], r2 = 0, o2 = 0; o2 < e2.length; o2++) {
      var i3 = e2.charCodeAt(o2);
      255 < i3 && (t2[r2++] = 255 & i3, i3 >>= 8), t2[r2++] = i3;
    }
    return t2;
  }, goog.crypt.byteArrayToString = function(e2) {
    if (8192 >= e2.length)
      return String.fromCharCode.apply(null, e2);
    for (var t2 = "", r2 = 0; r2 < e2.length; r2 += 8192) {
      var o2 = goog.array.slice(e2, r2, r2 + 8192);
      t2 += String.fromCharCode.apply(null, o2);
    }
    return t2;
  }, goog.crypt.byteArrayToHex = function(e2, t2) {
    return goog.array.map(e2, function(e3) {
      return 1 < (e3 = e3.toString(16)).length ? e3 : "0" + e3;
    }).join(t2 || "");
  }, goog.crypt.hexToByteArray = function(e2) {
    goog.asserts.assert(0 == e2.length % 2, "Key string length must be multiple of 2");
    for (var t2 = [], r2 = 0; r2 < e2.length; r2 += 2)
      t2.push(parseInt(e2.substring(r2, r2 + 2), 16));
    return t2;
  }, goog.crypt.stringToUtf8ByteArray = function(e2) {
    for (var t2 = [], r2 = 0, o2 = 0; o2 < e2.length; o2++) {
      var i3 = e2.charCodeAt(o2);
      128 > i3 ? t2[r2++] = i3 : (2048 > i3 ? t2[r2++] = i3 >> 6 | 192 : (55296 == (64512 & i3) && o2 + 1 < e2.length && 56320 == (64512 & e2.charCodeAt(o2 + 1)) ? (i3 = 65536 + ((1023 & i3) << 10) + (1023 & e2.charCodeAt(++o2)), t2[r2++] = i3 >> 18 | 240, t2[r2++] = i3 >> 12 & 63 | 128) : t2[r2++] = i3 >> 12 | 224, t2[r2++] = i3 >> 6 & 63 | 128), t2[r2++] = 63 & i3 | 128);
    }
    return t2;
  }, goog.crypt.utf8ByteArrayToString = function(e2) {
    for (var t2 = [], r2 = 0, o2 = 0; r2 < e2.length; ) {
      var i3 = e2[r2++];
      if (128 > i3)
        t2[o2++] = String.fromCharCode(i3);
      else if (191 < i3 && 224 > i3) {
        var a3 = e2[r2++];
        t2[o2++] = String.fromCharCode((31 & i3) << 6 | 63 & a3);
      } else if (239 < i3 && 365 > i3) {
        a3 = e2[r2++];
        var n2 = e2[r2++];
        i3 = ((7 & i3) << 18 | (63 & a3) << 12 | (63 & n2) << 6 | 63 & e2[r2++]) - 65536, t2[o2++] = String.fromCharCode(55296 + (i3 >> 10)), t2[o2++] = String.fromCharCode(56320 + (1023 & i3));
      } else
        a3 = e2[r2++], n2 = e2[r2++], t2[o2++] = String.fromCharCode((15 & i3) << 12 | (63 & a3) << 6 | 63 & n2);
    }
    return t2.join("");
  }, goog.crypt.xorByteArray = function(e2, t2) {
    goog.asserts.assert(e2.length == t2.length, "XOR array lengths must match");
    for (var r2 = [], o2 = 0; o2 < e2.length; o2++)
      r2.push(e2[o2] ^ t2[o2]);
    return r2;
  }, goog.dom.asserts = {}, goog.dom.asserts.assertIsLocation = function(e2) {
    if (goog.asserts.ENABLE_ASSERTS) {
      var t2 = goog.dom.asserts.getWindow_(e2);
      t2 && (!e2 || !(e2 instanceof t2.Location) && e2 instanceof t2.Element) && goog.asserts.fail("Argument is not a Location (or a non-Element mock); got: %s", goog.dom.asserts.debugStringForType_(e2));
    }
    return e2;
  }, goog.dom.asserts.assertIsElementType_ = function(e2, t2) {
    if (goog.asserts.ENABLE_ASSERTS) {
      var r2 = goog.dom.asserts.getWindow_(e2);
      r2 && void 0 !== r2[t2] && (e2 && (e2 instanceof r2[t2] || !(e2 instanceof r2.Location || e2 instanceof r2.Element)) || goog.asserts.fail("Argument is not a %s (or a non-Element, non-Location mock); got: %s", t2, goog.dom.asserts.debugStringForType_(e2)));
    }
    return e2;
  }, goog.dom.asserts.assertIsHTMLAnchorElement = function(e2) {
    return goog.dom.asserts.assertIsElementType_(e2, "HTMLAnchorElement");
  }, goog.dom.asserts.assertIsHTMLButtonElement = function(e2) {
    return goog.dom.asserts.assertIsElementType_(e2, "HTMLButtonElement");
  }, goog.dom.asserts.assertIsHTMLLinkElement = function(e2) {
    return goog.dom.asserts.assertIsElementType_(e2, "HTMLLinkElement");
  }, goog.dom.asserts.assertIsHTMLImageElement = function(e2) {
    return goog.dom.asserts.assertIsElementType_(e2, "HTMLImageElement");
  }, goog.dom.asserts.assertIsHTMLAudioElement = function(e2) {
    return goog.dom.asserts.assertIsElementType_(e2, "HTMLAudioElement");
  }, goog.dom.asserts.assertIsHTMLVideoElement = function(e2) {
    return goog.dom.asserts.assertIsElementType_(e2, "HTMLVideoElement");
  }, goog.dom.asserts.assertIsHTMLInputElement = function(e2) {
    return goog.dom.asserts.assertIsElementType_(e2, "HTMLInputElement");
  }, goog.dom.asserts.assertIsHTMLTextAreaElement = function(e2) {
    return goog.dom.asserts.assertIsElementType_(e2, "HTMLTextAreaElement");
  }, goog.dom.asserts.assertIsHTMLCanvasElement = function(e2) {
    return goog.dom.asserts.assertIsElementType_(e2, "HTMLCanvasElement");
  }, goog.dom.asserts.assertIsHTMLEmbedElement = function(e2) {
    return goog.dom.asserts.assertIsElementType_(e2, "HTMLEmbedElement");
  }, goog.dom.asserts.assertIsHTMLFormElement = function(e2) {
    return goog.dom.asserts.assertIsElementType_(e2, "HTMLFormElement");
  }, goog.dom.asserts.assertIsHTMLFrameElement = function(e2) {
    return goog.dom.asserts.assertIsElementType_(e2, "HTMLFrameElement");
  }, goog.dom.asserts.assertIsHTMLIFrameElement = function(e2) {
    return goog.dom.asserts.assertIsElementType_(e2, "HTMLIFrameElement");
  }, goog.dom.asserts.assertIsHTMLObjectElement = function(e2) {
    return goog.dom.asserts.assertIsElementType_(e2, "HTMLObjectElement");
  }, goog.dom.asserts.assertIsHTMLScriptElement = function(e2) {
    return goog.dom.asserts.assertIsElementType_(e2, "HTMLScriptElement");
  }, goog.dom.asserts.debugStringForType_ = function(e2) {
    if (!goog.isObject(e2))
      return void 0 === e2 ? "undefined" : null === e2 ? "null" : typeof e2;
    try {
      return e2.constructor.displayName || e2.constructor.name || Object.prototype.toString.call(e2);
    } catch (e3) {
      return "<object could not be stringified>";
    }
  }, goog.dom.asserts.getWindow_ = function(e2) {
    try {
      var t2 = e2 && e2.ownerDocument, r2 = t2 && (t2.defaultView || t2.parentWindow);
      if ((r2 = r2 || goog.global).Element && r2.Location)
        return r2;
    } catch (e3) {
    }
    return null;
  }, goog.functions = {}, goog.functions.constant = function(e2) {
    return function() {
      return e2;
    };
  }, goog.functions.FALSE = function() {
    return false;
  }, goog.functions.TRUE = function() {
    return true;
  }, goog.functions.NULL = function() {
    return null;
  }, goog.functions.identity = function(e2, t2) {
    return e2;
  }, goog.functions.error = function(e2) {
    return function() {
      throw Error(e2);
    };
  }, goog.functions.fail = function(e2) {
    return function() {
      throw e2;
    };
  }, goog.functions.lock = function(e2, t2) {
    return t2 = t2 || 0, function() {
      return e2.apply(this, Array.prototype.slice.call(arguments, 0, t2));
    };
  }, goog.functions.nth = function(e2) {
    return function() {
      return arguments[e2];
    };
  }, goog.functions.partialRight = function(e2, t2) {
    var r2 = Array.prototype.slice.call(arguments, 1);
    return function() {
      var t3 = Array.prototype.slice.call(arguments);
      return t3.push.apply(t3, r2), e2.apply(this, t3);
    };
  }, goog.functions.withReturnValue = function(e2, t2) {
    return goog.functions.sequence(e2, goog.functions.constant(t2));
  }, goog.functions.equalTo = function(e2, t2) {
    return function(r2) {
      return t2 ? e2 == r2 : e2 === r2;
    };
  }, goog.functions.compose = function(e2, t2) {
    var r2 = arguments, o2 = r2.length;
    return function() {
      var e3;
      o2 && (e3 = r2[o2 - 1].apply(this, arguments));
      for (var t3 = o2 - 2; 0 <= t3; t3--)
        e3 = r2[t3].call(this, e3);
      return e3;
    };
  }, goog.functions.sequence = function(e2) {
    var t2 = arguments, r2 = t2.length;
    return function() {
      for (var e3, o2 = 0; o2 < r2; o2++)
        e3 = t2[o2].apply(this, arguments);
      return e3;
    };
  }, goog.functions.and = function(e2) {
    var t2 = arguments, r2 = t2.length;
    return function() {
      for (var e3 = 0; e3 < r2; e3++)
        if (!t2[e3].apply(this, arguments))
          return false;
      return true;
    };
  }, goog.functions.or = function(e2) {
    var t2 = arguments, r2 = t2.length;
    return function() {
      for (var e3 = 0; e3 < r2; e3++)
        if (t2[e3].apply(this, arguments))
          return true;
      return false;
    };
  }, goog.functions.not = function(e2) {
    return function() {
      return !e2.apply(this, arguments);
    };
  }, goog.functions.create = function(e2, t2) {
    var r2 = function() {
    };
    return r2.prototype = e2.prototype, r2 = new r2(), e2.apply(r2, Array.prototype.slice.call(arguments, 1)), r2;
  }, goog.functions.CACHE_RETURN_VALUE = true, goog.functions.cacheReturnValue = function(e2) {
    var t2, r2 = false;
    return function() {
      return goog.functions.CACHE_RETURN_VALUE ? (r2 || (t2 = e2(), r2 = true), t2) : e2();
    };
  }, goog.functions.once = function(e2) {
    var t2 = e2;
    return function() {
      if (t2) {
        var e3 = t2;
        t2 = null, e3();
      }
    };
  }, goog.functions.debounce = function(e2, t2, r2) {
    var o2 = 0;
    return function(i3) {
      goog.global.clearTimeout(o2);
      var a3 = arguments;
      o2 = goog.global.setTimeout(function() {
        e2.apply(r2, a3);
      }, t2);
    };
  }, goog.functions.throttle = function(e2, t2, r2) {
    var o2 = 0, i3 = false, a3 = [], n2 = function() {
      o2 = 0, i3 && (i3 = false, s2());
    }, s2 = function() {
      o2 = goog.global.setTimeout(n2, t2), e2.apply(r2, a3);
    };
    return function(e3) {
      a3 = arguments, o2 ? i3 = true : s2();
    };
  }, goog.functions.rateLimit = function(e2, t2, r2) {
    var o2 = 0, i3 = function() {
      o2 = 0;
    };
    return function(a3) {
      o2 || (o2 = goog.global.setTimeout(i3, t2), e2.apply(r2, arguments));
    };
  }, goog.dom.HtmlElement = function() {
  }, goog.dom.TagName = function(e2) {
    this.tagName_ = e2;
  }, goog.dom.TagName.prototype.toString = function() {
    return this.tagName_;
  }, goog.dom.TagName.A = new goog.dom.TagName("A"), goog.dom.TagName.ABBR = new goog.dom.TagName("ABBR"), goog.dom.TagName.ACRONYM = new goog.dom.TagName("ACRONYM"), goog.dom.TagName.ADDRESS = new goog.dom.TagName("ADDRESS"), goog.dom.TagName.APPLET = new goog.dom.TagName("APPLET"), goog.dom.TagName.AREA = new goog.dom.TagName("AREA"), goog.dom.TagName.ARTICLE = new goog.dom.TagName("ARTICLE"), goog.dom.TagName.ASIDE = new goog.dom.TagName("ASIDE"), goog.dom.TagName.AUDIO = new goog.dom.TagName("AUDIO"), goog.dom.TagName.B = new goog.dom.TagName("B"), goog.dom.TagName.BASE = new goog.dom.TagName("BASE"), goog.dom.TagName.BASEFONT = new goog.dom.TagName("BASEFONT"), goog.dom.TagName.BDI = new goog.dom.TagName("BDI"), goog.dom.TagName.BDO = new goog.dom.TagName("BDO"), goog.dom.TagName.BIG = new goog.dom.TagName("BIG"), goog.dom.TagName.BLOCKQUOTE = new goog.dom.TagName("BLOCKQUOTE"), goog.dom.TagName.BODY = new goog.dom.TagName("BODY"), goog.dom.TagName.BR = new goog.dom.TagName("BR"), goog.dom.TagName.BUTTON = new goog.dom.TagName("BUTTON"), goog.dom.TagName.CANVAS = new goog.dom.TagName("CANVAS"), goog.dom.TagName.CAPTION = new goog.dom.TagName("CAPTION"), goog.dom.TagName.CENTER = new goog.dom.TagName("CENTER"), goog.dom.TagName.CITE = new goog.dom.TagName("CITE"), goog.dom.TagName.CODE = new goog.dom.TagName("CODE"), goog.dom.TagName.COL = new goog.dom.TagName("COL"), goog.dom.TagName.COLGROUP = new goog.dom.TagName("COLGROUP"), goog.dom.TagName.COMMAND = new goog.dom.TagName("COMMAND"), goog.dom.TagName.DATA = new goog.dom.TagName("DATA"), goog.dom.TagName.DATALIST = new goog.dom.TagName("DATALIST"), goog.dom.TagName.DD = new goog.dom.TagName("DD"), goog.dom.TagName.DEL = new goog.dom.TagName("DEL"), goog.dom.TagName.DETAILS = new goog.dom.TagName("DETAILS"), goog.dom.TagName.DFN = new goog.dom.TagName("DFN"), goog.dom.TagName.DIALOG = new goog.dom.TagName("DIALOG"), goog.dom.TagName.DIR = new goog.dom.TagName("DIR"), goog.dom.TagName.DIV = new goog.dom.TagName("DIV"), goog.dom.TagName.DL = new goog.dom.TagName("DL"), goog.dom.TagName.DT = new goog.dom.TagName("DT"), goog.dom.TagName.EM = new goog.dom.TagName("EM"), goog.dom.TagName.EMBED = new goog.dom.TagName("EMBED"), goog.dom.TagName.FIELDSET = new goog.dom.TagName("FIELDSET"), goog.dom.TagName.FIGCAPTION = new goog.dom.TagName("FIGCAPTION"), goog.dom.TagName.FIGURE = new goog.dom.TagName("FIGURE"), goog.dom.TagName.FONT = new goog.dom.TagName("FONT"), goog.dom.TagName.FOOTER = new goog.dom.TagName("FOOTER"), goog.dom.TagName.FORM = new goog.dom.TagName("FORM"), goog.dom.TagName.FRAME = new goog.dom.TagName("FRAME"), goog.dom.TagName.FRAMESET = new goog.dom.TagName("FRAMESET"), goog.dom.TagName.H1 = new goog.dom.TagName("H1"), goog.dom.TagName.H2 = new goog.dom.TagName("H2"), goog.dom.TagName.H3 = new goog.dom.TagName("H3"), goog.dom.TagName.H4 = new goog.dom.TagName("H4"), goog.dom.TagName.H5 = new goog.dom.TagName("H5"), goog.dom.TagName.H6 = new goog.dom.TagName("H6"), goog.dom.TagName.HEAD = new goog.dom.TagName("HEAD"), goog.dom.TagName.HEADER = new goog.dom.TagName("HEADER"), goog.dom.TagName.HGROUP = new goog.dom.TagName("HGROUP"), goog.dom.TagName.HR = new goog.dom.TagName("HR"), goog.dom.TagName.HTML = new goog.dom.TagName("HTML"), goog.dom.TagName.I = new goog.dom.TagName("I"), goog.dom.TagName.IFRAME = new goog.dom.TagName("IFRAME"), goog.dom.TagName.IMG = new goog.dom.TagName("IMG"), goog.dom.TagName.INPUT = new goog.dom.TagName("INPUT"), goog.dom.TagName.INS = new goog.dom.TagName("INS"), goog.dom.TagName.ISINDEX = new goog.dom.TagName("ISINDEX"), goog.dom.TagName.KBD = new goog.dom.TagName("KBD"), goog.dom.TagName.KEYGEN = new goog.dom.TagName("KEYGEN"), goog.dom.TagName.LABEL = new goog.dom.TagName("LABEL"), goog.dom.TagName.LEGEND = new goog.dom.TagName("LEGEND"), goog.dom.TagName.LI = new goog.dom.TagName("LI"), goog.dom.TagName.LINK = new goog.dom.TagName("LINK"), goog.dom.TagName.MAIN = new goog.dom.TagName("MAIN"), goog.dom.TagName.MAP = new goog.dom.TagName("MAP"), goog.dom.TagName.MARK = new goog.dom.TagName("MARK"), goog.dom.TagName.MATH = new goog.dom.TagName("MATH"), goog.dom.TagName.MENU = new goog.dom.TagName("MENU"), goog.dom.TagName.MENUITEM = new goog.dom.TagName("MENUITEM"), goog.dom.TagName.META = new goog.dom.TagName("META"), goog.dom.TagName.METER = new goog.dom.TagName("METER"), goog.dom.TagName.NAV = new goog.dom.TagName("NAV"), goog.dom.TagName.NOFRAMES = new goog.dom.TagName("NOFRAMES"), goog.dom.TagName.NOSCRIPT = new goog.dom.TagName("NOSCRIPT"), goog.dom.TagName.OBJECT = new goog.dom.TagName("OBJECT"), goog.dom.TagName.OL = new goog.dom.TagName("OL"), goog.dom.TagName.OPTGROUP = new goog.dom.TagName("OPTGROUP"), goog.dom.TagName.OPTION = new goog.dom.TagName("OPTION"), goog.dom.TagName.OUTPUT = new goog.dom.TagName("OUTPUT"), goog.dom.TagName.P = new goog.dom.TagName("P"), goog.dom.TagName.PARAM = new goog.dom.TagName("PARAM"), goog.dom.TagName.PICTURE = new goog.dom.TagName("PICTURE"), goog.dom.TagName.PRE = new goog.dom.TagName("PRE"), goog.dom.TagName.PROGRESS = new goog.dom.TagName("PROGRESS"), goog.dom.TagName.Q = new goog.dom.TagName("Q"), goog.dom.TagName.RP = new goog.dom.TagName("RP"), goog.dom.TagName.RT = new goog.dom.TagName("RT"), goog.dom.TagName.RTC = new goog.dom.TagName("RTC"), goog.dom.TagName.RUBY = new goog.dom.TagName("RUBY"), goog.dom.TagName.S = new goog.dom.TagName("S"), goog.dom.TagName.SAMP = new goog.dom.TagName("SAMP"), goog.dom.TagName.SCRIPT = new goog.dom.TagName("SCRIPT"), goog.dom.TagName.SECTION = new goog.dom.TagName("SECTION"), goog.dom.TagName.SELECT = new goog.dom.TagName("SELECT"), goog.dom.TagName.SMALL = new goog.dom.TagName("SMALL"), goog.dom.TagName.SOURCE = new goog.dom.TagName("SOURCE"), goog.dom.TagName.SPAN = new goog.dom.TagName("SPAN"), goog.dom.TagName.STRIKE = new goog.dom.TagName("STRIKE"), goog.dom.TagName.STRONG = new goog.dom.TagName("STRONG"), goog.dom.TagName.STYLE = new goog.dom.TagName("STYLE"), goog.dom.TagName.SUB = new goog.dom.TagName("SUB"), goog.dom.TagName.SUMMARY = new goog.dom.TagName("SUMMARY"), goog.dom.TagName.SUP = new goog.dom.TagName("SUP"), goog.dom.TagName.SVG = new goog.dom.TagName("SVG"), goog.dom.TagName.TABLE = new goog.dom.TagName("TABLE"), goog.dom.TagName.TBODY = new goog.dom.TagName("TBODY"), goog.dom.TagName.TD = new goog.dom.TagName("TD"), goog.dom.TagName.TEMPLATE = new goog.dom.TagName("TEMPLATE"), goog.dom.TagName.TEXTAREA = new goog.dom.TagName("TEXTAREA"), goog.dom.TagName.TFOOT = new goog.dom.TagName("TFOOT"), goog.dom.TagName.TH = new goog.dom.TagName("TH"), goog.dom.TagName.THEAD = new goog.dom.TagName("THEAD"), goog.dom.TagName.TIME = new goog.dom.TagName("TIME"), goog.dom.TagName.TITLE = new goog.dom.TagName("TITLE"), goog.dom.TagName.TR = new goog.dom.TagName("TR"), goog.dom.TagName.TRACK = new goog.dom.TagName("TRACK"), goog.dom.TagName.TT = new goog.dom.TagName("TT"), goog.dom.TagName.U = new goog.dom.TagName("U"), goog.dom.TagName.UL = new goog.dom.TagName("UL"), goog.dom.TagName.VAR = new goog.dom.TagName("VAR"), goog.dom.TagName.VIDEO = new goog.dom.TagName("VIDEO"), goog.dom.TagName.WBR = new goog.dom.TagName("WBR"), goog.dom.tags = {}, goog.dom.tags.VOID_TAGS_ = { area: true, base: true, br: true, col: true, command: true, embed: true, hr: true, img: true, input: true, keygen: true, link: true, meta: true, param: true, source: true, track: true, wbr: true }, goog.dom.tags.isVoidTag = function(e2) {
    return true === goog.dom.tags.VOID_TAGS_[e2];
  }, goog.html = {}, goog.html.trustedtypes = {}, goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY = goog.TRUSTED_TYPES_POLICY_NAME ? goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + "#html") : null, goog.string = {}, goog.string.TypedString = function() {
  }, goog.string.Const = function(e2, t2) {
    this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = e2 === goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ && t2 || "", this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ = goog.string.Const.TYPE_MARKER_;
  }, goog.string.Const.prototype.implementsGoogStringTypedString = true, goog.string.Const.prototype.getTypedStringValue = function() {
    return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
  }, goog.DEBUG && (goog.string.Const.prototype.toString = function() {
    return "Const{" + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + "}";
  }), goog.string.Const.unwrap = function(e2) {
    return e2 instanceof goog.string.Const && e2.constructor === goog.string.Const && e2.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ === goog.string.Const.TYPE_MARKER_ ? e2.stringConstValueWithSecurityContract__googStringSecurityPrivate_ : (goog.asserts.fail("expected object of type Const, got '" + e2 + "'"), "type_error:Const");
  }, goog.string.Const.from = function(e2) {
    return new goog.string.Const(goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_, e2);
  }, goog.string.Const.TYPE_MARKER_ = {}, goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ = {}, goog.string.Const.EMPTY = goog.string.Const.from(""), goog.html.SafeScript = function() {
    this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = "", this.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
  }, goog.html.SafeScript.prototype.implementsGoogStringTypedString = true, goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {}, goog.html.SafeScript.fromConstant = function(e2) {
    return 0 === (e2 = goog.string.Const.unwrap(e2)).length ? goog.html.SafeScript.EMPTY : goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(e2);
  }, goog.html.SafeScript.fromConstantAndArgs = function(e2, t2) {
    for (var r2 = [], o2 = 1; o2 < arguments.length; o2++)
      r2.push(goog.html.SafeScript.stringify_(arguments[o2]));
    return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("(" + goog.string.Const.unwrap(e2) + ")(" + r2.join(", ") + ");");
  }, goog.html.SafeScript.fromJson = function(e2) {
    return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(goog.html.SafeScript.stringify_(e2));
  }, goog.html.SafeScript.prototype.getTypedStringValue = function() {
    return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString();
  }, goog.DEBUG && (goog.html.SafeScript.prototype.toString = function() {
    return "SafeScript{" + this.privateDoNotAccessOrElseSafeScriptWrappedValue_ + "}";
  }), goog.html.SafeScript.unwrap = function(e2) {
    return goog.html.SafeScript.unwrapTrustedScript(e2).toString();
  }, goog.html.SafeScript.unwrapTrustedScript = function(e2) {
    return e2 instanceof goog.html.SafeScript && e2.constructor === goog.html.SafeScript && e2.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ ? e2.privateDoNotAccessOrElseSafeScriptWrappedValue_ : (goog.asserts.fail("expected object of type SafeScript, got '" + e2 + "' of type " + goog.typeOf(e2)), "type_error:SafeScript");
  }, goog.html.SafeScript.stringify_ = function(e2) {
    return JSON.stringify(e2).replace(/</g, "\\x3c");
  }, goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse = function(e2) {
    return new goog.html.SafeScript().initSecurityPrivateDoNotAccessOrElse_(e2);
  }, goog.html.SafeScript.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(e2) {
    return this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY ? goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createScript(e2) : e2, this;
  }, goog.html.SafeScript.EMPTY = goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(""), goog.fs = {}, goog.fs.url = {}, goog.fs.url.createObjectUrl = function(e2) {
    return goog.fs.url.getUrlObject_().createObjectURL(e2);
  }, goog.fs.url.revokeObjectUrl = function(e2) {
    goog.fs.url.getUrlObject_().revokeObjectURL(e2);
  }, goog.fs.url.UrlObject_ = function() {
  }, goog.fs.url.UrlObject_.prototype.createObjectURL = function(e2) {
  }, goog.fs.url.UrlObject_.prototype.revokeObjectURL = function(e2) {
  }, goog.fs.url.getUrlObject_ = function() {
    var e2 = goog.fs.url.findUrlObject_();
    if (null != e2)
      return e2;
    throw Error("This browser doesn't seem to support blob URLs");
  }, goog.fs.url.findUrlObject_ = function() {
    return void 0 !== goog.global.URL && void 0 !== goog.global.URL.createObjectURL ? goog.global.URL : void 0 !== goog.global.webkitURL && void 0 !== goog.global.webkitURL.createObjectURL ? goog.global.webkitURL : void 0 !== goog.global.createObjectURL ? goog.global : null;
  }, goog.fs.url.browserSupportsObjectUrls = function() {
    return null != goog.fs.url.findUrlObject_();
  }, goog.fs.blob = {}, goog.fs.blob.getBlob = function(e2) {
    var t2 = goog.global.BlobBuilder || goog.global.WebKitBlobBuilder;
    if (void 0 !== t2) {
      t2 = new t2();
      for (var r2 = 0; r2 < arguments.length; r2++)
        t2.append(arguments[r2]);
      return t2.getBlob();
    }
    return goog.fs.blob.getBlobWithProperties(goog.array.toArray(arguments));
  }, goog.fs.blob.getBlobWithProperties = function(e2, t2, r2) {
    var o2 = goog.global.BlobBuilder || goog.global.WebKitBlobBuilder;
    if (void 0 !== o2) {
      o2 = new o2();
      for (var i3 = 0; i3 < e2.length; i3++)
        o2.append(e2[i3], r2);
      return o2.getBlob(t2);
    }
    if (void 0 !== goog.global.Blob)
      return o2 = {}, t2 && (o2.type = t2), r2 && (o2.endings = r2), new Blob(e2, o2);
    throw Error("This browser doesn't seem to support creating Blobs");
  }, goog.i18n = {}, goog.i18n.bidi = {}, goog.i18n.bidi.FORCE_RTL = false, goog.i18n.bidi.IS_RTL = goog.i18n.bidi.FORCE_RTL || ("ar" == goog.LOCALE.substring(0, 2).toLowerCase() || "fa" == goog.LOCALE.substring(0, 2).toLowerCase() || "he" == goog.LOCALE.substring(0, 2).toLowerCase() || "iw" == goog.LOCALE.substring(0, 2).toLowerCase() || "ps" == goog.LOCALE.substring(0, 2).toLowerCase() || "sd" == goog.LOCALE.substring(0, 2).toLowerCase() || "ug" == goog.LOCALE.substring(0, 2).toLowerCase() || "ur" == goog.LOCALE.substring(0, 2).toLowerCase() || "yi" == goog.LOCALE.substring(0, 2).toLowerCase()) && (2 == goog.LOCALE.length || "-" == goog.LOCALE.substring(2, 3) || "_" == goog.LOCALE.substring(2, 3)) || 3 <= goog.LOCALE.length && "ckb" == goog.LOCALE.substring(0, 3).toLowerCase() && (3 == goog.LOCALE.length || "-" == goog.LOCALE.substring(3, 4) || "_" == goog.LOCALE.substring(3, 4)) || 7 <= goog.LOCALE.length && ("-" == goog.LOCALE.substring(2, 3) || "_" == goog.LOCALE.substring(2, 3)) && ("adlm" == goog.LOCALE.substring(3, 7).toLowerCase() || "arab" == goog.LOCALE.substring(3, 7).toLowerCase() || "hebr" == goog.LOCALE.substring(3, 7).toLowerCase() || "nkoo" == goog.LOCALE.substring(3, 7).toLowerCase() || "rohg" == goog.LOCALE.substring(3, 7).toLowerCase() || "thaa" == goog.LOCALE.substring(3, 7).toLowerCase()) || 8 <= goog.LOCALE.length && ("-" == goog.LOCALE.substring(3, 4) || "_" == goog.LOCALE.substring(3, 4)) && ("adlm" == goog.LOCALE.substring(4, 8).toLowerCase() || "arab" == goog.LOCALE.substring(4, 8).toLowerCase() || "hebr" == goog.LOCALE.substring(4, 8).toLowerCase() || "nkoo" == goog.LOCALE.substring(4, 8).toLowerCase() || "rohg" == goog.LOCALE.substring(4, 8).toLowerCase() || "thaa" == goog.LOCALE.substring(4, 8).toLowerCase()), goog.i18n.bidi.Format = { LRE: "‪", RLE: "‫", PDF: "‬", LRM: "‎", RLM: "‏" }, goog.i18n.bidi.Dir = { LTR: 1, RTL: -1, NEUTRAL: 0 }, goog.i18n.bidi.RIGHT = "right", goog.i18n.bidi.LEFT = "left", goog.i18n.bidi.I18N_RIGHT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT, goog.i18n.bidi.I18N_LEFT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT, goog.i18n.bidi.toDir = function(e2, t2) {
    return "number" == typeof e2 ? 0 < e2 ? goog.i18n.bidi.Dir.LTR : 0 > e2 ? goog.i18n.bidi.Dir.RTL : t2 ? null : goog.i18n.bidi.Dir.NEUTRAL : null == e2 ? null : e2 ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
  }, goog.i18n.bidi.ltrChars_ = "A-Za-zÀ-ÖØ-öø-ʸ̀-֐ऀ-῿‎Ⰰ-\uD801\uD804-\uD839\uD83C-\uDBFF豈-﬜︀-﹯﻽-￿", goog.i18n.bidi.rtlChars_ = "֑-ۯۺ-ࣿ‏\uD802-\uD803\uD83A-\uD83Bיִ-﷿ﹰ-ﻼ", goog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g, goog.i18n.bidi.stripHtmlIfNeeded_ = function(e2, t2) {
    return t2 ? e2.replace(goog.i18n.bidi.htmlSkipReg_, "") : e2;
  }, goog.i18n.bidi.rtlCharReg_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]"), goog.i18n.bidi.ltrCharReg_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]"), goog.i18n.bidi.hasAnyRtl = function(e2, t2) {
    return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(e2, t2));
  }, goog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl, goog.i18n.bidi.hasAnyLtr = function(e2, t2) {
    return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(e2, t2));
  }, goog.i18n.bidi.ltrRe_ = new RegExp("^[" + goog.i18n.bidi.ltrChars_ + "]"), goog.i18n.bidi.rtlRe_ = new RegExp("^[" + goog.i18n.bidi.rtlChars_ + "]"), goog.i18n.bidi.isRtlChar = function(e2) {
    return goog.i18n.bidi.rtlRe_.test(e2);
  }, goog.i18n.bidi.isLtrChar = function(e2) {
    return goog.i18n.bidi.ltrRe_.test(e2);
  }, goog.i18n.bidi.isNeutralChar = function(e2) {
    return !goog.i18n.bidi.isLtrChar(e2) && !goog.i18n.bidi.isRtlChar(e2);
  }, goog.i18n.bidi.ltrDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.rtlChars_ + "]*[" + goog.i18n.bidi.ltrChars_ + "]"), goog.i18n.bidi.rtlDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.ltrChars_ + "]*[" + goog.i18n.bidi.rtlChars_ + "]"), goog.i18n.bidi.startsWithRtl = function(e2, t2) {
    return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(e2, t2));
  }, goog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl, goog.i18n.bidi.startsWithLtr = function(e2, t2) {
    return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(e2, t2));
  }, goog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr, goog.i18n.bidi.isRequiredLtrRe_ = /^http:\/\/.*/, goog.i18n.bidi.isNeutralText = function(e2, t2) {
    return e2 = goog.i18n.bidi.stripHtmlIfNeeded_(e2, t2), goog.i18n.bidi.isRequiredLtrRe_.test(e2) || !goog.i18n.bidi.hasAnyLtr(e2) && !goog.i18n.bidi.hasAnyRtl(e2);
  }, goog.i18n.bidi.ltrExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "][^" + goog.i18n.bidi.rtlChars_ + "]*$"), goog.i18n.bidi.rtlExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "][^" + goog.i18n.bidi.ltrChars_ + "]*$"), goog.i18n.bidi.endsWithLtr = function(e2, t2) {
    return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(e2, t2));
  }, goog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr, goog.i18n.bidi.endsWithRtl = function(e2, t2) {
    return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(e2, t2));
  }, goog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl, goog.i18n.bidi.rtlLocalesRe_ = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i, goog.i18n.bidi.isRtlLanguage = function(e2) {
    return goog.i18n.bidi.rtlLocalesRe_.test(e2);
  }, goog.i18n.bidi.bracketGuardTextRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g, goog.i18n.bidi.guardBracketInText = function(e2, t2) {
    return t2 = (void 0 === t2 ? goog.i18n.bidi.hasAnyRtl(e2) : t2) ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM, e2.replace(goog.i18n.bidi.bracketGuardTextRe_, t2 + "$&" + t2);
  }, goog.i18n.bidi.enforceRtlInHtml = function(e2) {
    return "<" == e2.charAt(0) ? e2.replace(/<\w+/, "$& dir=rtl") : "\n<span dir=rtl>" + e2 + "</span>";
  }, goog.i18n.bidi.enforceRtlInText = function(e2) {
    return goog.i18n.bidi.Format.RLE + e2 + goog.i18n.bidi.Format.PDF;
  }, goog.i18n.bidi.enforceLtrInHtml = function(e2) {
    return "<" == e2.charAt(0) ? e2.replace(/<\w+/, "$& dir=ltr") : "\n<span dir=ltr>" + e2 + "</span>";
  }, goog.i18n.bidi.enforceLtrInText = function(e2) {
    return goog.i18n.bidi.Format.LRE + e2 + goog.i18n.bidi.Format.PDF;
  }, goog.i18n.bidi.dimensionsRe_ = /:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g, goog.i18n.bidi.leftRe_ = /left/gi, goog.i18n.bidi.rightRe_ = /right/gi, goog.i18n.bidi.tempRe_ = /%%%%/g, goog.i18n.bidi.mirrorCSS = function(e2) {
    return e2.replace(goog.i18n.bidi.dimensionsRe_, ":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_, "%%%%").replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);
  }, goog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\u0591-\u05f2])"/g, goog.i18n.bidi.singleQuoteSubstituteRe_ = /([\u0591-\u05f2])'/g, goog.i18n.bidi.normalizeHebrewQuote = function(e2) {
    return e2.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, "$1״").replace(goog.i18n.bidi.singleQuoteSubstituteRe_, "$1׳");
  }, goog.i18n.bidi.wordSeparatorRe_ = /\s+/, goog.i18n.bidi.hasNumeralsRe_ = /[\d\u06f0-\u06f9]/, goog.i18n.bidi.rtlDetectionThreshold_ = 0.4, goog.i18n.bidi.estimateDirection = function(e2, t2) {
    var r2 = 0, o2 = 0, i3 = false;
    for (e2 = goog.i18n.bidi.stripHtmlIfNeeded_(e2, t2).split(goog.i18n.bidi.wordSeparatorRe_), t2 = 0; t2 < e2.length; t2++) {
      var a3 = e2[t2];
      goog.i18n.bidi.startsWithRtl(a3) ? (r2++, o2++) : goog.i18n.bidi.isRequiredLtrRe_.test(a3) ? i3 = true : goog.i18n.bidi.hasAnyLtr(a3) ? o2++ : goog.i18n.bidi.hasNumeralsRe_.test(a3) && (i3 = true);
    }
    return 0 == o2 ? i3 ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : r2 / o2 > goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
  }, goog.i18n.bidi.detectRtlDirectionality = function(e2, t2) {
    return goog.i18n.bidi.estimateDirection(e2, t2) == goog.i18n.bidi.Dir.RTL;
  }, goog.i18n.bidi.setElementDirAndAlign = function(e2, t2) {
    e2 && (t2 = goog.i18n.bidi.toDir(t2)) && (e2.style.textAlign = t2 == goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT, e2.dir = t2 == goog.i18n.bidi.Dir.RTL ? "rtl" : "ltr");
  }, goog.i18n.bidi.setElementDirByTextDirectionality = function(e2, t2) {
    switch (goog.i18n.bidi.estimateDirection(t2)) {
      case goog.i18n.bidi.Dir.LTR:
        e2.dir = "ltr";
        break;
      case goog.i18n.bidi.Dir.RTL:
        e2.dir = "rtl";
        break;
      default:
        e2.removeAttribute("dir");
    }
  }, goog.i18n.bidi.DirectionalString = function() {
  }, goog.html.TrustedResourceUrl = function(e2, t2) {
    this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = e2 === goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_ && t2 || "", this.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
  }, goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString = true, goog.html.TrustedResourceUrl.prototype.getTypedStringValue = function() {
    return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_.toString();
  }, goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString = true, goog.html.TrustedResourceUrl.prototype.getDirection = function() {
    return goog.i18n.bidi.Dir.LTR;
  }, goog.html.TrustedResourceUrl.prototype.cloneWithParams = function(e2, t2) {
    var r2 = goog.html.TrustedResourceUrl.unwrap(this), o2 = (r2 = goog.html.TrustedResourceUrl.URL_PARAM_PARSER_.exec(r2))[3] || "";
    return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(r2[1] + goog.html.TrustedResourceUrl.stringifyParams_("?", r2[2] || "", e2) + goog.html.TrustedResourceUrl.stringifyParams_("#", o2, t2));
  }, goog.DEBUG && (goog.html.TrustedResourceUrl.prototype.toString = function() {
    return "TrustedResourceUrl{" + this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ + "}";
  }), goog.html.TrustedResourceUrl.unwrap = function(e2) {
    return goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(e2).toString();
  }, goog.html.TrustedResourceUrl.unwrapTrustedScriptURL = function(e2) {
    return e2 instanceof goog.html.TrustedResourceUrl && e2.constructor === goog.html.TrustedResourceUrl && e2.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ ? e2.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ : (goog.asserts.fail("expected object of type TrustedResourceUrl, got '" + e2 + "' of type " + goog.typeOf(e2)), "type_error:TrustedResourceUrl");
  }, goog.html.TrustedResourceUrl.format = function(e2, t2) {
    var r2 = goog.string.Const.unwrap(e2);
    if (!goog.html.TrustedResourceUrl.BASE_URL_.test(r2))
      throw Error("Invalid TrustedResourceUrl format: " + r2);
    return e2 = r2.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_, function(e3, o2) {
      if (!Object.prototype.hasOwnProperty.call(t2, o2))
        throw Error('Found marker, "' + o2 + '", in format string, "' + r2 + '", but no valid label mapping found in args: ' + JSON.stringify(t2));
      return (e3 = t2[o2]) instanceof goog.string.Const ? goog.string.Const.unwrap(e3) : encodeURIComponent(String(e3));
    }), goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(e2);
  }, goog.html.TrustedResourceUrl.FORMAT_MARKER_ = /%{(\w+)}/g, goog.html.TrustedResourceUrl.BASE_URL_ = /^((https:)?\/\/[0-9a-z.:[\]-]+\/|\/[^/\\]|[^:/\\%]+\/|[^:/\\%]*[?#]|about:blank#)/i, goog.html.TrustedResourceUrl.URL_PARAM_PARSER_ = /^([^?#]*)(\?[^#]*)?(#[\s\S]*)?/, goog.html.TrustedResourceUrl.formatWithParams = function(e2, t2, r2, o2) {
    return goog.html.TrustedResourceUrl.format(e2, t2).cloneWithParams(r2, o2);
  }, goog.html.TrustedResourceUrl.fromConstant = function(e2) {
    return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(e2));
  }, goog.html.TrustedResourceUrl.fromConstants = function(e2) {
    for (var t2 = "", r2 = 0; r2 < e2.length; r2++)
      t2 += goog.string.Const.unwrap(e2[r2]);
    return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(t2);
  }, goog.html.TrustedResourceUrl.fromSafeScript = function(e2) {
    return e2 = goog.fs.blob.getBlobWithProperties([goog.html.SafeScript.unwrap(e2)], "text/javascript"), e2 = goog.fs.url.createObjectUrl(e2), goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(e2);
  }, goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {}, goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse = function(e2) {
    return e2 = goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY ? goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createScriptURL(e2) : e2, new goog.html.TrustedResourceUrl(goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_, e2);
  }, goog.html.TrustedResourceUrl.stringifyParams_ = function(e2, t2, r2) {
    if (null == r2)
      return t2;
    if ("string" == typeof r2)
      return r2 ? e2 + encodeURIComponent(r2) : "";
    for (var o2 in r2) {
      var i3 = r2[o2];
      i3 = Array.isArray(i3) ? i3 : [i3];
      for (var a3 = 0; a3 < i3.length; a3++) {
        var n2 = i3[a3];
        null != n2 && (t2 || (t2 = e2), t2 += (t2.length > e2.length ? "&" : "") + encodeURIComponent(o2) + "=" + encodeURIComponent(String(n2)));
      }
    }
    return t2;
  }, goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_ = {}, goog.string.internal = {}, goog.string.internal.startsWith = function(e2, t2) {
    return 0 == e2.lastIndexOf(t2, 0);
  }, goog.string.internal.endsWith = function(e2, t2) {
    var r2 = e2.length - t2.length;
    return 0 <= r2 && e2.indexOf(t2, r2) == r2;
  }, goog.string.internal.caseInsensitiveStartsWith = function(e2, t2) {
    return 0 == goog.string.internal.caseInsensitiveCompare(t2, e2.substr(0, t2.length));
  }, goog.string.internal.caseInsensitiveEndsWith = function(e2, t2) {
    return 0 == goog.string.internal.caseInsensitiveCompare(t2, e2.substr(e2.length - t2.length, t2.length));
  }, goog.string.internal.caseInsensitiveEquals = function(e2, t2) {
    return e2.toLowerCase() == t2.toLowerCase();
  }, goog.string.internal.isEmptyOrWhitespace = function(e2) {
    return /^[\s\xa0]*$/.test(e2);
  }, goog.string.internal.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(e2) {
    return e2.trim();
  } : function(e2) {
    return /^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(e2)[1];
  }, goog.string.internal.caseInsensitiveCompare = function(e2, t2) {
    return (e2 = String(e2).toLowerCase()) < (t2 = String(t2).toLowerCase()) ? -1 : e2 == t2 ? 0 : 1;
  }, goog.string.internal.newLineToBr = function(e2, t2) {
    return e2.replace(/(\r\n|\r|\n)/g, t2 ? "<br />" : "<br>");
  }, goog.string.internal.htmlEscape = function(e2, t2) {
    if (t2)
      e2 = e2.replace(goog.string.internal.AMP_RE_, "&amp;").replace(goog.string.internal.LT_RE_, "&lt;").replace(goog.string.internal.GT_RE_, "&gt;").replace(goog.string.internal.QUOT_RE_, "&quot;").replace(goog.string.internal.SINGLE_QUOTE_RE_, "&#39;").replace(goog.string.internal.NULL_RE_, "&#0;");
    else {
      if (!goog.string.internal.ALL_RE_.test(e2))
        return e2;
      -1 != e2.indexOf("&") && (e2 = e2.replace(goog.string.internal.AMP_RE_, "&amp;")), -1 != e2.indexOf("<") && (e2 = e2.replace(goog.string.internal.LT_RE_, "&lt;")), -1 != e2.indexOf(">") && (e2 = e2.replace(goog.string.internal.GT_RE_, "&gt;")), -1 != e2.indexOf('"') && (e2 = e2.replace(goog.string.internal.QUOT_RE_, "&quot;")), -1 != e2.indexOf("'") && (e2 = e2.replace(goog.string.internal.SINGLE_QUOTE_RE_, "&#39;")), -1 != e2.indexOf("\0") && (e2 = e2.replace(goog.string.internal.NULL_RE_, "&#0;"));
    }
    return e2;
  }, goog.string.internal.AMP_RE_ = /&/g, goog.string.internal.LT_RE_ = /</g, goog.string.internal.GT_RE_ = />/g, goog.string.internal.QUOT_RE_ = /"/g, goog.string.internal.SINGLE_QUOTE_RE_ = /'/g, goog.string.internal.NULL_RE_ = /\x00/g, goog.string.internal.ALL_RE_ = /[\x00&<>"']/, goog.string.internal.whitespaceEscape = function(e2, t2) {
    return goog.string.internal.newLineToBr(e2.replace(/  /g, " &#160;"), t2);
  }, goog.string.internal.contains = function(e2, t2) {
    return -1 != e2.indexOf(t2);
  }, goog.string.internal.caseInsensitiveContains = function(e2, t2) {
    return goog.string.internal.contains(e2.toLowerCase(), t2.toLowerCase());
  }, goog.string.internal.compareVersions = function(e2, t2) {
    var r2 = 0;
    e2 = goog.string.internal.trim(String(e2)).split("."), t2 = goog.string.internal.trim(String(t2)).split(".");
    for (var o2 = Math.max(e2.length, t2.length), i3 = 0; 0 == r2 && i3 < o2; i3++) {
      var a3 = e2[i3] || "", n2 = t2[i3] || "";
      do {
        if (a3 = /(\d*)(\D*)(.*)/.exec(a3) || ["", "", "", ""], n2 = /(\d*)(\D*)(.*)/.exec(n2) || ["", "", "", ""], 0 == a3[0].length && 0 == n2[0].length)
          break;
        r2 = 0 == a3[1].length ? 0 : parseInt(a3[1], 10);
        var s2 = 0 == n2[1].length ? 0 : parseInt(n2[1], 10);
        r2 = goog.string.internal.compareElements_(r2, s2) || goog.string.internal.compareElements_(0 == a3[2].length, 0 == n2[2].length) || goog.string.internal.compareElements_(a3[2], n2[2]), a3 = a3[3], n2 = n2[3];
      } while (0 == r2);
    }
    return r2;
  }, goog.string.internal.compareElements_ = function(e2, t2) {
    return e2 < t2 ? -1 : e2 > t2 ? 1 : 0;
  }, goog.html.SafeUrl = function(e2, t2) {
    this.privateDoNotAccessOrElseSafeUrlWrappedValue_ = e2 === goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_ && t2 || "", this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
  }, goog.html.SafeUrl.INNOCUOUS_STRING = "about:invalid#zClosurez", goog.html.SafeUrl.prototype.implementsGoogStringTypedString = true, goog.html.SafeUrl.prototype.getTypedStringValue = function() {
    return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString();
  }, goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = true, goog.html.SafeUrl.prototype.getDirection = function() {
    return goog.i18n.bidi.Dir.LTR;
  }, goog.DEBUG && (goog.html.SafeUrl.prototype.toString = function() {
    return "SafeUrl{" + this.privateDoNotAccessOrElseSafeUrlWrappedValue_ + "}";
  }), goog.html.SafeUrl.unwrap = function(e2) {
    return e2 instanceof goog.html.SafeUrl && e2.constructor === goog.html.SafeUrl && e2.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ ? e2.privateDoNotAccessOrElseSafeUrlWrappedValue_ : (goog.asserts.fail("expected object of type SafeUrl, got '" + e2 + "' of type " + goog.typeOf(e2)), "type_error:SafeUrl");
  }, goog.html.SafeUrl.fromConstant = function(e2) {
    return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(e2));
  }, goog.html.SAFE_MIME_TYPE_PATTERN_ = /^(?:audio\/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-matroska|x-wav|wav|webm)|image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon)|text\/csv|video\/(?:mpeg|mp4|ogg|webm|quicktime|x-matroska))(?:;\w+=(?:\w+|"[\w;,= ]+"))*$/i, goog.html.SafeUrl.isSafeMimeType = function(e2) {
    return goog.html.SAFE_MIME_TYPE_PATTERN_.test(e2);
  }, goog.html.SafeUrl.fromBlob = function(e2) {
    return e2 = goog.html.SafeUrl.isSafeMimeType(e2.type) ? goog.fs.url.createObjectUrl(e2) : goog.html.SafeUrl.INNOCUOUS_STRING, goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e2);
  }, goog.html.SafeUrl.fromMediaSource = function(e2) {
    return goog.asserts.assert("MediaSource" in goog.global, "No support for MediaSource"), e2 = e2 instanceof MediaSource ? goog.fs.url.createObjectUrl(e2) : goog.html.SafeUrl.INNOCUOUS_STRING, goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e2);
  }, goog.html.DATA_URL_PATTERN_ = /^data:(.*);base64,[a-z0-9+\/]+=*$/i, goog.html.SafeUrl.fromDataUrl = function(e2) {
    var t2 = (e2 = e2.replace(/(%0A|%0D)/g, "")).match(goog.html.DATA_URL_PATTERN_);
    return t2 = t2 && goog.html.SafeUrl.isSafeMimeType(t2[1]), goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(t2 ? e2 : goog.html.SafeUrl.INNOCUOUS_STRING);
  }, goog.html.SafeUrl.fromTelUrl = function(e2) {
    return goog.string.internal.caseInsensitiveStartsWith(e2, "tel:") || (e2 = goog.html.SafeUrl.INNOCUOUS_STRING), goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e2);
  }, goog.html.SIP_URL_PATTERN_ = /^sip[s]?:[+a-z0-9_.!$%&'*\/=^`{|}~-]+@([a-z0-9-]+\.)+[a-z0-9]{2,63}$/i, goog.html.SafeUrl.fromSipUrl = function(e2) {
    return goog.html.SIP_URL_PATTERN_.test(decodeURIComponent(e2)) || (e2 = goog.html.SafeUrl.INNOCUOUS_STRING), goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e2);
  }, goog.html.SafeUrl.fromFacebookMessengerUrl = function(e2) {
    return goog.string.internal.caseInsensitiveStartsWith(e2, "fb-messenger://share") || (e2 = goog.html.SafeUrl.INNOCUOUS_STRING), goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e2);
  }, goog.html.SafeUrl.fromWhatsAppUrl = function(e2) {
    return goog.string.internal.caseInsensitiveStartsWith(e2, "whatsapp://send") || (e2 = goog.html.SafeUrl.INNOCUOUS_STRING), goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e2);
  }, goog.html.SafeUrl.fromSmsUrl = function(e2) {
    return goog.string.internal.caseInsensitiveStartsWith(e2, "sms:") && goog.html.SafeUrl.isSmsUrlBodyValid_(e2) || (e2 = goog.html.SafeUrl.INNOCUOUS_STRING), goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e2);
  }, goog.html.SafeUrl.isSmsUrlBodyValid_ = function(e2) {
    var t2 = e2.indexOf("#");
    if (0 < t2 && (e2 = e2.substring(0, t2)), !(t2 = e2.match(/[?&]body=/gi)))
      return true;
    if (1 < t2.length)
      return false;
    if (!(e2 = e2.match(/[?&]body=([^&]*)/)[1]))
      return true;
    try {
      decodeURIComponent(e2);
    } catch (e3) {
      return false;
    }
    return /^(?:[a-z0-9\-_.~]|%[0-9a-f]{2})+$/i.test(e2);
  }, goog.html.SafeUrl.fromSshUrl = function(e2) {
    return goog.string.internal.caseInsensitiveStartsWith(e2, "ssh://") || (e2 = goog.html.SafeUrl.INNOCUOUS_STRING), goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e2);
  }, goog.html.SafeUrl.sanitizeChromeExtensionUrl = function(e2, t2) {
    return goog.html.SafeUrl.sanitizeExtensionUrl_(/^chrome-extension:\/\/([^\/]+)\//, e2, t2);
  }, goog.html.SafeUrl.sanitizeFirefoxExtensionUrl = function(e2, t2) {
    return goog.html.SafeUrl.sanitizeExtensionUrl_(/^moz-extension:\/\/([^\/]+)\//, e2, t2);
  }, goog.html.SafeUrl.sanitizeEdgeExtensionUrl = function(e2, t2) {
    return goog.html.SafeUrl.sanitizeExtensionUrl_(/^ms-browser-extension:\/\/([^\/]+)\//, e2, t2);
  }, goog.html.SafeUrl.sanitizeExtensionUrl_ = function(e2, t2, r2) {
    return (e2 = e2.exec(t2)) ? (e2 = e2[1], -1 == (r2 instanceof goog.string.Const ? [goog.string.Const.unwrap(r2)] : r2.map(function(e3) {
      return goog.string.Const.unwrap(e3);
    })).indexOf(e2) && (t2 = goog.html.SafeUrl.INNOCUOUS_STRING)) : t2 = goog.html.SafeUrl.INNOCUOUS_STRING, goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(t2);
  }, goog.html.SafeUrl.fromTrustedResourceUrl = function(e2) {
    return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(e2));
  }, goog.html.SAFE_URL_PATTERN_ = /^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i, goog.html.SafeUrl.SAFE_URL_PATTERN = goog.html.SAFE_URL_PATTERN_, goog.html.SafeUrl.sanitize = function(e2) {
    return e2 instanceof goog.html.SafeUrl ? e2 : (e2 = "object" == typeof e2 && e2.implementsGoogStringTypedString ? e2.getTypedStringValue() : String(e2), goog.html.SAFE_URL_PATTERN_.test(e2) || (e2 = goog.html.SafeUrl.INNOCUOUS_STRING), goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e2));
  }, goog.html.SafeUrl.sanitizeAssertUnchanged = function(e2, t2) {
    return e2 instanceof goog.html.SafeUrl ? e2 : (e2 = "object" == typeof e2 && e2.implementsGoogStringTypedString ? e2.getTypedStringValue() : String(e2), t2 && /^data:/i.test(e2) && (t2 = goog.html.SafeUrl.fromDataUrl(e2)).getTypedStringValue() == e2 ? t2 : (goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(e2), "%s does not match the safe URL pattern", e2) || (e2 = goog.html.SafeUrl.INNOCUOUS_STRING), goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(e2)));
  }, goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {}, goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function(e2) {
    return new goog.html.SafeUrl(goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_, e2);
  }, goog.html.SafeUrl.ABOUT_BLANK = goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse("about:blank"), goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_ = {}, goog.html.SafeStyle = function() {
    this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = "", this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
  }, goog.html.SafeStyle.prototype.implementsGoogStringTypedString = true, goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {}, goog.html.SafeStyle.fromConstant = function(e2) {
    return 0 === (e2 = goog.string.Const.unwrap(e2)).length ? goog.html.SafeStyle.EMPTY : (goog.asserts.assert(goog.string.internal.endsWith(e2, ";"), "Last character of style string is not ';': " + e2), goog.asserts.assert(goog.string.internal.contains(e2, ":"), `Style string must contain at least one ':', to specify a "name: value" pair: ` + e2), goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(e2));
  }, goog.html.SafeStyle.prototype.getTypedStringValue = function() {
    return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;
  }, goog.DEBUG && (goog.html.SafeStyle.prototype.toString = function() {
    return "SafeStyle{" + this.privateDoNotAccessOrElseSafeStyleWrappedValue_ + "}";
  }), goog.html.SafeStyle.unwrap = function(e2) {
    return e2 instanceof goog.html.SafeStyle && e2.constructor === goog.html.SafeStyle && e2.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ ? e2.privateDoNotAccessOrElseSafeStyleWrappedValue_ : (goog.asserts.fail("expected object of type SafeStyle, got '" + e2 + "' of type " + goog.typeOf(e2)), "type_error:SafeStyle");
  }, goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse = function(e2) {
    return new goog.html.SafeStyle().initSecurityPrivateDoNotAccessOrElse_(e2);
  }, goog.html.SafeStyle.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(e2) {
    return this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = e2, this;
  }, goog.html.SafeStyle.EMPTY = goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(""), goog.html.SafeStyle.INNOCUOUS_STRING = "zClosurez", goog.html.SafeStyle.create = function(e2) {
    var t2, r2 = "";
    for (t2 in e2) {
      if (!/^[-_a-zA-Z0-9]+$/.test(t2))
        throw Error("Name allows only [-_a-zA-Z0-9], got: " + t2);
      var o2 = e2[t2];
      null != o2 && (r2 += t2 + ":" + (o2 = Array.isArray(o2) ? goog.array.map(o2, goog.html.SafeStyle.sanitizePropertyValue_).join(" ") : goog.html.SafeStyle.sanitizePropertyValue_(o2)) + ";");
    }
    return r2 ? goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(r2) : goog.html.SafeStyle.EMPTY;
  }, goog.html.SafeStyle.sanitizePropertyValue_ = function(e2) {
    if (e2 instanceof goog.html.SafeUrl)
      return 'url("' + goog.html.SafeUrl.unwrap(e2).replace(/</g, "%3c").replace(/[\\"]/g, "\\$&") + '")';
    if (e2 = e2 instanceof goog.string.Const ? goog.string.Const.unwrap(e2) : goog.html.SafeStyle.sanitizePropertyValueString_(String(e2)), /[{;}]/.test(e2))
      throw new goog.asserts.AssertionError("Value does not allow [{;}], got: %s.", [e2]);
    return e2;
  }, goog.html.SafeStyle.sanitizePropertyValueString_ = function(e2) {
    var t2 = e2.replace(goog.html.SafeStyle.FUNCTIONS_RE_, "$1").replace(goog.html.SafeStyle.FUNCTIONS_RE_, "$1").replace(goog.html.SafeStyle.URL_RE_, "url");
    return goog.html.SafeStyle.VALUE_RE_.test(t2) ? goog.html.SafeStyle.COMMENT_RE_.test(e2) ? (goog.asserts.fail("String value disallows comments, got: " + e2), goog.html.SafeStyle.INNOCUOUS_STRING) : goog.html.SafeStyle.hasBalancedQuotes_(e2) ? goog.html.SafeStyle.hasBalancedSquareBrackets_(e2) ? goog.html.SafeStyle.sanitizeUrl_(e2) : (goog.asserts.fail("String value requires balanced square brackets and one identifier per pair of brackets, got: " + e2), goog.html.SafeStyle.INNOCUOUS_STRING) : (goog.asserts.fail("String value requires balanced quotes, got: " + e2), goog.html.SafeStyle.INNOCUOUS_STRING) : (goog.asserts.fail("String value allows only " + goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ + " and simple functions, got: " + e2), goog.html.SafeStyle.INNOCUOUS_STRING);
  }, goog.html.SafeStyle.hasBalancedQuotes_ = function(e2) {
    for (var t2 = true, r2 = true, o2 = 0; o2 < e2.length; o2++) {
      var i3 = e2.charAt(o2);
      "'" == i3 && r2 ? t2 = !t2 : '"' == i3 && t2 && (r2 = !r2);
    }
    return t2 && r2;
  }, goog.html.SafeStyle.hasBalancedSquareBrackets_ = function(e2) {
    for (var t2 = true, r2 = /^[-_a-zA-Z0-9]$/, o2 = 0; o2 < e2.length; o2++) {
      var i3 = e2.charAt(o2);
      if ("]" == i3) {
        if (t2)
          return false;
        t2 = true;
      } else if ("[" == i3) {
        if (!t2)
          return false;
        t2 = false;
      } else if (!t2 && !r2.test(i3))
        return false;
    }
    return t2;
  }, goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ = `[-,."'%_!# a-zA-Z0-9\\[\\]]`, goog.html.SafeStyle.VALUE_RE_ = new RegExp("^" + goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ + "+$"), goog.html.SafeStyle.URL_RE_ = /\b(url\([ \t\n]*)('[ -&(-\[\]-~]*'|"[ !#-\[\]-~]*"|[!#-&*-\[\]-~]*)([ \t\n]*\))/g, goog.html.SafeStyle.ALLOWED_FUNCTIONS_ = "calc cubic-bezier fit-content hsl hsla linear-gradient matrix minmax repeat rgb rgba (rotate|scale|translate)(X|Y|Z|3d)?".split(" "), goog.html.SafeStyle.FUNCTIONS_RE_ = new RegExp("\\b(" + goog.html.SafeStyle.ALLOWED_FUNCTIONS_.join("|") + ")\\([-+*/0-9a-z.%\\[\\], ]+\\)", "g"), goog.html.SafeStyle.COMMENT_RE_ = /\/\*/, goog.html.SafeStyle.sanitizeUrl_ = function(e2) {
    return e2.replace(goog.html.SafeStyle.URL_RE_, function(e3, t2, r2, o2) {
      var i3 = "";
      return r2 = r2.replace(/^(['"])(.*)\1$/, function(e4, t3, r3) {
        return i3 = t3, r3;
      }), e3 = goog.html.SafeUrl.sanitize(r2).getTypedStringValue(), t2 + i3 + e3 + i3 + o2;
    });
  }, goog.html.SafeStyle.concat = function(e2) {
    var t2 = "", r2 = function(e3) {
      Array.isArray(e3) ? goog.array.forEach(e3, r2) : t2 += goog.html.SafeStyle.unwrap(e3);
    };
    return goog.array.forEach(arguments, r2), t2 ? goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(t2) : goog.html.SafeStyle.EMPTY;
  }, goog.html.SafeStyleSheet = function() {
    this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = "", this.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
  }, goog.html.SafeStyleSheet.prototype.implementsGoogStringTypedString = true, goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {}, goog.html.SafeStyleSheet.createRule = function(e2, t2) {
    if (goog.string.internal.contains(e2, "<"))
      throw Error("Selector does not allow '<', got: " + e2);
    var r2 = e2.replace(/('|")((?!\1)[^\r\n\f\\]|\\[\s\S])*\1/g, "");
    if (!/^[-_a-zA-Z0-9#.:* ,>+~[\]()=^$|]+$/.test(r2))
      throw Error("Selector allows only [-_a-zA-Z0-9#.:* ,>+~[\\]()=^$|] and strings, got: " + e2);
    if (!goog.html.SafeStyleSheet.hasBalancedBrackets_(r2))
      throw Error("() and [] in selector must be balanced, got: " + e2);
    return t2 instanceof goog.html.SafeStyle || (t2 = goog.html.SafeStyle.create(t2)), e2 = e2 + "{" + goog.html.SafeStyle.unwrap(t2).replace(/</g, "\\3C ") + "}", goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(e2);
  }, goog.html.SafeStyleSheet.hasBalancedBrackets_ = function(e2) {
    for (var t2 = { "(": ")", "[": "]" }, r2 = [], o2 = 0; o2 < e2.length; o2++) {
      var i3 = e2[o2];
      if (t2[i3])
        r2.push(t2[i3]);
      else if (goog.object.contains(t2, i3) && r2.pop() != i3)
        return false;
    }
    return 0 == r2.length;
  }, goog.html.SafeStyleSheet.concat = function(e2) {
    var t2 = "", r2 = function(e3) {
      Array.isArray(e3) ? goog.array.forEach(e3, r2) : t2 += goog.html.SafeStyleSheet.unwrap(e3);
    };
    return goog.array.forEach(arguments, r2), goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(t2);
  }, goog.html.SafeStyleSheet.fromConstant = function(e2) {
    return 0 === (e2 = goog.string.Const.unwrap(e2)).length ? goog.html.SafeStyleSheet.EMPTY : (goog.asserts.assert(!goog.string.internal.contains(e2, "<"), "Forbidden '<' character in style sheet string: " + e2), goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(e2));
  }, goog.html.SafeStyleSheet.prototype.getTypedStringValue = function() {
    return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
  }, goog.DEBUG && (goog.html.SafeStyleSheet.prototype.toString = function() {
    return "SafeStyleSheet{" + this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ + "}";
  }), goog.html.SafeStyleSheet.unwrap = function(e2) {
    return e2 instanceof goog.html.SafeStyleSheet && e2.constructor === goog.html.SafeStyleSheet && e2.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ ? e2.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ : (goog.asserts.fail("expected object of type SafeStyleSheet, got '" + e2 + "' of type " + goog.typeOf(e2)), "type_error:SafeStyleSheet");
  }, goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse = function(e2) {
    return new goog.html.SafeStyleSheet().initSecurityPrivateDoNotAccessOrElse_(e2);
  }, goog.html.SafeStyleSheet.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(e2) {
    return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = e2, this;
  }, goog.html.SafeStyleSheet.EMPTY = goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(""), goog.labs = {}, goog.labs.userAgent = {}, goog.labs.userAgent.util = {}, goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
    var e2 = goog.labs.userAgent.util.getNavigator_();
    return e2 && (e2 = e2.userAgent) ? e2 : "";
  }, goog.labs.userAgent.util.getNavigator_ = function() {
    return goog.global.navigator;
  }, goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_(), goog.labs.userAgent.util.setUserAgent = function(e2) {
    goog.labs.userAgent.util.userAgent_ = e2 || goog.labs.userAgent.util.getNativeUserAgentString_();
  }, goog.labs.userAgent.util.getUserAgent = function() {
    return goog.labs.userAgent.util.userAgent_;
  }, goog.labs.userAgent.util.matchUserAgent = function(e2) {
    var t2 = goog.labs.userAgent.util.getUserAgent();
    return goog.string.internal.contains(t2, e2);
  }, goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(e2) {
    var t2 = goog.labs.userAgent.util.getUserAgent();
    return goog.string.internal.caseInsensitiveContains(t2, e2);
  }, goog.labs.userAgent.util.extractVersionTuples = function(e2) {
    for (var t2, r2 = /(\w[\w ]+)\/([^\s]+)\s*(?:\((.*?)\))?/g, o2 = []; t2 = r2.exec(e2); )
      o2.push([t2[1], t2[2], t2[3] || void 0]);
    return o2;
  }, goog.labs.userAgent.browser = {}, goog.labs.userAgent.browser.matchOpera_ = function() {
    return goog.labs.userAgent.util.matchUserAgent("Opera");
  }, goog.labs.userAgent.browser.matchIE_ = function() {
    return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
  }, goog.labs.userAgent.browser.matchEdgeHtml_ = function() {
    return goog.labs.userAgent.util.matchUserAgent("Edge");
  }, goog.labs.userAgent.browser.matchEdgeChromium_ = function() {
    return goog.labs.userAgent.util.matchUserAgent("Edg/");
  }, goog.labs.userAgent.browser.matchOperaChromium_ = function() {
    return goog.labs.userAgent.util.matchUserAgent("OPR");
  }, goog.labs.userAgent.browser.matchFirefox_ = function() {
    return goog.labs.userAgent.util.matchUserAgent("Firefox") || goog.labs.userAgent.util.matchUserAgent("FxiOS");
  }, goog.labs.userAgent.browser.matchSafari_ = function() {
    return goog.labs.userAgent.util.matchUserAgent("Safari") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchEdgeHtml_() || goog.labs.userAgent.browser.matchEdgeChromium_() || goog.labs.userAgent.browser.matchOperaChromium_() || goog.labs.userAgent.browser.matchFirefox_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent("Android"));
  }, goog.labs.userAgent.browser.matchCoast_ = function() {
    return goog.labs.userAgent.util.matchUserAgent("Coast");
  }, goog.labs.userAgent.browser.matchIosWebview_ = function() {
    return (goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("iPhone")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && !goog.labs.userAgent.browser.matchFirefox_() && goog.labs.userAgent.util.matchUserAgent("AppleWebKit");
  }, goog.labs.userAgent.browser.matchChrome_ = function() {
    return (goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS")) && !goog.labs.userAgent.browser.matchEdgeHtml_();
  }, goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
    return goog.labs.userAgent.util.matchUserAgent("Android") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk());
  }, goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_, goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_, goog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdgeHtml_, goog.labs.userAgent.browser.isEdgeChromium = goog.labs.userAgent.browser.matchEdgeChromium_, goog.labs.userAgent.browser.isOperaChromium = goog.labs.userAgent.browser.matchOperaChromium_, goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_, goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_, goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_, goog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_, goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_, goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_, goog.labs.userAgent.browser.isSilk = function() {
    return goog.labs.userAgent.util.matchUserAgent("Silk");
  }, goog.labs.userAgent.browser.getVersion = function() {
    function e2(e3) {
      return e3 = goog.array.find(e3, o2), r2[e3] || "";
    }
    var t2 = goog.labs.userAgent.util.getUserAgent();
    if (goog.labs.userAgent.browser.isIE())
      return goog.labs.userAgent.browser.getIEVersion_(t2);
    t2 = goog.labs.userAgent.util.extractVersionTuples(t2);
    var r2 = {};
    goog.array.forEach(t2, function(e3) {
      r2[e3[0]] = e3[1];
    });
    var o2 = goog.partial(goog.object.containsKey, r2);
    return goog.labs.userAgent.browser.isOpera() ? e2(["Version", "Opera"]) : goog.labs.userAgent.browser.isEdge() ? e2(["Edge"]) : goog.labs.userAgent.browser.isEdgeChromium() ? e2(["Edg"]) : goog.labs.userAgent.browser.isChrome() ? e2(["Chrome", "CriOS", "HeadlessChrome"]) : (t2 = t2[2]) && t2[1] || "";
  }, goog.labs.userAgent.browser.isVersionOrHigher = function(e2) {
    return 0 <= goog.string.internal.compareVersions(goog.labs.userAgent.browser.getVersion(), e2);
  }, goog.labs.userAgent.browser.getIEVersion_ = function(e2) {
    var t2 = /rv: *([\d\.]*)/.exec(e2);
    if (t2 && t2[1])
      return t2[1];
    t2 = "";
    var r2 = /MSIE +([\d\.]+)/.exec(e2);
    if (r2 && r2[1])
      if (e2 = /Trident\/(\d.\d)/.exec(e2), "7.0" == r2[1])
        if (e2 && e2[1])
          switch (e2[1]) {
            case "4.0":
              t2 = "8.0";
              break;
            case "5.0":
              t2 = "9.0";
              break;
            case "6.0":
              t2 = "10.0";
              break;
            case "7.0":
              t2 = "11.0";
          }
        else
          t2 = "7.0";
      else
        t2 = r2[1];
    return t2;
  }, goog.html.SafeHtml = function() {
    this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "", this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_, this.dir_ = null;
  }, goog.html.SafeHtml.ENABLE_ERROR_MESSAGES = goog.DEBUG, goog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE = true, goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = true, goog.html.SafeHtml.prototype.getDirection = function() {
    return this.dir_;
  }, goog.html.SafeHtml.prototype.implementsGoogStringTypedString = true, goog.html.SafeHtml.prototype.getTypedStringValue = function() {
    return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString();
  }, goog.DEBUG && (goog.html.SafeHtml.prototype.toString = function() {
    return "SafeHtml{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  }), goog.html.SafeHtml.unwrap = function(e2) {
    return goog.html.SafeHtml.unwrapTrustedHTML(e2).toString();
  }, goog.html.SafeHtml.unwrapTrustedHTML = function(e2) {
    return e2 instanceof goog.html.SafeHtml && e2.constructor === goog.html.SafeHtml && e2.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ ? e2.privateDoNotAccessOrElseSafeHtmlWrappedValue_ : (goog.asserts.fail("expected object of type SafeHtml, got '" + e2 + "' of type " + goog.typeOf(e2)), "type_error:SafeHtml");
  }, goog.html.SafeHtml.htmlEscape = function(e2) {
    if (e2 instanceof goog.html.SafeHtml)
      return e2;
    var t2 = "object" == typeof e2, r2 = null;
    return t2 && e2.implementsGoogI18nBidiDirectionalString && (r2 = e2.getDirection()), e2 = t2 && e2.implementsGoogStringTypedString ? e2.getTypedStringValue() : String(e2), goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.htmlEscape(e2), r2);
  }, goog.html.SafeHtml.htmlEscapePreservingNewlines = function(e2) {
    return e2 instanceof goog.html.SafeHtml ? e2 : (e2 = goog.html.SafeHtml.htmlEscape(e2), goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.newLineToBr(goog.html.SafeHtml.unwrap(e2)), e2.getDirection()));
  }, goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces = function(e2) {
    return e2 instanceof goog.html.SafeHtml ? e2 : (e2 = goog.html.SafeHtml.htmlEscape(e2), goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.whitespaceEscape(goog.html.SafeHtml.unwrap(e2)), e2.getDirection()));
  }, goog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape, goog.html.SafeHtml.comment = function(e2) {
    return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<!--" + goog.string.internal.htmlEscape(e2) + "-->", null);
  }, goog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/, goog.html.SafeHtml.URL_ATTRIBUTES_ = { action: true, cite: true, data: true, formaction: true, href: true, manifest: true, poster: true, src: true }, goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = { APPLET: true, BASE: true, EMBED: true, IFRAME: true, LINK: true, MATH: true, META: true, OBJECT: true, SCRIPT: true, STYLE: true, SVG: true, TEMPLATE: true }, goog.html.SafeHtml.create = function(e2, t2, r2) {
    return goog.html.SafeHtml.verifyTagName(String(e2)), goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(e2), t2, r2);
  }, goog.html.SafeHtml.verifyTagName = function(e2) {
    if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(e2))
      throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? "Invalid tag name <" + e2 + ">." : "");
    if (e2.toUpperCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_)
      throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? "Tag name <" + e2 + "> is not allowed for SafeHtml." : "");
  }, goog.html.SafeHtml.createIframe = function(e2, t2, r2, o2) {
    e2 && goog.html.TrustedResourceUrl.unwrap(e2);
    var i3 = {};
    return i3.src = e2 || null, i3.srcdoc = t2 && goog.html.SafeHtml.unwrap(t2), e2 = goog.html.SafeHtml.combineAttributes(i3, { sandbox: "" }, r2), goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", e2, o2);
  }, goog.html.SafeHtml.createSandboxIframe = function(e2, t2, r2, o2) {
    if (!goog.html.SafeHtml.canUseSandboxIframe())
      throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? "The browser does not support sandboxed iframes." : "");
    var i3 = {};
    return i3.src = e2 ? goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(e2)) : null, i3.srcdoc = t2 || null, i3.sandbox = "", e2 = goog.html.SafeHtml.combineAttributes(i3, {}, r2), goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", e2, o2);
  }, goog.html.SafeHtml.canUseSandboxIframe = function() {
    return goog.global.HTMLIFrameElement && "sandbox" in goog.global.HTMLIFrameElement.prototype;
  }, goog.html.SafeHtml.createScriptSrc = function(e2, t2) {
    return goog.html.TrustedResourceUrl.unwrap(e2), e2 = goog.html.SafeHtml.combineAttributes({ src: e2 }, {}, t2), goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", e2);
  }, goog.html.SafeHtml.createScript = function(e2, t2) {
    for (var r2 in t2) {
      var o2 = r2.toLowerCase();
      if ("language" == o2 || "src" == o2 || "text" == o2 || "type" == o2)
        throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Cannot set "' + o2 + '" attribute' : "");
    }
    for (r2 = "", e2 = goog.array.concat(e2), o2 = 0; o2 < e2.length; o2++)
      r2 += goog.html.SafeScript.unwrap(e2[o2]);
    return e2 = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(r2, goog.i18n.bidi.Dir.NEUTRAL), goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", t2, e2);
  }, goog.html.SafeHtml.createStyle = function(e2, t2) {
    t2 = goog.html.SafeHtml.combineAttributes({ type: "text/css" }, {}, t2);
    var r2 = "";
    e2 = goog.array.concat(e2);
    for (var o2 = 0; o2 < e2.length; o2++)
      r2 += goog.html.SafeStyleSheet.unwrap(e2[o2]);
    return e2 = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(r2, goog.i18n.bidi.Dir.NEUTRAL), goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style", t2, e2);
  }, goog.html.SafeHtml.createMetaRefresh = function(e2, t2) {
    return e2 = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(e2)), (goog.labs.userAgent.browser.isIE() || goog.labs.userAgent.browser.isEdge()) && goog.string.internal.contains(e2, ";") && (e2 = "'" + e2.replace(/'/g, "%27") + "'"), goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("meta", { "http-equiv": "refresh", content: (t2 || 0) + "; url=" + e2 });
  }, goog.html.SafeHtml.getAttrNameAndValue_ = function(e2, t2, r2) {
    if (r2 instanceof goog.string.Const)
      r2 = goog.string.Const.unwrap(r2);
    else if ("style" == t2.toLowerCase()) {
      if (!goog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE)
        throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute "style" not supported.' : "");
      r2 = goog.html.SafeHtml.getStyleValue_(r2);
    } else {
      if (/^on/i.test(t2))
        throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute "' + t2 + '" requires goog.string.Const value, "' + r2 + '" given.' : "");
      if (t2.toLowerCase() in goog.html.SafeHtml.URL_ATTRIBUTES_)
        if (r2 instanceof goog.html.TrustedResourceUrl)
          r2 = goog.html.TrustedResourceUrl.unwrap(r2);
        else if (r2 instanceof goog.html.SafeUrl)
          r2 = goog.html.SafeUrl.unwrap(r2);
        else {
          if ("string" != typeof r2)
            throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute "' + t2 + '" on tag "' + e2 + '" requires goog.html.SafeUrl, goog.string.Const, or string, value "' + r2 + '" given.' : "");
          r2 = goog.html.SafeUrl.sanitize(r2).getTypedStringValue();
        }
    }
    return r2.implementsGoogStringTypedString && (r2 = r2.getTypedStringValue()), goog.asserts.assert("string" == typeof r2 || "number" == typeof r2, "String or number value expected, got " + typeof r2 + " with value: " + r2), t2 + '="' + goog.string.internal.htmlEscape(String(r2)) + '"';
  }, goog.html.SafeHtml.getStyleValue_ = function(e2) {
    if (!goog.isObject(e2))
      throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'The "style" attribute requires goog.html.SafeStyle or map of style properties, ' + typeof e2 + " given: " + e2 : "");
    return e2 instanceof goog.html.SafeStyle || (e2 = goog.html.SafeStyle.create(e2)), goog.html.SafeStyle.unwrap(e2);
  }, goog.html.SafeHtml.createWithDir = function(e2, t2, r2, o2) {
    return (t2 = goog.html.SafeHtml.create(t2, r2, o2)).dir_ = e2, t2;
  }, goog.html.SafeHtml.join = function(e2, t2) {
    var r2 = (e2 = goog.html.SafeHtml.htmlEscape(e2)).getDirection(), o2 = [], i3 = function(e3) {
      Array.isArray(e3) ? goog.array.forEach(e3, i3) : (e3 = goog.html.SafeHtml.htmlEscape(e3), o2.push(goog.html.SafeHtml.unwrap(e3)), e3 = e3.getDirection(), r2 == goog.i18n.bidi.Dir.NEUTRAL ? r2 = e3 : e3 != goog.i18n.bidi.Dir.NEUTRAL && r2 != e3 && (r2 = null));
    };
    return goog.array.forEach(t2, i3), goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(o2.join(goog.html.SafeHtml.unwrap(e2)), r2);
  }, goog.html.SafeHtml.concat = function(e2) {
    return goog.html.SafeHtml.join(goog.html.SafeHtml.EMPTY, Array.prototype.slice.call(arguments));
  }, goog.html.SafeHtml.concatWithDir = function(e2, t2) {
    var r2 = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1));
    return r2.dir_ = e2, r2;
  }, goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {}, goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(e2, t2) {
    return new goog.html.SafeHtml().initSecurityPrivateDoNotAccessOrElse_(e2, t2);
  }, goog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(e2, t2) {
    return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY ? goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createHTML(e2) : e2, this.dir_ = t2, this;
  }, goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse = function(e2, t2, r2) {
    var o2 = null, i3 = "<" + e2 + goog.html.SafeHtml.stringifyAttributes(e2, t2);
    return null == r2 ? r2 = [] : Array.isArray(r2) || (r2 = [r2]), goog.dom.tags.isVoidTag(e2.toLowerCase()) ? (goog.asserts.assert(!r2.length, "Void tag <" + e2 + "> does not allow content."), i3 += ">") : (o2 = goog.html.SafeHtml.concat(r2), i3 += ">" + goog.html.SafeHtml.unwrap(o2) + "</" + e2 + ">", o2 = o2.getDirection()), (e2 = t2 && t2.dir) && (o2 = /^(ltr|rtl|auto)$/i.test(e2) ? goog.i18n.bidi.Dir.NEUTRAL : null), goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(i3, o2);
  }, goog.html.SafeHtml.stringifyAttributes = function(e2, t2) {
    var r2 = "";
    if (t2)
      for (var o2 in t2) {
        if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(o2))
          throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Invalid attribute name "' + o2 + '".' : "");
        var i3 = t2[o2];
        null != i3 && (r2 += " " + goog.html.SafeHtml.getAttrNameAndValue_(e2, o2, i3));
      }
    return r2;
  }, goog.html.SafeHtml.combineAttributes = function(e2, t2, r2) {
    var o2, i3 = {};
    for (o2 in e2)
      goog.asserts.assert(o2.toLowerCase() == o2, "Must be lower case"), i3[o2] = e2[o2];
    for (o2 in t2)
      goog.asserts.assert(o2.toLowerCase() == o2, "Must be lower case"), i3[o2] = t2[o2];
    if (r2)
      for (o2 in r2) {
        var a3 = o2.toLowerCase();
        if (a3 in e2)
          throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Cannot override "' + a3 + '" attribute, got "' + o2 + '" with value "' + r2[o2] + '"' : "");
        a3 in t2 && delete i3[a3], i3[o2] = r2[o2];
      }
    return i3;
  }, goog.html.SafeHtml.DOCTYPE_HTML = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<!DOCTYPE html>", goog.i18n.bidi.Dir.NEUTRAL), goog.html.SafeHtml.EMPTY = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("", goog.i18n.bidi.Dir.NEUTRAL), goog.html.SafeHtml.BR = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<br>", goog.i18n.bidi.Dir.NEUTRAL), goog.html.uncheckedconversions = {}, goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract = function(e2, t2, r2) {
    return goog.asserts.assertString(goog.string.Const.unwrap(e2), "must provide justification"), goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(e2)), "must provide non-empty justification"), goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(t2, r2 || null);
  }, goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract = function(e2, t2) {
    return goog.asserts.assertString(goog.string.Const.unwrap(e2), "must provide justification"), goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(e2)), "must provide non-empty justification"), goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(t2);
  }, goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract = function(e2, t2) {
    return goog.asserts.assertString(goog.string.Const.unwrap(e2), "must provide justification"), goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(e2)), "must provide non-empty justification"), goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(t2);
  }, goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract = function(e2, t2) {
    return goog.asserts.assertString(goog.string.Const.unwrap(e2), "must provide justification"), goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(e2)), "must provide non-empty justification"), goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(t2);
  }, goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract = function(e2, t2) {
    return goog.asserts.assertString(goog.string.Const.unwrap(e2), "must provide justification"), goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(e2)), "must provide non-empty justification"), goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(t2);
  }, goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract = function(e2, t2) {
    return goog.asserts.assertString(goog.string.Const.unwrap(e2), "must provide justification"), goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(e2)), "must provide non-empty justification"), goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(t2);
  }, goog.dom.safe = {}, goog.dom.safe.InsertAdjacentHtmlPosition = { AFTERBEGIN: "afterbegin", AFTEREND: "afterend", BEFOREBEGIN: "beforebegin", BEFOREEND: "beforeend" }, goog.dom.safe.insertAdjacentHtml = function(e2, t2, r2) {
    e2.insertAdjacentHTML(t2, goog.html.SafeHtml.unwrapTrustedHTML(r2));
  }, goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_ = { MATH: true, SCRIPT: true, STYLE: true, SVG: true, TEMPLATE: true }, goog.dom.safe.isInnerHtmlCleanupRecursive_ = goog.functions.cacheReturnValue(function() {
    if (goog.DEBUG && "undefined" == typeof document)
      return false;
    var e2 = document.createElement("div"), t2 = document.createElement("div");
    return t2.appendChild(document.createElement("div")), e2.appendChild(t2), !(goog.DEBUG && !e2.firstChild) && (t2 = e2.firstChild.firstChild, e2.innerHTML = goog.html.SafeHtml.unwrapTrustedHTML(goog.html.SafeHtml.EMPTY), !t2.parentElement);
  }), goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse = function(e2, t2) {
    if (goog.dom.safe.isInnerHtmlCleanupRecursive_())
      for (; e2.lastChild; )
        e2.removeChild(e2.lastChild);
    e2.innerHTML = goog.html.SafeHtml.unwrapTrustedHTML(t2);
  }, goog.dom.safe.setInnerHtml = function(e2, t2) {
    if (goog.asserts.ENABLE_ASSERTS) {
      var r2 = e2.tagName.toUpperCase();
      if (goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[r2])
        throw Error("goog.dom.safe.setInnerHtml cannot be used to set content of " + e2.tagName + ".");
    }
    goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse(e2, t2);
  }, goog.dom.safe.setOuterHtml = function(e2, t2) {
    e2.outerHTML = goog.html.SafeHtml.unwrapTrustedHTML(t2);
  }, goog.dom.safe.setFormElementAction = function(e2, t2) {
    t2 = t2 instanceof goog.html.SafeUrl ? t2 : goog.html.SafeUrl.sanitizeAssertUnchanged(t2), goog.dom.asserts.assertIsHTMLFormElement(e2).action = goog.html.SafeUrl.unwrap(t2);
  }, goog.dom.safe.setButtonFormAction = function(e2, t2) {
    t2 = t2 instanceof goog.html.SafeUrl ? t2 : goog.html.SafeUrl.sanitizeAssertUnchanged(t2), goog.dom.asserts.assertIsHTMLButtonElement(e2).formAction = goog.html.SafeUrl.unwrap(t2);
  }, goog.dom.safe.setInputFormAction = function(e2, t2) {
    t2 = t2 instanceof goog.html.SafeUrl ? t2 : goog.html.SafeUrl.sanitizeAssertUnchanged(t2), goog.dom.asserts.assertIsHTMLInputElement(e2).formAction = goog.html.SafeUrl.unwrap(t2);
  }, goog.dom.safe.setStyle = function(e2, t2) {
    e2.style.cssText = goog.html.SafeStyle.unwrap(t2);
  }, goog.dom.safe.documentWrite = function(e2, t2) {
    e2.write(goog.html.SafeHtml.unwrapTrustedHTML(t2));
  }, goog.dom.safe.setAnchorHref = function(e2, t2) {
    goog.dom.asserts.assertIsHTMLAnchorElement(e2), t2 = t2 instanceof goog.html.SafeUrl ? t2 : goog.html.SafeUrl.sanitizeAssertUnchanged(t2), e2.href = goog.html.SafeUrl.unwrap(t2);
  }, goog.dom.safe.setImageSrc = function(e2, t2) {
    if (goog.dom.asserts.assertIsHTMLImageElement(e2), !(t2 instanceof goog.html.SafeUrl)) {
      var r2 = /^data:image\//i.test(t2);
      t2 = goog.html.SafeUrl.sanitizeAssertUnchanged(t2, r2);
    }
    e2.src = goog.html.SafeUrl.unwrap(t2);
  }, goog.dom.safe.setAudioSrc = function(e2, t2) {
    if (goog.dom.asserts.assertIsHTMLAudioElement(e2), !(t2 instanceof goog.html.SafeUrl)) {
      var r2 = /^data:audio\//i.test(t2);
      t2 = goog.html.SafeUrl.sanitizeAssertUnchanged(t2, r2);
    }
    e2.src = goog.html.SafeUrl.unwrap(t2);
  }, goog.dom.safe.setVideoSrc = function(e2, t2) {
    if (goog.dom.asserts.assertIsHTMLVideoElement(e2), !(t2 instanceof goog.html.SafeUrl)) {
      var r2 = /^data:video\//i.test(t2);
      t2 = goog.html.SafeUrl.sanitizeAssertUnchanged(t2, r2);
    }
    e2.src = goog.html.SafeUrl.unwrap(t2);
  }, goog.dom.safe.setEmbedSrc = function(e2, t2) {
    goog.dom.asserts.assertIsHTMLEmbedElement(e2), e2.src = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(t2);
  }, goog.dom.safe.setFrameSrc = function(e2, t2) {
    goog.dom.asserts.assertIsHTMLFrameElement(e2), e2.src = goog.html.TrustedResourceUrl.unwrap(t2);
  }, goog.dom.safe.setIframeSrc = function(e2, t2) {
    goog.dom.asserts.assertIsHTMLIFrameElement(e2), e2.src = goog.html.TrustedResourceUrl.unwrap(t2);
  }, goog.dom.safe.setIframeSrcdoc = function(e2, t2) {
    goog.dom.asserts.assertIsHTMLIFrameElement(e2), e2.srcdoc = goog.html.SafeHtml.unwrapTrustedHTML(t2);
  }, goog.dom.safe.setLinkHrefAndRel = function(e2, t2, r2) {
    goog.dom.asserts.assertIsHTMLLinkElement(e2), e2.rel = r2, goog.string.internal.caseInsensitiveContains(r2, "stylesheet") ? (goog.asserts.assert(t2 instanceof goog.html.TrustedResourceUrl, 'URL must be TrustedResourceUrl because "rel" contains "stylesheet"'), e2.href = goog.html.TrustedResourceUrl.unwrap(t2)) : e2.href = t2 instanceof goog.html.TrustedResourceUrl ? goog.html.TrustedResourceUrl.unwrap(t2) : t2 instanceof goog.html.SafeUrl ? goog.html.SafeUrl.unwrap(t2) : goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitizeAssertUnchanged(t2));
  }, goog.dom.safe.setObjectData = function(e2, t2) {
    goog.dom.asserts.assertIsHTMLObjectElement(e2), e2.data = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(t2);
  }, goog.dom.safe.setScriptSrc = function(e2, t2) {
    goog.dom.asserts.assertIsHTMLScriptElement(e2), e2.src = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(t2), (t2 = goog.getScriptNonce()) && e2.setAttribute("nonce", t2);
  }, goog.dom.safe.setScriptContent = function(e2, t2) {
    goog.dom.asserts.assertIsHTMLScriptElement(e2), e2.text = goog.html.SafeScript.unwrapTrustedScript(t2), (t2 = goog.getScriptNonce()) && e2.setAttribute("nonce", t2);
  }, goog.dom.safe.setLocationHref = function(e2, t2) {
    goog.dom.asserts.assertIsLocation(e2), t2 = t2 instanceof goog.html.SafeUrl ? t2 : goog.html.SafeUrl.sanitizeAssertUnchanged(t2), e2.href = goog.html.SafeUrl.unwrap(t2);
  }, goog.dom.safe.assignLocation = function(e2, t2) {
    goog.dom.asserts.assertIsLocation(e2), t2 = t2 instanceof goog.html.SafeUrl ? t2 : goog.html.SafeUrl.sanitizeAssertUnchanged(t2), e2.assign(goog.html.SafeUrl.unwrap(t2));
  }, goog.dom.safe.replaceLocation = function(e2, t2) {
    t2 = t2 instanceof goog.html.SafeUrl ? t2 : goog.html.SafeUrl.sanitizeAssertUnchanged(t2), e2.replace(goog.html.SafeUrl.unwrap(t2));
  }, goog.dom.safe.openInWindow = function(e2, t2, r2, o2, i3) {
    return e2 = e2 instanceof goog.html.SafeUrl ? e2 : goog.html.SafeUrl.sanitizeAssertUnchanged(e2), t2 = t2 || goog.global, r2 = r2 instanceof goog.string.Const ? goog.string.Const.unwrap(r2) : r2 || "", t2.open(goog.html.SafeUrl.unwrap(e2), r2, o2, i3);
  }, goog.dom.safe.parseFromStringHtml = function(e2, t2) {
    return goog.dom.safe.parseFromString(e2, t2, "text/html");
  }, goog.dom.safe.parseFromString = function(e2, t2, r2) {
    return e2.parseFromString(goog.html.SafeHtml.unwrapTrustedHTML(t2), r2);
  }, goog.dom.safe.createImageFromBlob = function(e2) {
    if (!/^image\/.*/g.test(e2.type))
      throw Error("goog.dom.safe.createImageFromBlob only accepts MIME type image/.*.");
    var t2 = goog.global.URL.createObjectURL(e2);
    return (e2 = new goog.global.Image()).onload = function() {
      goog.global.URL.revokeObjectURL(t2);
    }, goog.dom.safe.setImageSrc(e2, goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Image blob URL."), t2)), e2;
  }, goog.string.DETECT_DOUBLE_ESCAPING = false, goog.string.FORCE_NON_DOM_HTML_UNESCAPING = false, goog.string.Unicode = { NBSP: " " }, goog.string.startsWith = goog.string.internal.startsWith, goog.string.endsWith = goog.string.internal.endsWith, goog.string.caseInsensitiveStartsWith = goog.string.internal.caseInsensitiveStartsWith, goog.string.caseInsensitiveEndsWith = goog.string.internal.caseInsensitiveEndsWith, goog.string.caseInsensitiveEquals = goog.string.internal.caseInsensitiveEquals, goog.string.subs = function(e2, t2) {
    for (var r2 = e2.split("%s"), o2 = "", i3 = Array.prototype.slice.call(arguments, 1); i3.length && 1 < r2.length; )
      o2 += r2.shift() + i3.shift();
    return o2 + r2.join("%s");
  }, goog.string.collapseWhitespace = function(e2) {
    return e2.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
  }, goog.string.isEmptyOrWhitespace = goog.string.internal.isEmptyOrWhitespace, goog.string.isEmptyString = function(e2) {
    return 0 == e2.length;
  }, goog.string.isEmpty = goog.string.isEmptyOrWhitespace, goog.string.isEmptyOrWhitespaceSafe = function(e2) {
    return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(e2));
  }, goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe, goog.string.isBreakingWhitespace = function(e2) {
    return !/[^\t\n\r ]/.test(e2);
  }, goog.string.isAlpha = function(e2) {
    return !/[^a-zA-Z]/.test(e2);
  }, goog.string.isNumeric = function(e2) {
    return !/[^0-9]/.test(e2);
  }, goog.string.isAlphaNumeric = function(e2) {
    return !/[^a-zA-Z0-9]/.test(e2);
  }, goog.string.isSpace = function(e2) {
    return " " == e2;
  }, goog.string.isUnicodeChar = function(e2) {
    return 1 == e2.length && " " <= e2 && "~" >= e2 || "" <= e2 && "�" >= e2;
  }, goog.string.stripNewlines = function(e2) {
    return e2.replace(/(\r\n|\r|\n)+/g, " ");
  }, goog.string.canonicalizeNewlines = function(e2) {
    return e2.replace(/(\r\n|\r|\n)/g, "\n");
  }, goog.string.normalizeWhitespace = function(e2) {
    return e2.replace(/\xa0|\s/g, " ");
  }, goog.string.normalizeSpaces = function(e2) {
    return e2.replace(/\xa0|[ \t]+/g, " ");
  }, goog.string.collapseBreakingSpaces = function(e2) {
    return e2.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
  }, goog.string.trim = goog.string.internal.trim, goog.string.trimLeft = function(e2) {
    return e2.replace(/^[\s\xa0]+/, "");
  }, goog.string.trimRight = function(e2) {
    return e2.replace(/[\s\xa0]+$/, "");
  }, goog.string.caseInsensitiveCompare = goog.string.internal.caseInsensitiveCompare, goog.string.numberAwareCompare_ = function(e2, t2, r2) {
    if (e2 == t2)
      return 0;
    if (!e2)
      return -1;
    if (!t2)
      return 1;
    for (var o2 = e2.toLowerCase().match(r2), i3 = t2.toLowerCase().match(r2), a3 = Math.min(o2.length, i3.length), n2 = 0; n2 < a3; n2++) {
      r2 = o2[n2];
      var s2 = i3[n2];
      if (r2 != s2)
        return e2 = parseInt(r2, 10), !isNaN(e2) && (t2 = parseInt(s2, 10), !isNaN(t2) && e2 - t2) ? e2 - t2 : r2 < s2 ? -1 : 1;
    }
    return o2.length != i3.length ? o2.length - i3.length : e2 < t2 ? -1 : 1;
  }, goog.string.intAwareCompare = function(e2, t2) {
    return goog.string.numberAwareCompare_(e2, t2, /\d+|\D+/g);
  }, goog.string.floatAwareCompare = function(e2, t2) {
    return goog.string.numberAwareCompare_(e2, t2, /\d+|\.\d+|\D+/g);
  }, goog.string.numerateCompare = goog.string.floatAwareCompare, goog.string.urlEncode = function(e2) {
    return encodeURIComponent(String(e2));
  }, goog.string.urlDecode = function(e2) {
    return decodeURIComponent(e2.replace(/\+/g, " "));
  }, goog.string.newLineToBr = goog.string.internal.newLineToBr, goog.string.htmlEscape = function(e2, t2) {
    return e2 = goog.string.internal.htmlEscape(e2, t2), goog.string.DETECT_DOUBLE_ESCAPING && (e2 = e2.replace(goog.string.E_RE_, "&#101;")), e2;
  }, goog.string.E_RE_ = /e/g, goog.string.unescapeEntities = function(e2) {
    return goog.string.contains(e2, "&") ? !goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global ? goog.string.unescapeEntitiesUsingDom_(e2) : goog.string.unescapePureXmlEntities_(e2) : e2;
  }, goog.string.unescapeEntitiesWithDocument = function(e2, t2) {
    return goog.string.contains(e2, "&") ? goog.string.unescapeEntitiesUsingDom_(e2, t2) : e2;
  }, goog.string.unescapeEntitiesUsingDom_ = function(e2, t2) {
    var r2 = { "&amp;": "&", "&lt;": "<", "&gt;": ">", "&quot;": '"' }, o2 = t2 ? t2.createElement("div") : goog.global.document.createElement("div");
    return e2.replace(goog.string.HTML_ENTITY_PATTERN_, function(e3, t3) {
      var i3 = r2[e3];
      return i3 || ("#" == t3.charAt(0) && (t3 = Number("0" + t3.substr(1)), isNaN(t3) || (i3 = String.fromCharCode(t3))), i3 || (goog.dom.safe.setInnerHtml(o2, goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Single HTML entity."), e3 + " ")), i3 = o2.firstChild.nodeValue.slice(0, -1)), r2[e3] = i3);
    });
  }, goog.string.unescapePureXmlEntities_ = function(e2) {
    return e2.replace(/&([^;]+);/g, function(e3, t2) {
      switch (t2) {
        case "amp":
          return "&";
        case "lt":
          return "<";
        case "gt":
          return ">";
        case "quot":
          return '"';
        default:
          return "#" != t2.charAt(0) || (t2 = Number("0" + t2.substr(1)), isNaN(t2)) ? e3 : String.fromCharCode(t2);
      }
    });
  }, goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g, goog.string.whitespaceEscape = function(e2, t2) {
    return goog.string.newLineToBr(e2.replace(/  /g, " &#160;"), t2);
  }, goog.string.preserveSpaces = function(e2) {
    return e2.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
  }, goog.string.stripQuotes = function(e2, t2) {
    for (var r2 = t2.length, o2 = 0; o2 < r2; o2++) {
      var i3 = 1 == r2 ? t2 : t2.charAt(o2);
      if (e2.charAt(0) == i3 && e2.charAt(e2.length - 1) == i3)
        return e2.substring(1, e2.length - 1);
    }
    return e2;
  }, goog.string.truncate = function(e2, t2, r2) {
    return r2 && (e2 = goog.string.unescapeEntities(e2)), e2.length > t2 && (e2 = e2.substring(0, t2 - 3) + "..."), r2 && (e2 = goog.string.htmlEscape(e2)), e2;
  }, goog.string.truncateMiddle = function(e2, t2, r2, o2) {
    if (r2 && (e2 = goog.string.unescapeEntities(e2)), o2 && e2.length > t2) {
      o2 > t2 && (o2 = t2);
      var i3 = e2.length - o2;
      e2 = e2.substring(0, t2 - o2) + "..." + e2.substring(i3);
    } else
      e2.length > t2 && (o2 = Math.floor(t2 / 2), i3 = e2.length - o2, e2 = e2.substring(0, o2 + t2 % 2) + "..." + e2.substring(i3));
    return r2 && (e2 = goog.string.htmlEscape(e2)), e2;
  }, goog.string.specialEscapeChars_ = { "\0": "\\0", "\b": "\\b", "\f": "\\f", "\n": "\\n", "\r": "\\r", "	": "\\t", "\v": "\\x0B", '"': '\\"', "\\": "\\\\", "<": "\\u003C" }, goog.string.jsEscapeCache_ = { "'": "\\'" }, goog.string.quote = function(e2) {
    e2 = String(e2);
    for (var t2 = ['"'], r2 = 0; r2 < e2.length; r2++) {
      var o2 = e2.charAt(r2), i3 = o2.charCodeAt(0);
      t2[r2 + 1] = goog.string.specialEscapeChars_[o2] || (31 < i3 && 127 > i3 ? o2 : goog.string.escapeChar(o2));
    }
    return t2.push('"'), t2.join("");
  }, goog.string.escapeString = function(e2) {
    for (var t2 = [], r2 = 0; r2 < e2.length; r2++)
      t2[r2] = goog.string.escapeChar(e2.charAt(r2));
    return t2.join("");
  }, goog.string.escapeChar = function(e2) {
    if (e2 in goog.string.jsEscapeCache_)
      return goog.string.jsEscapeCache_[e2];
    if (e2 in goog.string.specialEscapeChars_)
      return goog.string.jsEscapeCache_[e2] = goog.string.specialEscapeChars_[e2];
    var t2 = e2.charCodeAt(0);
    if (31 < t2 && 127 > t2)
      var r2 = e2;
    else
      256 > t2 ? (r2 = "\\x", (16 > t2 || 256 < t2) && (r2 += "0")) : (r2 = "\\u", 4096 > t2 && (r2 += "0")), r2 += t2.toString(16).toUpperCase();
    return goog.string.jsEscapeCache_[e2] = r2;
  }, goog.string.contains = goog.string.internal.contains, goog.string.caseInsensitiveContains = goog.string.internal.caseInsensitiveContains, goog.string.countOf = function(e2, t2) {
    return e2 && t2 ? e2.split(t2).length - 1 : 0;
  }, goog.string.removeAt = function(e2, t2, r2) {
    var o2 = e2;
    return 0 <= t2 && t2 < e2.length && 0 < r2 && (o2 = e2.substr(0, t2) + e2.substr(t2 + r2, e2.length - t2 - r2)), o2;
  }, goog.string.remove = function(e2, t2) {
    return e2.replace(t2, "");
  }, goog.string.removeAll = function(e2, t2) {
    return t2 = new RegExp(goog.string.regExpEscape(t2), "g"), e2.replace(t2, "");
  }, goog.string.replaceAll = function(e2, t2, r2) {
    return t2 = new RegExp(goog.string.regExpEscape(t2), "g"), e2.replace(t2, r2.replace(/\$/g, "$$$$"));
  }, goog.string.regExpEscape = function(e2) {
    return String(e2).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
  }, goog.string.repeat = String.prototype.repeat ? function(e2, t2) {
    return e2.repeat(t2);
  } : function(e2, t2) {
    return Array(t2 + 1).join(e2);
  }, goog.string.padNumber = function(e2, t2, r2) {
    return -1 == (r2 = (e2 = void 0 !== r2 ? e2.toFixed(r2) : String(e2)).indexOf(".")) && (r2 = e2.length), goog.string.repeat("0", Math.max(0, t2 - r2)) + e2;
  }, goog.string.makeSafe = function(e2) {
    return null == e2 ? "" : String(e2);
  }, goog.string.buildString = function(e2) {
    return Array.prototype.join.call(arguments, "");
  }, goog.string.getRandomString = function() {
    return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ goog.now()).toString(36);
  }, goog.string.compareVersions = goog.string.internal.compareVersions, goog.string.hashCode = function(e2) {
    for (var t2 = 0, r2 = 0; r2 < e2.length; ++r2)
      t2 = 31 * t2 + e2.charCodeAt(r2) >>> 0;
    return t2;
  }, goog.string.uniqueStringCounter_ = 2147483648 * Math.random() | 0, goog.string.createUniqueString = function() {
    return "goog_" + goog.string.uniqueStringCounter_++;
  }, goog.string.toNumber = function(e2) {
    var t2 = Number(e2);
    return 0 == t2 && goog.string.isEmptyOrWhitespace(e2) ? NaN : t2;
  }, goog.string.isLowerCamelCase = function(e2) {
    return /^[a-z]+([A-Z][a-z]*)*$/.test(e2);
  }, goog.string.isUpperCamelCase = function(e2) {
    return /^([A-Z][a-z]*)+$/.test(e2);
  }, goog.string.toCamelCase = function(e2) {
    return String(e2).replace(/\-([a-z])/g, function(e3, t2) {
      return t2.toUpperCase();
    });
  }, goog.string.toSelectorCase = function(e2) {
    return String(e2).replace(/([A-Z])/g, "-$1").toLowerCase();
  }, goog.string.toTitleCase = function(e2, t2) {
    return t2 = "string" == typeof t2 ? goog.string.regExpEscape(t2) : "\\s", e2.replace(new RegExp("(^" + (t2 ? "|[" + t2 + "]+" : "") + ")([a-z])", "g"), function(e3, t3, r2) {
      return t3 + r2.toUpperCase();
    });
  }, goog.string.capitalize = function(e2) {
    return String(e2.charAt(0)).toUpperCase() + String(e2.substr(1)).toLowerCase();
  }, goog.string.parseInt = function(e2) {
    return isFinite(e2) && (e2 = String(e2)), "string" == typeof e2 ? /^\s*-?0x/i.test(e2) ? parseInt(e2, 16) : parseInt(e2, 10) : NaN;
  }, goog.string.splitLimit = function(e2, t2, r2) {
    e2 = e2.split(t2);
    for (var o2 = []; 0 < r2 && e2.length; )
      o2.push(e2.shift()), r2--;
    return e2.length && o2.push(e2.join(t2)), o2;
  }, goog.string.lastComponent = function(e2, t2) {
    if (!t2)
      return e2;
    "string" == typeof t2 && (t2 = [t2]);
    for (var r2 = -1, o2 = 0; o2 < t2.length; o2++)
      if ("" != t2[o2]) {
        var i3 = e2.lastIndexOf(t2[o2]);
        i3 > r2 && (r2 = i3);
      }
    return -1 == r2 ? e2 : e2.slice(r2 + 1);
  }, goog.string.editDistance = function(e2, t2) {
    var r2 = [], o2 = [];
    if (e2 == t2)
      return 0;
    if (!e2.length || !t2.length)
      return Math.max(e2.length, t2.length);
    for (var i3 = 0; i3 < t2.length + 1; i3++)
      r2[i3] = i3;
    for (i3 = 0; i3 < e2.length; i3++) {
      o2[0] = i3 + 1;
      for (var a3 = 0; a3 < t2.length; a3++)
        o2[a3 + 1] = Math.min(o2[a3] + 1, r2[a3 + 1] + 1, r2[a3] + Number(e2[i3] != t2[a3]));
      for (a3 = 0; a3 < r2.length; a3++)
        r2[a3] = o2[a3];
    }
    return o2[t2.length];
  }, goog.labs.userAgent.engine = {}, goog.labs.userAgent.engine.isPresto = function() {
    return goog.labs.userAgent.util.matchUserAgent("Presto");
  }, goog.labs.userAgent.engine.isTrident = function() {
    return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
  }, goog.labs.userAgent.engine.isEdge = function() {
    return goog.labs.userAgent.util.matchUserAgent("Edge");
  }, goog.labs.userAgent.engine.isWebKit = function() {
    return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit") && !goog.labs.userAgent.engine.isEdge();
  }, goog.labs.userAgent.engine.isGecko = function() {
    return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident() && !goog.labs.userAgent.engine.isEdge();
  }, goog.labs.userAgent.engine.getVersion = function() {
    var e2 = goog.labs.userAgent.util.getUserAgent();
    if (e2) {
      e2 = goog.labs.userAgent.util.extractVersionTuples(e2);
      var t2, r2 = goog.labs.userAgent.engine.getEngineTuple_(e2);
      if (r2)
        return "Gecko" == r2[0] ? goog.labs.userAgent.engine.getVersionForKey_(e2, "Firefox") : r2[1];
      if ((e2 = e2[0]) && (t2 = e2[2]) && (t2 = /Trident\/([^\s;]+)/.exec(t2)))
        return t2[1];
    }
    return "";
  }, goog.labs.userAgent.engine.getEngineTuple_ = function(e2) {
    if (!goog.labs.userAgent.engine.isEdge())
      return e2[1];
    for (var t2 = 0; t2 < e2.length; t2++) {
      var r2 = e2[t2];
      if ("Edge" == r2[0])
        return r2;
    }
  }, goog.labs.userAgent.engine.isVersionOrHigher = function(e2) {
    return 0 <= goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), e2);
  }, goog.labs.userAgent.engine.getVersionForKey_ = function(e2, t2) {
    return (e2 = goog.array.find(e2, function(e3) {
      return t2 == e3[0];
    })) && e2[1] || "";
  }, goog.labs.userAgent.platform = {}, goog.labs.userAgent.platform.isAndroid = function() {
    return goog.labs.userAgent.util.matchUserAgent("Android");
  }, goog.labs.userAgent.platform.isIpod = function() {
    return goog.labs.userAgent.util.matchUserAgent("iPod");
  }, goog.labs.userAgent.platform.isIphone = function() {
    return goog.labs.userAgent.util.matchUserAgent("iPhone") && !goog.labs.userAgent.util.matchUserAgent("iPod") && !goog.labs.userAgent.util.matchUserAgent("iPad");
  }, goog.labs.userAgent.platform.isIpad = function() {
    return goog.labs.userAgent.util.matchUserAgent("iPad");
  }, goog.labs.userAgent.platform.isIos = function() {
    return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpad() || goog.labs.userAgent.platform.isIpod();
  }, goog.labs.userAgent.platform.isMacintosh = function() {
    return goog.labs.userAgent.util.matchUserAgent("Macintosh");
  }, goog.labs.userAgent.platform.isLinux = function() {
    return goog.labs.userAgent.util.matchUserAgent("Linux");
  }, goog.labs.userAgent.platform.isWindows = function() {
    return goog.labs.userAgent.util.matchUserAgent("Windows");
  }, goog.labs.userAgent.platform.isChromeOS = function() {
    return goog.labs.userAgent.util.matchUserAgent("CrOS");
  }, goog.labs.userAgent.platform.isChromecast = function() {
    return goog.labs.userAgent.util.matchUserAgent("CrKey");
  }, goog.labs.userAgent.platform.isKaiOS = function() {
    return goog.labs.userAgent.util.matchUserAgentIgnoreCase("KaiOS");
  }, goog.labs.userAgent.platform.getVersion = function() {
    var e2 = goog.labs.userAgent.util.getUserAgent(), t2 = "";
    return goog.labs.userAgent.platform.isWindows() ? t2 = (e2 = (t2 = /Windows (?:NT|Phone) ([0-9.]+)/).exec(e2)) ? e2[1] : "0.0" : goog.labs.userAgent.platform.isIos() ? t2 = (e2 = (t2 = /(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/).exec(e2)) && e2[1].replace(/_/g, ".") : goog.labs.userAgent.platform.isMacintosh() ? t2 = (e2 = (t2 = /Mac OS X ([0-9_.]+)/).exec(e2)) ? e2[1].replace(/_/g, ".") : "10" : goog.labs.userAgent.platform.isKaiOS() ? t2 = (e2 = (t2 = /(?:KaiOS)\/(\S+)/i).exec(e2)) && e2[1] : goog.labs.userAgent.platform.isAndroid() ? t2 = (e2 = (t2 = /Android\s+([^\);]+)(\)|;)/).exec(e2)) && e2[1] : goog.labs.userAgent.platform.isChromeOS() && (t2 = (e2 = (t2 = /(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/).exec(e2)) && e2[1]), t2 || "";
  }, goog.labs.userAgent.platform.isVersionOrHigher = function(e2) {
    return 0 <= goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(), e2);
  }, goog.reflect = {}, goog.reflect.object = function(e2, t2) {
    return t2;
  }, goog.reflect.objectProperty = function(e2, t2) {
    return e2;
  }, goog.reflect.sinkValue = function(e2) {
    return goog.reflect.sinkValue[" "](e2), e2;
  }, goog.reflect.sinkValue[" "] = goog.nullFunction, goog.reflect.canAccessProperty = function(e2, t2) {
    try {
      return goog.reflect.sinkValue(e2[t2]), true;
    } catch (e3) {
    }
    return false;
  }, goog.reflect.cache = function(e2, t2, r2, o2) {
    return o2 = o2 ? o2(t2) : t2, Object.prototype.hasOwnProperty.call(e2, o2) ? e2[o2] : e2[o2] = r2(t2);
  }, goog.userAgent = {}, goog.userAgent.ASSUME_IE = false, goog.userAgent.ASSUME_EDGE = false, goog.userAgent.ASSUME_GECKO = false, goog.userAgent.ASSUME_WEBKIT = false, goog.userAgent.ASSUME_MOBILE_WEBKIT = false, goog.userAgent.ASSUME_OPERA = false, goog.userAgent.ASSUME_ANY_VERSION = false, goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA, goog.userAgent.getUserAgentString = function() {
    return goog.labs.userAgent.util.getUserAgent();
  }, goog.userAgent.getNavigatorTyped = function() {
    return goog.global.navigator || null;
  }, goog.userAgent.getNavigator = function() {
    return goog.userAgent.getNavigatorTyped();
  }, goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera(), goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE(), goog.userAgent.EDGE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_EDGE : goog.labs.userAgent.engine.isEdge(), goog.userAgent.EDGE_OR_IE = goog.userAgent.EDGE || goog.userAgent.IE, goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko(), goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit(), goog.userAgent.isMobile_ = function() {
    return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
  }, goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_(), goog.userAgent.SAFARI = goog.userAgent.WEBKIT, goog.userAgent.determinePlatform_ = function() {
    var e2 = goog.userAgent.getNavigatorTyped();
    return e2 && e2.platform || "";
  }, goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_(), goog.userAgent.ASSUME_MAC = false, goog.userAgent.ASSUME_WINDOWS = false, goog.userAgent.ASSUME_LINUX = false, goog.userAgent.ASSUME_X11 = false, goog.userAgent.ASSUME_ANDROID = false, goog.userAgent.ASSUME_IPHONE = false, goog.userAgent.ASSUME_IPAD = false, goog.userAgent.ASSUME_IPOD = false, goog.userAgent.ASSUME_KAIOS = false, goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD || goog.userAgent.ASSUME_IPOD, goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.labs.userAgent.platform.isMacintosh();
  goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.labs.userAgent.platform.isWindows(), goog.userAgent.isLegacyLinux_ = function() {
    return goog.labs.userAgent.platform.isLinux() || goog.labs.userAgent.platform.isChromeOS();
  }, goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.isLegacyLinux_(), goog.userAgent.isX11_ = function() {
    var e2 = goog.userAgent.getNavigatorTyped();
    return !!e2 && goog.string.contains(e2.appVersion || "", "X11");
  }, goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.isX11_(), goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.labs.userAgent.platform.isAndroid(), goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.labs.userAgent.platform.isIphone(), goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad(), goog.userAgent.IPOD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPOD : goog.labs.userAgent.platform.isIpod(), goog.userAgent.IOS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD || goog.userAgent.ASSUME_IPOD : goog.labs.userAgent.platform.isIos(), goog.userAgent.KAIOS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_KAIOS : goog.labs.userAgent.platform.isKaiOS(), goog.userAgent.determineVersion_ = function() {
    var e2 = "", t2 = goog.userAgent.getVersionRegexResult_();
    return t2 && (e2 = t2 ? t2[1] : ""), goog.userAgent.IE && (null != (t2 = goog.userAgent.getDocumentMode_()) && t2 > parseFloat(e2)) ? String(t2) : e2;
  }, goog.userAgent.getVersionRegexResult_ = function() {
    var e2 = goog.userAgent.getUserAgentString();
    return goog.userAgent.GECKO ? /rv:([^\);]+)(\)|;)/.exec(e2) : goog.userAgent.EDGE ? /Edge\/([\d\.]+)/.exec(e2) : goog.userAgent.IE ? /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(e2) : goog.userAgent.WEBKIT ? /WebKit\/(\S+)/.exec(e2) : goog.userAgent.OPERA ? /(?:Version)[ \/]?(\S+)/.exec(e2) : void 0;
  }, goog.userAgent.getDocumentMode_ = function() {
    var e2 = goog.global.document;
    return e2 ? e2.documentMode : void 0;
  }, goog.userAgent.VERSION = goog.userAgent.determineVersion_(), goog.userAgent.compare = function(e2, t2) {
    return goog.string.compareVersions(e2, t2);
  }, goog.userAgent.isVersionOrHigherCache_ = {}, goog.userAgent.isVersionOrHigher = function(e2) {
    return goog.userAgent.ASSUME_ANY_VERSION || goog.reflect.cache(goog.userAgent.isVersionOrHigherCache_, e2, function() {
      return 0 <= goog.string.compareVersions(goog.userAgent.VERSION, e2);
    });
  }, goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher, goog.userAgent.isDocumentModeOrHigher = function(e2) {
    return Number(goog.userAgent.DOCUMENT_MODE) >= e2;
  }, goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher, goog.userAgent.DOCUMENT_MODE = function() {
    if (goog.global.document && goog.userAgent.IE) {
      var e2 = goog.userAgent.getDocumentMode_();
      return e2 || (parseInt(goog.userAgent.VERSION, 10) || void 0);
    }
  }(), goog.userAgent.product = {}, goog.userAgent.product.ASSUME_FIREFOX = false, goog.userAgent.product.ASSUME_IPHONE = false, goog.userAgent.product.ASSUME_IPAD = false, goog.userAgent.product.ASSUME_ANDROID = false, goog.userAgent.product.ASSUME_CHROME = false, goog.userAgent.product.ASSUME_SAFARI = false, goog.userAgent.product.PRODUCT_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_OPERA || goog.userAgent.product.ASSUME_FIREFOX || goog.userAgent.product.ASSUME_IPHONE || goog.userAgent.product.ASSUME_IPAD || goog.userAgent.product.ASSUME_ANDROID || goog.userAgent.product.ASSUME_CHROME || goog.userAgent.product.ASSUME_SAFARI, goog.userAgent.product.OPERA = goog.userAgent.OPERA, goog.userAgent.product.IE = goog.userAgent.IE, goog.userAgent.product.EDGE = goog.userAgent.EDGE, goog.userAgent.product.FIREFOX = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_FIREFOX : goog.labs.userAgent.browser.isFirefox(), goog.userAgent.product.isIphoneOrIpod_ = function() {
    return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpod();
  }, goog.userAgent.product.IPHONE = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPHONE : goog.userAgent.product.isIphoneOrIpod_(), goog.userAgent.product.IPAD = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad(), goog.userAgent.product.ANDROID = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_ANDROID : goog.labs.userAgent.browser.isAndroidBrowser(), goog.userAgent.product.CHROME = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_CHROME : goog.labs.userAgent.browser.isChrome(), goog.userAgent.product.isSafariDesktop_ = function() {
    return goog.labs.userAgent.browser.isSafari() && !goog.labs.userAgent.platform.isIos();
  }, goog.userAgent.product.SAFARI = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_SAFARI : goog.userAgent.product.isSafariDesktop_(), goog.crypt.base64 = {}, goog.crypt.base64.DEFAULT_ALPHABET_COMMON_ = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", goog.crypt.base64.ENCODED_VALS = goog.crypt.base64.DEFAULT_ALPHABET_COMMON_ + "+/=", goog.crypt.base64.ENCODED_VALS_WEBSAFE = goog.crypt.base64.DEFAULT_ALPHABET_COMMON_ + "-_.", goog.crypt.base64.Alphabet = { DEFAULT: 0, NO_PADDING: 1, WEBSAFE: 2, WEBSAFE_DOT_PADDING: 3, WEBSAFE_NO_PADDING: 4 }, goog.crypt.base64.paddingChars_ = "=.", goog.crypt.base64.isPadding_ = function(e2) {
    return goog.string.contains(goog.crypt.base64.paddingChars_, e2);
  }, goog.crypt.base64.byteToCharMaps_ = {}, goog.crypt.base64.charToByteMap_ = null, goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ = goog.userAgent.GECKO || goog.userAgent.WEBKIT && !goog.userAgent.product.SAFARI || goog.userAgent.OPERA, goog.crypt.base64.HAS_NATIVE_ENCODE_ = goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ || "function" == typeof goog.global.btoa, goog.crypt.base64.HAS_NATIVE_DECODE_ = goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ || !goog.userAgent.product.SAFARI && !goog.userAgent.IE && "function" == typeof goog.global.atob, goog.crypt.base64.encodeByteArray = function(e2, t2) {
    goog.asserts.assert(goog.isArrayLike(e2), "encodeByteArray takes an array as a parameter"), void 0 === t2 && (t2 = goog.crypt.base64.Alphabet.DEFAULT), goog.crypt.base64.init_(), t2 = goog.crypt.base64.byteToCharMaps_[t2];
    for (var r2 = [], o2 = 0; o2 < e2.length; o2 += 3) {
      var i3 = e2[o2], a3 = o2 + 1 < e2.length, n2 = a3 ? e2[o2 + 1] : 0, s2 = o2 + 2 < e2.length, p2 = s2 ? e2[o2 + 2] : 0, d2 = i3 >> 2;
      i3 = (3 & i3) << 4 | n2 >> 4, n2 = (15 & n2) << 2 | p2 >> 6, p2 &= 63, s2 || (p2 = 64, a3 || (n2 = 64)), r2.push(t2[d2], t2[i3], t2[n2] || "", t2[p2] || "");
    }
    return r2.join("");
  }, goog.crypt.base64.encodeString = function(e2, t2) {
    return goog.crypt.base64.HAS_NATIVE_ENCODE_ && !t2 ? goog.global.btoa(e2) : goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(e2), t2);
  }, goog.crypt.base64.decodeString = function(e2, t2) {
    if (goog.crypt.base64.HAS_NATIVE_DECODE_ && !t2)
      return goog.global.atob(e2);
    var r2 = "";
    return goog.crypt.base64.decodeStringInternal_(e2, function(e3) {
      r2 += String.fromCharCode(e3);
    }), r2;
  }, goog.crypt.base64.decodeStringToByteArray = function(e2, t2) {
    var r2 = [];
    return goog.crypt.base64.decodeStringInternal_(e2, function(e3) {
      r2.push(e3);
    }), r2;
  }, goog.crypt.base64.decodeStringToUint8Array = function(e2) {
    goog.asserts.assert(!goog.userAgent.IE || goog.userAgent.isVersionOrHigher("10"), "Browser does not support typed arrays");
    var t2 = e2.length, r2 = 3 * t2 / 4;
    r2 % 3 ? r2 = Math.floor(r2) : goog.crypt.base64.isPadding_(e2[t2 - 1]) && (r2 = goog.crypt.base64.isPadding_(e2[t2 - 2]) ? r2 - 2 : r2 - 1);
    var o2 = new Uint8Array(r2), i3 = 0;
    return goog.crypt.base64.decodeStringInternal_(e2, function(e3) {
      o2[i3++] = e3;
    }), o2.subarray(0, i3);
  }, goog.crypt.base64.decodeStringInternal_ = function(e2, t2) {
    function r2(t3) {
      for (; o2 < e2.length; ) {
        var r3 = e2.charAt(o2++), i4 = goog.crypt.base64.charToByteMap_[r3];
        if (null != i4)
          return i4;
        if (!goog.string.isEmptyOrWhitespace(r3))
          throw Error("Unknown base64 encoding at char: " + r3);
      }
      return t3;
    }
    goog.crypt.base64.init_();
    for (var o2 = 0; ; ) {
      var i3 = r2(-1), a3 = r2(0), n2 = r2(64), s2 = r2(64);
      if (64 === s2 && -1 === i3)
        break;
      t2(i3 << 2 | a3 >> 4), 64 != n2 && (t2(a3 << 4 & 240 | n2 >> 2), 64 != s2 && t2(n2 << 6 & 192 | s2));
    }
  }, goog.crypt.base64.init_ = function() {
    if (!goog.crypt.base64.charToByteMap_) {
      goog.crypt.base64.charToByteMap_ = {};
      for (var e2 = goog.crypt.base64.DEFAULT_ALPHABET_COMMON_.split(""), t2 = ["+/=", "+/", "-_=", "-_.", "-_"], r2 = 0; 5 > r2; r2++) {
        var o2 = e2.concat(t2[r2].split(""));
        goog.crypt.base64.byteToCharMaps_[r2] = o2;
        for (var i3 = 0; i3 < o2.length; i3++) {
          var a3 = o2[i3], n2 = goog.crypt.base64.charToByteMap_[a3];
          void 0 === n2 ? goog.crypt.base64.charToByteMap_[a3] = i3 : goog.asserts.assert(n2 === i3);
        }
      }
    }
  }, jspb.utils = {}, jspb.utils.split64Low = 0, jspb.utils.split64High = 0, jspb.utils.splitUint64 = function(e2) {
    var t2 = e2 >>> 0;
    e2 = Math.floor((e2 - t2) / jspb.BinaryConstants.TWO_TO_32) >>> 0, jspb.utils.split64Low = t2, jspb.utils.split64High = e2;
  }, jspb.utils.splitInt64 = function(e2) {
    var t2 = 0 > e2, r2 = (e2 = Math.abs(e2)) >>> 0;
    e2 = Math.floor((e2 - r2) / jspb.BinaryConstants.TWO_TO_32), e2 >>>= 0, t2 && (e2 = ~e2 >>> 0, 4294967295 < (r2 = 1 + (~r2 >>> 0)) && (r2 = 0, 4294967295 < ++e2 && (e2 = 0))), jspb.utils.split64Low = r2, jspb.utils.split64High = e2;
  }, jspb.utils.splitZigzag64 = function(e2) {
    var t2 = 0 > e2;
    e2 = 2 * Math.abs(e2), jspb.utils.splitUint64(e2), e2 = jspb.utils.split64Low;
    var r2 = jspb.utils.split64High;
    t2 && (0 == e2 ? 0 == r2 ? r2 = e2 = 4294967295 : (r2--, e2 = 4294967295) : e2--), jspb.utils.split64Low = e2, jspb.utils.split64High = r2;
  }, jspb.utils.splitFloat32 = function(e2) {
    var t2 = 0 > e2 ? 1 : 0;
    if (0 === (e2 = t2 ? -e2 : e2))
      0 < 1 / e2 ? (jspb.utils.split64High = 0, jspb.utils.split64Low = 0) : (jspb.utils.split64High = 0, jspb.utils.split64Low = 2147483648);
    else if (isNaN(e2))
      jspb.utils.split64High = 0, jspb.utils.split64Low = 2147483647;
    else if (e2 > jspb.BinaryConstants.FLOAT32_MAX)
      jspb.utils.split64High = 0, jspb.utils.split64Low = (t2 << 31 | 2139095040) >>> 0;
    else if (e2 < jspb.BinaryConstants.FLOAT32_MIN)
      e2 = Math.round(e2 / Math.pow(2, -149)), jspb.utils.split64High = 0, jspb.utils.split64Low = (t2 << 31 | e2) >>> 0;
    else {
      var r2 = Math.floor(Math.log(e2) / Math.LN2);
      e2 *= Math.pow(2, -r2), 16777216 <= (e2 = Math.round(e2 * jspb.BinaryConstants.TWO_TO_23)) && ++r2, jspb.utils.split64High = 0, jspb.utils.split64Low = (t2 << 31 | r2 + 127 << 23 | 8388607 & e2) >>> 0;
    }
  }, jspb.utils.splitFloat64 = function(e2) {
    var t2 = 0 > e2 ? 1 : 0;
    if (0 === (e2 = t2 ? -e2 : e2))
      jspb.utils.split64High = 0 < 1 / e2 ? 0 : 2147483648, jspb.utils.split64Low = 0;
    else if (isNaN(e2))
      jspb.utils.split64High = 2147483647, jspb.utils.split64Low = 4294967295;
    else if (e2 > jspb.BinaryConstants.FLOAT64_MAX)
      jspb.utils.split64High = (t2 << 31 | 2146435072) >>> 0, jspb.utils.split64Low = 0;
    else if (e2 < jspb.BinaryConstants.FLOAT64_MIN) {
      var r2 = e2 / Math.pow(2, -1074);
      e2 = r2 / jspb.BinaryConstants.TWO_TO_32, jspb.utils.split64High = (t2 << 31 | e2) >>> 0, jspb.utils.split64Low = r2 >>> 0;
    } else {
      var o2 = 0;
      if (2 <= (r2 = e2))
        for (; 2 <= r2 && 1023 > o2; )
          o2++, r2 /= 2;
      else
        for (; 1 > r2 && -1022 < o2; )
          r2 *= 2, o2--;
      e2 = (r2 = e2 * Math.pow(2, -o2)) * jspb.BinaryConstants.TWO_TO_20 & 1048575, r2 = r2 * jspb.BinaryConstants.TWO_TO_52 >>> 0, jspb.utils.split64High = (t2 << 31 | o2 + 1023 << 20 | e2) >>> 0, jspb.utils.split64Low = r2;
    }
  }, jspb.utils.splitHash64 = function(e2) {
    var t2 = e2.charCodeAt(0), r2 = e2.charCodeAt(1), o2 = e2.charCodeAt(2), i3 = e2.charCodeAt(3), a3 = e2.charCodeAt(4), n2 = e2.charCodeAt(5), s2 = e2.charCodeAt(6);
    e2 = e2.charCodeAt(7), jspb.utils.split64Low = t2 + (r2 << 8) + (o2 << 16) + (i3 << 24) >>> 0, jspb.utils.split64High = a3 + (n2 << 8) + (s2 << 16) + (e2 << 24) >>> 0;
  }, jspb.utils.joinUint64 = function(e2, t2) {
    return t2 * jspb.BinaryConstants.TWO_TO_32 + (e2 >>> 0);
  }, jspb.utils.joinInt64 = function(e2, t2) {
    var r2 = 2147483648 & t2;
    return r2 && (t2 = ~t2 >>> 0, 0 == (e2 = 1 + ~e2 >>> 0) && (t2 = t2 + 1 >>> 0)), e2 = jspb.utils.joinUint64(e2, t2), r2 ? -e2 : e2;
  }, jspb.utils.toZigzag64 = function(e2, t2, r2) {
    var o2 = t2 >> 31;
    return r2(e2 << 1 ^ o2, (t2 << 1 | e2 >>> 31) ^ o2);
  }, jspb.utils.joinZigzag64 = function(e2, t2) {
    return jspb.utils.fromZigzag64(e2, t2, jspb.utils.joinInt64);
  }, jspb.utils.fromZigzag64 = function(e2, t2, r2) {
    var o2 = -(1 & e2);
    return r2((e2 >>> 1 | t2 << 31) ^ o2, t2 >>> 1 ^ o2);
  }, jspb.utils.joinFloat32 = function(e2, t2) {
    t2 = 2 * (e2 >> 31) + 1;
    var r2 = e2 >>> 23 & 255;
    return e2 &= 8388607, 255 == r2 ? e2 ? NaN : 1 / 0 * t2 : 0 == r2 ? t2 * Math.pow(2, -149) * e2 : t2 * Math.pow(2, r2 - 150) * (e2 + Math.pow(2, 23));
  }, jspb.utils.joinFloat64 = function(e2, t2) {
    var r2 = 2 * (t2 >> 31) + 1, o2 = t2 >>> 20 & 2047;
    return e2 = jspb.BinaryConstants.TWO_TO_32 * (1048575 & t2) + e2, 2047 == o2 ? e2 ? NaN : 1 / 0 * r2 : 0 == o2 ? r2 * Math.pow(2, -1074) * e2 : r2 * Math.pow(2, o2 - 1075) * (e2 + jspb.BinaryConstants.TWO_TO_52);
  }, jspb.utils.joinHash64 = function(e2, t2) {
    return String.fromCharCode(e2 >>> 0 & 255, e2 >>> 8 & 255, e2 >>> 16 & 255, e2 >>> 24 & 255, t2 >>> 0 & 255, t2 >>> 8 & 255, t2 >>> 16 & 255, t2 >>> 24 & 255);
  }, jspb.utils.DIGITS = "0123456789abcdef".split(""), jspb.utils.ZERO_CHAR_CODE_ = 48, jspb.utils.A_CHAR_CODE_ = 97, jspb.utils.joinUnsignedDecimalString = function(e2, t2) {
    function r2(e3, t3) {
      return e3 = e3 ? String(e3) : "", t3 ? "0000000".slice(e3.length) + e3 : e3;
    }
    if (2097151 >= t2)
      return "" + jspb.utils.joinUint64(e2, t2);
    var o2 = (e2 >>> 24 | t2 << 8) >>> 0 & 16777215;
    return e2 = (16777215 & e2) + 6777216 * o2 + 6710656 * (t2 = t2 >> 16 & 65535), o2 += 8147497 * t2, t2 *= 2, 1e7 <= e2 && (o2 += Math.floor(e2 / 1e7), e2 %= 1e7), 1e7 <= o2 && (t2 += Math.floor(o2 / 1e7), o2 %= 1e7), r2(t2, 0) + r2(o2, t2) + r2(e2, 1);
  }, jspb.utils.joinSignedDecimalString = function(e2, t2) {
    var r2 = 2147483648 & t2;
    return r2 && (t2 = ~t2 + (0 == (e2 = 1 + ~e2 >>> 0) ? 1 : 0) >>> 0), e2 = jspb.utils.joinUnsignedDecimalString(e2, t2), r2 ? "-" + e2 : e2;
  }, jspb.utils.hash64ToDecimalString = function(e2, t2) {
    jspb.utils.splitHash64(e2), e2 = jspb.utils.split64Low;
    var r2 = jspb.utils.split64High;
    return t2 ? jspb.utils.joinSignedDecimalString(e2, r2) : jspb.utils.joinUnsignedDecimalString(e2, r2);
  }, jspb.utils.hash64ArrayToDecimalStrings = function(e2, t2) {
    for (var r2 = Array(e2.length), o2 = 0; o2 < e2.length; o2++)
      r2[o2] = jspb.utils.hash64ToDecimalString(e2[o2], t2);
    return r2;
  }, jspb.utils.decimalStringToHash64 = function(e2) {
    function t2(e3, t3) {
      for (var r3 = 0; 8 > r3 && (1 !== e3 || 0 < t3); r3++)
        t3 = e3 * o2[r3] + t3, o2[r3] = 255 & t3, t3 >>>= 8;
    }
    jspb.asserts.assert(0 < e2.length);
    var r2 = false;
    "-" === e2[0] && (r2 = true, e2 = e2.slice(1));
    for (var o2 = [0, 0, 0, 0, 0, 0, 0, 0], i3 = 0; i3 < e2.length; i3++)
      t2(10, e2.charCodeAt(i3) - jspb.utils.ZERO_CHAR_CODE_);
    return r2 && (function() {
      for (var e3 = 0; 8 > e3; e3++)
        o2[e3] = 255 & ~o2[e3];
    }(), t2(1, 1)), goog.crypt.byteArrayToString(o2);
  }, jspb.utils.splitDecimalString = function(e2) {
    jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(e2));
  }, jspb.utils.toHexDigit_ = function(e2) {
    return String.fromCharCode(10 > e2 ? jspb.utils.ZERO_CHAR_CODE_ + e2 : jspb.utils.A_CHAR_CODE_ - 10 + e2);
  }, jspb.utils.fromHexCharCode_ = function(e2) {
    return e2 >= jspb.utils.A_CHAR_CODE_ ? e2 - jspb.utils.A_CHAR_CODE_ + 10 : e2 - jspb.utils.ZERO_CHAR_CODE_;
  }, jspb.utils.hash64ToHexString = function(e2) {
    var t2 = Array(18);
    t2[0] = "0", t2[1] = "x";
    for (var r2 = 0; 8 > r2; r2++) {
      var o2 = e2.charCodeAt(7 - r2);
      t2[2 * r2 + 2] = jspb.utils.toHexDigit_(o2 >> 4), t2[2 * r2 + 3] = jspb.utils.toHexDigit_(15 & o2);
    }
    return t2.join("");
  }, jspb.utils.hexStringToHash64 = function(e2) {
    e2 = e2.toLowerCase(), jspb.asserts.assert(18 == e2.length), jspb.asserts.assert("0" == e2[0]), jspb.asserts.assert("x" == e2[1]);
    for (var t2 = "", r2 = 0; 8 > r2; r2++) {
      var o2 = jspb.utils.fromHexCharCode_(e2.charCodeAt(2 * r2 + 2)), i3 = jspb.utils.fromHexCharCode_(e2.charCodeAt(2 * r2 + 3));
      t2 = String.fromCharCode(16 * o2 + i3) + t2;
    }
    return t2;
  }, jspb.utils.hash64ToNumber = function(e2, t2) {
    jspb.utils.splitHash64(e2), e2 = jspb.utils.split64Low;
    var r2 = jspb.utils.split64High;
    return t2 ? jspb.utils.joinInt64(e2, r2) : jspb.utils.joinUint64(e2, r2);
  }, jspb.utils.numberToHash64 = function(e2) {
    return jspb.utils.splitInt64(e2), jspb.utils.joinHash64(jspb.utils.split64Low, jspb.utils.split64High);
  }, jspb.utils.countVarints = function(e2, t2, r2) {
    for (var o2 = 0, i3 = t2; i3 < r2; i3++)
      o2 += e2[i3] >> 7;
    return r2 - t2 - o2;
  }, jspb.utils.countVarintFields = function(e2, t2, r2, o2) {
    var i3 = 0;
    if (128 > (o2 = 8 * o2 + jspb.BinaryConstants.WireType.VARINT))
      for (; t2 < r2 && e2[t2++] == o2; )
        for (i3++; ; ) {
          var a3 = e2[t2++];
          if (0 == (128 & a3))
            break;
        }
    else
      for (; t2 < r2; ) {
        for (a3 = o2; 128 < a3; ) {
          if (e2[t2] != (127 & a3 | 128))
            return i3;
          t2++, a3 >>= 7;
        }
        if (e2[t2++] != a3)
          break;
        for (i3++; 0 != (128 & (a3 = e2[t2++])); )
          ;
      }
    return i3;
  }, jspb.utils.countFixedFields_ = function(e2, t2, r2, o2, i3) {
    var a3 = 0;
    if (128 > o2)
      for (; t2 < r2 && e2[t2++] == o2; )
        a3++, t2 += i3;
    else
      for (; t2 < r2; ) {
        for (var n2 = o2; 128 < n2; ) {
          if (e2[t2++] != (127 & n2 | 128))
            return a3;
          n2 >>= 7;
        }
        if (e2[t2++] != n2)
          break;
        a3++, t2 += i3;
      }
    return a3;
  }, jspb.utils.countFixed32Fields = function(e2, t2, r2, o2) {
    return jspb.utils.countFixedFields_(e2, t2, r2, 8 * o2 + jspb.BinaryConstants.WireType.FIXED32, 4);
  }, jspb.utils.countFixed64Fields = function(e2, t2, r2, o2) {
    return jspb.utils.countFixedFields_(e2, t2, r2, 8 * o2 + jspb.BinaryConstants.WireType.FIXED64, 8);
  }, jspb.utils.countDelimitedFields = function(e2, t2, r2, o2) {
    var i3 = 0;
    for (o2 = 8 * o2 + jspb.BinaryConstants.WireType.DELIMITED; t2 < r2; ) {
      for (var a3 = o2; 128 < a3; ) {
        if (e2[t2++] != (127 & a3 | 128))
          return i3;
        a3 >>= 7;
      }
      if (e2[t2++] != a3)
        break;
      i3++;
      for (var n2 = 0, s2 = 1; n2 += (127 & (a3 = e2[t2++])) * s2, s2 *= 128, 0 != (128 & a3); )
        ;
      t2 += n2;
    }
    return i3;
  }, jspb.utils.debugBytesToTextFormat = function(e2) {
    var t2 = '"';
    if (e2) {
      e2 = jspb.utils.byteSourceToUint8Array(e2);
      for (var r2 = 0; r2 < e2.length; r2++)
        t2 += "\\x", 16 > e2[r2] && (t2 += "0"), t2 += e2[r2].toString(16);
    }
    return t2 + '"';
  }, jspb.utils.debugScalarToTextFormat = function(e2) {
    return "string" == typeof e2 ? goog.string.quote(e2) : e2.toString();
  }, jspb.utils.stringToByteArray = function(e2) {
    for (var t2 = new Uint8Array(e2.length), r2 = 0; r2 < e2.length; r2++) {
      var o2 = e2.charCodeAt(r2);
      if (255 < o2)
        throw Error("Conversion error: string contains codepoint outside of byte range");
      t2[r2] = o2;
    }
    return t2;
  }, jspb.utils.byteSourceToUint8Array = function(e2) {
    return e2.constructor === Uint8Array ? e2 : e2.constructor === ArrayBuffer || e2.constructor === Array ? new Uint8Array(e2) : e2.constructor === String ? goog.crypt.base64.decodeStringToUint8Array(e2) : e2 instanceof Uint8Array ? new Uint8Array(e2.buffer, e2.byteOffset, e2.byteLength) : (jspb.asserts.fail("Type not convertible to Uint8Array."), new Uint8Array(0));
  }, jspb.BinaryDecoder = function(e2, t2, r2) {
    this.bytes_ = null, this.cursor_ = this.end_ = this.start_ = 0, this.error_ = false, e2 && this.setBlock(e2, t2, r2);
  }, jspb.BinaryDecoder.instanceCache_ = [], jspb.BinaryDecoder.alloc = function(e2, t2, r2) {
    if (jspb.BinaryDecoder.instanceCache_.length) {
      var o2 = jspb.BinaryDecoder.instanceCache_.pop();
      return e2 && o2.setBlock(e2, t2, r2), o2;
    }
    return new jspb.BinaryDecoder(e2, t2, r2);
  }, jspb.BinaryDecoder.prototype.free = function() {
    this.clear(), 100 > jspb.BinaryDecoder.instanceCache_.length && jspb.BinaryDecoder.instanceCache_.push(this);
  }, jspb.BinaryDecoder.prototype.clone = function() {
    return jspb.BinaryDecoder.alloc(this.bytes_, this.start_, this.end_ - this.start_);
  }, jspb.BinaryDecoder.prototype.clear = function() {
    this.bytes_ = null, this.cursor_ = this.end_ = this.start_ = 0, this.error_ = false;
  }, jspb.BinaryDecoder.prototype.getBuffer = function() {
    return this.bytes_;
  }, jspb.BinaryDecoder.prototype.setBlock = function(e2, t2, r2) {
    this.bytes_ = jspb.utils.byteSourceToUint8Array(e2), this.start_ = void 0 !== t2 ? t2 : 0, this.end_ = void 0 !== r2 ? this.start_ + r2 : this.bytes_.length, this.cursor_ = this.start_;
  }, jspb.BinaryDecoder.prototype.getEnd = function() {
    return this.end_;
  }, jspb.BinaryDecoder.prototype.setEnd = function(e2) {
    this.end_ = e2;
  }, jspb.BinaryDecoder.prototype.reset = function() {
    this.cursor_ = this.start_;
  }, jspb.BinaryDecoder.prototype.getCursor = function() {
    return this.cursor_;
  }, jspb.BinaryDecoder.prototype.setCursor = function(e2) {
    this.cursor_ = e2;
  }, jspb.BinaryDecoder.prototype.advance = function(e2) {
    this.cursor_ += e2, jspb.asserts.assert(this.cursor_ <= this.end_);
  }, jspb.BinaryDecoder.prototype.atEnd = function() {
    return this.cursor_ == this.end_;
  }, jspb.BinaryDecoder.prototype.pastEnd = function() {
    return this.cursor_ > this.end_;
  }, jspb.BinaryDecoder.prototype.getError = function() {
    return this.error_ || 0 > this.cursor_ || this.cursor_ > this.end_;
  }, jspb.BinaryDecoder.prototype.readSplitVarint64 = function(e2) {
    for (var t2 = 128, r2 = 0, o2 = 0, i3 = 0; 4 > i3 && 128 <= t2; i3++)
      r2 |= (127 & (t2 = this.bytes_[this.cursor_++])) << 7 * i3;
    if (128 <= t2 && (r2 |= (127 & (t2 = this.bytes_[this.cursor_++])) << 28, o2 |= (127 & t2) >> 4), 128 <= t2)
      for (i3 = 0; 5 > i3 && 128 <= t2; i3++)
        o2 |= (127 & (t2 = this.bytes_[this.cursor_++])) << 7 * i3 + 3;
    if (128 > t2)
      return e2(r2 >>> 0, o2 >>> 0);
    jspb.asserts.fail("Failed to read varint, encoding is invalid."), this.error_ = true;
  }, jspb.BinaryDecoder.prototype.readSplitZigzagVarint64 = function(e2) {
    return this.readSplitVarint64(function(t2, r2) {
      return jspb.utils.fromZigzag64(t2, r2, e2);
    });
  }, jspb.BinaryDecoder.prototype.readSplitFixed64 = function(e2) {
    var t2 = this.bytes_, r2 = this.cursor_;
    this.cursor_ += 8;
    for (var o2 = 0, i3 = 0, a3 = r2 + 7; a3 >= r2; a3--)
      o2 = o2 << 8 | t2[a3], i3 = i3 << 8 | t2[a3 + 4];
    return e2(o2, i3);
  }, jspb.BinaryDecoder.prototype.skipVarint = function() {
    for (; 128 & this.bytes_[this.cursor_]; )
      this.cursor_++;
    this.cursor_++;
  }, jspb.BinaryDecoder.prototype.unskipVarint = function(e2) {
    for (; 128 < e2; )
      this.cursor_--, e2 >>>= 7;
    this.cursor_--;
  }, jspb.BinaryDecoder.prototype.readUnsignedVarint32 = function() {
    var e2 = this.bytes_, t2 = e2[this.cursor_ + 0], r2 = 127 & t2;
    return 128 > t2 ? (this.cursor_ += 1, jspb.asserts.assert(this.cursor_ <= this.end_), r2) : (r2 |= (127 & (t2 = e2[this.cursor_ + 1])) << 7, 128 > t2 ? (this.cursor_ += 2, jspb.asserts.assert(this.cursor_ <= this.end_), r2) : (r2 |= (127 & (t2 = e2[this.cursor_ + 2])) << 14, 128 > t2 ? (this.cursor_ += 3, jspb.asserts.assert(this.cursor_ <= this.end_), r2) : (r2 |= (127 & (t2 = e2[this.cursor_ + 3])) << 21, 128 > t2 ? (this.cursor_ += 4, jspb.asserts.assert(this.cursor_ <= this.end_), r2) : (r2 |= (15 & (t2 = e2[this.cursor_ + 4])) << 28, 128 > t2 ? (this.cursor_ += 5, jspb.asserts.assert(this.cursor_ <= this.end_), r2 >>> 0) : (this.cursor_ += 5, 128 <= e2[this.cursor_++] && 128 <= e2[this.cursor_++] && 128 <= e2[this.cursor_++] && 128 <= e2[this.cursor_++] && 128 <= e2[this.cursor_++] && jspb.asserts.assert(false), jspb.asserts.assert(this.cursor_ <= this.end_), r2)))));
  }, jspb.BinaryDecoder.prototype.readSignedVarint32 = function() {
    return ~~this.readUnsignedVarint32();
  }, jspb.BinaryDecoder.prototype.readUnsignedVarint32String = function() {
    return this.readUnsignedVarint32().toString();
  }, jspb.BinaryDecoder.prototype.readSignedVarint32String = function() {
    return this.readSignedVarint32().toString();
  }, jspb.BinaryDecoder.prototype.readZigzagVarint32 = function() {
    var e2 = this.readUnsignedVarint32();
    return e2 >>> 1 ^ -(1 & e2);
  }, jspb.BinaryDecoder.prototype.readUnsignedVarint64 = function() {
    return this.readSplitVarint64(jspb.utils.joinUint64);
  }, jspb.BinaryDecoder.prototype.readUnsignedVarint64String = function() {
    return this.readSplitVarint64(jspb.utils.joinUnsignedDecimalString);
  }, jspb.BinaryDecoder.prototype.readSignedVarint64 = function() {
    return this.readSplitVarint64(jspb.utils.joinInt64);
  }, jspb.BinaryDecoder.prototype.readSignedVarint64String = function() {
    return this.readSplitVarint64(jspb.utils.joinSignedDecimalString);
  }, jspb.BinaryDecoder.prototype.readZigzagVarint64 = function() {
    return this.readSplitVarint64(jspb.utils.joinZigzag64);
  }, jspb.BinaryDecoder.prototype.readZigzagVarintHash64 = function() {
    return this.readSplitZigzagVarint64(jspb.utils.joinHash64);
  }, jspb.BinaryDecoder.prototype.readZigzagVarint64String = function() {
    return this.readSplitZigzagVarint64(jspb.utils.joinSignedDecimalString);
  }, jspb.BinaryDecoder.prototype.readUint8 = function() {
    var e2 = this.bytes_[this.cursor_ + 0];
    return this.cursor_ += 1, jspb.asserts.assert(this.cursor_ <= this.end_), e2;
  }, jspb.BinaryDecoder.prototype.readUint16 = function() {
    var e2 = this.bytes_[this.cursor_ + 0], t2 = this.bytes_[this.cursor_ + 1];
    return this.cursor_ += 2, jspb.asserts.assert(this.cursor_ <= this.end_), e2 << 0 | t2 << 8;
  }, jspb.BinaryDecoder.prototype.readUint32 = function() {
    var e2 = this.bytes_[this.cursor_ + 0], t2 = this.bytes_[this.cursor_ + 1], r2 = this.bytes_[this.cursor_ + 2], o2 = this.bytes_[this.cursor_ + 3];
    return this.cursor_ += 4, jspb.asserts.assert(this.cursor_ <= this.end_), (e2 << 0 | t2 << 8 | r2 << 16 | o2 << 24) >>> 0;
  }, jspb.BinaryDecoder.prototype.readUint64 = function() {
    var e2 = this.readUint32(), t2 = this.readUint32();
    return jspb.utils.joinUint64(e2, t2);
  }, jspb.BinaryDecoder.prototype.readUint64String = function() {
    var e2 = this.readUint32(), t2 = this.readUint32();
    return jspb.utils.joinUnsignedDecimalString(e2, t2);
  }, jspb.BinaryDecoder.prototype.readInt8 = function() {
    var e2 = this.bytes_[this.cursor_ + 0];
    return this.cursor_ += 1, jspb.asserts.assert(this.cursor_ <= this.end_), e2 << 24 >> 24;
  }, jspb.BinaryDecoder.prototype.readInt16 = function() {
    var e2 = this.bytes_[this.cursor_ + 0], t2 = this.bytes_[this.cursor_ + 1];
    return this.cursor_ += 2, jspb.asserts.assert(this.cursor_ <= this.end_), (e2 << 0 | t2 << 8) << 16 >> 16;
  }, jspb.BinaryDecoder.prototype.readInt32 = function() {
    var e2 = this.bytes_[this.cursor_ + 0], t2 = this.bytes_[this.cursor_ + 1], r2 = this.bytes_[this.cursor_ + 2], o2 = this.bytes_[this.cursor_ + 3];
    return this.cursor_ += 4, jspb.asserts.assert(this.cursor_ <= this.end_), e2 << 0 | t2 << 8 | r2 << 16 | o2 << 24;
  }, jspb.BinaryDecoder.prototype.readInt64 = function() {
    var e2 = this.readUint32(), t2 = this.readUint32();
    return jspb.utils.joinInt64(e2, t2);
  }, jspb.BinaryDecoder.prototype.readInt64String = function() {
    var e2 = this.readUint32(), t2 = this.readUint32();
    return jspb.utils.joinSignedDecimalString(e2, t2);
  }, jspb.BinaryDecoder.prototype.readFloat = function() {
    var e2 = this.readUint32();
    return jspb.utils.joinFloat32(e2, 0);
  }, jspb.BinaryDecoder.prototype.readDouble = function() {
    var e2 = this.readUint32(), t2 = this.readUint32();
    return jspb.utils.joinFloat64(e2, t2);
  }, jspb.BinaryDecoder.prototype.readBool = function() {
    return !!this.bytes_[this.cursor_++];
  }, jspb.BinaryDecoder.prototype.readEnum = function() {
    return this.readSignedVarint32();
  }, jspb.BinaryDecoder.prototype.readString = function(e2) {
    var t2 = this.bytes_, r2 = this.cursor_;
    e2 = r2 + e2;
    for (var o2 = [], i3 = ""; r2 < e2; ) {
      var a3 = t2[r2++];
      if (128 > a3)
        o2.push(a3);
      else {
        if (192 > a3)
          continue;
        if (224 > a3) {
          var n2 = t2[r2++];
          o2.push((31 & a3) << 6 | 63 & n2);
        } else if (240 > a3) {
          n2 = t2[r2++];
          var s2 = t2[r2++];
          o2.push((15 & a3) << 12 | (63 & n2) << 6 | 63 & s2);
        } else if (248 > a3) {
          a3 = (7 & a3) << 18 | (63 & (n2 = t2[r2++])) << 12 | (63 & (s2 = t2[r2++])) << 6 | 63 & t2[r2++], a3 -= 65536, o2.push(55296 + (a3 >> 10 & 1023), 56320 + (1023 & a3));
        }
      }
      8192 <= o2.length && (i3 += String.fromCharCode.apply(null, o2), o2.length = 0);
    }
    return i3 += goog.crypt.byteArrayToString(o2), this.cursor_ = r2, i3;
  }, jspb.BinaryDecoder.prototype.readStringWithLength = function() {
    var e2 = this.readUnsignedVarint32();
    return this.readString(e2);
  }, jspb.BinaryDecoder.prototype.readBytes = function(e2) {
    if (0 > e2 || this.cursor_ + e2 > this.bytes_.length)
      return this.error_ = true, jspb.asserts.fail("Invalid byte length!"), new Uint8Array(0);
    var t2 = this.bytes_.subarray(this.cursor_, this.cursor_ + e2);
    return this.cursor_ += e2, jspb.asserts.assert(this.cursor_ <= this.end_), t2;
  }, jspb.BinaryDecoder.prototype.readVarintHash64 = function() {
    return this.readSplitVarint64(jspb.utils.joinHash64);
  }, jspb.BinaryDecoder.prototype.readFixedHash64 = function() {
    var e2 = this.bytes_, t2 = this.cursor_, r2 = e2[t2 + 0], o2 = e2[t2 + 1], i3 = e2[t2 + 2], a3 = e2[t2 + 3], n2 = e2[t2 + 4], s2 = e2[t2 + 5], p2 = e2[t2 + 6];
    return e2 = e2[t2 + 7], this.cursor_ += 8, String.fromCharCode(r2, o2, i3, a3, n2, s2, p2, e2);
  }, jspb.BinaryReader = function(e2, t2, r2) {
    this.decoder_ = jspb.BinaryDecoder.alloc(e2, t2, r2), this.fieldCursor_ = this.decoder_.getCursor(), this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER, this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID, this.error_ = false, this.readCallbacks_ = null;
  }, jspb.BinaryReader.instanceCache_ = [], jspb.BinaryReader.alloc = function(e2, t2, r2) {
    if (jspb.BinaryReader.instanceCache_.length) {
      var o2 = jspb.BinaryReader.instanceCache_.pop();
      return e2 && o2.decoder_.setBlock(e2, t2, r2), o2;
    }
    return new jspb.BinaryReader(e2, t2, r2);
  }, jspb.BinaryReader.prototype.alloc = jspb.BinaryReader.alloc, jspb.BinaryReader.prototype.free = function() {
    this.decoder_.clear(), this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER, this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID, this.error_ = false, this.readCallbacks_ = null, 100 > jspb.BinaryReader.instanceCache_.length && jspb.BinaryReader.instanceCache_.push(this);
  }, jspb.BinaryReader.prototype.getFieldCursor = function() {
    return this.fieldCursor_;
  }, jspb.BinaryReader.prototype.getCursor = function() {
    return this.decoder_.getCursor();
  }, jspb.BinaryReader.prototype.getBuffer = function() {
    return this.decoder_.getBuffer();
  }, jspb.BinaryReader.prototype.getFieldNumber = function() {
    return this.nextField_;
  }, goog.exportProperty(jspb.BinaryReader.prototype, "getFieldNumber", jspb.BinaryReader.prototype.getFieldNumber), jspb.BinaryReader.prototype.getWireType = function() {
    return this.nextWireType_;
  }, jspb.BinaryReader.prototype.isDelimited = function() {
    return this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED;
  }, goog.exportProperty(jspb.BinaryReader.prototype, "isDelimited", jspb.BinaryReader.prototype.isDelimited), jspb.BinaryReader.prototype.isEndGroup = function() {
    return this.nextWireType_ == jspb.BinaryConstants.WireType.END_GROUP;
  }, goog.exportProperty(jspb.BinaryReader.prototype, "isEndGroup", jspb.BinaryReader.prototype.isEndGroup), jspb.BinaryReader.prototype.getError = function() {
    return this.error_ || this.decoder_.getError();
  }, jspb.BinaryReader.prototype.setBlock = function(e2, t2, r2) {
    this.decoder_.setBlock(e2, t2, r2), this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER, this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID;
  }, jspb.BinaryReader.prototype.reset = function() {
    this.decoder_.reset(), this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER, this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID;
  }, jspb.BinaryReader.prototype.advance = function(e2) {
    this.decoder_.advance(e2);
  }, jspb.BinaryReader.prototype.nextField = function() {
    if (this.decoder_.atEnd())
      return false;
    if (this.getError())
      return jspb.asserts.fail("Decoder hit an error"), false;
    this.fieldCursor_ = this.decoder_.getCursor();
    var e2 = this.decoder_.readUnsignedVarint32(), t2 = e2 >>> 3;
    return (e2 &= 7) != jspb.BinaryConstants.WireType.VARINT && e2 != jspb.BinaryConstants.WireType.FIXED32 && e2 != jspb.BinaryConstants.WireType.FIXED64 && e2 != jspb.BinaryConstants.WireType.DELIMITED && e2 != jspb.BinaryConstants.WireType.START_GROUP && e2 != jspb.BinaryConstants.WireType.END_GROUP ? (jspb.asserts.fail("Invalid wire type: %s (at position %s)", e2, this.fieldCursor_), this.error_ = true, false) : (this.nextField_ = t2, this.nextWireType_ = e2, true);
  }, goog.exportProperty(jspb.BinaryReader.prototype, "nextField", jspb.BinaryReader.prototype.nextField), jspb.BinaryReader.prototype.unskipHeader = function() {
    this.decoder_.unskipVarint(this.nextField_ << 3 | this.nextWireType_);
  }, jspb.BinaryReader.prototype.skipMatchingFields = function() {
    var e2 = this.nextField_;
    for (this.unskipHeader(); this.nextField() && this.getFieldNumber() == e2; )
      this.skipField();
    this.decoder_.atEnd() || this.unskipHeader();
  }, jspb.BinaryReader.prototype.skipVarintField = function() {
    this.nextWireType_ != jspb.BinaryConstants.WireType.VARINT ? (jspb.asserts.fail("Invalid wire type for skipVarintField"), this.skipField()) : this.decoder_.skipVarint();
  }, jspb.BinaryReader.prototype.skipDelimitedField = function() {
    if (this.nextWireType_ != jspb.BinaryConstants.WireType.DELIMITED)
      jspb.asserts.fail("Invalid wire type for skipDelimitedField"), this.skipField();
    else {
      var e2 = this.decoder_.readUnsignedVarint32();
      this.decoder_.advance(e2);
    }
  }, jspb.BinaryReader.prototype.skipFixed32Field = function() {
    this.nextWireType_ != jspb.BinaryConstants.WireType.FIXED32 ? (jspb.asserts.fail("Invalid wire type for skipFixed32Field"), this.skipField()) : this.decoder_.advance(4);
  }, jspb.BinaryReader.prototype.skipFixed64Field = function() {
    this.nextWireType_ != jspb.BinaryConstants.WireType.FIXED64 ? (jspb.asserts.fail("Invalid wire type for skipFixed64Field"), this.skipField()) : this.decoder_.advance(8);
  }, jspb.BinaryReader.prototype.skipGroup = function() {
    for (var e2 = this.nextField_; ; ) {
      if (!this.nextField()) {
        jspb.asserts.fail("Unmatched start-group tag: stream EOF"), this.error_ = true;
        break;
      }
      if (this.nextWireType_ == jspb.BinaryConstants.WireType.END_GROUP) {
        this.nextField_ != e2 && (jspb.asserts.fail("Unmatched end-group tag"), this.error_ = true);
        break;
      }
      this.skipField();
    }
  }, jspb.BinaryReader.prototype.skipField = function() {
    switch (this.nextWireType_) {
      case jspb.BinaryConstants.WireType.VARINT:
        this.skipVarintField();
        break;
      case jspb.BinaryConstants.WireType.FIXED64:
        this.skipFixed64Field();
        break;
      case jspb.BinaryConstants.WireType.DELIMITED:
        this.skipDelimitedField();
        break;
      case jspb.BinaryConstants.WireType.FIXED32:
        this.skipFixed32Field();
        break;
      case jspb.BinaryConstants.WireType.START_GROUP:
        this.skipGroup();
        break;
      default:
        jspb.asserts.fail("Invalid wire encoding for field.");
    }
  }, jspb.BinaryReader.prototype.registerReadCallback = function(e2, t2) {
    null === this.readCallbacks_ && (this.readCallbacks_ = {}), jspb.asserts.assert(!this.readCallbacks_[e2]), this.readCallbacks_[e2] = t2;
  }, jspb.BinaryReader.prototype.runReadCallback = function(e2) {
    return jspb.asserts.assert(null !== this.readCallbacks_), e2 = this.readCallbacks_[e2], jspb.asserts.assert(e2), e2(this);
  }, jspb.BinaryReader.prototype.readAny = function(e2) {
    this.nextWireType_ = jspb.BinaryConstants.FieldTypeToWireType(e2);
    var t2 = jspb.BinaryConstants.FieldType;
    switch (e2) {
      case t2.DOUBLE:
        return this.readDouble();
      case t2.FLOAT:
        return this.readFloat();
      case t2.INT64:
        return this.readInt64();
      case t2.UINT64:
        return this.readUint64();
      case t2.INT32:
        return this.readInt32();
      case t2.FIXED64:
        return this.readFixed64();
      case t2.FIXED32:
        return this.readFixed32();
      case t2.BOOL:
        return this.readBool();
      case t2.STRING:
        return this.readString();
      case t2.GROUP:
        jspb.asserts.fail("Group field type not supported in readAny()");
      case t2.MESSAGE:
        jspb.asserts.fail("Message field type not supported in readAny()");
      case t2.BYTES:
        return this.readBytes();
      case t2.UINT32:
        return this.readUint32();
      case t2.ENUM:
        return this.readEnum();
      case t2.SFIXED32:
        return this.readSfixed32();
      case t2.SFIXED64:
        return this.readSfixed64();
      case t2.SINT32:
        return this.readSint32();
      case t2.SINT64:
        return this.readSint64();
      case t2.FHASH64:
        return this.readFixedHash64();
      case t2.VHASH64:
        return this.readVarintHash64();
      default:
        jspb.asserts.fail("Invalid field type in readAny()");
    }
    return 0;
  }, jspb.BinaryReader.prototype.readMessage = function(e2, t2) {
    jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);
    var r2 = this.decoder_.getEnd(), o2 = this.decoder_.readUnsignedVarint32();
    o2 = this.decoder_.getCursor() + o2, this.decoder_.setEnd(o2), t2(e2, this), this.decoder_.setCursor(o2), this.decoder_.setEnd(r2);
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readMessage", jspb.BinaryReader.prototype.readMessage), jspb.BinaryReader.prototype.readGroup = function(e2, t2, r2) {
    jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.START_GROUP), jspb.asserts.assert(this.nextField_ == e2), r2(t2, this), this.error_ || this.nextWireType_ == jspb.BinaryConstants.WireType.END_GROUP || (jspb.asserts.fail("Group submessage did not end with an END_GROUP tag"), this.error_ = true);
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readGroup", jspb.BinaryReader.prototype.readGroup), jspb.BinaryReader.prototype.getFieldDecoder = function() {
    jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);
    var e2 = this.decoder_.readUnsignedVarint32(), t2 = this.decoder_.getCursor(), r2 = t2 + e2;
    return e2 = jspb.BinaryDecoder.alloc(this.decoder_.getBuffer(), t2, e2), this.decoder_.setCursor(r2), e2;
  }, jspb.BinaryReader.prototype.readInt32 = function() {
    return jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readSignedVarint32();
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readInt32", jspb.BinaryReader.prototype.readInt32), jspb.BinaryReader.prototype.readInt32String = function() {
    return jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readSignedVarint32String();
  }, jspb.BinaryReader.prototype.readInt64 = function() {
    return jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readSignedVarint64();
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readInt64", jspb.BinaryReader.prototype.readInt64), jspb.BinaryReader.prototype.readInt64String = function() {
    return jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readSignedVarint64String();
  }, jspb.BinaryReader.prototype.readUint32 = function() {
    return jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readUnsignedVarint32();
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readUint32", jspb.BinaryReader.prototype.readUint32), jspb.BinaryReader.prototype.readUint32String = function() {
    return jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readUnsignedVarint32String();
  }, jspb.BinaryReader.prototype.readUint64 = function() {
    return jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readUnsignedVarint64();
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readUint64", jspb.BinaryReader.prototype.readUint64), jspb.BinaryReader.prototype.readUint64String = function() {
    return jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readUnsignedVarint64String();
  }, jspb.BinaryReader.prototype.readSint32 = function() {
    return jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readZigzagVarint32();
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readSint32", jspb.BinaryReader.prototype.readSint32), jspb.BinaryReader.prototype.readSint64 = function() {
    return jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readZigzagVarint64();
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readSint64", jspb.BinaryReader.prototype.readSint64), jspb.BinaryReader.prototype.readSint64String = function() {
    return jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readZigzagVarint64String();
  }, jspb.BinaryReader.prototype.readFixed32 = function() {
    return jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED32), this.decoder_.readUint32();
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readFixed32", jspb.BinaryReader.prototype.readFixed32), jspb.BinaryReader.prototype.readFixed64 = function() {
    return jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64), this.decoder_.readUint64();
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readFixed64", jspb.BinaryReader.prototype.readFixed64), jspb.BinaryReader.prototype.readFixed64String = function() {
    return jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64), this.decoder_.readUint64String();
  }, jspb.BinaryReader.prototype.readSfixed32 = function() {
    return jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED32), this.decoder_.readInt32();
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readSfixed32", jspb.BinaryReader.prototype.readSfixed32), jspb.BinaryReader.prototype.readSfixed32String = function() {
    return jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED32), this.decoder_.readInt32().toString();
  }, jspb.BinaryReader.prototype.readSfixed64 = function() {
    return jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64), this.decoder_.readInt64();
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readSfixed64", jspb.BinaryReader.prototype.readSfixed64), jspb.BinaryReader.prototype.readSfixed64String = function() {
    return jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64), this.decoder_.readInt64String();
  }, jspb.BinaryReader.prototype.readFloat = function() {
    return jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED32), this.decoder_.readFloat();
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readFloat", jspb.BinaryReader.prototype.readFloat), jspb.BinaryReader.prototype.readDouble = function() {
    return jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64), this.decoder_.readDouble();
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readDouble", jspb.BinaryReader.prototype.readDouble), jspb.BinaryReader.prototype.readBool = function() {
    return jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), !!this.decoder_.readUnsignedVarint32();
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readBool", jspb.BinaryReader.prototype.readBool), jspb.BinaryReader.prototype.readEnum = function() {
    return jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readSignedVarint64();
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readEnum", jspb.BinaryReader.prototype.readEnum), jspb.BinaryReader.prototype.readString = function() {
    jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);
    var e2 = this.decoder_.readUnsignedVarint32();
    return this.decoder_.readString(e2);
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readString", jspb.BinaryReader.prototype.readString), jspb.BinaryReader.prototype.readBytes = function() {
    jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);
    var e2 = this.decoder_.readUnsignedVarint32();
    return this.decoder_.readBytes(e2);
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readBytes", jspb.BinaryReader.prototype.readBytes), jspb.BinaryReader.prototype.readVarintHash64 = function() {
    return jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readVarintHash64();
  }, jspb.BinaryReader.prototype.readSintHash64 = function() {
    return jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readZigzagVarintHash64();
  }, jspb.BinaryReader.prototype.readSplitVarint64 = function(e2) {
    return jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readSplitVarint64(e2);
  }, jspb.BinaryReader.prototype.readSplitZigzagVarint64 = function(e2) {
    return jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT), this.decoder_.readSplitVarint64(function(t2, r2) {
      return jspb.utils.fromZigzag64(t2, r2, e2);
    });
  }, jspb.BinaryReader.prototype.readFixedHash64 = function() {
    return jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64), this.decoder_.readFixedHash64();
  }, jspb.BinaryReader.prototype.readSplitFixed64 = function(e2) {
    return jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64), this.decoder_.readSplitFixed64(e2);
  }, jspb.BinaryReader.prototype.readPackedField_ = function(e2) {
    jspb.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);
    var t2 = this.decoder_.readUnsignedVarint32();
    t2 = this.decoder_.getCursor() + t2;
    for (var r2 = []; this.decoder_.getCursor() < t2; )
      r2.push(e2.call(this.decoder_));
    return r2;
  }, jspb.BinaryReader.prototype.readPackedInt32 = function() {
    return this.readPackedField_(this.decoder_.readSignedVarint32);
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readPackedInt32", jspb.BinaryReader.prototype.readPackedInt32), jspb.BinaryReader.prototype.readPackedInt32String = function() {
    return this.readPackedField_(this.decoder_.readSignedVarint32String);
  }, jspb.BinaryReader.prototype.readPackedInt64 = function() {
    return this.readPackedField_(this.decoder_.readSignedVarint64);
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readPackedInt64", jspb.BinaryReader.prototype.readPackedInt64), jspb.BinaryReader.prototype.readPackedInt64String = function() {
    return this.readPackedField_(this.decoder_.readSignedVarint64String);
  }, jspb.BinaryReader.prototype.readPackedUint32 = function() {
    return this.readPackedField_(this.decoder_.readUnsignedVarint32);
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readPackedUint32", jspb.BinaryReader.prototype.readPackedUint32), jspb.BinaryReader.prototype.readPackedUint32String = function() {
    return this.readPackedField_(this.decoder_.readUnsignedVarint32String);
  }, jspb.BinaryReader.prototype.readPackedUint64 = function() {
    return this.readPackedField_(this.decoder_.readUnsignedVarint64);
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readPackedUint64", jspb.BinaryReader.prototype.readPackedUint64), jspb.BinaryReader.prototype.readPackedUint64String = function() {
    return this.readPackedField_(this.decoder_.readUnsignedVarint64String);
  }, jspb.BinaryReader.prototype.readPackedSint32 = function() {
    return this.readPackedField_(this.decoder_.readZigzagVarint32);
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readPackedSint32", jspb.BinaryReader.prototype.readPackedSint32), jspb.BinaryReader.prototype.readPackedSint64 = function() {
    return this.readPackedField_(this.decoder_.readZigzagVarint64);
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readPackedSint64", jspb.BinaryReader.prototype.readPackedSint64), jspb.BinaryReader.prototype.readPackedSint64String = function() {
    return this.readPackedField_(this.decoder_.readZigzagVarint64String);
  }, jspb.BinaryReader.prototype.readPackedFixed32 = function() {
    return this.readPackedField_(this.decoder_.readUint32);
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readPackedFixed32", jspb.BinaryReader.prototype.readPackedFixed32), jspb.BinaryReader.prototype.readPackedFixed64 = function() {
    return this.readPackedField_(this.decoder_.readUint64);
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readPackedFixed64", jspb.BinaryReader.prototype.readPackedFixed64), jspb.BinaryReader.prototype.readPackedFixed64String = function() {
    return this.readPackedField_(this.decoder_.readUint64String);
  }, jspb.BinaryReader.prototype.readPackedSfixed32 = function() {
    return this.readPackedField_(this.decoder_.readInt32);
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readPackedSfixed32", jspb.BinaryReader.prototype.readPackedSfixed32), jspb.BinaryReader.prototype.readPackedSfixed64 = function() {
    return this.readPackedField_(this.decoder_.readInt64);
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readPackedSfixed64", jspb.BinaryReader.prototype.readPackedSfixed64), jspb.BinaryReader.prototype.readPackedSfixed64String = function() {
    return this.readPackedField_(this.decoder_.readInt64String);
  }, jspb.BinaryReader.prototype.readPackedFloat = function() {
    return this.readPackedField_(this.decoder_.readFloat);
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readPackedFloat", jspb.BinaryReader.prototype.readPackedFloat), jspb.BinaryReader.prototype.readPackedDouble = function() {
    return this.readPackedField_(this.decoder_.readDouble);
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readPackedDouble", jspb.BinaryReader.prototype.readPackedDouble), jspb.BinaryReader.prototype.readPackedBool = function() {
    return this.readPackedField_(this.decoder_.readBool);
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readPackedBool", jspb.BinaryReader.prototype.readPackedBool), jspb.BinaryReader.prototype.readPackedEnum = function() {
    return this.readPackedField_(this.decoder_.readEnum);
  }, goog.exportProperty(jspb.BinaryReader.prototype, "readPackedEnum", jspb.BinaryReader.prototype.readPackedEnum), jspb.BinaryReader.prototype.readPackedVarintHash64 = function() {
    return this.readPackedField_(this.decoder_.readVarintHash64);
  }, jspb.BinaryReader.prototype.readPackedFixedHash64 = function() {
    return this.readPackedField_(this.decoder_.readFixedHash64);
  }, jspb.BinaryEncoder = function() {
    this.buffer_ = [];
  }, jspb.BinaryEncoder.prototype.length = function() {
    return this.buffer_.length;
  }, jspb.BinaryEncoder.prototype.end = function() {
    var e2 = this.buffer_;
    return this.buffer_ = [], e2;
  }, jspb.BinaryEncoder.prototype.writeSplitVarint64 = function(e2, t2) {
    for (jspb.asserts.assert(e2 == Math.floor(e2)), jspb.asserts.assert(t2 == Math.floor(t2)), jspb.asserts.assert(0 <= e2 && e2 < jspb.BinaryConstants.TWO_TO_32), jspb.asserts.assert(0 <= t2 && t2 < jspb.BinaryConstants.TWO_TO_32); 0 < t2 || 127 < e2; )
      this.buffer_.push(127 & e2 | 128), e2 = (e2 >>> 7 | t2 << 25) >>> 0, t2 >>>= 7;
    this.buffer_.push(e2);
  }, jspb.BinaryEncoder.prototype.writeSplitFixed64 = function(e2, t2) {
    jspb.asserts.assert(e2 == Math.floor(e2)), jspb.asserts.assert(t2 == Math.floor(t2)), jspb.asserts.assert(0 <= e2 && e2 < jspb.BinaryConstants.TWO_TO_32), jspb.asserts.assert(0 <= t2 && t2 < jspb.BinaryConstants.TWO_TO_32), this.writeUint32(e2), this.writeUint32(t2);
  }, jspb.BinaryEncoder.prototype.writeUnsignedVarint32 = function(e2) {
    for (jspb.asserts.assert(e2 == Math.floor(e2)), jspb.asserts.assert(0 <= e2 && e2 < jspb.BinaryConstants.TWO_TO_32); 127 < e2; )
      this.buffer_.push(127 & e2 | 128), e2 >>>= 7;
    this.buffer_.push(e2);
  }, jspb.BinaryEncoder.prototype.writeSignedVarint32 = function(e2) {
    if (jspb.asserts.assert(e2 == Math.floor(e2)), jspb.asserts.assert(e2 >= -jspb.BinaryConstants.TWO_TO_31 && e2 < jspb.BinaryConstants.TWO_TO_31), 0 <= e2)
      this.writeUnsignedVarint32(e2);
    else {
      for (var t2 = 0; 9 > t2; t2++)
        this.buffer_.push(127 & e2 | 128), e2 >>= 7;
      this.buffer_.push(1);
    }
  }, jspb.BinaryEncoder.prototype.writeUnsignedVarint64 = function(e2) {
    jspb.asserts.assert(e2 == Math.floor(e2)), jspb.asserts.assert(0 <= e2 && e2 < jspb.BinaryConstants.TWO_TO_64), jspb.utils.splitInt64(e2), this.writeSplitVarint64(jspb.utils.split64Low, jspb.utils.split64High);
  }, jspb.BinaryEncoder.prototype.writeSignedVarint64 = function(e2) {
    jspb.asserts.assert(e2 == Math.floor(e2)), jspb.asserts.assert(e2 >= -jspb.BinaryConstants.TWO_TO_63 && e2 < jspb.BinaryConstants.TWO_TO_63), jspb.utils.splitInt64(e2), this.writeSplitVarint64(jspb.utils.split64Low, jspb.utils.split64High);
  }, jspb.BinaryEncoder.prototype.writeZigzagVarint32 = function(e2) {
    jspb.asserts.assert(e2 == Math.floor(e2)), jspb.asserts.assert(e2 >= -jspb.BinaryConstants.TWO_TO_31 && e2 < jspb.BinaryConstants.TWO_TO_31), this.writeUnsignedVarint32((e2 << 1 ^ e2 >> 31) >>> 0);
  }, jspb.BinaryEncoder.prototype.writeZigzagVarint64 = function(e2) {
    jspb.asserts.assert(e2 == Math.floor(e2)), jspb.asserts.assert(e2 >= -jspb.BinaryConstants.TWO_TO_63 && e2 < jspb.BinaryConstants.TWO_TO_63), jspb.utils.splitZigzag64(e2), this.writeSplitVarint64(jspb.utils.split64Low, jspb.utils.split64High);
  }, jspb.BinaryEncoder.prototype.writeZigzagVarint64String = function(e2) {
    this.writeZigzagVarintHash64(jspb.utils.decimalStringToHash64(e2));
  }, jspb.BinaryEncoder.prototype.writeZigzagVarintHash64 = function(e2) {
    var t2 = this;
    jspb.utils.splitHash64(e2), jspb.utils.toZigzag64(jspb.utils.split64Low, jspb.utils.split64High, function(e3, r2) {
      t2.writeSplitVarint64(e3 >>> 0, r2 >>> 0);
    });
  }, jspb.BinaryEncoder.prototype.writeUint8 = function(e2) {
    jspb.asserts.assert(e2 == Math.floor(e2)), jspb.asserts.assert(0 <= e2 && 256 > e2), this.buffer_.push(e2 >>> 0 & 255);
  }, jspb.BinaryEncoder.prototype.writeUint16 = function(e2) {
    jspb.asserts.assert(e2 == Math.floor(e2)), jspb.asserts.assert(0 <= e2 && 65536 > e2), this.buffer_.push(e2 >>> 0 & 255), this.buffer_.push(e2 >>> 8 & 255);
  }, jspb.BinaryEncoder.prototype.writeUint32 = function(e2) {
    jspb.asserts.assert(e2 == Math.floor(e2)), jspb.asserts.assert(0 <= e2 && e2 < jspb.BinaryConstants.TWO_TO_32), this.buffer_.push(e2 >>> 0 & 255), this.buffer_.push(e2 >>> 8 & 255), this.buffer_.push(e2 >>> 16 & 255), this.buffer_.push(e2 >>> 24 & 255);
  }, jspb.BinaryEncoder.prototype.writeUint64 = function(e2) {
    jspb.asserts.assert(e2 == Math.floor(e2)), jspb.asserts.assert(0 <= e2 && e2 < jspb.BinaryConstants.TWO_TO_64), jspb.utils.splitUint64(e2), this.writeUint32(jspb.utils.split64Low), this.writeUint32(jspb.utils.split64High);
  }, jspb.BinaryEncoder.prototype.writeInt8 = function(e2) {
    jspb.asserts.assert(e2 == Math.floor(e2)), jspb.asserts.assert(-128 <= e2 && 128 > e2), this.buffer_.push(e2 >>> 0 & 255);
  }, jspb.BinaryEncoder.prototype.writeInt16 = function(e2) {
    jspb.asserts.assert(e2 == Math.floor(e2)), jspb.asserts.assert(-32768 <= e2 && 32768 > e2), this.buffer_.push(e2 >>> 0 & 255), this.buffer_.push(e2 >>> 8 & 255);
  }, jspb.BinaryEncoder.prototype.writeInt32 = function(e2) {
    jspb.asserts.assert(e2 == Math.floor(e2)), jspb.asserts.assert(e2 >= -jspb.BinaryConstants.TWO_TO_31 && e2 < jspb.BinaryConstants.TWO_TO_31), this.buffer_.push(e2 >>> 0 & 255), this.buffer_.push(e2 >>> 8 & 255), this.buffer_.push(e2 >>> 16 & 255), this.buffer_.push(e2 >>> 24 & 255);
  }, jspb.BinaryEncoder.prototype.writeInt64 = function(e2) {
    jspb.asserts.assert(e2 == Math.floor(e2)), jspb.asserts.assert(e2 >= -jspb.BinaryConstants.TWO_TO_63 && e2 < jspb.BinaryConstants.TWO_TO_63), jspb.utils.splitInt64(e2), this.writeSplitFixed64(jspb.utils.split64Low, jspb.utils.split64High);
  }, jspb.BinaryEncoder.prototype.writeInt64String = function(e2) {
    jspb.asserts.assert(e2 == Math.floor(e2)), jspb.asserts.assert(+e2 >= -jspb.BinaryConstants.TWO_TO_63 && +e2 < jspb.BinaryConstants.TWO_TO_63), jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(e2)), this.writeSplitFixed64(jspb.utils.split64Low, jspb.utils.split64High);
  }, jspb.BinaryEncoder.prototype.writeFloat = function(e2) {
    jspb.asserts.assert(1 / 0 === e2 || -1 / 0 === e2 || isNaN(e2) || e2 >= -jspb.BinaryConstants.FLOAT32_MAX && e2 <= jspb.BinaryConstants.FLOAT32_MAX), jspb.utils.splitFloat32(e2), this.writeUint32(jspb.utils.split64Low);
  }, jspb.BinaryEncoder.prototype.writeDouble = function(e2) {
    jspb.asserts.assert(1 / 0 === e2 || -1 / 0 === e2 || isNaN(e2) || e2 >= -jspb.BinaryConstants.FLOAT64_MAX && e2 <= jspb.BinaryConstants.FLOAT64_MAX), jspb.utils.splitFloat64(e2), this.writeUint32(jspb.utils.split64Low), this.writeUint32(jspb.utils.split64High);
  }, jspb.BinaryEncoder.prototype.writeBool = function(e2) {
    jspb.asserts.assert("boolean" == typeof e2 || "number" == typeof e2), this.buffer_.push(e2 ? 1 : 0);
  }, jspb.BinaryEncoder.prototype.writeEnum = function(e2) {
    jspb.asserts.assert(e2 == Math.floor(e2)), jspb.asserts.assert(e2 >= -jspb.BinaryConstants.TWO_TO_31 && e2 < jspb.BinaryConstants.TWO_TO_31), this.writeSignedVarint32(e2);
  }, jspb.BinaryEncoder.prototype.writeBytes = function(e2) {
    this.buffer_.push.apply(this.buffer_, e2);
  }, jspb.BinaryEncoder.prototype.writeVarintHash64 = function(e2) {
    jspb.utils.splitHash64(e2), this.writeSplitVarint64(jspb.utils.split64Low, jspb.utils.split64High);
  }, jspb.BinaryEncoder.prototype.writeFixedHash64 = function(e2) {
    jspb.utils.splitHash64(e2), this.writeUint32(jspb.utils.split64Low), this.writeUint32(jspb.utils.split64High);
  }, jspb.BinaryEncoder.prototype.writeString = function(e2) {
    var t2 = this.buffer_.length;
    jspb.asserts.assertString(e2);
    for (var r2 = 0; r2 < e2.length; r2++) {
      var o2 = e2.charCodeAt(r2);
      if (128 > o2)
        this.buffer_.push(o2);
      else if (2048 > o2)
        this.buffer_.push(o2 >> 6 | 192), this.buffer_.push(63 & o2 | 128);
      else if (65536 > o2)
        if (55296 <= o2 && 56319 >= o2 && r2 + 1 < e2.length) {
          var i3 = e2.charCodeAt(r2 + 1);
          56320 <= i3 && 57343 >= i3 && (o2 = 1024 * (o2 - 55296) + i3 - 56320 + 65536, this.buffer_.push(o2 >> 18 | 240), this.buffer_.push(o2 >> 12 & 63 | 128), this.buffer_.push(o2 >> 6 & 63 | 128), this.buffer_.push(63 & o2 | 128), r2++);
        } else
          this.buffer_.push(o2 >> 12 | 224), this.buffer_.push(o2 >> 6 & 63 | 128), this.buffer_.push(63 & o2 | 128);
    }
    return this.buffer_.length - t2;
  }, jspb.arith = {}, jspb.arith.UInt64 = function(e2, t2) {
    this.lo = e2, this.hi = t2;
  }, jspb.arith.UInt64.prototype.cmp = function(e2) {
    return this.hi < e2.hi || this.hi == e2.hi && this.lo < e2.lo ? -1 : this.hi == e2.hi && this.lo == e2.lo ? 0 : 1;
  }, jspb.arith.UInt64.prototype.rightShift = function() {
    return new jspb.arith.UInt64((this.lo >>> 1 | (1 & this.hi) << 31) >>> 0, this.hi >>> 1 >>> 0);
  }, jspb.arith.UInt64.prototype.leftShift = function() {
    return new jspb.arith.UInt64(this.lo << 1 >>> 0, (this.hi << 1 | this.lo >>> 31) >>> 0);
  }, jspb.arith.UInt64.prototype.msb = function() {
    return !!(2147483648 & this.hi);
  }, jspb.arith.UInt64.prototype.lsb = function() {
    return !!(1 & this.lo);
  }, jspb.arith.UInt64.prototype.zero = function() {
    return 0 == this.lo && 0 == this.hi;
  }, jspb.arith.UInt64.prototype.add = function(e2) {
    return new jspb.arith.UInt64((this.lo + e2.lo & 4294967295) >>> 0 >>> 0, ((this.hi + e2.hi & 4294967295) >>> 0) + (4294967296 <= this.lo + e2.lo ? 1 : 0) >>> 0);
  }, jspb.arith.UInt64.prototype.sub = function(e2) {
    return new jspb.arith.UInt64((this.lo - e2.lo & 4294967295) >>> 0 >>> 0, ((this.hi - e2.hi & 4294967295) >>> 0) - (0 > this.lo - e2.lo ? 1 : 0) >>> 0);
  }, jspb.arith.UInt64.mul32x32 = function(e2, t2) {
    var r2 = 65535 & e2, o2 = 65535 & t2, i3 = t2 >>> 16;
    for (t2 = r2 * o2 + 65536 * (r2 * i3 & 65535) + 65536 * ((e2 >>>= 16) * o2 & 65535), r2 = e2 * i3 + (r2 * i3 >>> 16) + (e2 * o2 >>> 16); 4294967296 <= t2; )
      t2 -= 4294967296, r2 += 1;
    return new jspb.arith.UInt64(t2 >>> 0, r2 >>> 0);
  }, jspb.arith.UInt64.prototype.mul = function(e2) {
    var t2 = jspb.arith.UInt64.mul32x32(this.lo, e2);
    return (e2 = jspb.arith.UInt64.mul32x32(this.hi, e2)).hi = e2.lo, e2.lo = 0, t2.add(e2);
  }, jspb.arith.UInt64.prototype.div = function(e2) {
    if (0 == e2)
      return [];
    var t2 = new jspb.arith.UInt64(0, 0), r2 = new jspb.arith.UInt64(this.lo, this.hi);
    e2 = new jspb.arith.UInt64(e2, 0);
    for (var o2 = new jspb.arith.UInt64(1, 0); !e2.msb(); )
      e2 = e2.leftShift(), o2 = o2.leftShift();
    for (; !o2.zero(); )
      0 >= e2.cmp(r2) && (t2 = t2.add(o2), r2 = r2.sub(e2)), e2 = e2.rightShift(), o2 = o2.rightShift();
    return [t2, r2];
  }, jspb.arith.UInt64.prototype.toString = function() {
    for (var e2 = "", t2 = this; !t2.zero(); ) {
      var r2 = (t2 = t2.div(10))[0];
      e2 = t2[1].lo + e2, t2 = r2;
    }
    return "" == e2 && (e2 = "0"), e2;
  }, jspb.arith.UInt64.fromString = function(e2) {
    for (var t2 = new jspb.arith.UInt64(0, 0), r2 = new jspb.arith.UInt64(0, 0), o2 = 0; o2 < e2.length; o2++) {
      if ("0" > e2[o2] || "9" < e2[o2])
        return null;
      var i3 = parseInt(e2[o2], 10);
      r2.lo = i3, t2 = t2.mul(10).add(r2);
    }
    return t2;
  }, jspb.arith.UInt64.prototype.clone = function() {
    return new jspb.arith.UInt64(this.lo, this.hi);
  }, jspb.arith.Int64 = function(e2, t2) {
    this.lo = e2, this.hi = t2;
  }, jspb.arith.Int64.prototype.add = function(e2) {
    return new jspb.arith.Int64((this.lo + e2.lo & 4294967295) >>> 0 >>> 0, ((this.hi + e2.hi & 4294967295) >>> 0) + (4294967296 <= this.lo + e2.lo ? 1 : 0) >>> 0);
  }, jspb.arith.Int64.prototype.sub = function(e2) {
    return new jspb.arith.Int64((this.lo - e2.lo & 4294967295) >>> 0 >>> 0, ((this.hi - e2.hi & 4294967295) >>> 0) - (0 > this.lo - e2.lo ? 1 : 0) >>> 0);
  }, jspb.arith.Int64.prototype.clone = function() {
    return new jspb.arith.Int64(this.lo, this.hi);
  }, jspb.arith.Int64.prototype.toString = function() {
    var e2 = 0 != (2147483648 & this.hi), t2 = new jspb.arith.UInt64(this.lo, this.hi);
    return e2 && (t2 = new jspb.arith.UInt64(0, 0).sub(t2)), (e2 ? "-" : "") + t2.toString();
  }, jspb.arith.Int64.fromString = function(e2) {
    var t2 = 0 < e2.length && "-" == e2[0];
    return t2 && (e2 = e2.substring(1)), null === (e2 = jspb.arith.UInt64.fromString(e2)) ? null : (t2 && (e2 = new jspb.arith.UInt64(0, 0).sub(e2)), new jspb.arith.Int64(e2.lo, e2.hi));
  }, jspb.BinaryWriter = function() {
    this.blocks_ = [], this.totalLength_ = 0, this.encoder_ = new jspb.BinaryEncoder(), this.bookmarks_ = [];
  }, jspb.BinaryWriter.prototype.appendUint8Array_ = function(e2) {
    var t2 = this.encoder_.end();
    this.blocks_.push(t2), this.blocks_.push(e2), this.totalLength_ += t2.length + e2.length;
  }, jspb.BinaryWriter.prototype.beginDelimited_ = function(e2) {
    return this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.DELIMITED), e2 = this.encoder_.end(), this.blocks_.push(e2), this.totalLength_ += e2.length, e2.push(this.totalLength_), e2;
  }, jspb.BinaryWriter.prototype.endDelimited_ = function(e2) {
    var t2 = e2.pop();
    for (t2 = this.totalLength_ + this.encoder_.length() - t2, jspb.asserts.assert(0 <= t2); 127 < t2; )
      e2.push(127 & t2 | 128), t2 >>>= 7, this.totalLength_++;
    e2.push(t2), this.totalLength_++;
  }, jspb.BinaryWriter.prototype.writeSerializedMessage = function(e2, t2, r2) {
    this.appendUint8Array_(e2.subarray(t2, r2));
  }, jspb.BinaryWriter.prototype.maybeWriteSerializedMessage = function(e2, t2, r2) {
    null != e2 && null != t2 && null != r2 && this.writeSerializedMessage(e2, t2, r2);
  }, jspb.BinaryWriter.prototype.reset = function() {
    this.blocks_ = [], this.encoder_.end(), this.totalLength_ = 0, this.bookmarks_ = [];
  }, jspb.BinaryWriter.prototype.getResultBuffer = function() {
    jspb.asserts.assert(0 == this.bookmarks_.length);
    for (var e2 = new Uint8Array(this.totalLength_ + this.encoder_.length()), t2 = this.blocks_, r2 = t2.length, o2 = 0, i3 = 0; i3 < r2; i3++) {
      var a3 = t2[i3];
      e2.set(a3, o2), o2 += a3.length;
    }
    return t2 = this.encoder_.end(), e2.set(t2, o2), o2 += t2.length, jspb.asserts.assert(o2 == e2.length), this.blocks_ = [e2], e2;
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "getResultBuffer", jspb.BinaryWriter.prototype.getResultBuffer), jspb.BinaryWriter.prototype.getResultBase64String = function(e2) {
    return goog.crypt.base64.encodeByteArray(this.getResultBuffer(), e2);
  }, jspb.BinaryWriter.prototype.beginSubMessage = function(e2) {
    this.bookmarks_.push(this.beginDelimited_(e2));
  }, jspb.BinaryWriter.prototype.endSubMessage = function() {
    jspb.asserts.assert(0 <= this.bookmarks_.length), this.endDelimited_(this.bookmarks_.pop());
  }, jspb.BinaryWriter.prototype.writeFieldHeader_ = function(e2, t2) {
    jspb.asserts.assert(1 <= e2 && e2 == Math.floor(e2)), this.encoder_.writeUnsignedVarint32(8 * e2 + t2);
  }, jspb.BinaryWriter.prototype.writeAny = function(e2, t2, r2) {
    var o2 = jspb.BinaryConstants.FieldType;
    switch (e2) {
      case o2.DOUBLE:
        this.writeDouble(t2, r2);
        break;
      case o2.FLOAT:
        this.writeFloat(t2, r2);
        break;
      case o2.INT64:
        this.writeInt64(t2, r2);
        break;
      case o2.UINT64:
        this.writeUint64(t2, r2);
        break;
      case o2.INT32:
        this.writeInt32(t2, r2);
        break;
      case o2.FIXED64:
        this.writeFixed64(t2, r2);
        break;
      case o2.FIXED32:
        this.writeFixed32(t2, r2);
        break;
      case o2.BOOL:
        this.writeBool(t2, r2);
        break;
      case o2.STRING:
        this.writeString(t2, r2);
        break;
      case o2.GROUP:
        jspb.asserts.fail("Group field type not supported in writeAny()");
        break;
      case o2.MESSAGE:
        jspb.asserts.fail("Message field type not supported in writeAny()");
        break;
      case o2.BYTES:
        this.writeBytes(t2, r2);
        break;
      case o2.UINT32:
        this.writeUint32(t2, r2);
        break;
      case o2.ENUM:
        this.writeEnum(t2, r2);
        break;
      case o2.SFIXED32:
        this.writeSfixed32(t2, r2);
        break;
      case o2.SFIXED64:
        this.writeSfixed64(t2, r2);
        break;
      case o2.SINT32:
        this.writeSint32(t2, r2);
        break;
      case o2.SINT64:
        this.writeSint64(t2, r2);
        break;
      case o2.FHASH64:
        this.writeFixedHash64(t2, r2);
        break;
      case o2.VHASH64:
        this.writeVarintHash64(t2, r2);
        break;
      default:
        jspb.asserts.fail("Invalid field type in writeAny()");
    }
  }, jspb.BinaryWriter.prototype.writeUnsignedVarint32_ = function(e2, t2) {
    null != t2 && (this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeUnsignedVarint32(t2));
  }, jspb.BinaryWriter.prototype.writeSignedVarint32_ = function(e2, t2) {
    null != t2 && (this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint32(t2));
  }, jspb.BinaryWriter.prototype.writeUnsignedVarint64_ = function(e2, t2) {
    null != t2 && (this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeUnsignedVarint64(t2));
  }, jspb.BinaryWriter.prototype.writeSignedVarint64_ = function(e2, t2) {
    null != t2 && (this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint64(t2));
  }, jspb.BinaryWriter.prototype.writeZigzagVarint32_ = function(e2, t2) {
    null != t2 && (this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeZigzagVarint32(t2));
  }, jspb.BinaryWriter.prototype.writeZigzagVarint64_ = function(e2, t2) {
    null != t2 && (this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeZigzagVarint64(t2));
  }, jspb.BinaryWriter.prototype.writeZigzagVarint64String_ = function(e2, t2) {
    null != t2 && (this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeZigzagVarint64String(t2));
  }, jspb.BinaryWriter.prototype.writeZigzagVarintHash64_ = function(e2, t2) {
    null != t2 && (this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeZigzagVarintHash64(t2));
  }, jspb.BinaryWriter.prototype.writeInt32 = function(e2, t2) {
    null != t2 && (jspb.asserts.assert(t2 >= -jspb.BinaryConstants.TWO_TO_31 && t2 < jspb.BinaryConstants.TWO_TO_31), this.writeSignedVarint32_(e2, t2));
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeInt32", jspb.BinaryWriter.prototype.writeInt32), jspb.BinaryWriter.prototype.writeInt32String = function(e2, t2) {
    null != t2 && (t2 = parseInt(t2, 10), jspb.asserts.assert(t2 >= -jspb.BinaryConstants.TWO_TO_31 && t2 < jspb.BinaryConstants.TWO_TO_31), this.writeSignedVarint32_(e2, t2));
  }, jspb.BinaryWriter.prototype.writeInt64 = function(e2, t2) {
    null != t2 && (jspb.asserts.assert(t2 >= -jspb.BinaryConstants.TWO_TO_63 && t2 < jspb.BinaryConstants.TWO_TO_63), this.writeSignedVarint64_(e2, t2));
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeInt64", jspb.BinaryWriter.prototype.writeInt64), jspb.BinaryWriter.prototype.writeInt64String = function(e2, t2) {
    null != t2 && (t2 = jspb.arith.Int64.fromString(t2), this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSplitVarint64(t2.lo, t2.hi));
  }, jspb.BinaryWriter.prototype.writeUint32 = function(e2, t2) {
    null != t2 && (jspb.asserts.assert(0 <= t2 && t2 < jspb.BinaryConstants.TWO_TO_32), this.writeUnsignedVarint32_(e2, t2));
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeUint32", jspb.BinaryWriter.prototype.writeUint32), jspb.BinaryWriter.prototype.writeUint32String = function(e2, t2) {
    null != t2 && (t2 = parseInt(t2, 10), jspb.asserts.assert(0 <= t2 && t2 < jspb.BinaryConstants.TWO_TO_32), this.writeUnsignedVarint32_(e2, t2));
  }, jspb.BinaryWriter.prototype.writeUint64 = function(e2, t2) {
    null != t2 && (jspb.asserts.assert(0 <= t2 && t2 < jspb.BinaryConstants.TWO_TO_64), this.writeUnsignedVarint64_(e2, t2));
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeUint64", jspb.BinaryWriter.prototype.writeUint64), jspb.BinaryWriter.prototype.writeUint64String = function(e2, t2) {
    null != t2 && (t2 = jspb.arith.UInt64.fromString(t2), this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSplitVarint64(t2.lo, t2.hi));
  }, jspb.BinaryWriter.prototype.writeSint32 = function(e2, t2) {
    null != t2 && (jspb.asserts.assert(t2 >= -jspb.BinaryConstants.TWO_TO_31 && t2 < jspb.BinaryConstants.TWO_TO_31), this.writeZigzagVarint32_(e2, t2));
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeSint32", jspb.BinaryWriter.prototype.writeSint32), jspb.BinaryWriter.prototype.writeSint64 = function(e2, t2) {
    null != t2 && (jspb.asserts.assert(t2 >= -jspb.BinaryConstants.TWO_TO_63 && t2 < jspb.BinaryConstants.TWO_TO_63), this.writeZigzagVarint64_(e2, t2));
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeSint64", jspb.BinaryWriter.prototype.writeSint64), jspb.BinaryWriter.prototype.writeSintHash64 = function(e2, t2) {
    null != t2 && this.writeZigzagVarintHash64_(e2, t2);
  }, jspb.BinaryWriter.prototype.writeSint64String = function(e2, t2) {
    null != t2 && this.writeZigzagVarint64String_(e2, t2);
  }, jspb.BinaryWriter.prototype.writeFixed32 = function(e2, t2) {
    null != t2 && (jspb.asserts.assert(0 <= t2 && t2 < jspb.BinaryConstants.TWO_TO_32), this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.FIXED32), this.encoder_.writeUint32(t2));
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeFixed32", jspb.BinaryWriter.prototype.writeFixed32), jspb.BinaryWriter.prototype.writeFixed64 = function(e2, t2) {
    null != t2 && (jspb.asserts.assert(0 <= t2 && t2 < jspb.BinaryConstants.TWO_TO_64), this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeUint64(t2));
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeFixed64", jspb.BinaryWriter.prototype.writeFixed64), jspb.BinaryWriter.prototype.writeFixed64String = function(e2, t2) {
    null != t2 && (t2 = jspb.arith.UInt64.fromString(t2), this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeSplitFixed64(t2.lo, t2.hi));
  }, jspb.BinaryWriter.prototype.writeSfixed32 = function(e2, t2) {
    null != t2 && (jspb.asserts.assert(t2 >= -jspb.BinaryConstants.TWO_TO_31 && t2 < jspb.BinaryConstants.TWO_TO_31), this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.FIXED32), this.encoder_.writeInt32(t2));
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeSfixed32", jspb.BinaryWriter.prototype.writeSfixed32), jspb.BinaryWriter.prototype.writeSfixed64 = function(e2, t2) {
    null != t2 && (jspb.asserts.assert(t2 >= -jspb.BinaryConstants.TWO_TO_63 && t2 < jspb.BinaryConstants.TWO_TO_63), this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeInt64(t2));
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeSfixed64", jspb.BinaryWriter.prototype.writeSfixed64), jspb.BinaryWriter.prototype.writeSfixed64String = function(e2, t2) {
    null != t2 && (t2 = jspb.arith.Int64.fromString(t2), this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeSplitFixed64(t2.lo, t2.hi));
  }, jspb.BinaryWriter.prototype.writeFloat = function(e2, t2) {
    null != t2 && (this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.FIXED32), this.encoder_.writeFloat(t2));
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeFloat", jspb.BinaryWriter.prototype.writeFloat), jspb.BinaryWriter.prototype.writeDouble = function(e2, t2) {
    null != t2 && (this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeDouble(t2));
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeDouble", jspb.BinaryWriter.prototype.writeDouble), jspb.BinaryWriter.prototype.writeBool = function(e2, t2) {
    null != t2 && (jspb.asserts.assert("boolean" == typeof t2 || "number" == typeof t2), this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeBool(t2));
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeBool", jspb.BinaryWriter.prototype.writeBool), jspb.BinaryWriter.prototype.writeEnum = function(e2, t2) {
    null != t2 && (jspb.asserts.assert(t2 >= -jspb.BinaryConstants.TWO_TO_31 && t2 < jspb.BinaryConstants.TWO_TO_31), this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint32(t2));
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeEnum", jspb.BinaryWriter.prototype.writeEnum), jspb.BinaryWriter.prototype.writeString = function(e2, t2) {
    null != t2 && (e2 = this.beginDelimited_(e2), this.encoder_.writeString(t2), this.endDelimited_(e2));
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeString", jspb.BinaryWriter.prototype.writeString), jspb.BinaryWriter.prototype.writeBytes = function(e2, t2) {
    null != t2 && (t2 = jspb.utils.byteSourceToUint8Array(t2), this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(t2.length), this.appendUint8Array_(t2));
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeBytes", jspb.BinaryWriter.prototype.writeBytes), jspb.BinaryWriter.prototype.writeMessage = function(e2, t2, r2) {
    null != t2 && (e2 = this.beginDelimited_(e2), r2(t2, this), this.endDelimited_(e2));
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeMessage", jspb.BinaryWriter.prototype.writeMessage), jspb.BinaryWriter.prototype.writeMessageSet = function(e2, t2, r2) {
    null != t2 && (this.writeFieldHeader_(1, jspb.BinaryConstants.WireType.START_GROUP), this.writeFieldHeader_(2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint32(e2), e2 = this.beginDelimited_(3), r2(t2, this), this.endDelimited_(e2), this.writeFieldHeader_(1, jspb.BinaryConstants.WireType.END_GROUP));
  }, jspb.BinaryWriter.prototype.writeGroup = function(e2, t2, r2) {
    null != t2 && (this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.START_GROUP), r2(t2, this), this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.END_GROUP));
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeGroup", jspb.BinaryWriter.prototype.writeGroup), jspb.BinaryWriter.prototype.writeFixedHash64 = function(e2, t2) {
    null != t2 && (jspb.asserts.assert(8 == t2.length), this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeFixedHash64(t2));
  }, jspb.BinaryWriter.prototype.writeVarintHash64 = function(e2, t2) {
    null != t2 && (jspb.asserts.assert(8 == t2.length), this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeVarintHash64(t2));
  }, jspb.BinaryWriter.prototype.writeSplitFixed64 = function(e2, t2, r2) {
    this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeSplitFixed64(t2, r2);
  }, jspb.BinaryWriter.prototype.writeSplitVarint64 = function(e2, t2, r2) {
    this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSplitVarint64(t2, r2);
  }, jspb.BinaryWriter.prototype.writeSplitZigzagVarint64 = function(e2, t2, r2) {
    this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.VARINT);
    var o2 = this.encoder_;
    jspb.utils.toZigzag64(t2, r2, function(e3, t3) {
      o2.writeSplitVarint64(e3 >>> 0, t3 >>> 0);
    });
  }, jspb.BinaryWriter.prototype.writeRepeatedInt32 = function(e2, t2) {
    if (null != t2)
      for (var r2 = 0; r2 < t2.length; r2++)
        this.writeSignedVarint32_(e2, t2[r2]);
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedInt32", jspb.BinaryWriter.prototype.writeRepeatedInt32), jspb.BinaryWriter.prototype.writeRepeatedInt32String = function(e2, t2) {
    if (null != t2)
      for (var r2 = 0; r2 < t2.length; r2++)
        this.writeInt32String(e2, t2[r2]);
  }, jspb.BinaryWriter.prototype.writeRepeatedInt64 = function(e2, t2) {
    if (null != t2)
      for (var r2 = 0; r2 < t2.length; r2++)
        this.writeSignedVarint64_(e2, t2[r2]);
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedInt64", jspb.BinaryWriter.prototype.writeRepeatedInt64), jspb.BinaryWriter.prototype.writeRepeatedSplitFixed64 = function(e2, t2, r2, o2) {
    if (null != t2)
      for (var i3 = 0; i3 < t2.length; i3++)
        this.writeSplitFixed64(e2, r2(t2[i3]), o2(t2[i3]));
  }, jspb.BinaryWriter.prototype.writeRepeatedSplitVarint64 = function(e2, t2, r2, o2) {
    if (null != t2)
      for (var i3 = 0; i3 < t2.length; i3++)
        this.writeSplitVarint64(e2, r2(t2[i3]), o2(t2[i3]));
  }, jspb.BinaryWriter.prototype.writeRepeatedSplitZigzagVarint64 = function(e2, t2, r2, o2) {
    if (null != t2)
      for (var i3 = 0; i3 < t2.length; i3++)
        this.writeSplitZigzagVarint64(e2, r2(t2[i3]), o2(t2[i3]));
  }, jspb.BinaryWriter.prototype.writeRepeatedInt64String = function(e2, t2) {
    if (null != t2)
      for (var r2 = 0; r2 < t2.length; r2++)
        this.writeInt64String(e2, t2[r2]);
  }, jspb.BinaryWriter.prototype.writeRepeatedUint32 = function(e2, t2) {
    if (null != t2)
      for (var r2 = 0; r2 < t2.length; r2++)
        this.writeUnsignedVarint32_(e2, t2[r2]);
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedUint32", jspb.BinaryWriter.prototype.writeRepeatedUint32), jspb.BinaryWriter.prototype.writeRepeatedUint32String = function(e2, t2) {
    if (null != t2)
      for (var r2 = 0; r2 < t2.length; r2++)
        this.writeUint32String(e2, t2[r2]);
  }, jspb.BinaryWriter.prototype.writeRepeatedUint64 = function(e2, t2) {
    if (null != t2)
      for (var r2 = 0; r2 < t2.length; r2++)
        this.writeUnsignedVarint64_(e2, t2[r2]);
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedUint64", jspb.BinaryWriter.prototype.writeRepeatedUint64), jspb.BinaryWriter.prototype.writeRepeatedUint64String = function(e2, t2) {
    if (null != t2)
      for (var r2 = 0; r2 < t2.length; r2++)
        this.writeUint64String(e2, t2[r2]);
  }, jspb.BinaryWriter.prototype.writeRepeatedSint32 = function(e2, t2) {
    if (null != t2)
      for (var r2 = 0; r2 < t2.length; r2++)
        this.writeZigzagVarint32_(e2, t2[r2]);
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedSint32", jspb.BinaryWriter.prototype.writeRepeatedSint32), jspb.BinaryWriter.prototype.writeRepeatedSint64 = function(e2, t2) {
    if (null != t2)
      for (var r2 = 0; r2 < t2.length; r2++)
        this.writeZigzagVarint64_(e2, t2[r2]);
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedSint64", jspb.BinaryWriter.prototype.writeRepeatedSint64), jspb.BinaryWriter.prototype.writeRepeatedSint64String = function(e2, t2) {
    if (null != t2)
      for (var r2 = 0; r2 < t2.length; r2++)
        this.writeZigzagVarint64String_(e2, t2[r2]);
  }, jspb.BinaryWriter.prototype.writeRepeatedSintHash64 = function(e2, t2) {
    if (null != t2)
      for (var r2 = 0; r2 < t2.length; r2++)
        this.writeZigzagVarintHash64_(e2, t2[r2]);
  }, jspb.BinaryWriter.prototype.writeRepeatedFixed32 = function(e2, t2) {
    if (null != t2)
      for (var r2 = 0; r2 < t2.length; r2++)
        this.writeFixed32(e2, t2[r2]);
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedFixed32", jspb.BinaryWriter.prototype.writeRepeatedFixed32), jspb.BinaryWriter.prototype.writeRepeatedFixed64 = function(e2, t2) {
    if (null != t2)
      for (var r2 = 0; r2 < t2.length; r2++)
        this.writeFixed64(e2, t2[r2]);
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedFixed64", jspb.BinaryWriter.prototype.writeRepeatedFixed64), jspb.BinaryWriter.prototype.writeRepeatedFixed64String = function(e2, t2) {
    if (null != t2)
      for (var r2 = 0; r2 < t2.length; r2++)
        this.writeFixed64String(e2, t2[r2]);
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedFixed64String", jspb.BinaryWriter.prototype.writeRepeatedFixed64String), jspb.BinaryWriter.prototype.writeRepeatedSfixed32 = function(e2, t2) {
    if (null != t2)
      for (var r2 = 0; r2 < t2.length; r2++)
        this.writeSfixed32(e2, t2[r2]);
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedSfixed32", jspb.BinaryWriter.prototype.writeRepeatedSfixed32), jspb.BinaryWriter.prototype.writeRepeatedSfixed64 = function(e2, t2) {
    if (null != t2)
      for (var r2 = 0; r2 < t2.length; r2++)
        this.writeSfixed64(e2, t2[r2]);
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedSfixed64", jspb.BinaryWriter.prototype.writeRepeatedSfixed64), jspb.BinaryWriter.prototype.writeRepeatedSfixed64String = function(e2, t2) {
    if (null != t2)
      for (var r2 = 0; r2 < t2.length; r2++)
        this.writeSfixed64String(e2, t2[r2]);
  }, jspb.BinaryWriter.prototype.writeRepeatedFloat = function(e2, t2) {
    if (null != t2)
      for (var r2 = 0; r2 < t2.length; r2++)
        this.writeFloat(e2, t2[r2]);
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedFloat", jspb.BinaryWriter.prototype.writeRepeatedFloat), jspb.BinaryWriter.prototype.writeRepeatedDouble = function(e2, t2) {
    if (null != t2)
      for (var r2 = 0; r2 < t2.length; r2++)
        this.writeDouble(e2, t2[r2]);
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedDouble", jspb.BinaryWriter.prototype.writeRepeatedDouble), jspb.BinaryWriter.prototype.writeRepeatedBool = function(e2, t2) {
    if (null != t2)
      for (var r2 = 0; r2 < t2.length; r2++)
        this.writeBool(e2, t2[r2]);
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedBool", jspb.BinaryWriter.prototype.writeRepeatedBool), jspb.BinaryWriter.prototype.writeRepeatedEnum = function(e2, t2) {
    if (null != t2)
      for (var r2 = 0; r2 < t2.length; r2++)
        this.writeEnum(e2, t2[r2]);
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedEnum", jspb.BinaryWriter.prototype.writeRepeatedEnum), jspb.BinaryWriter.prototype.writeRepeatedString = function(e2, t2) {
    if (null != t2)
      for (var r2 = 0; r2 < t2.length; r2++)
        this.writeString(e2, t2[r2]);
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedString", jspb.BinaryWriter.prototype.writeRepeatedString), jspb.BinaryWriter.prototype.writeRepeatedBytes = function(e2, t2) {
    if (null != t2)
      for (var r2 = 0; r2 < t2.length; r2++)
        this.writeBytes(e2, t2[r2]);
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedBytes", jspb.BinaryWriter.prototype.writeRepeatedBytes), jspb.BinaryWriter.prototype.writeRepeatedMessage = function(e2, t2, r2) {
    if (null != t2)
      for (var o2 = 0; o2 < t2.length; o2++) {
        var i3 = this.beginDelimited_(e2);
        r2(t2[o2], this), this.endDelimited_(i3);
      }
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedMessage", jspb.BinaryWriter.prototype.writeRepeatedMessage), jspb.BinaryWriter.prototype.writeRepeatedGroup = function(e2, t2, r2) {
    if (null != t2)
      for (var o2 = 0; o2 < t2.length; o2++)
        this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.START_GROUP), r2(t2[o2], this), this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.END_GROUP);
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writeRepeatedGroup", jspb.BinaryWriter.prototype.writeRepeatedGroup), jspb.BinaryWriter.prototype.writeRepeatedFixedHash64 = function(e2, t2) {
    if (null != t2)
      for (var r2 = 0; r2 < t2.length; r2++)
        this.writeFixedHash64(e2, t2[r2]);
  }, jspb.BinaryWriter.prototype.writeRepeatedVarintHash64 = function(e2, t2) {
    if (null != t2)
      for (var r2 = 0; r2 < t2.length; r2++)
        this.writeVarintHash64(e2, t2[r2]);
  }, jspb.BinaryWriter.prototype.writePackedInt32 = function(e2, t2) {
    if (null != t2 && t2.length) {
      e2 = this.beginDelimited_(e2);
      for (var r2 = 0; r2 < t2.length; r2++)
        this.encoder_.writeSignedVarint32(t2[r2]);
      this.endDelimited_(e2);
    }
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writePackedInt32", jspb.BinaryWriter.prototype.writePackedInt32), jspb.BinaryWriter.prototype.writePackedInt32String = function(e2, t2) {
    if (null != t2 && t2.length) {
      e2 = this.beginDelimited_(e2);
      for (var r2 = 0; r2 < t2.length; r2++)
        this.encoder_.writeSignedVarint32(parseInt(t2[r2], 10));
      this.endDelimited_(e2);
    }
  }, jspb.BinaryWriter.prototype.writePackedInt64 = function(e2, t2) {
    if (null != t2 && t2.length) {
      e2 = this.beginDelimited_(e2);
      for (var r2 = 0; r2 < t2.length; r2++)
        this.encoder_.writeSignedVarint64(t2[r2]);
      this.endDelimited_(e2);
    }
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writePackedInt64", jspb.BinaryWriter.prototype.writePackedInt64), jspb.BinaryWriter.prototype.writePackedSplitFixed64 = function(e2, t2, r2, o2) {
    if (null != t2) {
      e2 = this.beginDelimited_(e2);
      for (var i3 = 0; i3 < t2.length; i3++)
        this.encoder_.writeSplitFixed64(r2(t2[i3]), o2(t2[i3]));
      this.endDelimited_(e2);
    }
  }, jspb.BinaryWriter.prototype.writePackedSplitVarint64 = function(e2, t2, r2, o2) {
    if (null != t2) {
      e2 = this.beginDelimited_(e2);
      for (var i3 = 0; i3 < t2.length; i3++)
        this.encoder_.writeSplitVarint64(r2(t2[i3]), o2(t2[i3]));
      this.endDelimited_(e2);
    }
  }, jspb.BinaryWriter.prototype.writePackedSplitZigzagVarint64 = function(e2, t2, r2, o2) {
    if (null != t2) {
      e2 = this.beginDelimited_(e2);
      for (var i3 = this.encoder_, a3 = 0; a3 < t2.length; a3++)
        jspb.utils.toZigzag64(r2(t2[a3]), o2(t2[a3]), function(e3, t3) {
          i3.writeSplitVarint64(e3 >>> 0, t3 >>> 0);
        });
      this.endDelimited_(e2);
    }
  }, jspb.BinaryWriter.prototype.writePackedInt64String = function(e2, t2) {
    if (null != t2 && t2.length) {
      e2 = this.beginDelimited_(e2);
      for (var r2 = 0; r2 < t2.length; r2++) {
        var o2 = jspb.arith.Int64.fromString(t2[r2]);
        this.encoder_.writeSplitVarint64(o2.lo, o2.hi);
      }
      this.endDelimited_(e2);
    }
  }, jspb.BinaryWriter.prototype.writePackedUint32 = function(e2, t2) {
    if (null != t2 && t2.length) {
      e2 = this.beginDelimited_(e2);
      for (var r2 = 0; r2 < t2.length; r2++)
        this.encoder_.writeUnsignedVarint32(t2[r2]);
      this.endDelimited_(e2);
    }
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writePackedUint32", jspb.BinaryWriter.prototype.writePackedUint32), jspb.BinaryWriter.prototype.writePackedUint32String = function(e2, t2) {
    if (null != t2 && t2.length) {
      e2 = this.beginDelimited_(e2);
      for (var r2 = 0; r2 < t2.length; r2++)
        this.encoder_.writeUnsignedVarint32(parseInt(t2[r2], 10));
      this.endDelimited_(e2);
    }
  }, jspb.BinaryWriter.prototype.writePackedUint64 = function(e2, t2) {
    if (null != t2 && t2.length) {
      e2 = this.beginDelimited_(e2);
      for (var r2 = 0; r2 < t2.length; r2++)
        this.encoder_.writeUnsignedVarint64(t2[r2]);
      this.endDelimited_(e2);
    }
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writePackedUint64", jspb.BinaryWriter.prototype.writePackedUint64), jspb.BinaryWriter.prototype.writePackedUint64String = function(e2, t2) {
    if (null != t2 && t2.length) {
      e2 = this.beginDelimited_(e2);
      for (var r2 = 0; r2 < t2.length; r2++) {
        var o2 = jspb.arith.UInt64.fromString(t2[r2]);
        this.encoder_.writeSplitVarint64(o2.lo, o2.hi);
      }
      this.endDelimited_(e2);
    }
  }, jspb.BinaryWriter.prototype.writePackedSint32 = function(e2, t2) {
    if (null != t2 && t2.length) {
      e2 = this.beginDelimited_(e2);
      for (var r2 = 0; r2 < t2.length; r2++)
        this.encoder_.writeZigzagVarint32(t2[r2]);
      this.endDelimited_(e2);
    }
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writePackedSint32", jspb.BinaryWriter.prototype.writePackedSint32), jspb.BinaryWriter.prototype.writePackedSint64 = function(e2, t2) {
    if (null != t2 && t2.length) {
      e2 = this.beginDelimited_(e2);
      for (var r2 = 0; r2 < t2.length; r2++)
        this.encoder_.writeZigzagVarint64(t2[r2]);
      this.endDelimited_(e2);
    }
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writePackedSint64", jspb.BinaryWriter.prototype.writePackedSint64), jspb.BinaryWriter.prototype.writePackedSint64String = function(e2, t2) {
    if (null != t2 && t2.length) {
      e2 = this.beginDelimited_(e2);
      for (var r2 = 0; r2 < t2.length; r2++)
        this.encoder_.writeZigzagVarintHash64(jspb.utils.decimalStringToHash64(t2[r2]));
      this.endDelimited_(e2);
    }
  }, jspb.BinaryWriter.prototype.writePackedSintHash64 = function(e2, t2) {
    if (null != t2 && t2.length) {
      e2 = this.beginDelimited_(e2);
      for (var r2 = 0; r2 < t2.length; r2++)
        this.encoder_.writeZigzagVarintHash64(t2[r2]);
      this.endDelimited_(e2);
    }
  }, jspb.BinaryWriter.prototype.writePackedFixed32 = function(e2, t2) {
    if (null != t2 && t2.length)
      for (this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(4 * t2.length), e2 = 0; e2 < t2.length; e2++)
        this.encoder_.writeUint32(t2[e2]);
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writePackedFixed32", jspb.BinaryWriter.prototype.writePackedFixed32), jspb.BinaryWriter.prototype.writePackedFixed64 = function(e2, t2) {
    if (null != t2 && t2.length)
      for (this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * t2.length), e2 = 0; e2 < t2.length; e2++)
        this.encoder_.writeUint64(t2[e2]);
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writePackedFixed64", jspb.BinaryWriter.prototype.writePackedFixed64), jspb.BinaryWriter.prototype.writePackedFixed64String = function(e2, t2) {
    if (null != t2 && t2.length)
      for (this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * t2.length), e2 = 0; e2 < t2.length; e2++) {
        var r2 = jspb.arith.UInt64.fromString(t2[e2]);
        this.encoder_.writeSplitFixed64(r2.lo, r2.hi);
      }
  }, jspb.BinaryWriter.prototype.writePackedSfixed32 = function(e2, t2) {
    if (null != t2 && t2.length)
      for (this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(4 * t2.length), e2 = 0; e2 < t2.length; e2++)
        this.encoder_.writeInt32(t2[e2]);
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writePackedSfixed32", jspb.BinaryWriter.prototype.writePackedSfixed32), jspb.BinaryWriter.prototype.writePackedSfixed64 = function(e2, t2) {
    if (null != t2 && t2.length)
      for (this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * t2.length), e2 = 0; e2 < t2.length; e2++)
        this.encoder_.writeInt64(t2[e2]);
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writePackedSfixed64", jspb.BinaryWriter.prototype.writePackedSfixed64), jspb.BinaryWriter.prototype.writePackedSfixed64String = function(e2, t2) {
    if (null != t2 && t2.length)
      for (this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * t2.length), e2 = 0; e2 < t2.length; e2++)
        this.encoder_.writeInt64String(t2[e2]);
  }, jspb.BinaryWriter.prototype.writePackedFloat = function(e2, t2) {
    if (null != t2 && t2.length)
      for (this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(4 * t2.length), e2 = 0; e2 < t2.length; e2++)
        this.encoder_.writeFloat(t2[e2]);
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writePackedFloat", jspb.BinaryWriter.prototype.writePackedFloat), jspb.BinaryWriter.prototype.writePackedDouble = function(e2, t2) {
    if (null != t2 && t2.length)
      for (this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * t2.length), e2 = 0; e2 < t2.length; e2++)
        this.encoder_.writeDouble(t2[e2]);
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writePackedDouble", jspb.BinaryWriter.prototype.writePackedDouble), jspb.BinaryWriter.prototype.writePackedBool = function(e2, t2) {
    if (null != t2 && t2.length)
      for (this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(t2.length), e2 = 0; e2 < t2.length; e2++)
        this.encoder_.writeBool(t2[e2]);
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writePackedBool", jspb.BinaryWriter.prototype.writePackedBool), jspb.BinaryWriter.prototype.writePackedEnum = function(e2, t2) {
    if (null != t2 && t2.length) {
      e2 = this.beginDelimited_(e2);
      for (var r2 = 0; r2 < t2.length; r2++)
        this.encoder_.writeEnum(t2[r2]);
      this.endDelimited_(e2);
    }
  }, goog.exportProperty(jspb.BinaryWriter.prototype, "writePackedEnum", jspb.BinaryWriter.prototype.writePackedEnum), jspb.BinaryWriter.prototype.writePackedFixedHash64 = function(e2, t2) {
    if (null != t2 && t2.length)
      for (this.writeFieldHeader_(e2, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * t2.length), e2 = 0; e2 < t2.length; e2++)
        this.encoder_.writeFixedHash64(t2[e2]);
  }, jspb.BinaryWriter.prototype.writePackedVarintHash64 = function(e2, t2) {
    if (null != t2 && t2.length) {
      e2 = this.beginDelimited_(e2);
      for (var r2 = 0; r2 < t2.length; r2++)
        this.encoder_.writeVarintHash64(t2[r2]);
      this.endDelimited_(e2);
    }
  }, jspb.Map = function(e2, t2) {
    this.arr_ = e2, this.valueCtor_ = t2, this.map_ = {}, this.arrClean = true, 0 < this.arr_.length && this.loadFromArray_();
  }, goog.exportSymbol("jspb.Map", jspb.Map), jspb.Map.prototype.loadFromArray_ = function() {
    for (var e2 = 0; e2 < this.arr_.length; e2++) {
      var t2 = this.arr_[e2], r2 = t2[0];
      this.map_[r2.toString()] = new jspb.Map.Entry_(r2, t2[1]);
    }
    this.arrClean = true;
  }, jspb.Map.prototype.toArray = function() {
    if (this.arrClean) {
      if (this.valueCtor_) {
        var e2, t2 = this.map_;
        for (e2 in t2)
          if (Object.prototype.hasOwnProperty.call(t2, e2)) {
            var r2 = t2[e2].valueWrapper;
            r2 && r2.toArray();
          }
      }
    } else {
      for (this.arr_.length = 0, (t2 = this.stringKeys_()).sort(), e2 = 0; e2 < t2.length; e2++) {
        var o2 = this.map_[t2[e2]];
        (r2 = o2.valueWrapper) && r2.toArray(), this.arr_.push([o2.key, o2.value]);
      }
      this.arrClean = true;
    }
    return this.arr_;
  }, goog.exportProperty(jspb.Map.prototype, "toArray", jspb.Map.prototype.toArray), jspb.Map.prototype.toObject = function(e2, t2) {
    for (var r2 = this.toArray(), o2 = [], i3 = 0; i3 < r2.length; i3++) {
      var a3 = this.map_[r2[i3][0].toString()];
      this.wrapEntry_(a3);
      var n2 = a3.valueWrapper;
      n2 ? (jspb.asserts.assert(t2), o2.push([a3.key, t2(e2, n2)])) : o2.push([a3.key, a3.value]);
    }
    return o2;
  }, goog.exportProperty(jspb.Map.prototype, "toObject", jspb.Map.prototype.toObject), jspb.Map.fromObject = function(e2, t2, r2) {
    t2 = new jspb.Map([], t2);
    for (var o2 = 0; o2 < e2.length; o2++) {
      var i3 = e2[o2][0], a3 = r2(e2[o2][1]);
      t2.set(i3, a3);
    }
    return t2;
  }, goog.exportProperty(jspb.Map, "fromObject", jspb.Map.fromObject), jspb.Map.ArrayIteratorIterable_ = function(e2) {
    this.idx_ = 0, this.arr_ = e2;
  }, jspb.Map.ArrayIteratorIterable_.prototype.next = function() {
    return this.idx_ < this.arr_.length ? { done: false, value: this.arr_[this.idx_++] } : { done: true, value: void 0 };
  }, "undefined" != typeof Symbol && (jspb.Map.ArrayIteratorIterable_.prototype[Symbol.iterator] = function() {
    return this;
  }), jspb.Map.prototype.getLength = function() {
    return this.stringKeys_().length;
  }, goog.exportProperty(jspb.Map.prototype, "getLength", jspb.Map.prototype.getLength), jspb.Map.prototype.clear = function() {
    this.map_ = {}, this.arrClean = false;
  }, goog.exportProperty(jspb.Map.prototype, "clear", jspb.Map.prototype.clear), jspb.Map.prototype.del = function(e2) {
    e2 = e2.toString();
    var t2 = this.map_.hasOwnProperty(e2);
    return delete this.map_[e2], this.arrClean = false, t2;
  }, goog.exportProperty(jspb.Map.prototype, "del", jspb.Map.prototype.del), jspb.Map.prototype.getEntryList = function() {
    var e2 = [], t2 = this.stringKeys_();
    t2.sort();
    for (var r2 = 0; r2 < t2.length; r2++) {
      var o2 = this.map_[t2[r2]];
      e2.push([o2.key, o2.value]);
    }
    return e2;
  }, goog.exportProperty(jspb.Map.prototype, "getEntryList", jspb.Map.prototype.getEntryList), jspb.Map.prototype.entries = function() {
    var e2 = [], t2 = this.stringKeys_();
    t2.sort();
    for (var r2 = 0; r2 < t2.length; r2++) {
      var o2 = this.map_[t2[r2]];
      e2.push([o2.key, this.wrapEntry_(o2)]);
    }
    return new jspb.Map.ArrayIteratorIterable_(e2);
  }, goog.exportProperty(jspb.Map.prototype, "entries", jspb.Map.prototype.entries), jspb.Map.prototype.keys = function() {
    var e2 = [], t2 = this.stringKeys_();
    t2.sort();
    for (var r2 = 0; r2 < t2.length; r2++)
      e2.push(this.map_[t2[r2]].key);
    return new jspb.Map.ArrayIteratorIterable_(e2);
  }, goog.exportProperty(jspb.Map.prototype, "keys", jspb.Map.prototype.keys), jspb.Map.prototype.values = function() {
    var e2 = [], t2 = this.stringKeys_();
    t2.sort();
    for (var r2 = 0; r2 < t2.length; r2++)
      e2.push(this.wrapEntry_(this.map_[t2[r2]]));
    return new jspb.Map.ArrayIteratorIterable_(e2);
  }, goog.exportProperty(jspb.Map.prototype, "values", jspb.Map.prototype.values), jspb.Map.prototype.forEach = function(e2, t2) {
    var r2 = this.stringKeys_();
    r2.sort();
    for (var o2 = 0; o2 < r2.length; o2++) {
      var i3 = this.map_[r2[o2]];
      e2.call(t2, this.wrapEntry_(i3), i3.key, this);
    }
  }, goog.exportProperty(jspb.Map.prototype, "forEach", jspb.Map.prototype.forEach), jspb.Map.prototype.set = function(e2, t2) {
    var r2 = new jspb.Map.Entry_(e2);
    return this.valueCtor_ ? (r2.valueWrapper = t2, r2.value = t2.toArray()) : r2.value = t2, this.map_[e2.toString()] = r2, this.arrClean = false, this;
  }, goog.exportProperty(jspb.Map.prototype, "set", jspb.Map.prototype.set), jspb.Map.prototype.wrapEntry_ = function(e2) {
    return this.valueCtor_ ? (e2.valueWrapper || (e2.valueWrapper = new this.valueCtor_(e2.value)), e2.valueWrapper) : e2.value;
  }, jspb.Map.prototype.get = function(e2) {
    if (e2 = this.map_[e2.toString()])
      return this.wrapEntry_(e2);
  }, goog.exportProperty(jspb.Map.prototype, "get", jspb.Map.prototype.get), jspb.Map.prototype.has = function(e2) {
    return e2.toString() in this.map_;
  }, goog.exportProperty(jspb.Map.prototype, "has", jspb.Map.prototype.has), jspb.Map.prototype.serializeBinary = function(e2, t2, r2, o2, i3) {
    var a3 = this.stringKeys_();
    a3.sort();
    for (var n2 = 0; n2 < a3.length; n2++) {
      var s2 = this.map_[a3[n2]];
      t2.beginSubMessage(e2), r2.call(t2, 1, s2.key), this.valueCtor_ ? o2.call(t2, 2, this.wrapEntry_(s2), i3) : o2.call(t2, 2, s2.value), t2.endSubMessage();
    }
  }, goog.exportProperty(jspb.Map.prototype, "serializeBinary", jspb.Map.prototype.serializeBinary), jspb.Map.deserializeBinary = function(e2, t2, r2, o2, i3, a3, n2) {
    for (; t2.nextField() && !t2.isEndGroup(); ) {
      var s2 = t2.getFieldNumber();
      1 == s2 ? a3 = r2.call(t2) : 2 == s2 && (e2.valueCtor_ ? (jspb.asserts.assert(i3), n2 || (n2 = new e2.valueCtor_()), o2.call(t2, n2, i3)) : n2 = o2.call(t2));
    }
    jspb.asserts.assert(null != a3), jspb.asserts.assert(null != n2), e2.set(a3, n2);
  }, goog.exportProperty(jspb.Map, "deserializeBinary", jspb.Map.deserializeBinary), jspb.Map.prototype.stringKeys_ = function() {
    var e2, t2 = this.map_, r2 = [];
    for (e2 in t2)
      Object.prototype.hasOwnProperty.call(t2, e2) && r2.push(e2);
    return r2;
  }, jspb.Map.Entry_ = function(e2, t2) {
    this.key = e2, this.value = t2, this.valueWrapper = void 0;
  }, jspb.ExtensionFieldInfo = function(e2, t2, r2, o2, i3) {
    this.fieldIndex = e2, this.fieldName = t2, this.ctor = r2, this.toObjectFn = o2, this.isRepeated = i3;
  }, goog.exportSymbol("jspb.ExtensionFieldInfo", jspb.ExtensionFieldInfo), jspb.ExtensionFieldBinaryInfo = function(e2, t2, r2, o2, i3, a3) {
    this.fieldInfo = e2, this.binaryReaderFn = t2, this.binaryWriterFn = r2, this.binaryMessageSerializeFn = o2, this.binaryMessageDeserializeFn = i3, this.isPacked = a3;
  }, goog.exportSymbol("jspb.ExtensionFieldBinaryInfo", jspb.ExtensionFieldBinaryInfo), jspb.ExtensionFieldInfo.prototype.isMessageType = function() {
    return !!this.ctor;
  }, goog.exportProperty(jspb.ExtensionFieldInfo.prototype, "isMessageType", jspb.ExtensionFieldInfo.prototype.isMessageType), jspb.Message = function() {
  }, goog.exportSymbol("jspb.Message", jspb.Message), jspb.Message.GENERATE_TO_OBJECT = true, goog.exportProperty(jspb.Message, "GENERATE_TO_OBJECT", jspb.Message.GENERATE_TO_OBJECT), jspb.Message.GENERATE_FROM_OBJECT = !goog.DISALLOW_TEST_ONLY_CODE, goog.exportProperty(jspb.Message, "GENERATE_FROM_OBJECT", jspb.Message.GENERATE_FROM_OBJECT), jspb.Message.GENERATE_TO_STRING = true, jspb.Message.ASSUME_LOCAL_ARRAYS = false, jspb.Message.SERIALIZE_EMPTY_TRAILING_FIELDS = true, jspb.Message.SUPPORTS_UINT8ARRAY_ = "function" == typeof Uint8Array, jspb.Message.prototype.getJsPbMessageId = function() {
    return this.messageId_;
  }, goog.exportProperty(jspb.Message.prototype, "getJsPbMessageId", jspb.Message.prototype.getJsPbMessageId), jspb.Message.getIndex_ = function(e2, t2) {
    return t2 + e2.arrayIndexOffset_;
  }, jspb.Message.hiddenES6Property_ = function() {
  }, jspb.Message.getFieldNumber_ = function(e2, t2) {
    return t2 - e2.arrayIndexOffset_;
  }, jspb.Message.initialize = function(e2, t2, r2, o2, i3, a3) {
    if (e2.wrappers_ = null, t2 || (t2 = r2 ? [r2] : []), e2.messageId_ = r2 ? String(r2) : void 0, e2.arrayIndexOffset_ = 0 === r2 ? -1 : 0, e2.array = t2, jspb.Message.initPivotAndExtensionObject_(e2, o2), e2.convertedPrimitiveFields_ = {}, jspb.Message.SERIALIZE_EMPTY_TRAILING_FIELDS || (e2.repeatedFields = i3), i3)
      for (t2 = 0; t2 < i3.length; t2++)
        (r2 = i3[t2]) < e2.pivot_ ? (r2 = jspb.Message.getIndex_(e2, r2), e2.array[r2] = e2.array[r2] || jspb.Message.EMPTY_LIST_SENTINEL_) : (jspb.Message.maybeInitEmptyExtensionObject_(e2), e2.extensionObject_[r2] = e2.extensionObject_[r2] || jspb.Message.EMPTY_LIST_SENTINEL_);
    if (a3 && a3.length)
      for (t2 = 0; t2 < a3.length; t2++)
        jspb.Message.computeOneofCase(e2, a3[t2]);
  }, goog.exportProperty(jspb.Message, "initialize", jspb.Message.initialize), jspb.Message.EMPTY_LIST_SENTINEL_ = goog.DEBUG && Object.freeze ? Object.freeze([]) : [], jspb.Message.isArray_ = function(e2) {
    return jspb.Message.ASSUME_LOCAL_ARRAYS ? e2 instanceof Array : Array.isArray(e2);
  }, jspb.Message.isExtensionObject_ = function(e2) {
    return !(null === e2 || "object" != typeof e2 || jspb.Message.isArray_(e2) || jspb.Message.SUPPORTS_UINT8ARRAY_ && e2 instanceof Uint8Array);
  }, jspb.Message.initPivotAndExtensionObject_ = function(e2, t2) {
    var r2 = e2.array.length, o2 = -1;
    if (r2 && (o2 = r2 - 1, r2 = e2.array[o2], jspb.Message.isExtensionObject_(r2)))
      return e2.pivot_ = jspb.Message.getFieldNumber_(e2, o2), void (e2.extensionObject_ = r2);
    -1 < t2 ? (e2.pivot_ = Math.max(t2, jspb.Message.getFieldNumber_(e2, o2 + 1)), e2.extensionObject_ = null) : e2.pivot_ = Number.MAX_VALUE;
  }, jspb.Message.maybeInitEmptyExtensionObject_ = function(e2) {
    var t2 = jspb.Message.getIndex_(e2, e2.pivot_);
    e2.array[t2] || (e2.extensionObject_ = e2.array[t2] = {});
  }, jspb.Message.toObjectList = function(e2, t2, r2) {
    for (var o2 = [], i3 = 0; i3 < e2.length; i3++)
      o2[i3] = t2.call(e2[i3], r2, e2[i3]);
    return o2;
  }, goog.exportProperty(jspb.Message, "toObjectList", jspb.Message.toObjectList), jspb.Message.toObjectExtension = function(e2, t2, r2, o2, i3) {
    for (var a3 in r2) {
      var n2 = r2[a3], s2 = o2.call(e2, n2);
      if (null != s2) {
        for (var p2 in n2.fieldName)
          if (n2.fieldName.hasOwnProperty(p2))
            break;
        t2[p2] = n2.toObjectFn ? n2.isRepeated ? jspb.Message.toObjectList(s2, n2.toObjectFn, i3) : n2.toObjectFn(i3, s2) : s2;
      }
    }
  }, goog.exportProperty(jspb.Message, "toObjectExtension", jspb.Message.toObjectExtension), jspb.Message.serializeBinaryExtensions = function(e2, t2, r2, o2) {
    for (var i3 in r2) {
      var a3 = r2[i3], n2 = a3.fieldInfo;
      if (!a3.binaryWriterFn)
        throw Error("Message extension present that was generated without binary serialization support");
      var s2 = o2.call(e2, n2);
      if (null != s2)
        if (n2.isMessageType()) {
          if (!a3.binaryMessageSerializeFn)
            throw Error("Message extension present holding submessage without binary support enabled, and message is being serialized to binary format");
          a3.binaryWriterFn.call(t2, n2.fieldIndex, s2, a3.binaryMessageSerializeFn);
        } else
          a3.binaryWriterFn.call(t2, n2.fieldIndex, s2);
    }
  }, goog.exportProperty(jspb.Message, "serializeBinaryExtensions", jspb.Message.serializeBinaryExtensions), jspb.Message.readBinaryExtension = function(e2, t2, r2, o2, i3) {
    var a3 = r2[t2.getFieldNumber()];
    if (a3) {
      if (r2 = a3.fieldInfo, !a3.binaryReaderFn)
        throw Error("Deserializing extension whose generated code does not support binary format");
      if (r2.isMessageType()) {
        var n2 = new r2.ctor();
        a3.binaryReaderFn.call(t2, n2, a3.binaryMessageDeserializeFn);
      } else
        n2 = a3.binaryReaderFn.call(t2);
      r2.isRepeated && !a3.isPacked ? (t2 = o2.call(e2, r2)) ? t2.push(n2) : i3.call(e2, r2, [n2]) : i3.call(e2, r2, n2);
    } else
      t2.skipField();
  }, goog.exportProperty(jspb.Message, "readBinaryExtension", jspb.Message.readBinaryExtension), jspb.Message.getField = function(e2, t2) {
    if (t2 < e2.pivot_) {
      t2 = jspb.Message.getIndex_(e2, t2);
      var r2 = e2.array[t2];
      return r2 === jspb.Message.EMPTY_LIST_SENTINEL_ ? e2.array[t2] = [] : r2;
    }
    if (e2.extensionObject_)
      return (r2 = e2.extensionObject_[t2]) === jspb.Message.EMPTY_LIST_SENTINEL_ ? e2.extensionObject_[t2] = [] : r2;
  }, goog.exportProperty(jspb.Message, "getField", jspb.Message.getField), jspb.Message.getRepeatedField = function(e2, t2) {
    return jspb.Message.getField(e2, t2);
  }, goog.exportProperty(jspb.Message, "getRepeatedField", jspb.Message.getRepeatedField), jspb.Message.getOptionalFloatingPointField = function(e2, t2) {
    return null == (e2 = jspb.Message.getField(e2, t2)) ? e2 : +e2;
  }, goog.exportProperty(jspb.Message, "getOptionalFloatingPointField", jspb.Message.getOptionalFloatingPointField), jspb.Message.getBooleanField = function(e2, t2) {
    return null == (e2 = jspb.Message.getField(e2, t2)) ? e2 : !!e2;
  }, goog.exportProperty(jspb.Message, "getBooleanField", jspb.Message.getBooleanField), jspb.Message.getRepeatedFloatingPointField = function(e2, t2) {
    var r2 = jspb.Message.getRepeatedField(e2, t2);
    if (e2.convertedPrimitiveFields_ || (e2.convertedPrimitiveFields_ = {}), !e2.convertedPrimitiveFields_[t2]) {
      for (var o2 = 0; o2 < r2.length; o2++)
        r2[o2] = +r2[o2];
      e2.convertedPrimitiveFields_[t2] = true;
    }
    return r2;
  }, goog.exportProperty(jspb.Message, "getRepeatedFloatingPointField", jspb.Message.getRepeatedFloatingPointField), jspb.Message.getRepeatedBooleanField = function(e2, t2) {
    var r2 = jspb.Message.getRepeatedField(e2, t2);
    if (e2.convertedPrimitiveFields_ || (e2.convertedPrimitiveFields_ = {}), !e2.convertedPrimitiveFields_[t2]) {
      for (var o2 = 0; o2 < r2.length; o2++)
        r2[o2] = !!r2[o2];
      e2.convertedPrimitiveFields_[t2] = true;
    }
    return r2;
  }, goog.exportProperty(jspb.Message, "getRepeatedBooleanField", jspb.Message.getRepeatedBooleanField), jspb.Message.bytesAsB64 = function(e2) {
    return null == e2 || "string" == typeof e2 ? e2 : jspb.Message.SUPPORTS_UINT8ARRAY_ && e2 instanceof Uint8Array ? goog.crypt.base64.encodeByteArray(e2) : (jspb.asserts.fail("Cannot coerce to b64 string: " + goog.typeOf(e2)), null);
  }, goog.exportProperty(jspb.Message, "bytesAsB64", jspb.Message.bytesAsB64), jspb.Message.bytesAsU8 = function(e2) {
    return null == e2 || e2 instanceof Uint8Array ? e2 : "string" == typeof e2 ? goog.crypt.base64.decodeStringToUint8Array(e2) : (jspb.asserts.fail("Cannot coerce to Uint8Array: " + goog.typeOf(e2)), null);
  }, goog.exportProperty(jspb.Message, "bytesAsU8", jspb.Message.bytesAsU8), jspb.Message.bytesListAsB64 = function(e2) {
    return jspb.Message.assertConsistentTypes_(e2), e2.length && "string" != typeof e2[0] ? goog.array.map(e2, jspb.Message.bytesAsB64) : e2;
  }, goog.exportProperty(jspb.Message, "bytesListAsB64", jspb.Message.bytesListAsB64), jspb.Message.bytesListAsU8 = function(e2) {
    return jspb.Message.assertConsistentTypes_(e2), !e2.length || e2[0] instanceof Uint8Array ? e2 : goog.array.map(e2, jspb.Message.bytesAsU8);
  }, goog.exportProperty(jspb.Message, "bytesListAsU8", jspb.Message.bytesListAsU8), jspb.Message.assertConsistentTypes_ = function(e2) {
    if (goog.DEBUG && e2 && 1 < e2.length) {
      var t2 = goog.typeOf(e2[0]);
      goog.array.forEach(e2, function(e3) {
        goog.typeOf(e3) != t2 && jspb.asserts.fail("Inconsistent type in JSPB repeated field array. Got " + goog.typeOf(e3) + " expected " + t2);
      });
    }
  }, jspb.Message.getFieldWithDefault = function(e2, t2, r2) {
    return null == (e2 = jspb.Message.getField(e2, t2)) ? r2 : e2;
  }, goog.exportProperty(jspb.Message, "getFieldWithDefault", jspb.Message.getFieldWithDefault), jspb.Message.getBooleanFieldWithDefault = function(e2, t2, r2) {
    return null == (e2 = jspb.Message.getBooleanField(e2, t2)) ? r2 : e2;
  }, goog.exportProperty(jspb.Message, "getBooleanFieldWithDefault", jspb.Message.getBooleanFieldWithDefault), jspb.Message.getFloatingPointFieldWithDefault = function(e2, t2, r2) {
    return null == (e2 = jspb.Message.getOptionalFloatingPointField(e2, t2)) ? r2 : e2;
  }, goog.exportProperty(jspb.Message, "getFloatingPointFieldWithDefault", jspb.Message.getFloatingPointFieldWithDefault), jspb.Message.getFieldProto3 = jspb.Message.getFieldWithDefault, goog.exportProperty(jspb.Message, "getFieldProto3", jspb.Message.getFieldProto3), jspb.Message.getMapField = function(e2, t2, r2, o2) {
    if (e2.wrappers_ || (e2.wrappers_ = {}), t2 in e2.wrappers_)
      return e2.wrappers_[t2];
    var i3 = jspb.Message.getField(e2, t2);
    if (!i3) {
      if (r2)
        return;
      i3 = [], jspb.Message.setField(e2, t2, i3);
    }
    return e2.wrappers_[t2] = new jspb.Map(i3, o2);
  }, goog.exportProperty(jspb.Message, "getMapField", jspb.Message.getMapField), jspb.Message.setField = function(e2, t2, r2) {
    return jspb.asserts.assertInstanceof(e2, jspb.Message), t2 < e2.pivot_ ? e2.array[jspb.Message.getIndex_(e2, t2)] = r2 : (jspb.Message.maybeInitEmptyExtensionObject_(e2), e2.extensionObject_[t2] = r2), e2;
  }, goog.exportProperty(jspb.Message, "setField", jspb.Message.setField), jspb.Message.setProto3IntField = function(e2, t2, r2) {
    return jspb.Message.setFieldIgnoringDefault_(e2, t2, r2, 0);
  }, goog.exportProperty(jspb.Message, "setProto3IntField", jspb.Message.setProto3IntField), jspb.Message.setProto3FloatField = function(e2, t2, r2) {
    return jspb.Message.setFieldIgnoringDefault_(e2, t2, r2, 0);
  }, goog.exportProperty(jspb.Message, "setProto3FloatField", jspb.Message.setProto3FloatField), jspb.Message.setProto3BooleanField = function(e2, t2, r2) {
    return jspb.Message.setFieldIgnoringDefault_(e2, t2, r2, false);
  }, goog.exportProperty(jspb.Message, "setProto3BooleanField", jspb.Message.setProto3BooleanField), jspb.Message.setProto3StringField = function(e2, t2, r2) {
    return jspb.Message.setFieldIgnoringDefault_(e2, t2, r2, "");
  }, goog.exportProperty(jspb.Message, "setProto3StringField", jspb.Message.setProto3StringField), jspb.Message.setProto3BytesField = function(e2, t2, r2) {
    return jspb.Message.setFieldIgnoringDefault_(e2, t2, r2, "");
  }, goog.exportProperty(jspb.Message, "setProto3BytesField", jspb.Message.setProto3BytesField), jspb.Message.setProto3EnumField = function(e2, t2, r2) {
    return jspb.Message.setFieldIgnoringDefault_(e2, t2, r2, 0);
  }, goog.exportProperty(jspb.Message, "setProto3EnumField", jspb.Message.setProto3EnumField), jspb.Message.setProto3StringIntField = function(e2, t2, r2) {
    return jspb.Message.setFieldIgnoringDefault_(e2, t2, r2, "0");
  }, goog.exportProperty(jspb.Message, "setProto3StringIntField", jspb.Message.setProto3StringIntField), jspb.Message.setFieldIgnoringDefault_ = function(e2, t2, r2, o2) {
    return jspb.asserts.assertInstanceof(e2, jspb.Message), r2 !== o2 ? jspb.Message.setField(e2, t2, r2) : t2 < e2.pivot_ ? e2.array[jspb.Message.getIndex_(e2, t2)] = null : (jspb.Message.maybeInitEmptyExtensionObject_(e2), delete e2.extensionObject_[t2]), e2;
  }, jspb.Message.addToRepeatedField = function(e2, t2, r2, o2) {
    return jspb.asserts.assertInstanceof(e2, jspb.Message), t2 = jspb.Message.getRepeatedField(e2, t2), null != o2 ? t2.splice(o2, 0, r2) : t2.push(r2), e2;
  }, goog.exportProperty(jspb.Message, "addToRepeatedField", jspb.Message.addToRepeatedField), jspb.Message.setOneofField = function(e2, t2, r2, o2) {
    return jspb.asserts.assertInstanceof(e2, jspb.Message), (r2 = jspb.Message.computeOneofCase(e2, r2)) && r2 !== t2 && void 0 !== o2 && (e2.wrappers_ && r2 in e2.wrappers_ && (e2.wrappers_[r2] = void 0), jspb.Message.setField(e2, r2, void 0)), jspb.Message.setField(e2, t2, o2);
  }, goog.exportProperty(jspb.Message, "setOneofField", jspb.Message.setOneofField), jspb.Message.computeOneofCase = function(e2, t2) {
    for (var r2, o2, i3 = 0; i3 < t2.length; i3++) {
      var a3 = t2[i3], n2 = jspb.Message.getField(e2, a3);
      null != n2 && (r2 = a3, o2 = n2, jspb.Message.setField(e2, a3, void 0));
    }
    return r2 ? (jspb.Message.setField(e2, r2, o2), r2) : 0;
  }, goog.exportProperty(jspb.Message, "computeOneofCase", jspb.Message.computeOneofCase), jspb.Message.getWrapperField = function(e2, t2, r2, o2) {
    if (e2.wrappers_ || (e2.wrappers_ = {}), !e2.wrappers_[r2]) {
      var i3 = jspb.Message.getField(e2, r2);
      (o2 || i3) && (e2.wrappers_[r2] = new t2(i3));
    }
    return e2.wrappers_[r2];
  }, goog.exportProperty(jspb.Message, "getWrapperField", jspb.Message.getWrapperField), jspb.Message.getRepeatedWrapperField = function(e2, t2, r2) {
    return jspb.Message.wrapRepeatedField_(e2, t2, r2), (t2 = e2.wrappers_[r2]) == jspb.Message.EMPTY_LIST_SENTINEL_ && (t2 = e2.wrappers_[r2] = []), t2;
  }, goog.exportProperty(jspb.Message, "getRepeatedWrapperField", jspb.Message.getRepeatedWrapperField), jspb.Message.wrapRepeatedField_ = function(e2, t2, r2) {
    if (e2.wrappers_ || (e2.wrappers_ = {}), !e2.wrappers_[r2]) {
      for (var o2 = jspb.Message.getRepeatedField(e2, r2), i3 = [], a3 = 0; a3 < o2.length; a3++)
        i3[a3] = new t2(o2[a3]);
      e2.wrappers_[r2] = i3;
    }
  }, jspb.Message.setWrapperField = function(e2, t2, r2) {
    jspb.asserts.assertInstanceof(e2, jspb.Message), e2.wrappers_ || (e2.wrappers_ = {});
    var o2 = r2 ? r2.toArray() : r2;
    return e2.wrappers_[t2] = r2, jspb.Message.setField(e2, t2, o2);
  }, goog.exportProperty(jspb.Message, "setWrapperField", jspb.Message.setWrapperField), jspb.Message.setOneofWrapperField = function(e2, t2, r2, o2) {
    jspb.asserts.assertInstanceof(e2, jspb.Message), e2.wrappers_ || (e2.wrappers_ = {});
    var i3 = o2 ? o2.toArray() : o2;
    return e2.wrappers_[t2] = o2, jspb.Message.setOneofField(e2, t2, r2, i3);
  }, goog.exportProperty(jspb.Message, "setOneofWrapperField", jspb.Message.setOneofWrapperField), jspb.Message.setRepeatedWrapperField = function(e2, t2, r2) {
    jspb.asserts.assertInstanceof(e2, jspb.Message), e2.wrappers_ || (e2.wrappers_ = {}), r2 = r2 || [];
    for (var o2 = [], i3 = 0; i3 < r2.length; i3++)
      o2[i3] = r2[i3].toArray();
    return e2.wrappers_[t2] = r2, jspb.Message.setField(e2, t2, o2);
  }, goog.exportProperty(jspb.Message, "setRepeatedWrapperField", jspb.Message.setRepeatedWrapperField), jspb.Message.addToRepeatedWrapperField = function(e2, t2, r2, o2, i3) {
    jspb.Message.wrapRepeatedField_(e2, o2, t2);
    var a3 = e2.wrappers_[t2];
    return a3 || (a3 = e2.wrappers_[t2] = []), r2 = r2 || new o2(), e2 = jspb.Message.getRepeatedField(e2, t2), null != i3 ? (a3.splice(i3, 0, r2), e2.splice(i3, 0, r2.toArray())) : (a3.push(r2), e2.push(r2.toArray())), r2;
  }, goog.exportProperty(jspb.Message, "addToRepeatedWrapperField", jspb.Message.addToRepeatedWrapperField), jspb.Message.toMap = function(e2, t2, r2, o2) {
    for (var i3 = {}, a3 = 0; a3 < e2.length; a3++)
      i3[t2.call(e2[a3])] = r2 ? r2.call(e2[a3], o2, e2[a3]) : e2[a3];
    return i3;
  }, goog.exportProperty(jspb.Message, "toMap", jspb.Message.toMap), jspb.Message.prototype.syncMapFields_ = function() {
    if (this.wrappers_)
      for (var e2 in this.wrappers_) {
        var t2 = this.wrappers_[e2];
        if (Array.isArray(t2))
          for (var r2 = 0; r2 < t2.length; r2++)
            t2[r2] && t2[r2].toArray();
        else
          t2 && t2.toArray();
      }
  }, jspb.Message.prototype.toArray = function() {
    return this.syncMapFields_(), this.array;
  }, goog.exportProperty(jspb.Message.prototype, "toArray", jspb.Message.prototype.toArray), jspb.Message.GENERATE_TO_STRING && (jspb.Message.prototype.toString = function() {
    return this.syncMapFields_(), this.array.toString();
  }), jspb.Message.prototype.getExtension = function(e2) {
    if (this.extensionObject_) {
      this.wrappers_ || (this.wrappers_ = {});
      var t2 = e2.fieldIndex;
      if (e2.isRepeated) {
        if (e2.isMessageType())
          return this.wrappers_[t2] || (this.wrappers_[t2] = goog.array.map(this.extensionObject_[t2] || [], function(t3) {
            return new e2.ctor(t3);
          })), this.wrappers_[t2];
      } else if (e2.isMessageType())
        return !this.wrappers_[t2] && this.extensionObject_[t2] && (this.wrappers_[t2] = new e2.ctor(this.extensionObject_[t2])), this.wrappers_[t2];
      return this.extensionObject_[t2];
    }
  }, goog.exportProperty(jspb.Message.prototype, "getExtension", jspb.Message.prototype.getExtension), jspb.Message.prototype.setExtension = function(e2, t2) {
    this.wrappers_ || (this.wrappers_ = {}), jspb.Message.maybeInitEmptyExtensionObject_(this);
    var r2 = e2.fieldIndex;
    return e2.isRepeated ? (t2 = t2 || [], e2.isMessageType() ? (this.wrappers_[r2] = t2, this.extensionObject_[r2] = goog.array.map(t2, function(e3) {
      return e3.toArray();
    })) : this.extensionObject_[r2] = t2) : e2.isMessageType() ? (this.wrappers_[r2] = t2, this.extensionObject_[r2] = t2 ? t2.toArray() : t2) : this.extensionObject_[r2] = t2, this;
  }, goog.exportProperty(jspb.Message.prototype, "setExtension", jspb.Message.prototype.setExtension), jspb.Message.difference = function(e2, t2) {
    if (!(e2 instanceof t2.constructor))
      throw Error("Messages have different types.");
    var r2 = e2.toArray();
    t2 = t2.toArray();
    var o2 = [], i3 = 0, a3 = r2.length > t2.length ? r2.length : t2.length;
    for (e2.getJsPbMessageId() && (o2[0] = e2.getJsPbMessageId(), i3 = 1); i3 < a3; i3++)
      jspb.Message.compareFields(r2[i3], t2[i3]) || (o2[i3] = t2[i3]);
    return new e2.constructor(o2);
  }, goog.exportProperty(jspb.Message, "difference", jspb.Message.difference), jspb.Message.equals = function(e2, t2) {
    return e2 == t2 || !(!e2 || !t2) && e2 instanceof t2.constructor && jspb.Message.compareFields(e2.toArray(), t2.toArray());
  }, goog.exportProperty(jspb.Message, "equals", jspb.Message.equals), jspb.Message.compareExtensions = function(e2, t2) {
    e2 = e2 || {}, t2 = t2 || {};
    var r2, o2 = {};
    for (r2 in e2)
      o2[r2] = 0;
    for (r2 in t2)
      o2[r2] = 0;
    for (r2 in o2)
      if (!jspb.Message.compareFields(e2[r2], t2[r2]))
        return false;
    return true;
  }, goog.exportProperty(jspb.Message, "compareExtensions", jspb.Message.compareExtensions), jspb.Message.compareFields = function(e2, t2) {
    if (e2 == t2)
      return true;
    if (!goog.isObject(e2) || !goog.isObject(t2))
      return !!("number" == typeof e2 && isNaN(e2) || "number" == typeof t2 && isNaN(t2)) && String(e2) == String(t2);
    if (e2.constructor != t2.constructor)
      return false;
    if (jspb.Message.SUPPORTS_UINT8ARRAY_ && e2.constructor === Uint8Array) {
      if (e2.length != t2.length)
        return false;
      for (var r2 = 0; r2 < e2.length; r2++)
        if (e2[r2] != t2[r2])
          return false;
      return true;
    }
    if (e2.constructor === Array) {
      var o2 = void 0, i3 = void 0, a3 = Math.max(e2.length, t2.length);
      for (r2 = 0; r2 < a3; r2++) {
        var n2 = e2[r2], s2 = t2[r2];
        if (n2 && n2.constructor == Object && (jspb.asserts.assert(void 0 === o2), jspb.asserts.assert(r2 === e2.length - 1), o2 = n2, n2 = void 0), s2 && s2.constructor == Object && (jspb.asserts.assert(void 0 === i3), jspb.asserts.assert(r2 === t2.length - 1), i3 = s2, s2 = void 0), !jspb.Message.compareFields(n2, s2))
          return false;
      }
      return !o2 && !i3 || (o2 = o2 || {}, i3 = i3 || {}, jspb.Message.compareExtensions(o2, i3));
    }
    if (e2.constructor === Object)
      return jspb.Message.compareExtensions(e2, t2);
    throw Error("Invalid type in JSPB array");
  }, goog.exportProperty(jspb.Message, "compareFields", jspb.Message.compareFields), jspb.Message.prototype.cloneMessage = function() {
    return jspb.Message.cloneMessage(this);
  }, goog.exportProperty(jspb.Message.prototype, "cloneMessage", jspb.Message.prototype.cloneMessage), jspb.Message.prototype.clone = function() {
    return jspb.Message.cloneMessage(this);
  }, goog.exportProperty(jspb.Message.prototype, "clone", jspb.Message.prototype.clone), jspb.Message.clone = function(e2) {
    return jspb.Message.cloneMessage(e2);
  }, goog.exportProperty(jspb.Message, "clone", jspb.Message.clone), jspb.Message.cloneMessage = function(e2) {
    return new e2.constructor(jspb.Message.clone_(e2.toArray()));
  }, jspb.Message.copyInto = function(e2, t2) {
    jspb.asserts.assertInstanceof(e2, jspb.Message), jspb.asserts.assertInstanceof(t2, jspb.Message), jspb.asserts.assert(e2.constructor == t2.constructor, "Copy source and target message should have the same type."), e2 = jspb.Message.clone(e2);
    for (var r2 = t2.toArray(), o2 = e2.toArray(), i3 = r2.length = 0; i3 < o2.length; i3++)
      r2[i3] = o2[i3];
    t2.wrappers_ = e2.wrappers_, t2.extensionObject_ = e2.extensionObject_;
  }, goog.exportProperty(jspb.Message, "copyInto", jspb.Message.copyInto), jspb.Message.clone_ = function(e2) {
    if (Array.isArray(e2)) {
      for (var t2 = Array(e2.length), r2 = 0; r2 < e2.length; r2++) {
        var o2 = e2[r2];
        null != o2 && (t2[r2] = "object" == typeof o2 ? jspb.Message.clone_(jspb.asserts.assert(o2)) : o2);
      }
      return t2;
    }
    if (jspb.Message.SUPPORTS_UINT8ARRAY_ && e2 instanceof Uint8Array)
      return new Uint8Array(e2);
    for (r2 in t2 = {}, e2)
      null != (o2 = e2[r2]) && (t2[r2] = "object" == typeof o2 ? jspb.Message.clone_(jspb.asserts.assert(o2)) : o2);
    return t2;
  }, jspb.Message.registerMessageType = function(e2, t2) {
    t2.messageId = e2;
  }, goog.exportProperty(jspb.Message, "registerMessageType", jspb.Message.registerMessageType), jspb.Message.messageSetExtensions = {}, jspb.Message.messageSetExtensionsBinary = {}, jspb.Export = {}, exports.Map = jspb.Map, exports.Message = jspb.Message, exports.BinaryReader = jspb.BinaryReader, exports.BinaryWriter = jspb.BinaryWriter, exports.ExtensionFieldInfo = jspb.ExtensionFieldInfo, exports.ExtensionFieldBinaryInfo = jspb.ExtensionFieldBinaryInfo, exports.exportSymbol = goog.exportSymbol, exports.inherits = goog.inherits, exports.object = { extend: goog.object.extend }, exports.typeOf = goog.typeOf;
})(googleProtobuf);
var calculator_options_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")();
  r2.exportSymbol("proto.mediapipe.CalculatorOptions", null, o2), proto.mediapipe.CalculatorOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, 2, null, null);
  }, r2.inherits(proto.mediapipe.CalculatorOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.CalculatorOptions.displayName = "proto.mediapipe.CalculatorOptions"), proto.mediapipe.CalculatorOptions.extensions = {}, proto.mediapipe.CalculatorOptions.extensionsBinary = {}, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.CalculatorOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.CalculatorOptions.toObject(e3, this);
  }, proto.mediapipe.CalculatorOptions.toObject = function(e3, r3) {
    var o3, i3 = { mergeFields: null == (o3 = t2.Message.getBooleanField(r3, 1)) ? void 0 : o3 };
    return t2.Message.toObjectExtension(r3, i3, proto.mediapipe.CalculatorOptions.extensions, proto.mediapipe.CalculatorOptions.prototype.getExtension, e3), e3 && (i3.$jspbMessageInstance = r3), i3;
  }), proto.mediapipe.CalculatorOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.CalculatorOptions();
    return proto.mediapipe.CalculatorOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.CalculatorOptions.deserializeBinaryFromReader = function(e3, r3) {
    for (; r3.nextField() && !r3.isEndGroup(); ) {
      if (1 === r3.getFieldNumber()) {
        var o3 = r3.readBool();
        e3.setMergeFields(o3);
      } else
        t2.Message.readBinaryExtension(e3, r3, proto.mediapipe.CalculatorOptions.extensionsBinary, proto.mediapipe.CalculatorOptions.prototype.getExtension, proto.mediapipe.CalculatorOptions.prototype.setExtension);
    }
    return e3;
  }, proto.mediapipe.CalculatorOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.CalculatorOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.CalculatorOptions.serializeBinaryToWriter = function(e3, r3) {
    var o3;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeBool(1, o3), t2.Message.serializeBinaryExtensions(e3, r3, proto.mediapipe.CalculatorOptions.extensionsBinary, proto.mediapipe.CalculatorOptions.prototype.getExtension);
  }, proto.mediapipe.CalculatorOptions.prototype.getMergeFields = function() {
    return t2.Message.getBooleanFieldWithDefault(this, 1, false);
  }, proto.mediapipe.CalculatorOptions.prototype.setMergeFields = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.CalculatorOptions.prototype.clearMergeFields = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.CalculatorOptions.prototype.hasMergeFields = function() {
    return null != t2.Message.getField(this, 1);
  }, r2.object.extend(e2, proto.mediapipe);
}(calculator_options_pb);
var any_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")();
  r2.exportSymbol("proto.google.protobuf.Any", null, o2), proto.google.protobuf.Any = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.google.protobuf.Any, t2.Message), r2.DEBUG && !COMPILED && (proto.google.protobuf.Any.displayName = "proto.google.protobuf.Any"), t2.Message.GENERATE_TO_OBJECT && (proto.google.protobuf.Any.prototype.toObject = function(e3) {
    return proto.google.protobuf.Any.toObject(e3, this);
  }, proto.google.protobuf.Any.toObject = function(e3, r3) {
    var o3 = { typeUrl: t2.Message.getFieldWithDefault(r3, 1, ""), value: r3.getValue_asB64() };
    return e3 && (o3.$jspbMessageInstance = r3), o3;
  }), proto.google.protobuf.Any.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.google.protobuf.Any();
    return proto.google.protobuf.Any.deserializeBinaryFromReader(o3, r3);
  }, proto.google.protobuf.Any.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readString();
          e3.setTypeUrl(r3);
          break;
        case 2:
          r3 = t3.readBytes();
          e3.setValue(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.google.protobuf.Any.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.google.protobuf.Any.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.google.protobuf.Any.serializeBinaryToWriter = function(e3, t3) {
    var r3 = void 0;
    (r3 = e3.getTypeUrl()).length > 0 && t3.writeString(1, r3), (r3 = e3.getValue_asU8()).length > 0 && t3.writeBytes(2, r3);
  }, proto.google.protobuf.Any.prototype.getTypeUrl = function() {
    return t2.Message.getFieldWithDefault(this, 1, "");
  }, proto.google.protobuf.Any.prototype.setTypeUrl = function(e3) {
    return t2.Message.setProto3StringField(this, 1, e3);
  }, proto.google.protobuf.Any.prototype.getValue = function() {
    return t2.Message.getFieldWithDefault(this, 2, "");
  }, proto.google.protobuf.Any.prototype.getValue_asB64 = function() {
    return t2.Message.bytesAsB64(this.getValue());
  }, proto.google.protobuf.Any.prototype.getValue_asU8 = function() {
    return t2.Message.bytesAsU8(this.getValue());
  }, proto.google.protobuf.Any.prototype.setValue = function(e3) {
    return t2.Message.setProto3BytesField(this, 2, e3);
  }, r2.object.extend(e2, proto.google.protobuf), proto.google.protobuf.Any.prototype.getTypeName = function() {
    return this.getTypeUrl().split("/").pop();
  }, proto.google.protobuf.Any.prototype.pack = function(e3, t3, r3) {
    r3 || (r3 = "type.googleapis.com/"), "/" != r3.substr(-1) ? this.setTypeUrl(r3 + "/" + t3) : this.setTypeUrl(r3 + t3), this.setValue(e3);
  }, proto.google.protobuf.Any.prototype.unpack = function(e3, t3) {
    return this.getTypeName() == t3 ? e3(this.getValue_asU8()) : null;
  };
}(any_pb);
var mediapipe_options_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")();
  r2.exportSymbol("proto.mediapipe.MediaPipeOptions", null, o2), proto.mediapipe.MediaPipeOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, 1, null, null);
  }, r2.inherits(proto.mediapipe.MediaPipeOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.MediaPipeOptions.displayName = "proto.mediapipe.MediaPipeOptions"), proto.mediapipe.MediaPipeOptions.extensions = {}, proto.mediapipe.MediaPipeOptions.extensionsBinary = {}, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.MediaPipeOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.MediaPipeOptions.toObject(e3, this);
  }, proto.mediapipe.MediaPipeOptions.toObject = function(e3, r3) {
    var o3 = {};
    return t2.Message.toObjectExtension(r3, o3, proto.mediapipe.MediaPipeOptions.extensions, proto.mediapipe.MediaPipeOptions.prototype.getExtension, e3), e3 && (o3.$jspbMessageInstance = r3), o3;
  }), proto.mediapipe.MediaPipeOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.MediaPipeOptions();
    return proto.mediapipe.MediaPipeOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.MediaPipeOptions.deserializeBinaryFromReader = function(e3, r3) {
    for (; r3.nextField() && !r3.isEndGroup(); ) {
      r3.getFieldNumber();
      t2.Message.readBinaryExtension(e3, r3, proto.mediapipe.MediaPipeOptions.extensionsBinary, proto.mediapipe.MediaPipeOptions.prototype.getExtension, proto.mediapipe.MediaPipeOptions.prototype.setExtension);
    }
    return e3;
  }, proto.mediapipe.MediaPipeOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.MediaPipeOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.MediaPipeOptions.serializeBinaryToWriter = function(e3, r3) {
    t2.Message.serializeBinaryExtensions(e3, r3, proto.mediapipe.MediaPipeOptions.extensionsBinary, proto.mediapipe.MediaPipeOptions.prototype.getExtension);
  }, r2.object.extend(e2, proto.mediapipe);
}(mediapipe_options_pb);
var packet_factory_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")();
  r2.exportSymbol("proto.mediapipe.PacketFactoryConfig", null, o2), r2.exportSymbol("proto.mediapipe.PacketFactoryOptions", null, o2), r2.exportSymbol("proto.mediapipe.PacketManagerConfig", null, o2), proto.mediapipe.PacketFactoryOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, 1, null, null);
  }, r2.inherits(proto.mediapipe.PacketFactoryOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.PacketFactoryOptions.displayName = "proto.mediapipe.PacketFactoryOptions"), proto.mediapipe.PacketFactoryOptions.extensions = {}, proto.mediapipe.PacketFactoryOptions.extensionsBinary = {}, proto.mediapipe.PacketFactoryConfig = function(e3) {
    t2.Message.initialize(this, e3, 0, 500, null, null);
  }, r2.inherits(proto.mediapipe.PacketFactoryConfig, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.PacketFactoryConfig.displayName = "proto.mediapipe.PacketFactoryConfig"), proto.mediapipe.PacketManagerConfig = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, proto.mediapipe.PacketManagerConfig.repeatedFields_, null);
  }, r2.inherits(proto.mediapipe.PacketManagerConfig, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.PacketManagerConfig.displayName = "proto.mediapipe.PacketManagerConfig"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.PacketFactoryOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.PacketFactoryOptions.toObject(e3, this);
  }, proto.mediapipe.PacketFactoryOptions.toObject = function(e3, r3) {
    var o3 = {};
    return t2.Message.toObjectExtension(r3, o3, proto.mediapipe.PacketFactoryOptions.extensions, proto.mediapipe.PacketFactoryOptions.prototype.getExtension, e3), e3 && (o3.$jspbMessageInstance = r3), o3;
  }), proto.mediapipe.PacketFactoryOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.PacketFactoryOptions();
    return proto.mediapipe.PacketFactoryOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.PacketFactoryOptions.deserializeBinaryFromReader = function(e3, r3) {
    for (; r3.nextField() && !r3.isEndGroup(); ) {
      r3.getFieldNumber();
      t2.Message.readBinaryExtension(e3, r3, proto.mediapipe.PacketFactoryOptions.extensionsBinary, proto.mediapipe.PacketFactoryOptions.prototype.getExtension, proto.mediapipe.PacketFactoryOptions.prototype.setExtension);
    }
    return e3;
  }, proto.mediapipe.PacketFactoryOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.PacketFactoryOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.PacketFactoryOptions.serializeBinaryToWriter = function(e3, r3) {
    t2.Message.serializeBinaryExtensions(e3, r3, proto.mediapipe.PacketFactoryOptions.extensionsBinary, proto.mediapipe.PacketFactoryOptions.prototype.getExtension);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.PacketFactoryConfig.prototype.toObject = function(e3) {
    return proto.mediapipe.PacketFactoryConfig.toObject(e3, this);
  }, proto.mediapipe.PacketFactoryConfig.toObject = function(e3, r3) {
    var o3, i3 = { packetFactory: null == (o3 = t2.Message.getField(r3, 1)) ? void 0 : o3, outputSidePacket: null == (o3 = t2.Message.getField(r3, 2)) ? void 0 : o3, externalOutput: null == (o3 = t2.Message.getField(r3, 1002)) ? void 0 : o3, options: (o3 = r3.getOptions()) && proto.mediapipe.PacketFactoryOptions.toObject(e3, o3) };
    return e3 && (i3.$jspbMessageInstance = r3), i3;
  }), proto.mediapipe.PacketFactoryConfig.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.PacketFactoryConfig();
    return proto.mediapipe.PacketFactoryConfig.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.PacketFactoryConfig.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readString();
          e3.setPacketFactory(r3);
          break;
        case 2:
          r3 = t3.readString();
          e3.setOutputSidePacket(r3);
          break;
        case 1002:
          r3 = t3.readString();
          e3.setExternalOutput(r3);
          break;
        case 3:
          r3 = new proto.mediapipe.PacketFactoryOptions();
          t3.readMessage(r3, proto.mediapipe.PacketFactoryOptions.deserializeBinaryFromReader), e3.setOptions(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.PacketFactoryConfig.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.PacketFactoryConfig.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.PacketFactoryConfig.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeString(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeString(2, o3), null != (o3 = t2.Message.getField(e3, 1002)) && r3.writeString(1002, o3), null != (o3 = e3.getOptions()) && r3.writeMessage(3, o3, proto.mediapipe.PacketFactoryOptions.serializeBinaryToWriter);
  }, proto.mediapipe.PacketFactoryConfig.prototype.getPacketFactory = function() {
    return t2.Message.getFieldWithDefault(this, 1, "");
  }, proto.mediapipe.PacketFactoryConfig.prototype.setPacketFactory = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.PacketFactoryConfig.prototype.clearPacketFactory = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.PacketFactoryConfig.prototype.hasPacketFactory = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.PacketFactoryConfig.prototype.getOutputSidePacket = function() {
    return t2.Message.getFieldWithDefault(this, 2, "");
  }, proto.mediapipe.PacketFactoryConfig.prototype.setOutputSidePacket = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.PacketFactoryConfig.prototype.clearOutputSidePacket = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.PacketFactoryConfig.prototype.hasOutputSidePacket = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.PacketFactoryConfig.prototype.getExternalOutput = function() {
    return t2.Message.getFieldWithDefault(this, 1002, "");
  }, proto.mediapipe.PacketFactoryConfig.prototype.setExternalOutput = function(e3) {
    return t2.Message.setField(this, 1002, e3);
  }, proto.mediapipe.PacketFactoryConfig.prototype.clearExternalOutput = function() {
    return t2.Message.setField(this, 1002, void 0);
  }, proto.mediapipe.PacketFactoryConfig.prototype.hasExternalOutput = function() {
    return null != t2.Message.getField(this, 1002);
  }, proto.mediapipe.PacketFactoryConfig.prototype.getOptions = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.PacketFactoryOptions, 3);
  }, proto.mediapipe.PacketFactoryConfig.prototype.setOptions = function(e3) {
    return t2.Message.setWrapperField(this, 3, e3);
  }, proto.mediapipe.PacketFactoryConfig.prototype.clearOptions = function() {
    return this.setOptions(void 0);
  }, proto.mediapipe.PacketFactoryConfig.prototype.hasOptions = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.PacketManagerConfig.repeatedFields_ = [1], t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.PacketManagerConfig.prototype.toObject = function(e3) {
    return proto.mediapipe.PacketManagerConfig.toObject(e3, this);
  }, proto.mediapipe.PacketManagerConfig.toObject = function(e3, r3) {
    var o3 = { packetList: t2.Message.toObjectList(r3.getPacketList(), proto.mediapipe.PacketFactoryConfig.toObject, e3) };
    return e3 && (o3.$jspbMessageInstance = r3), o3;
  }), proto.mediapipe.PacketManagerConfig.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.PacketManagerConfig();
    return proto.mediapipe.PacketManagerConfig.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.PacketManagerConfig.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      if (1 === t3.getFieldNumber()) {
        var r3 = new proto.mediapipe.PacketFactoryConfig();
        t3.readMessage(r3, proto.mediapipe.PacketFactoryConfig.deserializeBinaryFromReader), e3.addPacket(r3);
      } else
        t3.skipField();
    }
    return e3;
  }, proto.mediapipe.PacketManagerConfig.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.PacketManagerConfig.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.PacketManagerConfig.serializeBinaryToWriter = function(e3, t3) {
    var r3;
    (r3 = e3.getPacketList()).length > 0 && t3.writeRepeatedMessage(1, r3, proto.mediapipe.PacketFactoryConfig.serializeBinaryToWriter);
  }, proto.mediapipe.PacketManagerConfig.prototype.getPacketList = function() {
    return t2.Message.getRepeatedWrapperField(this, proto.mediapipe.PacketFactoryConfig, 1);
  }, proto.mediapipe.PacketManagerConfig.prototype.setPacketList = function(e3) {
    return t2.Message.setRepeatedWrapperField(this, 1, e3);
  }, proto.mediapipe.PacketManagerConfig.prototype.addPacket = function(e3, r3) {
    return t2.Message.addToRepeatedWrapperField(this, 1, e3, proto.mediapipe.PacketFactoryConfig, r3);
  }, proto.mediapipe.PacketManagerConfig.prototype.clearPacketList = function() {
    return this.setPacketList([]);
  }, r2.object.extend(e2, proto.mediapipe);
}(packet_factory_pb);
var packet_generator_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")();
  r2.exportSymbol("proto.mediapipe.PacketGeneratorConfig", null, o2), r2.exportSymbol("proto.mediapipe.PacketGeneratorOptions", null, o2), proto.mediapipe.PacketGeneratorOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, 2, null, null);
  }, r2.inherits(proto.mediapipe.PacketGeneratorOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.PacketGeneratorOptions.displayName = "proto.mediapipe.PacketGeneratorOptions"), proto.mediapipe.PacketGeneratorOptions.extensions = {}, proto.mediapipe.PacketGeneratorOptions.extensionsBinary = {}, proto.mediapipe.PacketGeneratorConfig = function(e3) {
    t2.Message.initialize(this, e3, 0, 500, proto.mediapipe.PacketGeneratorConfig.repeatedFields_, null);
  }, r2.inherits(proto.mediapipe.PacketGeneratorConfig, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.PacketGeneratorConfig.displayName = "proto.mediapipe.PacketGeneratorConfig"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.PacketGeneratorOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.PacketGeneratorOptions.toObject(e3, this);
  }, proto.mediapipe.PacketGeneratorOptions.toObject = function(e3, r3) {
    var o3 = { mergeFields: t2.Message.getBooleanFieldWithDefault(r3, 1, true) };
    return t2.Message.toObjectExtension(r3, o3, proto.mediapipe.PacketGeneratorOptions.extensions, proto.mediapipe.PacketGeneratorOptions.prototype.getExtension, e3), e3 && (o3.$jspbMessageInstance = r3), o3;
  }), proto.mediapipe.PacketGeneratorOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.PacketGeneratorOptions();
    return proto.mediapipe.PacketGeneratorOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.PacketGeneratorOptions.deserializeBinaryFromReader = function(e3, r3) {
    for (; r3.nextField() && !r3.isEndGroup(); ) {
      if (1 === r3.getFieldNumber()) {
        var o3 = r3.readBool();
        e3.setMergeFields(o3);
      } else
        t2.Message.readBinaryExtension(e3, r3, proto.mediapipe.PacketGeneratorOptions.extensionsBinary, proto.mediapipe.PacketGeneratorOptions.prototype.getExtension, proto.mediapipe.PacketGeneratorOptions.prototype.setExtension);
    }
    return e3;
  }, proto.mediapipe.PacketGeneratorOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.PacketGeneratorOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.PacketGeneratorOptions.serializeBinaryToWriter = function(e3, r3) {
    var o3;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeBool(1, o3), t2.Message.serializeBinaryExtensions(e3, r3, proto.mediapipe.PacketGeneratorOptions.extensionsBinary, proto.mediapipe.PacketGeneratorOptions.prototype.getExtension);
  }, proto.mediapipe.PacketGeneratorOptions.prototype.getMergeFields = function() {
    return t2.Message.getBooleanFieldWithDefault(this, 1, true);
  }, proto.mediapipe.PacketGeneratorOptions.prototype.setMergeFields = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.PacketGeneratorOptions.prototype.clearMergeFields = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.PacketGeneratorOptions.prototype.hasMergeFields = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.PacketGeneratorConfig.repeatedFields_ = [2, 1002, 3, 1003], t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.PacketGeneratorConfig.prototype.toObject = function(e3) {
    return proto.mediapipe.PacketGeneratorConfig.toObject(e3, this);
  }, proto.mediapipe.PacketGeneratorConfig.toObject = function(e3, r3) {
    var o3, i3 = { packetGenerator: null == (o3 = t2.Message.getField(r3, 1)) ? void 0 : o3, inputSidePacketList: null == (o3 = t2.Message.getRepeatedField(r3, 2)) ? void 0 : o3, externalInputList: null == (o3 = t2.Message.getRepeatedField(r3, 1002)) ? void 0 : o3, outputSidePacketList: null == (o3 = t2.Message.getRepeatedField(r3, 3)) ? void 0 : o3, externalOutputList: null == (o3 = t2.Message.getRepeatedField(r3, 1003)) ? void 0 : o3, options: (o3 = r3.getOptions()) && proto.mediapipe.PacketGeneratorOptions.toObject(e3, o3) };
    return e3 && (i3.$jspbMessageInstance = r3), i3;
  }), proto.mediapipe.PacketGeneratorConfig.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.PacketGeneratorConfig();
    return proto.mediapipe.PacketGeneratorConfig.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.PacketGeneratorConfig.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readString();
          e3.setPacketGenerator(r3);
          break;
        case 2:
          r3 = t3.readString();
          e3.addInputSidePacket(r3);
          break;
        case 1002:
          r3 = t3.readString();
          e3.addExternalInput(r3);
          break;
        case 3:
          r3 = t3.readString();
          e3.addOutputSidePacket(r3);
          break;
        case 1003:
          r3 = t3.readString();
          e3.addExternalOutput(r3);
          break;
        case 4:
          r3 = new proto.mediapipe.PacketGeneratorOptions();
          t3.readMessage(r3, proto.mediapipe.PacketGeneratorOptions.deserializeBinaryFromReader), e3.setOptions(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.PacketGeneratorConfig.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.PacketGeneratorConfig.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.PacketGeneratorConfig.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeString(1, o3), (o3 = e3.getInputSidePacketList()).length > 0 && r3.writeRepeatedString(2, o3), (o3 = e3.getExternalInputList()).length > 0 && r3.writeRepeatedString(1002, o3), (o3 = e3.getOutputSidePacketList()).length > 0 && r3.writeRepeatedString(3, o3), (o3 = e3.getExternalOutputList()).length > 0 && r3.writeRepeatedString(1003, o3), null != (o3 = e3.getOptions()) && r3.writeMessage(4, o3, proto.mediapipe.PacketGeneratorOptions.serializeBinaryToWriter);
  }, proto.mediapipe.PacketGeneratorConfig.prototype.getPacketGenerator = function() {
    return t2.Message.getFieldWithDefault(this, 1, "");
  }, proto.mediapipe.PacketGeneratorConfig.prototype.setPacketGenerator = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.PacketGeneratorConfig.prototype.clearPacketGenerator = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.PacketGeneratorConfig.prototype.hasPacketGenerator = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.PacketGeneratorConfig.prototype.getInputSidePacketList = function() {
    return t2.Message.getRepeatedField(this, 2);
  }, proto.mediapipe.PacketGeneratorConfig.prototype.setInputSidePacketList = function(e3) {
    return t2.Message.setField(this, 2, e3 || []);
  }, proto.mediapipe.PacketGeneratorConfig.prototype.addInputSidePacket = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 2, e3, r3);
  }, proto.mediapipe.PacketGeneratorConfig.prototype.clearInputSidePacketList = function() {
    return this.setInputSidePacketList([]);
  }, proto.mediapipe.PacketGeneratorConfig.prototype.getExternalInputList = function() {
    return t2.Message.getRepeatedField(this, 1002);
  }, proto.mediapipe.PacketGeneratorConfig.prototype.setExternalInputList = function(e3) {
    return t2.Message.setField(this, 1002, e3 || []);
  }, proto.mediapipe.PacketGeneratorConfig.prototype.addExternalInput = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 1002, e3, r3);
  }, proto.mediapipe.PacketGeneratorConfig.prototype.clearExternalInputList = function() {
    return this.setExternalInputList([]);
  }, proto.mediapipe.PacketGeneratorConfig.prototype.getOutputSidePacketList = function() {
    return t2.Message.getRepeatedField(this, 3);
  }, proto.mediapipe.PacketGeneratorConfig.prototype.setOutputSidePacketList = function(e3) {
    return t2.Message.setField(this, 3, e3 || []);
  }, proto.mediapipe.PacketGeneratorConfig.prototype.addOutputSidePacket = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 3, e3, r3);
  }, proto.mediapipe.PacketGeneratorConfig.prototype.clearOutputSidePacketList = function() {
    return this.setOutputSidePacketList([]);
  }, proto.mediapipe.PacketGeneratorConfig.prototype.getExternalOutputList = function() {
    return t2.Message.getRepeatedField(this, 1003);
  }, proto.mediapipe.PacketGeneratorConfig.prototype.setExternalOutputList = function(e3) {
    return t2.Message.setField(this, 1003, e3 || []);
  }, proto.mediapipe.PacketGeneratorConfig.prototype.addExternalOutput = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 1003, e3, r3);
  }, proto.mediapipe.PacketGeneratorConfig.prototype.clearExternalOutputList = function() {
    return this.setExternalOutputList([]);
  }, proto.mediapipe.PacketGeneratorConfig.prototype.getOptions = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.PacketGeneratorOptions, 4);
  }, proto.mediapipe.PacketGeneratorConfig.prototype.setOptions = function(e3) {
    return t2.Message.setWrapperField(this, 4, e3);
  }, proto.mediapipe.PacketGeneratorConfig.prototype.clearOptions = function() {
    return this.setOptions(void 0);
  }, proto.mediapipe.PacketGeneratorConfig.prototype.hasOptions = function() {
    return null != t2.Message.getField(this, 4);
  }, r2.object.extend(e2, proto.mediapipe);
}(packet_generator_pb);
var status_handler_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = mediapipe_options_pb;
  r2.object.extend(proto, i3), r2.exportSymbol("proto.mediapipe.StatusHandlerConfig", null, o2), proto.mediapipe.StatusHandlerConfig = function(e3) {
    t2.Message.initialize(this, e3, 0, 500, proto.mediapipe.StatusHandlerConfig.repeatedFields_, null);
  }, r2.inherits(proto.mediapipe.StatusHandlerConfig, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.StatusHandlerConfig.displayName = "proto.mediapipe.StatusHandlerConfig"), proto.mediapipe.StatusHandlerConfig.repeatedFields_ = [2, 1002], t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.StatusHandlerConfig.prototype.toObject = function(e3) {
    return proto.mediapipe.StatusHandlerConfig.toObject(e3, this);
  }, proto.mediapipe.StatusHandlerConfig.toObject = function(e3, r3) {
    var o3, a3 = { statusHandler: null == (o3 = t2.Message.getField(r3, 1)) ? void 0 : o3, inputSidePacketList: null == (o3 = t2.Message.getRepeatedField(r3, 2)) ? void 0 : o3, externalInputList: null == (o3 = t2.Message.getRepeatedField(r3, 1002)) ? void 0 : o3, options: (o3 = r3.getOptions()) && i3.MediaPipeOptions.toObject(e3, o3) };
    return e3 && (a3.$jspbMessageInstance = r3), a3;
  }), proto.mediapipe.StatusHandlerConfig.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.StatusHandlerConfig();
    return proto.mediapipe.StatusHandlerConfig.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.StatusHandlerConfig.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readString();
          e3.setStatusHandler(r3);
          break;
        case 2:
          r3 = t3.readString();
          e3.addInputSidePacket(r3);
          break;
        case 1002:
          r3 = t3.readString();
          e3.addExternalInput(r3);
          break;
        case 3:
          r3 = new i3.MediaPipeOptions();
          t3.readMessage(r3, i3.MediaPipeOptions.deserializeBinaryFromReader), e3.setOptions(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.StatusHandlerConfig.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.StatusHandlerConfig.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.StatusHandlerConfig.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeString(1, o3), (o3 = e3.getInputSidePacketList()).length > 0 && r3.writeRepeatedString(2, o3), (o3 = e3.getExternalInputList()).length > 0 && r3.writeRepeatedString(1002, o3), null != (o3 = e3.getOptions()) && r3.writeMessage(3, o3, i3.MediaPipeOptions.serializeBinaryToWriter);
  }, proto.mediapipe.StatusHandlerConfig.prototype.getStatusHandler = function() {
    return t2.Message.getFieldWithDefault(this, 1, "");
  }, proto.mediapipe.StatusHandlerConfig.prototype.setStatusHandler = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.StatusHandlerConfig.prototype.clearStatusHandler = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.StatusHandlerConfig.prototype.hasStatusHandler = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.StatusHandlerConfig.prototype.getInputSidePacketList = function() {
    return t2.Message.getRepeatedField(this, 2);
  }, proto.mediapipe.StatusHandlerConfig.prototype.setInputSidePacketList = function(e3) {
    return t2.Message.setField(this, 2, e3 || []);
  }, proto.mediapipe.StatusHandlerConfig.prototype.addInputSidePacket = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 2, e3, r3);
  }, proto.mediapipe.StatusHandlerConfig.prototype.clearInputSidePacketList = function() {
    return this.setInputSidePacketList([]);
  }, proto.mediapipe.StatusHandlerConfig.prototype.getExternalInputList = function() {
    return t2.Message.getRepeatedField(this, 1002);
  }, proto.mediapipe.StatusHandlerConfig.prototype.setExternalInputList = function(e3) {
    return t2.Message.setField(this, 1002, e3 || []);
  }, proto.mediapipe.StatusHandlerConfig.prototype.addExternalInput = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 1002, e3, r3);
  }, proto.mediapipe.StatusHandlerConfig.prototype.clearExternalInputList = function() {
    return this.setExternalInputList([]);
  }, proto.mediapipe.StatusHandlerConfig.prototype.getOptions = function() {
    return t2.Message.getWrapperField(this, i3.MediaPipeOptions, 3);
  }, proto.mediapipe.StatusHandlerConfig.prototype.setOptions = function(e3) {
    return t2.Message.setWrapperField(this, 3, e3);
  }, proto.mediapipe.StatusHandlerConfig.prototype.clearOptions = function() {
    return this.setOptions(void 0);
  }, proto.mediapipe.StatusHandlerConfig.prototype.hasOptions = function() {
    return null != t2.Message.getField(this, 3);
  }, r2.object.extend(e2, proto.mediapipe);
}(status_handler_pb);
var stream_handler_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = mediapipe_options_pb;
  r2.object.extend(proto, i3), r2.exportSymbol("proto.mediapipe.InputStreamHandlerConfig", null, o2), r2.exportSymbol("proto.mediapipe.OutputStreamHandlerConfig", null, o2), proto.mediapipe.InputStreamHandlerConfig = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.InputStreamHandlerConfig, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.InputStreamHandlerConfig.displayName = "proto.mediapipe.InputStreamHandlerConfig"), proto.mediapipe.OutputStreamHandlerConfig = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, proto.mediapipe.OutputStreamHandlerConfig.repeatedFields_, null);
  }, r2.inherits(proto.mediapipe.OutputStreamHandlerConfig, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.OutputStreamHandlerConfig.displayName = "proto.mediapipe.OutputStreamHandlerConfig"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.InputStreamHandlerConfig.prototype.toObject = function(e3) {
    return proto.mediapipe.InputStreamHandlerConfig.toObject(e3, this);
  }, proto.mediapipe.InputStreamHandlerConfig.toObject = function(e3, r3) {
    var o3, a3 = { inputStreamHandler: t2.Message.getFieldWithDefault(r3, 1, "DefaultInputStreamHandler"), options: (o3 = r3.getOptions()) && i3.MediaPipeOptions.toObject(e3, o3) };
    return e3 && (a3.$jspbMessageInstance = r3), a3;
  }), proto.mediapipe.InputStreamHandlerConfig.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.InputStreamHandlerConfig();
    return proto.mediapipe.InputStreamHandlerConfig.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.InputStreamHandlerConfig.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readString();
          e3.setInputStreamHandler(r3);
          break;
        case 3:
          r3 = new i3.MediaPipeOptions();
          t3.readMessage(r3, i3.MediaPipeOptions.deserializeBinaryFromReader), e3.setOptions(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.InputStreamHandlerConfig.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.InputStreamHandlerConfig.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.InputStreamHandlerConfig.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeString(1, o3), null != (o3 = e3.getOptions()) && r3.writeMessage(3, o3, i3.MediaPipeOptions.serializeBinaryToWriter);
  }, proto.mediapipe.InputStreamHandlerConfig.prototype.getInputStreamHandler = function() {
    return t2.Message.getFieldWithDefault(this, 1, "DefaultInputStreamHandler");
  }, proto.mediapipe.InputStreamHandlerConfig.prototype.setInputStreamHandler = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.InputStreamHandlerConfig.prototype.clearInputStreamHandler = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.InputStreamHandlerConfig.prototype.hasInputStreamHandler = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.InputStreamHandlerConfig.prototype.getOptions = function() {
    return t2.Message.getWrapperField(this, i3.MediaPipeOptions, 3);
  }, proto.mediapipe.InputStreamHandlerConfig.prototype.setOptions = function(e3) {
    return t2.Message.setWrapperField(this, 3, e3);
  }, proto.mediapipe.InputStreamHandlerConfig.prototype.clearOptions = function() {
    return this.setOptions(void 0);
  }, proto.mediapipe.InputStreamHandlerConfig.prototype.hasOptions = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.OutputStreamHandlerConfig.repeatedFields_ = [2], t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.OutputStreamHandlerConfig.prototype.toObject = function(e3) {
    return proto.mediapipe.OutputStreamHandlerConfig.toObject(e3, this);
  }, proto.mediapipe.OutputStreamHandlerConfig.toObject = function(e3, r3) {
    var o3, a3 = { outputStreamHandler: t2.Message.getFieldWithDefault(r3, 1, "InOrderOutputStreamHandler"), inputSidePacketList: null == (o3 = t2.Message.getRepeatedField(r3, 2)) ? void 0 : o3, options: (o3 = r3.getOptions()) && i3.MediaPipeOptions.toObject(e3, o3) };
    return e3 && (a3.$jspbMessageInstance = r3), a3;
  }), proto.mediapipe.OutputStreamHandlerConfig.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.OutputStreamHandlerConfig();
    return proto.mediapipe.OutputStreamHandlerConfig.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.OutputStreamHandlerConfig.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readString();
          e3.setOutputStreamHandler(r3);
          break;
        case 2:
          r3 = t3.readString();
          e3.addInputSidePacket(r3);
          break;
        case 3:
          r3 = new i3.MediaPipeOptions();
          t3.readMessage(r3, i3.MediaPipeOptions.deserializeBinaryFromReader), e3.setOptions(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.OutputStreamHandlerConfig.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.OutputStreamHandlerConfig.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.OutputStreamHandlerConfig.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeString(1, o3), (o3 = e3.getInputSidePacketList()).length > 0 && r3.writeRepeatedString(2, o3), null != (o3 = e3.getOptions()) && r3.writeMessage(3, o3, i3.MediaPipeOptions.serializeBinaryToWriter);
  }, proto.mediapipe.OutputStreamHandlerConfig.prototype.getOutputStreamHandler = function() {
    return t2.Message.getFieldWithDefault(this, 1, "InOrderOutputStreamHandler");
  }, proto.mediapipe.OutputStreamHandlerConfig.prototype.setOutputStreamHandler = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.OutputStreamHandlerConfig.prototype.clearOutputStreamHandler = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.OutputStreamHandlerConfig.prototype.hasOutputStreamHandler = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.OutputStreamHandlerConfig.prototype.getInputSidePacketList = function() {
    return t2.Message.getRepeatedField(this, 2);
  }, proto.mediapipe.OutputStreamHandlerConfig.prototype.setInputSidePacketList = function(e3) {
    return t2.Message.setField(this, 2, e3 || []);
  }, proto.mediapipe.OutputStreamHandlerConfig.prototype.addInputSidePacket = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 2, e3, r3);
  }, proto.mediapipe.OutputStreamHandlerConfig.prototype.clearInputSidePacketList = function() {
    return this.setInputSidePacketList([]);
  }, proto.mediapipe.OutputStreamHandlerConfig.prototype.getOptions = function() {
    return t2.Message.getWrapperField(this, i3.MediaPipeOptions, 3);
  }, proto.mediapipe.OutputStreamHandlerConfig.prototype.setOptions = function(e3) {
    return t2.Message.setWrapperField(this, 3, e3);
  }, proto.mediapipe.OutputStreamHandlerConfig.prototype.clearOptions = function() {
    return this.setOptions(void 0);
  }, proto.mediapipe.OutputStreamHandlerConfig.prototype.hasOptions = function() {
    return null != t2.Message.getField(this, 3);
  }, r2.object.extend(e2, proto.mediapipe);
}(stream_handler_pb), function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = calculator_options_pb;
  r2.object.extend(proto, i3);
  var a3 = any_pb;
  r2.object.extend(proto, a3);
  var n2 = mediapipe_options_pb;
  r2.object.extend(proto, n2);
  var s2 = packet_factory_pb;
  r2.object.extend(proto, s2);
  var p2 = packet_generator_pb;
  r2.object.extend(proto, p2);
  var d2 = status_handler_pb;
  r2.object.extend(proto, d2);
  var l2 = stream_handler_pb;
  r2.object.extend(proto, l2), r2.exportSymbol("proto.mediapipe.CalculatorGraphConfig", null, o2), r2.exportSymbol("proto.mediapipe.CalculatorGraphConfig.Node", null, o2), r2.exportSymbol("proto.mediapipe.ExecutorConfig", null, o2), r2.exportSymbol("proto.mediapipe.InputCollection", null, o2), r2.exportSymbol("proto.mediapipe.InputCollection.InputType", null, o2), r2.exportSymbol("proto.mediapipe.InputCollectionSet", null, o2), r2.exportSymbol("proto.mediapipe.InputStreamInfo", null, o2), r2.exportSymbol("proto.mediapipe.ProfilerConfig", null, o2), proto.mediapipe.ExecutorConfig = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.ExecutorConfig, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.ExecutorConfig.displayName = "proto.mediapipe.ExecutorConfig"), proto.mediapipe.InputCollection = function(e3) {
    t2.Message.initialize(this, e3, 0, 500, proto.mediapipe.InputCollection.repeatedFields_, null);
  }, r2.inherits(proto.mediapipe.InputCollection, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.InputCollection.displayName = "proto.mediapipe.InputCollection"), proto.mediapipe.InputCollectionSet = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, proto.mediapipe.InputCollectionSet.repeatedFields_, null);
  }, r2.inherits(proto.mediapipe.InputCollectionSet, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.InputCollectionSet.displayName = "proto.mediapipe.InputCollectionSet"), proto.mediapipe.InputStreamInfo = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.InputStreamInfo, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.InputStreamInfo.displayName = "proto.mediapipe.InputStreamInfo"), proto.mediapipe.ProfilerConfig = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, proto.mediapipe.ProfilerConfig.repeatedFields_, null);
  }, r2.inherits(proto.mediapipe.ProfilerConfig, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.ProfilerConfig.displayName = "proto.mediapipe.ProfilerConfig"), proto.mediapipe.CalculatorGraphConfig = function(e3) {
    t2.Message.initialize(this, e3, 0, 500, proto.mediapipe.CalculatorGraphConfig.repeatedFields_, null);
  }, r2.inherits(proto.mediapipe.CalculatorGraphConfig, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.CalculatorGraphConfig.displayName = "proto.mediapipe.CalculatorGraphConfig"), proto.mediapipe.CalculatorGraphConfig.Node = function(e3) {
    t2.Message.initialize(this, e3, 0, 500, proto.mediapipe.CalculatorGraphConfig.Node.repeatedFields_, null);
  }, r2.inherits(proto.mediapipe.CalculatorGraphConfig.Node, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.CalculatorGraphConfig.Node.displayName = "proto.mediapipe.CalculatorGraphConfig.Node"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.ExecutorConfig.prototype.toObject = function(e3) {
    return proto.mediapipe.ExecutorConfig.toObject(e3, this);
  }, proto.mediapipe.ExecutorConfig.toObject = function(e3, r3) {
    var o3, i4 = { name: t2.Message.getFieldWithDefault(r3, 1, ""), type: t2.Message.getFieldWithDefault(r3, 2, ""), options: (o3 = r3.getOptions()) && n2.MediaPipeOptions.toObject(e3, o3) };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.ExecutorConfig.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.ExecutorConfig();
    return proto.mediapipe.ExecutorConfig.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.ExecutorConfig.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readString();
          e3.setName(r3);
          break;
        case 2:
          r3 = t3.readString();
          e3.setType(r3);
          break;
        case 3:
          r3 = new n2.MediaPipeOptions();
          t3.readMessage(r3, n2.MediaPipeOptions.deserializeBinaryFromReader), e3.setOptions(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.ExecutorConfig.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.ExecutorConfig.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.ExecutorConfig.serializeBinaryToWriter = function(e3, t3) {
    var r3 = void 0;
    (r3 = e3.getName()).length > 0 && t3.writeString(1, r3), (r3 = e3.getType()).length > 0 && t3.writeString(2, r3), null != (r3 = e3.getOptions()) && t3.writeMessage(3, r3, n2.MediaPipeOptions.serializeBinaryToWriter);
  }, proto.mediapipe.ExecutorConfig.prototype.getName = function() {
    return t2.Message.getFieldWithDefault(this, 1, "");
  }, proto.mediapipe.ExecutorConfig.prototype.setName = function(e3) {
    return t2.Message.setProto3StringField(this, 1, e3);
  }, proto.mediapipe.ExecutorConfig.prototype.getType = function() {
    return t2.Message.getFieldWithDefault(this, 2, "");
  }, proto.mediapipe.ExecutorConfig.prototype.setType = function(e3) {
    return t2.Message.setProto3StringField(this, 2, e3);
  }, proto.mediapipe.ExecutorConfig.prototype.getOptions = function() {
    return t2.Message.getWrapperField(this, n2.MediaPipeOptions, 3);
  }, proto.mediapipe.ExecutorConfig.prototype.setOptions = function(e3) {
    return t2.Message.setWrapperField(this, 3, e3);
  }, proto.mediapipe.ExecutorConfig.prototype.clearOptions = function() {
    return this.setOptions(void 0);
  }, proto.mediapipe.ExecutorConfig.prototype.hasOptions = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.InputCollection.repeatedFields_ = [2, 1002], t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.InputCollection.prototype.toObject = function(e3) {
    return proto.mediapipe.InputCollection.toObject(e3, this);
  }, proto.mediapipe.InputCollection.toObject = function(e3, r3) {
    var o3, i4 = { name: t2.Message.getFieldWithDefault(r3, 1, ""), sidePacketNameList: null == (o3 = t2.Message.getRepeatedField(r3, 2)) ? void 0 : o3, externalInputNameList: null == (o3 = t2.Message.getRepeatedField(r3, 1002)) ? void 0 : o3, inputType: t2.Message.getFieldWithDefault(r3, 3, 0), fileName: t2.Message.getFieldWithDefault(r3, 4, "") };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.InputCollection.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.InputCollection();
    return proto.mediapipe.InputCollection.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.InputCollection.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readString();
          e3.setName(r3);
          break;
        case 2:
          r3 = t3.readString();
          e3.addSidePacketName(r3);
          break;
        case 1002:
          r3 = t3.readString();
          e3.addExternalInputName(r3);
          break;
        case 3:
          r3 = t3.readEnum();
          e3.setInputType(r3);
          break;
        case 4:
          r3 = t3.readString();
          e3.setFileName(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.InputCollection.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.InputCollection.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.InputCollection.serializeBinaryToWriter = function(e3, t3) {
    var r3 = void 0;
    (r3 = e3.getName()).length > 0 && t3.writeString(1, r3), (r3 = e3.getSidePacketNameList()).length > 0 && t3.writeRepeatedString(2, r3), (r3 = e3.getExternalInputNameList()).length > 0 && t3.writeRepeatedString(1002, r3), 0 !== (r3 = e3.getInputType()) && t3.writeEnum(3, r3), (r3 = e3.getFileName()).length > 0 && t3.writeString(4, r3);
  }, proto.mediapipe.InputCollection.InputType = { UNKNOWN: 0, RECORDIO: 1, FOREIGN_RECORDIO: 2, FOREIGN_CSV_TEXT: 3, INVALID_UPPER_BOUND: 4 }, proto.mediapipe.InputCollection.prototype.getName = function() {
    return t2.Message.getFieldWithDefault(this, 1, "");
  }, proto.mediapipe.InputCollection.prototype.setName = function(e3) {
    return t2.Message.setProto3StringField(this, 1, e3);
  }, proto.mediapipe.InputCollection.prototype.getSidePacketNameList = function() {
    return t2.Message.getRepeatedField(this, 2);
  }, proto.mediapipe.InputCollection.prototype.setSidePacketNameList = function(e3) {
    return t2.Message.setField(this, 2, e3 || []);
  }, proto.mediapipe.InputCollection.prototype.addSidePacketName = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 2, e3, r3);
  }, proto.mediapipe.InputCollection.prototype.clearSidePacketNameList = function() {
    return this.setSidePacketNameList([]);
  }, proto.mediapipe.InputCollection.prototype.getExternalInputNameList = function() {
    return t2.Message.getRepeatedField(this, 1002);
  }, proto.mediapipe.InputCollection.prototype.setExternalInputNameList = function(e3) {
    return t2.Message.setField(this, 1002, e3 || []);
  }, proto.mediapipe.InputCollection.prototype.addExternalInputName = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 1002, e3, r3);
  }, proto.mediapipe.InputCollection.prototype.clearExternalInputNameList = function() {
    return this.setExternalInputNameList([]);
  }, proto.mediapipe.InputCollection.prototype.getInputType = function() {
    return t2.Message.getFieldWithDefault(this, 3, 0);
  }, proto.mediapipe.InputCollection.prototype.setInputType = function(e3) {
    return t2.Message.setProto3EnumField(this, 3, e3);
  }, proto.mediapipe.InputCollection.prototype.getFileName = function() {
    return t2.Message.getFieldWithDefault(this, 4, "");
  }, proto.mediapipe.InputCollection.prototype.setFileName = function(e3) {
    return t2.Message.setProto3StringField(this, 4, e3);
  }, proto.mediapipe.InputCollectionSet.repeatedFields_ = [1], t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.InputCollectionSet.prototype.toObject = function(e3) {
    return proto.mediapipe.InputCollectionSet.toObject(e3, this);
  }, proto.mediapipe.InputCollectionSet.toObject = function(e3, r3) {
    var o3 = { inputCollectionList: t2.Message.toObjectList(r3.getInputCollectionList(), proto.mediapipe.InputCollection.toObject, e3) };
    return e3 && (o3.$jspbMessageInstance = r3), o3;
  }), proto.mediapipe.InputCollectionSet.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.InputCollectionSet();
    return proto.mediapipe.InputCollectionSet.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.InputCollectionSet.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      if (1 === t3.getFieldNumber()) {
        var r3 = new proto.mediapipe.InputCollection();
        t3.readMessage(r3, proto.mediapipe.InputCollection.deserializeBinaryFromReader), e3.addInputCollection(r3);
      } else
        t3.skipField();
    }
    return e3;
  }, proto.mediapipe.InputCollectionSet.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.InputCollectionSet.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.InputCollectionSet.serializeBinaryToWriter = function(e3, t3) {
    var r3;
    (r3 = e3.getInputCollectionList()).length > 0 && t3.writeRepeatedMessage(1, r3, proto.mediapipe.InputCollection.serializeBinaryToWriter);
  }, proto.mediapipe.InputCollectionSet.prototype.getInputCollectionList = function() {
    return t2.Message.getRepeatedWrapperField(this, proto.mediapipe.InputCollection, 1);
  }, proto.mediapipe.InputCollectionSet.prototype.setInputCollectionList = function(e3) {
    return t2.Message.setRepeatedWrapperField(this, 1, e3);
  }, proto.mediapipe.InputCollectionSet.prototype.addInputCollection = function(e3, r3) {
    return t2.Message.addToRepeatedWrapperField(this, 1, e3, proto.mediapipe.InputCollection, r3);
  }, proto.mediapipe.InputCollectionSet.prototype.clearInputCollectionList = function() {
    return this.setInputCollectionList([]);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.InputStreamInfo.prototype.toObject = function(e3) {
    return proto.mediapipe.InputStreamInfo.toObject(e3, this);
  }, proto.mediapipe.InputStreamInfo.toObject = function(e3, r3) {
    var o3 = { tagIndex: t2.Message.getFieldWithDefault(r3, 1, ""), backEdge: t2.Message.getBooleanFieldWithDefault(r3, 2, false) };
    return e3 && (o3.$jspbMessageInstance = r3), o3;
  }), proto.mediapipe.InputStreamInfo.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.InputStreamInfo();
    return proto.mediapipe.InputStreamInfo.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.InputStreamInfo.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readString();
          e3.setTagIndex(r3);
          break;
        case 2:
          r3 = t3.readBool();
          e3.setBackEdge(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.InputStreamInfo.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.InputStreamInfo.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.InputStreamInfo.serializeBinaryToWriter = function(e3, t3) {
    var r3 = void 0;
    (r3 = e3.getTagIndex()).length > 0 && t3.writeString(1, r3), (r3 = e3.getBackEdge()) && t3.writeBool(2, r3);
  }, proto.mediapipe.InputStreamInfo.prototype.getTagIndex = function() {
    return t2.Message.getFieldWithDefault(this, 1, "");
  }, proto.mediapipe.InputStreamInfo.prototype.setTagIndex = function(e3) {
    return t2.Message.setProto3StringField(this, 1, e3);
  }, proto.mediapipe.InputStreamInfo.prototype.getBackEdge = function() {
    return t2.Message.getBooleanFieldWithDefault(this, 2, false);
  }, proto.mediapipe.InputStreamInfo.prototype.setBackEdge = function(e3) {
    return t2.Message.setProto3BooleanField(this, 2, e3);
  }, proto.mediapipe.ProfilerConfig.repeatedFields_ = [8], t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.ProfilerConfig.prototype.toObject = function(e3) {
    return proto.mediapipe.ProfilerConfig.toObject(e3, this);
  }, proto.mediapipe.ProfilerConfig.toObject = function(e3, r3) {
    var o3, i4 = { histogramIntervalSizeUsec: t2.Message.getFieldWithDefault(r3, 1, 0), numHistogramIntervals: t2.Message.getFieldWithDefault(r3, 2, 0), enableInputOutputLatency: t2.Message.getBooleanFieldWithDefault(r3, 3, false), enableProfiler: t2.Message.getBooleanFieldWithDefault(r3, 4, false), enableStreamLatency: t2.Message.getBooleanFieldWithDefault(r3, 5, false), usePacketTimestampForAddedPacket: t2.Message.getBooleanFieldWithDefault(r3, 6, false), traceLogCapacity: t2.Message.getFieldWithDefault(r3, 7, 0), traceEventTypesDisabledList: null == (o3 = t2.Message.getRepeatedField(r3, 8)) ? void 0 : o3, traceLogPath: t2.Message.getFieldWithDefault(r3, 9, ""), traceLogCount: t2.Message.getFieldWithDefault(r3, 10, 0), traceLogIntervalUsec: t2.Message.getFieldWithDefault(r3, 11, 0), traceLogMarginUsec: t2.Message.getFieldWithDefault(r3, 12, 0), traceLogDurationEvents: t2.Message.getBooleanFieldWithDefault(r3, 13, false), traceLogIntervalCount: t2.Message.getFieldWithDefault(r3, 14, 0), traceLogDisabled: t2.Message.getBooleanFieldWithDefault(r3, 15, false), traceEnabled: t2.Message.getBooleanFieldWithDefault(r3, 16, false), traceLogInstantEvents: t2.Message.getBooleanFieldWithDefault(r3, 17, false), calculatorFilter: t2.Message.getFieldWithDefault(r3, 18, "") };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.ProfilerConfig.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.ProfilerConfig();
    return proto.mediapipe.ProfilerConfig.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.ProfilerConfig.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readInt64();
          e3.setHistogramIntervalSizeUsec(r3);
          break;
        case 2:
          r3 = t3.readInt64();
          e3.setNumHistogramIntervals(r3);
          break;
        case 3:
          r3 = t3.readBool();
          e3.setEnableInputOutputLatency(r3);
          break;
        case 4:
          r3 = t3.readBool();
          e3.setEnableProfiler(r3);
          break;
        case 5:
          r3 = t3.readBool();
          e3.setEnableStreamLatency(r3);
          break;
        case 6:
          r3 = t3.readBool();
          e3.setUsePacketTimestampForAddedPacket(r3);
          break;
        case 7:
          r3 = t3.readInt64();
          e3.setTraceLogCapacity(r3);
          break;
        case 8:
          for (var o3 = t3.isDelimited() ? t3.readPackedInt32() : [t3.readInt32()], i4 = 0; i4 < o3.length; i4++)
            e3.addTraceEventTypesDisabled(o3[i4]);
          break;
        case 9:
          r3 = t3.readString();
          e3.setTraceLogPath(r3);
          break;
        case 10:
          r3 = t3.readInt32();
          e3.setTraceLogCount(r3);
          break;
        case 11:
          r3 = t3.readInt64();
          e3.setTraceLogIntervalUsec(r3);
          break;
        case 12:
          r3 = t3.readInt64();
          e3.setTraceLogMarginUsec(r3);
          break;
        case 13:
          r3 = t3.readBool();
          e3.setTraceLogDurationEvents(r3);
          break;
        case 14:
          r3 = t3.readInt32();
          e3.setTraceLogIntervalCount(r3);
          break;
        case 15:
          r3 = t3.readBool();
          e3.setTraceLogDisabled(r3);
          break;
        case 16:
          r3 = t3.readBool();
          e3.setTraceEnabled(r3);
          break;
        case 17:
          r3 = t3.readBool();
          e3.setTraceLogInstantEvents(r3);
          break;
        case 18:
          r3 = t3.readString();
          e3.setCalculatorFilter(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.ProfilerConfig.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.ProfilerConfig.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.ProfilerConfig.serializeBinaryToWriter = function(e3, t3) {
    var r3 = void 0;
    0 !== (r3 = e3.getHistogramIntervalSizeUsec()) && t3.writeInt64(1, r3), 0 !== (r3 = e3.getNumHistogramIntervals()) && t3.writeInt64(2, r3), (r3 = e3.getEnableInputOutputLatency()) && t3.writeBool(3, r3), (r3 = e3.getEnableProfiler()) && t3.writeBool(4, r3), (r3 = e3.getEnableStreamLatency()) && t3.writeBool(5, r3), (r3 = e3.getUsePacketTimestampForAddedPacket()) && t3.writeBool(6, r3), 0 !== (r3 = e3.getTraceLogCapacity()) && t3.writeInt64(7, r3), (r3 = e3.getTraceEventTypesDisabledList()).length > 0 && t3.writePackedInt32(8, r3), (r3 = e3.getTraceLogPath()).length > 0 && t3.writeString(9, r3), 0 !== (r3 = e3.getTraceLogCount()) && t3.writeInt32(10, r3), 0 !== (r3 = e3.getTraceLogIntervalUsec()) && t3.writeInt64(11, r3), 0 !== (r3 = e3.getTraceLogMarginUsec()) && t3.writeInt64(12, r3), (r3 = e3.getTraceLogDurationEvents()) && t3.writeBool(13, r3), 0 !== (r3 = e3.getTraceLogIntervalCount()) && t3.writeInt32(14, r3), (r3 = e3.getTraceLogDisabled()) && t3.writeBool(15, r3), (r3 = e3.getTraceEnabled()) && t3.writeBool(16, r3), (r3 = e3.getTraceLogInstantEvents()) && t3.writeBool(17, r3), (r3 = e3.getCalculatorFilter()).length > 0 && t3.writeString(18, r3);
  }, proto.mediapipe.ProfilerConfig.prototype.getHistogramIntervalSizeUsec = function() {
    return t2.Message.getFieldWithDefault(this, 1, 0);
  }, proto.mediapipe.ProfilerConfig.prototype.setHistogramIntervalSizeUsec = function(e3) {
    return t2.Message.setProto3IntField(this, 1, e3);
  }, proto.mediapipe.ProfilerConfig.prototype.getNumHistogramIntervals = function() {
    return t2.Message.getFieldWithDefault(this, 2, 0);
  }, proto.mediapipe.ProfilerConfig.prototype.setNumHistogramIntervals = function(e3) {
    return t2.Message.setProto3IntField(this, 2, e3);
  }, proto.mediapipe.ProfilerConfig.prototype.getEnableInputOutputLatency = function() {
    return t2.Message.getBooleanFieldWithDefault(this, 3, false);
  }, proto.mediapipe.ProfilerConfig.prototype.setEnableInputOutputLatency = function(e3) {
    return t2.Message.setProto3BooleanField(this, 3, e3);
  }, proto.mediapipe.ProfilerConfig.prototype.getEnableProfiler = function() {
    return t2.Message.getBooleanFieldWithDefault(this, 4, false);
  }, proto.mediapipe.ProfilerConfig.prototype.setEnableProfiler = function(e3) {
    return t2.Message.setProto3BooleanField(this, 4, e3);
  }, proto.mediapipe.ProfilerConfig.prototype.getEnableStreamLatency = function() {
    return t2.Message.getBooleanFieldWithDefault(this, 5, false);
  }, proto.mediapipe.ProfilerConfig.prototype.setEnableStreamLatency = function(e3) {
    return t2.Message.setProto3BooleanField(this, 5, e3);
  }, proto.mediapipe.ProfilerConfig.prototype.getUsePacketTimestampForAddedPacket = function() {
    return t2.Message.getBooleanFieldWithDefault(this, 6, false);
  }, proto.mediapipe.ProfilerConfig.prototype.setUsePacketTimestampForAddedPacket = function(e3) {
    return t2.Message.setProto3BooleanField(this, 6, e3);
  }, proto.mediapipe.ProfilerConfig.prototype.getTraceLogCapacity = function() {
    return t2.Message.getFieldWithDefault(this, 7, 0);
  }, proto.mediapipe.ProfilerConfig.prototype.setTraceLogCapacity = function(e3) {
    return t2.Message.setProto3IntField(this, 7, e3);
  }, proto.mediapipe.ProfilerConfig.prototype.getTraceEventTypesDisabledList = function() {
    return t2.Message.getRepeatedField(this, 8);
  }, proto.mediapipe.ProfilerConfig.prototype.setTraceEventTypesDisabledList = function(e3) {
    return t2.Message.setField(this, 8, e3 || []);
  }, proto.mediapipe.ProfilerConfig.prototype.addTraceEventTypesDisabled = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 8, e3, r3);
  }, proto.mediapipe.ProfilerConfig.prototype.clearTraceEventTypesDisabledList = function() {
    return this.setTraceEventTypesDisabledList([]);
  }, proto.mediapipe.ProfilerConfig.prototype.getTraceLogPath = function() {
    return t2.Message.getFieldWithDefault(this, 9, "");
  }, proto.mediapipe.ProfilerConfig.prototype.setTraceLogPath = function(e3) {
    return t2.Message.setProto3StringField(this, 9, e3);
  }, proto.mediapipe.ProfilerConfig.prototype.getTraceLogCount = function() {
    return t2.Message.getFieldWithDefault(this, 10, 0);
  }, proto.mediapipe.ProfilerConfig.prototype.setTraceLogCount = function(e3) {
    return t2.Message.setProto3IntField(this, 10, e3);
  }, proto.mediapipe.ProfilerConfig.prototype.getTraceLogIntervalUsec = function() {
    return t2.Message.getFieldWithDefault(this, 11, 0);
  }, proto.mediapipe.ProfilerConfig.prototype.setTraceLogIntervalUsec = function(e3) {
    return t2.Message.setProto3IntField(this, 11, e3);
  }, proto.mediapipe.ProfilerConfig.prototype.getTraceLogMarginUsec = function() {
    return t2.Message.getFieldWithDefault(this, 12, 0);
  }, proto.mediapipe.ProfilerConfig.prototype.setTraceLogMarginUsec = function(e3) {
    return t2.Message.setProto3IntField(this, 12, e3);
  }, proto.mediapipe.ProfilerConfig.prototype.getTraceLogDurationEvents = function() {
    return t2.Message.getBooleanFieldWithDefault(this, 13, false);
  }, proto.mediapipe.ProfilerConfig.prototype.setTraceLogDurationEvents = function(e3) {
    return t2.Message.setProto3BooleanField(this, 13, e3);
  }, proto.mediapipe.ProfilerConfig.prototype.getTraceLogIntervalCount = function() {
    return t2.Message.getFieldWithDefault(this, 14, 0);
  }, proto.mediapipe.ProfilerConfig.prototype.setTraceLogIntervalCount = function(e3) {
    return t2.Message.setProto3IntField(this, 14, e3);
  }, proto.mediapipe.ProfilerConfig.prototype.getTraceLogDisabled = function() {
    return t2.Message.getBooleanFieldWithDefault(this, 15, false);
  }, proto.mediapipe.ProfilerConfig.prototype.setTraceLogDisabled = function(e3) {
    return t2.Message.setProto3BooleanField(this, 15, e3);
  }, proto.mediapipe.ProfilerConfig.prototype.getTraceEnabled = function() {
    return t2.Message.getBooleanFieldWithDefault(this, 16, false);
  }, proto.mediapipe.ProfilerConfig.prototype.setTraceEnabled = function(e3) {
    return t2.Message.setProto3BooleanField(this, 16, e3);
  }, proto.mediapipe.ProfilerConfig.prototype.getTraceLogInstantEvents = function() {
    return t2.Message.getBooleanFieldWithDefault(this, 17, false);
  }, proto.mediapipe.ProfilerConfig.prototype.setTraceLogInstantEvents = function(e3) {
    return t2.Message.setProto3BooleanField(this, 17, e3);
  }, proto.mediapipe.ProfilerConfig.prototype.getCalculatorFilter = function() {
    return t2.Message.getFieldWithDefault(this, 18, "");
  }, proto.mediapipe.ProfilerConfig.prototype.setCalculatorFilter = function(e3) {
    return t2.Message.setProto3StringField(this, 18, e3);
  }, proto.mediapipe.CalculatorGraphConfig.repeatedFields_ = [1, 6, 7, 9, 10, 15, 16, 17, 14, 1002], t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.CalculatorGraphConfig.prototype.toObject = function(e3) {
    return proto.mediapipe.CalculatorGraphConfig.toObject(e3, this);
  }, proto.mediapipe.CalculatorGraphConfig.toObject = function(e3, r3) {
    var o3, i4 = { nodeList: t2.Message.toObjectList(r3.getNodeList(), proto.mediapipe.CalculatorGraphConfig.Node.toObject, e3), packetFactoryList: t2.Message.toObjectList(r3.getPacketFactoryList(), s2.PacketFactoryConfig.toObject, e3), packetGeneratorList: t2.Message.toObjectList(r3.getPacketGeneratorList(), p2.PacketGeneratorConfig.toObject, e3), numThreads: t2.Message.getFieldWithDefault(r3, 8, 0), statusHandlerList: t2.Message.toObjectList(r3.getStatusHandlerList(), d2.StatusHandlerConfig.toObject, e3), inputStreamList: null == (o3 = t2.Message.getRepeatedField(r3, 10)) ? void 0 : o3, outputStreamList: null == (o3 = t2.Message.getRepeatedField(r3, 15)) ? void 0 : o3, inputSidePacketList: null == (o3 = t2.Message.getRepeatedField(r3, 16)) ? void 0 : o3, outputSidePacketList: null == (o3 = t2.Message.getRepeatedField(r3, 17)) ? void 0 : o3, maxQueueSize: t2.Message.getFieldWithDefault(r3, 11, 0), reportDeadlock: t2.Message.getBooleanFieldWithDefault(r3, 21, false), inputStreamHandler: (o3 = r3.getInputStreamHandler()) && l2.InputStreamHandlerConfig.toObject(e3, o3), outputStreamHandler: (o3 = r3.getOutputStreamHandler()) && l2.OutputStreamHandlerConfig.toObject(e3, o3), executorList: t2.Message.toObjectList(r3.getExecutorList(), proto.mediapipe.ExecutorConfig.toObject, e3), profilerConfig: (o3 = r3.getProfilerConfig()) && proto.mediapipe.ProfilerConfig.toObject(e3, o3), pb_package: t2.Message.getFieldWithDefault(r3, 19, ""), type: t2.Message.getFieldWithDefault(r3, 20, ""), options: (o3 = r3.getOptions()) && n2.MediaPipeOptions.toObject(e3, o3), graphOptionsList: t2.Message.toObjectList(r3.getGraphOptionsList(), a3.Any.toObject, e3) };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.CalculatorGraphConfig.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.CalculatorGraphConfig();
    return proto.mediapipe.CalculatorGraphConfig.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.CalculatorGraphConfig.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new proto.mediapipe.CalculatorGraphConfig.Node();
          t3.readMessage(r3, proto.mediapipe.CalculatorGraphConfig.Node.deserializeBinaryFromReader), e3.addNode(r3);
          break;
        case 6:
          r3 = new s2.PacketFactoryConfig();
          t3.readMessage(r3, s2.PacketFactoryConfig.deserializeBinaryFromReader), e3.addPacketFactory(r3);
          break;
        case 7:
          r3 = new p2.PacketGeneratorConfig();
          t3.readMessage(r3, p2.PacketGeneratorConfig.deserializeBinaryFromReader), e3.addPacketGenerator(r3);
          break;
        case 8:
          r3 = t3.readInt32();
          e3.setNumThreads(r3);
          break;
        case 9:
          r3 = new d2.StatusHandlerConfig();
          t3.readMessage(r3, d2.StatusHandlerConfig.deserializeBinaryFromReader), e3.addStatusHandler(r3);
          break;
        case 10:
          r3 = t3.readString();
          e3.addInputStream(r3);
          break;
        case 15:
          r3 = t3.readString();
          e3.addOutputStream(r3);
          break;
        case 16:
          r3 = t3.readString();
          e3.addInputSidePacket(r3);
          break;
        case 17:
          r3 = t3.readString();
          e3.addOutputSidePacket(r3);
          break;
        case 11:
          r3 = t3.readInt32();
          e3.setMaxQueueSize(r3);
          break;
        case 21:
          r3 = t3.readBool();
          e3.setReportDeadlock(r3);
          break;
        case 12:
          r3 = new l2.InputStreamHandlerConfig();
          t3.readMessage(r3, l2.InputStreamHandlerConfig.deserializeBinaryFromReader), e3.setInputStreamHandler(r3);
          break;
        case 13:
          r3 = new l2.OutputStreamHandlerConfig();
          t3.readMessage(r3, l2.OutputStreamHandlerConfig.deserializeBinaryFromReader), e3.setOutputStreamHandler(r3);
          break;
        case 14:
          r3 = new proto.mediapipe.ExecutorConfig();
          t3.readMessage(r3, proto.mediapipe.ExecutorConfig.deserializeBinaryFromReader), e3.addExecutor(r3);
          break;
        case 18:
          r3 = new proto.mediapipe.ProfilerConfig();
          t3.readMessage(r3, proto.mediapipe.ProfilerConfig.deserializeBinaryFromReader), e3.setProfilerConfig(r3);
          break;
        case 19:
          r3 = t3.readString();
          e3.setPackage(r3);
          break;
        case 20:
          r3 = t3.readString();
          e3.setType(r3);
          break;
        case 1001:
          r3 = new n2.MediaPipeOptions();
          t3.readMessage(r3, n2.MediaPipeOptions.deserializeBinaryFromReader), e3.setOptions(r3);
          break;
        case 1002:
          r3 = new a3.Any();
          t3.readMessage(r3, a3.Any.deserializeBinaryFromReader), e3.addGraphOptions(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.CalculatorGraphConfig.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.CalculatorGraphConfig.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.CalculatorGraphConfig.serializeBinaryToWriter = function(e3, t3) {
    var r3 = void 0;
    (r3 = e3.getNodeList()).length > 0 && t3.writeRepeatedMessage(1, r3, proto.mediapipe.CalculatorGraphConfig.Node.serializeBinaryToWriter), (r3 = e3.getPacketFactoryList()).length > 0 && t3.writeRepeatedMessage(6, r3, s2.PacketFactoryConfig.serializeBinaryToWriter), (r3 = e3.getPacketGeneratorList()).length > 0 && t3.writeRepeatedMessage(7, r3, p2.PacketGeneratorConfig.serializeBinaryToWriter), 0 !== (r3 = e3.getNumThreads()) && t3.writeInt32(8, r3), (r3 = e3.getStatusHandlerList()).length > 0 && t3.writeRepeatedMessage(9, r3, d2.StatusHandlerConfig.serializeBinaryToWriter), (r3 = e3.getInputStreamList()).length > 0 && t3.writeRepeatedString(10, r3), (r3 = e3.getOutputStreamList()).length > 0 && t3.writeRepeatedString(15, r3), (r3 = e3.getInputSidePacketList()).length > 0 && t3.writeRepeatedString(16, r3), (r3 = e3.getOutputSidePacketList()).length > 0 && t3.writeRepeatedString(17, r3), 0 !== (r3 = e3.getMaxQueueSize()) && t3.writeInt32(11, r3), (r3 = e3.getReportDeadlock()) && t3.writeBool(21, r3), null != (r3 = e3.getInputStreamHandler()) && t3.writeMessage(12, r3, l2.InputStreamHandlerConfig.serializeBinaryToWriter), null != (r3 = e3.getOutputStreamHandler()) && t3.writeMessage(13, r3, l2.OutputStreamHandlerConfig.serializeBinaryToWriter), (r3 = e3.getExecutorList()).length > 0 && t3.writeRepeatedMessage(14, r3, proto.mediapipe.ExecutorConfig.serializeBinaryToWriter), null != (r3 = e3.getProfilerConfig()) && t3.writeMessage(18, r3, proto.mediapipe.ProfilerConfig.serializeBinaryToWriter), (r3 = e3.getPackage()).length > 0 && t3.writeString(19, r3), (r3 = e3.getType()).length > 0 && t3.writeString(20, r3), null != (r3 = e3.getOptions()) && t3.writeMessage(1001, r3, n2.MediaPipeOptions.serializeBinaryToWriter), (r3 = e3.getGraphOptionsList()).length > 0 && t3.writeRepeatedMessage(1002, r3, a3.Any.serializeBinaryToWriter);
  }, proto.mediapipe.CalculatorGraphConfig.Node.repeatedFields_ = [3, 4, 5, 6, 8, 13, 17, 1005], t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.CalculatorGraphConfig.Node.prototype.toObject = function(e3) {
    return proto.mediapipe.CalculatorGraphConfig.Node.toObject(e3, this);
  }, proto.mediapipe.CalculatorGraphConfig.Node.toObject = function(e3, r3) {
    var o3, n3 = { name: t2.Message.getFieldWithDefault(r3, 1, ""), calculator: t2.Message.getFieldWithDefault(r3, 2, ""), inputStreamList: null == (o3 = t2.Message.getRepeatedField(r3, 3)) ? void 0 : o3, outputStreamList: null == (o3 = t2.Message.getRepeatedField(r3, 4)) ? void 0 : o3, inputSidePacketList: null == (o3 = t2.Message.getRepeatedField(r3, 5)) ? void 0 : o3, outputSidePacketList: null == (o3 = t2.Message.getRepeatedField(r3, 6)) ? void 0 : o3, options: (o3 = r3.getOptions()) && i3.CalculatorOptions.toObject(e3, o3), nodeOptionsList: t2.Message.toObjectList(r3.getNodeOptionsList(), a3.Any.toObject, e3), sourceLayer: t2.Message.getFieldWithDefault(r3, 9, 0), bufferSizeHint: t2.Message.getFieldWithDefault(r3, 10, 0), inputStreamHandler: (o3 = r3.getInputStreamHandler()) && l2.InputStreamHandlerConfig.toObject(e3, o3), outputStreamHandler: (o3 = r3.getOutputStreamHandler()) && l2.OutputStreamHandlerConfig.toObject(e3, o3), inputStreamInfoList: t2.Message.toObjectList(r3.getInputStreamInfoList(), proto.mediapipe.InputStreamInfo.toObject, e3), executor: t2.Message.getFieldWithDefault(r3, 14, ""), profilerConfig: (o3 = r3.getProfilerConfig()) && proto.mediapipe.ProfilerConfig.toObject(e3, o3), maxInFlight: t2.Message.getFieldWithDefault(r3, 16, 0), optionValueList: null == (o3 = t2.Message.getRepeatedField(r3, 17)) ? void 0 : o3, externalInputList: null == (o3 = t2.Message.getRepeatedField(r3, 1005)) ? void 0 : o3 };
    return e3 && (n3.$jspbMessageInstance = r3), n3;
  }), proto.mediapipe.CalculatorGraphConfig.Node.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.CalculatorGraphConfig.Node();
    return proto.mediapipe.CalculatorGraphConfig.Node.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.CalculatorGraphConfig.Node.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readString();
          e3.setName(r3);
          break;
        case 2:
          r3 = t3.readString();
          e3.setCalculator(r3);
          break;
        case 3:
          r3 = t3.readString();
          e3.addInputStream(r3);
          break;
        case 4:
          r3 = t3.readString();
          e3.addOutputStream(r3);
          break;
        case 5:
          r3 = t3.readString();
          e3.addInputSidePacket(r3);
          break;
        case 6:
          r3 = t3.readString();
          e3.addOutputSidePacket(r3);
          break;
        case 7:
          r3 = new i3.CalculatorOptions();
          t3.readMessage(r3, i3.CalculatorOptions.deserializeBinaryFromReader), e3.setOptions(r3);
          break;
        case 8:
          r3 = new a3.Any();
          t3.readMessage(r3, a3.Any.deserializeBinaryFromReader), e3.addNodeOptions(r3);
          break;
        case 9:
          r3 = t3.readInt32();
          e3.setSourceLayer(r3);
          break;
        case 10:
          r3 = t3.readInt32();
          e3.setBufferSizeHint(r3);
          break;
        case 11:
          r3 = new l2.InputStreamHandlerConfig();
          t3.readMessage(r3, l2.InputStreamHandlerConfig.deserializeBinaryFromReader), e3.setInputStreamHandler(r3);
          break;
        case 12:
          r3 = new l2.OutputStreamHandlerConfig();
          t3.readMessage(r3, l2.OutputStreamHandlerConfig.deserializeBinaryFromReader), e3.setOutputStreamHandler(r3);
          break;
        case 13:
          r3 = new proto.mediapipe.InputStreamInfo();
          t3.readMessage(r3, proto.mediapipe.InputStreamInfo.deserializeBinaryFromReader), e3.addInputStreamInfo(r3);
          break;
        case 14:
          r3 = t3.readString();
          e3.setExecutor(r3);
          break;
        case 15:
          r3 = new proto.mediapipe.ProfilerConfig();
          t3.readMessage(r3, proto.mediapipe.ProfilerConfig.deserializeBinaryFromReader), e3.setProfilerConfig(r3);
          break;
        case 16:
          r3 = t3.readInt32();
          e3.setMaxInFlight(r3);
          break;
        case 17:
          r3 = t3.readString();
          e3.addOptionValue(r3);
          break;
        case 1005:
          r3 = t3.readString();
          e3.addExternalInput(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.CalculatorGraphConfig.Node.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.CalculatorGraphConfig.Node.serializeBinaryToWriter = function(e3, t3) {
    var r3 = void 0;
    (r3 = e3.getName()).length > 0 && t3.writeString(1, r3), (r3 = e3.getCalculator()).length > 0 && t3.writeString(2, r3), (r3 = e3.getInputStreamList()).length > 0 && t3.writeRepeatedString(3, r3), (r3 = e3.getOutputStreamList()).length > 0 && t3.writeRepeatedString(4, r3), (r3 = e3.getInputSidePacketList()).length > 0 && t3.writeRepeatedString(5, r3), (r3 = e3.getOutputSidePacketList()).length > 0 && t3.writeRepeatedString(6, r3), null != (r3 = e3.getOptions()) && t3.writeMessage(7, r3, i3.CalculatorOptions.serializeBinaryToWriter), (r3 = e3.getNodeOptionsList()).length > 0 && t3.writeRepeatedMessage(8, r3, a3.Any.serializeBinaryToWriter), 0 !== (r3 = e3.getSourceLayer()) && t3.writeInt32(9, r3), 0 !== (r3 = e3.getBufferSizeHint()) && t3.writeInt32(10, r3), null != (r3 = e3.getInputStreamHandler()) && t3.writeMessage(11, r3, l2.InputStreamHandlerConfig.serializeBinaryToWriter), null != (r3 = e3.getOutputStreamHandler()) && t3.writeMessage(12, r3, l2.OutputStreamHandlerConfig.serializeBinaryToWriter), (r3 = e3.getInputStreamInfoList()).length > 0 && t3.writeRepeatedMessage(13, r3, proto.mediapipe.InputStreamInfo.serializeBinaryToWriter), (r3 = e3.getExecutor()).length > 0 && t3.writeString(14, r3), null != (r3 = e3.getProfilerConfig()) && t3.writeMessage(15, r3, proto.mediapipe.ProfilerConfig.serializeBinaryToWriter), 0 !== (r3 = e3.getMaxInFlight()) && t3.writeInt32(16, r3), (r3 = e3.getOptionValueList()).length > 0 && t3.writeRepeatedString(17, r3), (r3 = e3.getExternalInputList()).length > 0 && t3.writeRepeatedString(1005, r3);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.getName = function() {
    return t2.Message.getFieldWithDefault(this, 1, "");
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.setName = function(e3) {
    return t2.Message.setProto3StringField(this, 1, e3);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.getCalculator = function() {
    return t2.Message.getFieldWithDefault(this, 2, "");
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.setCalculator = function(e3) {
    return t2.Message.setProto3StringField(this, 2, e3);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.getInputStreamList = function() {
    return t2.Message.getRepeatedField(this, 3);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.setInputStreamList = function(e3) {
    return t2.Message.setField(this, 3, e3 || []);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.addInputStream = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 3, e3, r3);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.clearInputStreamList = function() {
    return this.setInputStreamList([]);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.getOutputStreamList = function() {
    return t2.Message.getRepeatedField(this, 4);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.setOutputStreamList = function(e3) {
    return t2.Message.setField(this, 4, e3 || []);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.addOutputStream = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 4, e3, r3);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.clearOutputStreamList = function() {
    return this.setOutputStreamList([]);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.getInputSidePacketList = function() {
    return t2.Message.getRepeatedField(this, 5);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.setInputSidePacketList = function(e3) {
    return t2.Message.setField(this, 5, e3 || []);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.addInputSidePacket = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 5, e3, r3);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.clearInputSidePacketList = function() {
    return this.setInputSidePacketList([]);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.getOutputSidePacketList = function() {
    return t2.Message.getRepeatedField(this, 6);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.setOutputSidePacketList = function(e3) {
    return t2.Message.setField(this, 6, e3 || []);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.addOutputSidePacket = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 6, e3, r3);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.clearOutputSidePacketList = function() {
    return this.setOutputSidePacketList([]);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.getOptions = function() {
    return t2.Message.getWrapperField(this, i3.CalculatorOptions, 7);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.setOptions = function(e3) {
    return t2.Message.setWrapperField(this, 7, e3);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.clearOptions = function() {
    return this.setOptions(void 0);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.hasOptions = function() {
    return null != t2.Message.getField(this, 7);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.getNodeOptionsList = function() {
    return t2.Message.getRepeatedWrapperField(this, a3.Any, 8);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.setNodeOptionsList = function(e3) {
    return t2.Message.setRepeatedWrapperField(this, 8, e3);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.addNodeOptions = function(e3, r3) {
    return t2.Message.addToRepeatedWrapperField(this, 8, e3, proto.google.protobuf.Any, r3);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.clearNodeOptionsList = function() {
    return this.setNodeOptionsList([]);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.getSourceLayer = function() {
    return t2.Message.getFieldWithDefault(this, 9, 0);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.setSourceLayer = function(e3) {
    return t2.Message.setProto3IntField(this, 9, e3);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.getBufferSizeHint = function() {
    return t2.Message.getFieldWithDefault(this, 10, 0);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.setBufferSizeHint = function(e3) {
    return t2.Message.setProto3IntField(this, 10, e3);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.getInputStreamHandler = function() {
    return t2.Message.getWrapperField(this, l2.InputStreamHandlerConfig, 11);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.setInputStreamHandler = function(e3) {
    return t2.Message.setWrapperField(this, 11, e3);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.clearInputStreamHandler = function() {
    return this.setInputStreamHandler(void 0);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.hasInputStreamHandler = function() {
    return null != t2.Message.getField(this, 11);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.getOutputStreamHandler = function() {
    return t2.Message.getWrapperField(this, l2.OutputStreamHandlerConfig, 12);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.setOutputStreamHandler = function(e3) {
    return t2.Message.setWrapperField(this, 12, e3);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.clearOutputStreamHandler = function() {
    return this.setOutputStreamHandler(void 0);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.hasOutputStreamHandler = function() {
    return null != t2.Message.getField(this, 12);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.getInputStreamInfoList = function() {
    return t2.Message.getRepeatedWrapperField(this, proto.mediapipe.InputStreamInfo, 13);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.setInputStreamInfoList = function(e3) {
    return t2.Message.setRepeatedWrapperField(this, 13, e3);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.addInputStreamInfo = function(e3, r3) {
    return t2.Message.addToRepeatedWrapperField(this, 13, e3, proto.mediapipe.InputStreamInfo, r3);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.clearInputStreamInfoList = function() {
    return this.setInputStreamInfoList([]);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.getExecutor = function() {
    return t2.Message.getFieldWithDefault(this, 14, "");
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.setExecutor = function(e3) {
    return t2.Message.setProto3StringField(this, 14, e3);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.getProfilerConfig = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.ProfilerConfig, 15);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.setProfilerConfig = function(e3) {
    return t2.Message.setWrapperField(this, 15, e3);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.clearProfilerConfig = function() {
    return this.setProfilerConfig(void 0);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.hasProfilerConfig = function() {
    return null != t2.Message.getField(this, 15);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.getMaxInFlight = function() {
    return t2.Message.getFieldWithDefault(this, 16, 0);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.setMaxInFlight = function(e3) {
    return t2.Message.setProto3IntField(this, 16, e3);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.getOptionValueList = function() {
    return t2.Message.getRepeatedField(this, 17);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.setOptionValueList = function(e3) {
    return t2.Message.setField(this, 17, e3 || []);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.addOptionValue = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 17, e3, r3);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.clearOptionValueList = function() {
    return this.setOptionValueList([]);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.getExternalInputList = function() {
    return t2.Message.getRepeatedField(this, 1005);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.setExternalInputList = function(e3) {
    return t2.Message.setField(this, 1005, e3 || []);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.addExternalInput = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 1005, e3, r3);
  }, proto.mediapipe.CalculatorGraphConfig.Node.prototype.clearExternalInputList = function() {
    return this.setExternalInputList([]);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.getNodeList = function() {
    return t2.Message.getRepeatedWrapperField(this, proto.mediapipe.CalculatorGraphConfig.Node, 1);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.setNodeList = function(e3) {
    return t2.Message.setRepeatedWrapperField(this, 1, e3);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.addNode = function(e3, r3) {
    return t2.Message.addToRepeatedWrapperField(this, 1, e3, proto.mediapipe.CalculatorGraphConfig.Node, r3);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.clearNodeList = function() {
    return this.setNodeList([]);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.getPacketFactoryList = function() {
    return t2.Message.getRepeatedWrapperField(this, s2.PacketFactoryConfig, 6);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.setPacketFactoryList = function(e3) {
    return t2.Message.setRepeatedWrapperField(this, 6, e3);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.addPacketFactory = function(e3, r3) {
    return t2.Message.addToRepeatedWrapperField(this, 6, e3, proto.mediapipe.PacketFactoryConfig, r3);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.clearPacketFactoryList = function() {
    return this.setPacketFactoryList([]);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.getPacketGeneratorList = function() {
    return t2.Message.getRepeatedWrapperField(this, p2.PacketGeneratorConfig, 7);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.setPacketGeneratorList = function(e3) {
    return t2.Message.setRepeatedWrapperField(this, 7, e3);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.addPacketGenerator = function(e3, r3) {
    return t2.Message.addToRepeatedWrapperField(this, 7, e3, proto.mediapipe.PacketGeneratorConfig, r3);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.clearPacketGeneratorList = function() {
    return this.setPacketGeneratorList([]);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.getNumThreads = function() {
    return t2.Message.getFieldWithDefault(this, 8, 0);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.setNumThreads = function(e3) {
    return t2.Message.setProto3IntField(this, 8, e3);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.getStatusHandlerList = function() {
    return t2.Message.getRepeatedWrapperField(this, d2.StatusHandlerConfig, 9);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.setStatusHandlerList = function(e3) {
    return t2.Message.setRepeatedWrapperField(this, 9, e3);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.addStatusHandler = function(e3, r3) {
    return t2.Message.addToRepeatedWrapperField(this, 9, e3, proto.mediapipe.StatusHandlerConfig, r3);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.clearStatusHandlerList = function() {
    return this.setStatusHandlerList([]);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.getInputStreamList = function() {
    return t2.Message.getRepeatedField(this, 10);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.setInputStreamList = function(e3) {
    return t2.Message.setField(this, 10, e3 || []);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.addInputStream = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 10, e3, r3);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.clearInputStreamList = function() {
    return this.setInputStreamList([]);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.getOutputStreamList = function() {
    return t2.Message.getRepeatedField(this, 15);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.setOutputStreamList = function(e3) {
    return t2.Message.setField(this, 15, e3 || []);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.addOutputStream = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 15, e3, r3);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.clearOutputStreamList = function() {
    return this.setOutputStreamList([]);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.getInputSidePacketList = function() {
    return t2.Message.getRepeatedField(this, 16);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.setInputSidePacketList = function(e3) {
    return t2.Message.setField(this, 16, e3 || []);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.addInputSidePacket = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 16, e3, r3);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.clearInputSidePacketList = function() {
    return this.setInputSidePacketList([]);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.getOutputSidePacketList = function() {
    return t2.Message.getRepeatedField(this, 17);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.setOutputSidePacketList = function(e3) {
    return t2.Message.setField(this, 17, e3 || []);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.addOutputSidePacket = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 17, e3, r3);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.clearOutputSidePacketList = function() {
    return this.setOutputSidePacketList([]);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.getMaxQueueSize = function() {
    return t2.Message.getFieldWithDefault(this, 11, 0);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.setMaxQueueSize = function(e3) {
    return t2.Message.setProto3IntField(this, 11, e3);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.getReportDeadlock = function() {
    return t2.Message.getBooleanFieldWithDefault(this, 21, false);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.setReportDeadlock = function(e3) {
    return t2.Message.setProto3BooleanField(this, 21, e3);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.getInputStreamHandler = function() {
    return t2.Message.getWrapperField(this, l2.InputStreamHandlerConfig, 12);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.setInputStreamHandler = function(e3) {
    return t2.Message.setWrapperField(this, 12, e3);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.clearInputStreamHandler = function() {
    return this.setInputStreamHandler(void 0);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.hasInputStreamHandler = function() {
    return null != t2.Message.getField(this, 12);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.getOutputStreamHandler = function() {
    return t2.Message.getWrapperField(this, l2.OutputStreamHandlerConfig, 13);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.setOutputStreamHandler = function(e3) {
    return t2.Message.setWrapperField(this, 13, e3);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.clearOutputStreamHandler = function() {
    return this.setOutputStreamHandler(void 0);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.hasOutputStreamHandler = function() {
    return null != t2.Message.getField(this, 13);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.getExecutorList = function() {
    return t2.Message.getRepeatedWrapperField(this, proto.mediapipe.ExecutorConfig, 14);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.setExecutorList = function(e3) {
    return t2.Message.setRepeatedWrapperField(this, 14, e3);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.addExecutor = function(e3, r3) {
    return t2.Message.addToRepeatedWrapperField(this, 14, e3, proto.mediapipe.ExecutorConfig, r3);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.clearExecutorList = function() {
    return this.setExecutorList([]);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.getProfilerConfig = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.ProfilerConfig, 18);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.setProfilerConfig = function(e3) {
    return t2.Message.setWrapperField(this, 18, e3);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.clearProfilerConfig = function() {
    return this.setProfilerConfig(void 0);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.hasProfilerConfig = function() {
    return null != t2.Message.getField(this, 18);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.getPackage = function() {
    return t2.Message.getFieldWithDefault(this, 19, "");
  }, proto.mediapipe.CalculatorGraphConfig.prototype.setPackage = function(e3) {
    return t2.Message.setProto3StringField(this, 19, e3);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.getType = function() {
    return t2.Message.getFieldWithDefault(this, 20, "");
  }, proto.mediapipe.CalculatorGraphConfig.prototype.setType = function(e3) {
    return t2.Message.setProto3StringField(this, 20, e3);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.getOptions = function() {
    return t2.Message.getWrapperField(this, n2.MediaPipeOptions, 1001);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.setOptions = function(e3) {
    return t2.Message.setWrapperField(this, 1001, e3);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.clearOptions = function() {
    return this.setOptions(void 0);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.hasOptions = function() {
    return null != t2.Message.getField(this, 1001);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.getGraphOptionsList = function() {
    return t2.Message.getRepeatedWrapperField(this, a3.Any, 1002);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.setGraphOptionsList = function(e3) {
    return t2.Message.setRepeatedWrapperField(this, 1002, e3);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.addGraphOptions = function(e3, r3) {
    return t2.Message.addToRepeatedWrapperField(this, 1002, e3, proto.google.protobuf.Any, r3);
  }, proto.mediapipe.CalculatorGraphConfig.prototype.clearGraphOptionsList = function() {
    return this.setGraphOptionsList([]);
  }, r2.object.extend(e2, proto.mediapipe);
}(calculator_pb);
var detection_pb = {};
var location_data_pb = {};
var rasterization_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")();
  r2.exportSymbol("proto.mediapipe.Rasterization", null, o2), r2.exportSymbol("proto.mediapipe.Rasterization.Interval", null, o2), proto.mediapipe.Rasterization = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, proto.mediapipe.Rasterization.repeatedFields_, null);
  }, r2.inherits(proto.mediapipe.Rasterization, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.Rasterization.displayName = "proto.mediapipe.Rasterization"), proto.mediapipe.Rasterization.Interval = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.Rasterization.Interval, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.Rasterization.Interval.displayName = "proto.mediapipe.Rasterization.Interval"), proto.mediapipe.Rasterization.repeatedFields_ = [1], t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.Rasterization.prototype.toObject = function(e3) {
    return proto.mediapipe.Rasterization.toObject(e3, this);
  }, proto.mediapipe.Rasterization.toObject = function(e3, r3) {
    var o3 = { intervalList: t2.Message.toObjectList(r3.getIntervalList(), proto.mediapipe.Rasterization.Interval.toObject, e3) };
    return e3 && (o3.$jspbMessageInstance = r3), o3;
  }), proto.mediapipe.Rasterization.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.Rasterization();
    return proto.mediapipe.Rasterization.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.Rasterization.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      if (1 === t3.getFieldNumber()) {
        var r3 = new proto.mediapipe.Rasterization.Interval();
        t3.readMessage(r3, proto.mediapipe.Rasterization.Interval.deserializeBinaryFromReader), e3.addInterval(r3);
      } else
        t3.skipField();
    }
    return e3;
  }, proto.mediapipe.Rasterization.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.Rasterization.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.Rasterization.serializeBinaryToWriter = function(e3, t3) {
    var r3;
    (r3 = e3.getIntervalList()).length > 0 && t3.writeRepeatedMessage(1, r3, proto.mediapipe.Rasterization.Interval.serializeBinaryToWriter);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.Rasterization.Interval.prototype.toObject = function(e3) {
    return proto.mediapipe.Rasterization.Interval.toObject(e3, this);
  }, proto.mediapipe.Rasterization.Interval.toObject = function(e3, r3) {
    var o3, i3 = { y: null == (o3 = t2.Message.getField(r3, 1)) ? void 0 : o3, leftX: null == (o3 = t2.Message.getField(r3, 2)) ? void 0 : o3, rightX: null == (o3 = t2.Message.getField(r3, 3)) ? void 0 : o3 };
    return e3 && (i3.$jspbMessageInstance = r3), i3;
  }), proto.mediapipe.Rasterization.Interval.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.Rasterization.Interval();
    return proto.mediapipe.Rasterization.Interval.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.Rasterization.Interval.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readInt32();
          e3.setY(r3);
          break;
        case 2:
          r3 = t3.readInt32();
          e3.setLeftX(r3);
          break;
        case 3:
          r3 = t3.readInt32();
          e3.setRightX(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.Rasterization.Interval.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.Rasterization.Interval.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.Rasterization.Interval.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeInt32(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeInt32(2, o3), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeInt32(3, o3);
  }, proto.mediapipe.Rasterization.Interval.prototype.getY = function() {
    return t2.Message.getFieldWithDefault(this, 1, 0);
  }, proto.mediapipe.Rasterization.Interval.prototype.setY = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.Rasterization.Interval.prototype.clearY = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.Rasterization.Interval.prototype.hasY = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.Rasterization.Interval.prototype.getLeftX = function() {
    return t2.Message.getFieldWithDefault(this, 2, 0);
  }, proto.mediapipe.Rasterization.Interval.prototype.setLeftX = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.Rasterization.Interval.prototype.clearLeftX = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.Rasterization.Interval.prototype.hasLeftX = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.Rasterization.Interval.prototype.getRightX = function() {
    return t2.Message.getFieldWithDefault(this, 3, 0);
  }, proto.mediapipe.Rasterization.Interval.prototype.setRightX = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.Rasterization.Interval.prototype.clearRightX = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.Rasterization.Interval.prototype.hasRightX = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.Rasterization.prototype.getIntervalList = function() {
    return t2.Message.getRepeatedWrapperField(this, proto.mediapipe.Rasterization.Interval, 1);
  }, proto.mediapipe.Rasterization.prototype.setIntervalList = function(e3) {
    return t2.Message.setRepeatedWrapperField(this, 1, e3);
  }, proto.mediapipe.Rasterization.prototype.addInterval = function(e3, r3) {
    return t2.Message.addToRepeatedWrapperField(this, 1, e3, proto.mediapipe.Rasterization.Interval, r3);
  }, proto.mediapipe.Rasterization.prototype.clearIntervalList = function() {
    return this.setIntervalList([]);
  }, r2.object.extend(e2, proto.mediapipe);
}(rasterization_pb), function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = rasterization_pb;
  r2.object.extend(proto, i3), r2.exportSymbol("proto.mediapipe.LocationData", null, o2), r2.exportSymbol("proto.mediapipe.LocationData.BinaryMask", null, o2), r2.exportSymbol("proto.mediapipe.LocationData.BoundingBox", null, o2), r2.exportSymbol("proto.mediapipe.LocationData.Format", null, o2), r2.exportSymbol("proto.mediapipe.LocationData.RelativeBoundingBox", null, o2), r2.exportSymbol("proto.mediapipe.LocationData.RelativeKeypoint", null, o2), proto.mediapipe.LocationData = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, proto.mediapipe.LocationData.repeatedFields_, null);
  }, r2.inherits(proto.mediapipe.LocationData, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.LocationData.displayName = "proto.mediapipe.LocationData"), proto.mediapipe.LocationData.BoundingBox = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.LocationData.BoundingBox, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.LocationData.BoundingBox.displayName = "proto.mediapipe.LocationData.BoundingBox"), proto.mediapipe.LocationData.RelativeBoundingBox = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.LocationData.RelativeBoundingBox, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.LocationData.RelativeBoundingBox.displayName = "proto.mediapipe.LocationData.RelativeBoundingBox"), proto.mediapipe.LocationData.BinaryMask = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.LocationData.BinaryMask, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.LocationData.BinaryMask.displayName = "proto.mediapipe.LocationData.BinaryMask"), proto.mediapipe.LocationData.RelativeKeypoint = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.LocationData.RelativeKeypoint, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.LocationData.RelativeKeypoint.displayName = "proto.mediapipe.LocationData.RelativeKeypoint"), proto.mediapipe.LocationData.repeatedFields_ = [5], t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.LocationData.prototype.toObject = function(e3) {
    return proto.mediapipe.LocationData.toObject(e3, this);
  }, proto.mediapipe.LocationData.toObject = function(e3, r3) {
    var o3, i4 = { format: null == (o3 = t2.Message.getField(r3, 1)) ? void 0 : o3, boundingBox: (o3 = r3.getBoundingBox()) && proto.mediapipe.LocationData.BoundingBox.toObject(e3, o3), relativeBoundingBox: (o3 = r3.getRelativeBoundingBox()) && proto.mediapipe.LocationData.RelativeBoundingBox.toObject(e3, o3), mask: (o3 = r3.getMask()) && proto.mediapipe.LocationData.BinaryMask.toObject(e3, o3), relativeKeypointsList: t2.Message.toObjectList(r3.getRelativeKeypointsList(), proto.mediapipe.LocationData.RelativeKeypoint.toObject, e3) };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.LocationData.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.LocationData();
    return proto.mediapipe.LocationData.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.LocationData.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readEnum();
          e3.setFormat(r3);
          break;
        case 2:
          r3 = new proto.mediapipe.LocationData.BoundingBox();
          t3.readMessage(r3, proto.mediapipe.LocationData.BoundingBox.deserializeBinaryFromReader), e3.setBoundingBox(r3);
          break;
        case 3:
          r3 = new proto.mediapipe.LocationData.RelativeBoundingBox();
          t3.readMessage(r3, proto.mediapipe.LocationData.RelativeBoundingBox.deserializeBinaryFromReader), e3.setRelativeBoundingBox(r3);
          break;
        case 4:
          r3 = new proto.mediapipe.LocationData.BinaryMask();
          t3.readMessage(r3, proto.mediapipe.LocationData.BinaryMask.deserializeBinaryFromReader), e3.setMask(r3);
          break;
        case 5:
          r3 = new proto.mediapipe.LocationData.RelativeKeypoint();
          t3.readMessage(r3, proto.mediapipe.LocationData.RelativeKeypoint.deserializeBinaryFromReader), e3.addRelativeKeypoints(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.LocationData.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.LocationData.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.LocationData.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeEnum(1, o3), null != (o3 = e3.getBoundingBox()) && r3.writeMessage(2, o3, proto.mediapipe.LocationData.BoundingBox.serializeBinaryToWriter), null != (o3 = e3.getRelativeBoundingBox()) && r3.writeMessage(3, o3, proto.mediapipe.LocationData.RelativeBoundingBox.serializeBinaryToWriter), null != (o3 = e3.getMask()) && r3.writeMessage(4, o3, proto.mediapipe.LocationData.BinaryMask.serializeBinaryToWriter), (o3 = e3.getRelativeKeypointsList()).length > 0 && r3.writeRepeatedMessage(5, o3, proto.mediapipe.LocationData.RelativeKeypoint.serializeBinaryToWriter);
  }, proto.mediapipe.LocationData.Format = { GLOBAL: 0, BOUNDING_BOX: 1, RELATIVE_BOUNDING_BOX: 2, MASK: 3 }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.LocationData.BoundingBox.prototype.toObject = function(e3) {
    return proto.mediapipe.LocationData.BoundingBox.toObject(e3, this);
  }, proto.mediapipe.LocationData.BoundingBox.toObject = function(e3, r3) {
    var o3, i4 = { xmin: null == (o3 = t2.Message.getField(r3, 1)) ? void 0 : o3, ymin: null == (o3 = t2.Message.getField(r3, 2)) ? void 0 : o3, width: null == (o3 = t2.Message.getField(r3, 3)) ? void 0 : o3, height: null == (o3 = t2.Message.getField(r3, 4)) ? void 0 : o3 };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.LocationData.BoundingBox.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.LocationData.BoundingBox();
    return proto.mediapipe.LocationData.BoundingBox.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.LocationData.BoundingBox.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readInt32();
          e3.setXmin(r3);
          break;
        case 2:
          r3 = t3.readInt32();
          e3.setYmin(r3);
          break;
        case 3:
          r3 = t3.readInt32();
          e3.setWidth(r3);
          break;
        case 4:
          r3 = t3.readInt32();
          e3.setHeight(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.LocationData.BoundingBox.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.LocationData.BoundingBox.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.LocationData.BoundingBox.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeInt32(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeInt32(2, o3), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeInt32(3, o3), null != (o3 = t2.Message.getField(e3, 4)) && r3.writeInt32(4, o3);
  }, proto.mediapipe.LocationData.BoundingBox.prototype.getXmin = function() {
    return t2.Message.getFieldWithDefault(this, 1, 0);
  }, proto.mediapipe.LocationData.BoundingBox.prototype.setXmin = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.LocationData.BoundingBox.prototype.clearXmin = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.LocationData.BoundingBox.prototype.hasXmin = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.LocationData.BoundingBox.prototype.getYmin = function() {
    return t2.Message.getFieldWithDefault(this, 2, 0);
  }, proto.mediapipe.LocationData.BoundingBox.prototype.setYmin = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.LocationData.BoundingBox.prototype.clearYmin = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.LocationData.BoundingBox.prototype.hasYmin = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.LocationData.BoundingBox.prototype.getWidth = function() {
    return t2.Message.getFieldWithDefault(this, 3, 0);
  }, proto.mediapipe.LocationData.BoundingBox.prototype.setWidth = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.LocationData.BoundingBox.prototype.clearWidth = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.LocationData.BoundingBox.prototype.hasWidth = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.LocationData.BoundingBox.prototype.getHeight = function() {
    return t2.Message.getFieldWithDefault(this, 4, 0);
  }, proto.mediapipe.LocationData.BoundingBox.prototype.setHeight = function(e3) {
    return t2.Message.setField(this, 4, e3);
  }, proto.mediapipe.LocationData.BoundingBox.prototype.clearHeight = function() {
    return t2.Message.setField(this, 4, void 0);
  }, proto.mediapipe.LocationData.BoundingBox.prototype.hasHeight = function() {
    return null != t2.Message.getField(this, 4);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.LocationData.RelativeBoundingBox.prototype.toObject = function(e3) {
    return proto.mediapipe.LocationData.RelativeBoundingBox.toObject(e3, this);
  }, proto.mediapipe.LocationData.RelativeBoundingBox.toObject = function(e3, r3) {
    var o3, i4 = { xmin: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 1)) ? void 0 : o3, ymin: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 2)) ? void 0 : o3, width: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 3)) ? void 0 : o3, height: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 4)) ? void 0 : o3 };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.LocationData.RelativeBoundingBox.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.LocationData.RelativeBoundingBox();
    return proto.mediapipe.LocationData.RelativeBoundingBox.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.LocationData.RelativeBoundingBox.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readFloat();
          e3.setXmin(r3);
          break;
        case 2:
          r3 = t3.readFloat();
          e3.setYmin(r3);
          break;
        case 3:
          r3 = t3.readFloat();
          e3.setWidth(r3);
          break;
        case 4:
          r3 = t3.readFloat();
          e3.setHeight(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.LocationData.RelativeBoundingBox.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.LocationData.RelativeBoundingBox.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.LocationData.RelativeBoundingBox.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeFloat(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeFloat(2, o3), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeFloat(3, o3), null != (o3 = t2.Message.getField(e3, 4)) && r3.writeFloat(4, o3);
  }, proto.mediapipe.LocationData.RelativeBoundingBox.prototype.getXmin = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 1, 0);
  }, proto.mediapipe.LocationData.RelativeBoundingBox.prototype.setXmin = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.LocationData.RelativeBoundingBox.prototype.clearXmin = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.LocationData.RelativeBoundingBox.prototype.hasXmin = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.LocationData.RelativeBoundingBox.prototype.getYmin = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 2, 0);
  }, proto.mediapipe.LocationData.RelativeBoundingBox.prototype.setYmin = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.LocationData.RelativeBoundingBox.prototype.clearYmin = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.LocationData.RelativeBoundingBox.prototype.hasYmin = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.LocationData.RelativeBoundingBox.prototype.getWidth = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 3, 0);
  }, proto.mediapipe.LocationData.RelativeBoundingBox.prototype.setWidth = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.LocationData.RelativeBoundingBox.prototype.clearWidth = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.LocationData.RelativeBoundingBox.prototype.hasWidth = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.LocationData.RelativeBoundingBox.prototype.getHeight = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 4, 0);
  }, proto.mediapipe.LocationData.RelativeBoundingBox.prototype.setHeight = function(e3) {
    return t2.Message.setField(this, 4, e3);
  }, proto.mediapipe.LocationData.RelativeBoundingBox.prototype.clearHeight = function() {
    return t2.Message.setField(this, 4, void 0);
  }, proto.mediapipe.LocationData.RelativeBoundingBox.prototype.hasHeight = function() {
    return null != t2.Message.getField(this, 4);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.LocationData.BinaryMask.prototype.toObject = function(e3) {
    return proto.mediapipe.LocationData.BinaryMask.toObject(e3, this);
  }, proto.mediapipe.LocationData.BinaryMask.toObject = function(e3, r3) {
    var o3, a3 = { width: null == (o3 = t2.Message.getField(r3, 1)) ? void 0 : o3, height: null == (o3 = t2.Message.getField(r3, 2)) ? void 0 : o3, rasterization: (o3 = r3.getRasterization()) && i3.Rasterization.toObject(e3, o3) };
    return e3 && (a3.$jspbMessageInstance = r3), a3;
  }), proto.mediapipe.LocationData.BinaryMask.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.LocationData.BinaryMask();
    return proto.mediapipe.LocationData.BinaryMask.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.LocationData.BinaryMask.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readInt32();
          e3.setWidth(r3);
          break;
        case 2:
          r3 = t3.readInt32();
          e3.setHeight(r3);
          break;
        case 3:
          r3 = new i3.Rasterization();
          t3.readMessage(r3, i3.Rasterization.deserializeBinaryFromReader), e3.setRasterization(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.LocationData.BinaryMask.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.LocationData.BinaryMask.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.LocationData.BinaryMask.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeInt32(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeInt32(2, o3), null != (o3 = e3.getRasterization()) && r3.writeMessage(3, o3, i3.Rasterization.serializeBinaryToWriter);
  }, proto.mediapipe.LocationData.BinaryMask.prototype.getWidth = function() {
    return t2.Message.getFieldWithDefault(this, 1, 0);
  }, proto.mediapipe.LocationData.BinaryMask.prototype.setWidth = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.LocationData.BinaryMask.prototype.clearWidth = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.LocationData.BinaryMask.prototype.hasWidth = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.LocationData.BinaryMask.prototype.getHeight = function() {
    return t2.Message.getFieldWithDefault(this, 2, 0);
  }, proto.mediapipe.LocationData.BinaryMask.prototype.setHeight = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.LocationData.BinaryMask.prototype.clearHeight = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.LocationData.BinaryMask.prototype.hasHeight = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.LocationData.BinaryMask.prototype.getRasterization = function() {
    return t2.Message.getWrapperField(this, i3.Rasterization, 3);
  }, proto.mediapipe.LocationData.BinaryMask.prototype.setRasterization = function(e3) {
    return t2.Message.setWrapperField(this, 3, e3);
  }, proto.mediapipe.LocationData.BinaryMask.prototype.clearRasterization = function() {
    return this.setRasterization(void 0);
  }, proto.mediapipe.LocationData.BinaryMask.prototype.hasRasterization = function() {
    return null != t2.Message.getField(this, 3);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.LocationData.RelativeKeypoint.prototype.toObject = function(e3) {
    return proto.mediapipe.LocationData.RelativeKeypoint.toObject(e3, this);
  }, proto.mediapipe.LocationData.RelativeKeypoint.toObject = function(e3, r3) {
    var o3, i4 = { x: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 1)) ? void 0 : o3, y: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 2)) ? void 0 : o3, keypointLabel: null == (o3 = t2.Message.getField(r3, 3)) ? void 0 : o3, score: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 4)) ? void 0 : o3 };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.LocationData.RelativeKeypoint.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.LocationData.RelativeKeypoint();
    return proto.mediapipe.LocationData.RelativeKeypoint.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.LocationData.RelativeKeypoint.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readFloat();
          e3.setX(r3);
          break;
        case 2:
          r3 = t3.readFloat();
          e3.setY(r3);
          break;
        case 3:
          r3 = t3.readString();
          e3.setKeypointLabel(r3);
          break;
        case 4:
          r3 = t3.readFloat();
          e3.setScore(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.LocationData.RelativeKeypoint.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.LocationData.RelativeKeypoint.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.LocationData.RelativeKeypoint.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeFloat(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeFloat(2, o3), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeString(3, o3), null != (o3 = t2.Message.getField(e3, 4)) && r3.writeFloat(4, o3);
  }, proto.mediapipe.LocationData.RelativeKeypoint.prototype.getX = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 1, 0);
  }, proto.mediapipe.LocationData.RelativeKeypoint.prototype.setX = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.LocationData.RelativeKeypoint.prototype.clearX = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.LocationData.RelativeKeypoint.prototype.hasX = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.LocationData.RelativeKeypoint.prototype.getY = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 2, 0);
  }, proto.mediapipe.LocationData.RelativeKeypoint.prototype.setY = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.LocationData.RelativeKeypoint.prototype.clearY = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.LocationData.RelativeKeypoint.prototype.hasY = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.LocationData.RelativeKeypoint.prototype.getKeypointLabel = function() {
    return t2.Message.getFieldWithDefault(this, 3, "");
  }, proto.mediapipe.LocationData.RelativeKeypoint.prototype.setKeypointLabel = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.LocationData.RelativeKeypoint.prototype.clearKeypointLabel = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.LocationData.RelativeKeypoint.prototype.hasKeypointLabel = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.LocationData.RelativeKeypoint.prototype.getScore = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 4, 0);
  }, proto.mediapipe.LocationData.RelativeKeypoint.prototype.setScore = function(e3) {
    return t2.Message.setField(this, 4, e3);
  }, proto.mediapipe.LocationData.RelativeKeypoint.prototype.clearScore = function() {
    return t2.Message.setField(this, 4, void 0);
  }, proto.mediapipe.LocationData.RelativeKeypoint.prototype.hasScore = function() {
    return null != t2.Message.getField(this, 4);
  }, proto.mediapipe.LocationData.prototype.getFormat = function() {
    return t2.Message.getFieldWithDefault(this, 1, 0);
  }, proto.mediapipe.LocationData.prototype.setFormat = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.LocationData.prototype.clearFormat = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.LocationData.prototype.hasFormat = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.LocationData.prototype.getBoundingBox = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.LocationData.BoundingBox, 2);
  }, proto.mediapipe.LocationData.prototype.setBoundingBox = function(e3) {
    return t2.Message.setWrapperField(this, 2, e3);
  }, proto.mediapipe.LocationData.prototype.clearBoundingBox = function() {
    return this.setBoundingBox(void 0);
  }, proto.mediapipe.LocationData.prototype.hasBoundingBox = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.LocationData.prototype.getRelativeBoundingBox = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.LocationData.RelativeBoundingBox, 3);
  }, proto.mediapipe.LocationData.prototype.setRelativeBoundingBox = function(e3) {
    return t2.Message.setWrapperField(this, 3, e3);
  }, proto.mediapipe.LocationData.prototype.clearRelativeBoundingBox = function() {
    return this.setRelativeBoundingBox(void 0);
  }, proto.mediapipe.LocationData.prototype.hasRelativeBoundingBox = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.LocationData.prototype.getMask = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.LocationData.BinaryMask, 4);
  }, proto.mediapipe.LocationData.prototype.setMask = function(e3) {
    return t2.Message.setWrapperField(this, 4, e3);
  }, proto.mediapipe.LocationData.prototype.clearMask = function() {
    return this.setMask(void 0);
  }, proto.mediapipe.LocationData.prototype.hasMask = function() {
    return null != t2.Message.getField(this, 4);
  }, proto.mediapipe.LocationData.prototype.getRelativeKeypointsList = function() {
    return t2.Message.getRepeatedWrapperField(this, proto.mediapipe.LocationData.RelativeKeypoint, 5);
  }, proto.mediapipe.LocationData.prototype.setRelativeKeypointsList = function(e3) {
    return t2.Message.setRepeatedWrapperField(this, 5, e3);
  }, proto.mediapipe.LocationData.prototype.addRelativeKeypoints = function(e3, r3) {
    return t2.Message.addToRepeatedWrapperField(this, 5, e3, proto.mediapipe.LocationData.RelativeKeypoint, r3);
  }, proto.mediapipe.LocationData.prototype.clearRelativeKeypointsList = function() {
    return this.setRelativeKeypointsList([]);
  }, r2.object.extend(e2, proto.mediapipe);
}(location_data_pb), function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = location_data_pb;
  r2.object.extend(proto, i3), r2.exportSymbol("proto.mediapipe.Detection", null, o2), r2.exportSymbol("proto.mediapipe.Detection.AssociatedDetection", null, o2), r2.exportSymbol("proto.mediapipe.DetectionList", null, o2), proto.mediapipe.Detection = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, proto.mediapipe.Detection.repeatedFields_, null);
  }, r2.inherits(proto.mediapipe.Detection, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.Detection.displayName = "proto.mediapipe.Detection"), proto.mediapipe.Detection.AssociatedDetection = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.Detection.AssociatedDetection, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.Detection.AssociatedDetection.displayName = "proto.mediapipe.Detection.AssociatedDetection"), proto.mediapipe.DetectionList = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, proto.mediapipe.DetectionList.repeatedFields_, null);
  }, r2.inherits(proto.mediapipe.DetectionList, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.DetectionList.displayName = "proto.mediapipe.DetectionList"), proto.mediapipe.Detection.repeatedFields_ = [1, 2, 3, 8, 9], t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.Detection.prototype.toObject = function(e3) {
    return proto.mediapipe.Detection.toObject(e3, this);
  }, proto.mediapipe.Detection.toObject = function(e3, r3) {
    var o3, a3 = { labelList: null == (o3 = t2.Message.getRepeatedField(r3, 1)) ? void 0 : o3, labelIdList: null == (o3 = t2.Message.getRepeatedField(r3, 2)) ? void 0 : o3, scoreList: null == (o3 = t2.Message.getRepeatedFloatingPointField(r3, 3)) ? void 0 : o3, locationData: (o3 = r3.getLocationData()) && i3.LocationData.toObject(e3, o3), featureTag: null == (o3 = t2.Message.getField(r3, 5)) ? void 0 : o3, trackId: null == (o3 = t2.Message.getField(r3, 6)) ? void 0 : o3, detectionId: null == (o3 = t2.Message.getField(r3, 7)) ? void 0 : o3, associatedDetectionsList: t2.Message.toObjectList(r3.getAssociatedDetectionsList(), proto.mediapipe.Detection.AssociatedDetection.toObject, e3), displayNameList: null == (o3 = t2.Message.getRepeatedField(r3, 9)) ? void 0 : o3, timestampUsec: null == (o3 = t2.Message.getField(r3, 10)) ? void 0 : o3 };
    return e3 && (a3.$jspbMessageInstance = r3), a3;
  }), proto.mediapipe.Detection.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.Detection();
    return proto.mediapipe.Detection.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.Detection.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readString();
          e3.addLabel(r3);
          break;
        case 2:
          for (var o3 = t3.isDelimited() ? t3.readPackedInt32() : [t3.readInt32()], a3 = 0; a3 < o3.length; a3++)
            e3.addLabelId(o3[a3]);
          break;
        case 3:
          for (o3 = t3.isDelimited() ? t3.readPackedFloat() : [t3.readFloat()], a3 = 0; a3 < o3.length; a3++)
            e3.addScore(o3[a3]);
          break;
        case 4:
          r3 = new i3.LocationData();
          t3.readMessage(r3, i3.LocationData.deserializeBinaryFromReader), e3.setLocationData(r3);
          break;
        case 5:
          r3 = t3.readString();
          e3.setFeatureTag(r3);
          break;
        case 6:
          r3 = t3.readString();
          e3.setTrackId(r3);
          break;
        case 7:
          r3 = t3.readInt64();
          e3.setDetectionId(r3);
          break;
        case 8:
          r3 = new proto.mediapipe.Detection.AssociatedDetection();
          t3.readMessage(r3, proto.mediapipe.Detection.AssociatedDetection.deserializeBinaryFromReader), e3.addAssociatedDetections(r3);
          break;
        case 9:
          r3 = t3.readString();
          e3.addDisplayName(r3);
          break;
        case 10:
          r3 = t3.readInt64();
          e3.setTimestampUsec(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.Detection.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.Detection.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.Detection.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    (o3 = e3.getLabelList()).length > 0 && r3.writeRepeatedString(1, o3), (o3 = e3.getLabelIdList()).length > 0 && r3.writePackedInt32(2, o3), (o3 = e3.getScoreList()).length > 0 && r3.writePackedFloat(3, o3), null != (o3 = e3.getLocationData()) && r3.writeMessage(4, o3, i3.LocationData.serializeBinaryToWriter), null != (o3 = t2.Message.getField(e3, 5)) && r3.writeString(5, o3), null != (o3 = t2.Message.getField(e3, 6)) && r3.writeString(6, o3), null != (o3 = t2.Message.getField(e3, 7)) && r3.writeInt64(7, o3), (o3 = e3.getAssociatedDetectionsList()).length > 0 && r3.writeRepeatedMessage(8, o3, proto.mediapipe.Detection.AssociatedDetection.serializeBinaryToWriter), (o3 = e3.getDisplayNameList()).length > 0 && r3.writeRepeatedString(9, o3), null != (o3 = t2.Message.getField(e3, 10)) && r3.writeInt64(10, o3);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.Detection.AssociatedDetection.prototype.toObject = function(e3) {
    return proto.mediapipe.Detection.AssociatedDetection.toObject(e3, this);
  }, proto.mediapipe.Detection.AssociatedDetection.toObject = function(e3, r3) {
    var o3, i4 = { id: null == (o3 = t2.Message.getField(r3, 1)) ? void 0 : o3, confidence: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 2)) ? void 0 : o3 };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.Detection.AssociatedDetection.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.Detection.AssociatedDetection();
    return proto.mediapipe.Detection.AssociatedDetection.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.Detection.AssociatedDetection.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readInt32();
          e3.setId(r3);
          break;
        case 2:
          r3 = t3.readFloat();
          e3.setConfidence(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.Detection.AssociatedDetection.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.Detection.AssociatedDetection.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.Detection.AssociatedDetection.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeInt32(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeFloat(2, o3);
  }, proto.mediapipe.Detection.AssociatedDetection.prototype.getId = function() {
    return t2.Message.getFieldWithDefault(this, 1, 0);
  }, proto.mediapipe.Detection.AssociatedDetection.prototype.setId = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.Detection.AssociatedDetection.prototype.clearId = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.Detection.AssociatedDetection.prototype.hasId = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.Detection.AssociatedDetection.prototype.getConfidence = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 2, 0);
  }, proto.mediapipe.Detection.AssociatedDetection.prototype.setConfidence = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.Detection.AssociatedDetection.prototype.clearConfidence = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.Detection.AssociatedDetection.prototype.hasConfidence = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.Detection.prototype.getLabelList = function() {
    return t2.Message.getRepeatedField(this, 1);
  }, proto.mediapipe.Detection.prototype.setLabelList = function(e3) {
    return t2.Message.setField(this, 1, e3 || []);
  }, proto.mediapipe.Detection.prototype.addLabel = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 1, e3, r3);
  }, proto.mediapipe.Detection.prototype.clearLabelList = function() {
    return this.setLabelList([]);
  }, proto.mediapipe.Detection.prototype.getLabelIdList = function() {
    return t2.Message.getRepeatedField(this, 2);
  }, proto.mediapipe.Detection.prototype.setLabelIdList = function(e3) {
    return t2.Message.setField(this, 2, e3 || []);
  }, proto.mediapipe.Detection.prototype.addLabelId = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 2, e3, r3);
  }, proto.mediapipe.Detection.prototype.clearLabelIdList = function() {
    return this.setLabelIdList([]);
  }, proto.mediapipe.Detection.prototype.getScoreList = function() {
    return t2.Message.getRepeatedFloatingPointField(this, 3);
  }, proto.mediapipe.Detection.prototype.setScoreList = function(e3) {
    return t2.Message.setField(this, 3, e3 || []);
  }, proto.mediapipe.Detection.prototype.addScore = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 3, e3, r3);
  }, proto.mediapipe.Detection.prototype.clearScoreList = function() {
    return this.setScoreList([]);
  }, proto.mediapipe.Detection.prototype.getLocationData = function() {
    return t2.Message.getWrapperField(this, i3.LocationData, 4);
  }, proto.mediapipe.Detection.prototype.setLocationData = function(e3) {
    return t2.Message.setWrapperField(this, 4, e3);
  }, proto.mediapipe.Detection.prototype.clearLocationData = function() {
    return this.setLocationData(void 0);
  }, proto.mediapipe.Detection.prototype.hasLocationData = function() {
    return null != t2.Message.getField(this, 4);
  }, proto.mediapipe.Detection.prototype.getFeatureTag = function() {
    return t2.Message.getFieldWithDefault(this, 5, "");
  }, proto.mediapipe.Detection.prototype.setFeatureTag = function(e3) {
    return t2.Message.setField(this, 5, e3);
  }, proto.mediapipe.Detection.prototype.clearFeatureTag = function() {
    return t2.Message.setField(this, 5, void 0);
  }, proto.mediapipe.Detection.prototype.hasFeatureTag = function() {
    return null != t2.Message.getField(this, 5);
  }, proto.mediapipe.Detection.prototype.getTrackId = function() {
    return t2.Message.getFieldWithDefault(this, 6, "");
  }, proto.mediapipe.Detection.prototype.setTrackId = function(e3) {
    return t2.Message.setField(this, 6, e3);
  }, proto.mediapipe.Detection.prototype.clearTrackId = function() {
    return t2.Message.setField(this, 6, void 0);
  }, proto.mediapipe.Detection.prototype.hasTrackId = function() {
    return null != t2.Message.getField(this, 6);
  }, proto.mediapipe.Detection.prototype.getDetectionId = function() {
    return t2.Message.getFieldWithDefault(this, 7, 0);
  }, proto.mediapipe.Detection.prototype.setDetectionId = function(e3) {
    return t2.Message.setField(this, 7, e3);
  }, proto.mediapipe.Detection.prototype.clearDetectionId = function() {
    return t2.Message.setField(this, 7, void 0);
  }, proto.mediapipe.Detection.prototype.hasDetectionId = function() {
    return null != t2.Message.getField(this, 7);
  }, proto.mediapipe.Detection.prototype.getAssociatedDetectionsList = function() {
    return t2.Message.getRepeatedWrapperField(this, proto.mediapipe.Detection.AssociatedDetection, 8);
  }, proto.mediapipe.Detection.prototype.setAssociatedDetectionsList = function(e3) {
    return t2.Message.setRepeatedWrapperField(this, 8, e3);
  }, proto.mediapipe.Detection.prototype.addAssociatedDetections = function(e3, r3) {
    return t2.Message.addToRepeatedWrapperField(this, 8, e3, proto.mediapipe.Detection.AssociatedDetection, r3);
  }, proto.mediapipe.Detection.prototype.clearAssociatedDetectionsList = function() {
    return this.setAssociatedDetectionsList([]);
  }, proto.mediapipe.Detection.prototype.getDisplayNameList = function() {
    return t2.Message.getRepeatedField(this, 9);
  }, proto.mediapipe.Detection.prototype.setDisplayNameList = function(e3) {
    return t2.Message.setField(this, 9, e3 || []);
  }, proto.mediapipe.Detection.prototype.addDisplayName = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 9, e3, r3);
  }, proto.mediapipe.Detection.prototype.clearDisplayNameList = function() {
    return this.setDisplayNameList([]);
  }, proto.mediapipe.Detection.prototype.getTimestampUsec = function() {
    return t2.Message.getFieldWithDefault(this, 10, 0);
  }, proto.mediapipe.Detection.prototype.setTimestampUsec = function(e3) {
    return t2.Message.setField(this, 10, e3);
  }, proto.mediapipe.Detection.prototype.clearTimestampUsec = function() {
    return t2.Message.setField(this, 10, void 0);
  }, proto.mediapipe.Detection.prototype.hasTimestampUsec = function() {
    return null != t2.Message.getField(this, 10);
  }, proto.mediapipe.DetectionList.repeatedFields_ = [1], t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.DetectionList.prototype.toObject = function(e3) {
    return proto.mediapipe.DetectionList.toObject(e3, this);
  }, proto.mediapipe.DetectionList.toObject = function(e3, r3) {
    var o3 = { detectionList: t2.Message.toObjectList(r3.getDetectionList(), proto.mediapipe.Detection.toObject, e3) };
    return e3 && (o3.$jspbMessageInstance = r3), o3;
  }), proto.mediapipe.DetectionList.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.DetectionList();
    return proto.mediapipe.DetectionList.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.DetectionList.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      if (1 === t3.getFieldNumber()) {
        var r3 = new proto.mediapipe.Detection();
        t3.readMessage(r3, proto.mediapipe.Detection.deserializeBinaryFromReader), e3.addDetection(r3);
      } else
        t3.skipField();
    }
    return e3;
  }, proto.mediapipe.DetectionList.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.DetectionList.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.DetectionList.serializeBinaryToWriter = function(e3, t3) {
    var r3;
    (r3 = e3.getDetectionList()).length > 0 && t3.writeRepeatedMessage(1, r3, proto.mediapipe.Detection.serializeBinaryToWriter);
  }, proto.mediapipe.DetectionList.prototype.getDetectionList = function() {
    return t2.Message.getRepeatedWrapperField(this, proto.mediapipe.Detection, 1);
  }, proto.mediapipe.DetectionList.prototype.setDetectionList = function(e3) {
    return t2.Message.setRepeatedWrapperField(this, 1, e3);
  }, proto.mediapipe.DetectionList.prototype.addDetection = function(e3, r3) {
    return t2.Message.addToRepeatedWrapperField(this, 1, e3, proto.mediapipe.Detection, r3);
  }, proto.mediapipe.DetectionList.prototype.clearDetectionList = function() {
    return this.setDetectionList([]);
  }, r2.object.extend(e2, proto.mediapipe);
}(detection_pb);
var base_options_pb = {};
var acceleration_pb = {};
var inference_calculator_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = calculator_pb;
  r2.object.extend(proto, i3);
  var a3 = calculator_options_pb;
  r2.object.extend(proto, a3), r2.exportSymbol("proto.mediapipe.InferenceCalculatorOptions", null, o2), r2.exportSymbol("proto.mediapipe.InferenceCalculatorOptions.Delegate", null, o2), r2.exportSymbol("proto.mediapipe.InferenceCalculatorOptions.Delegate.DelegateCase", null, o2), r2.exportSymbol("proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu", null, o2), r2.exportSymbol("proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.Api", null, o2), r2.exportSymbol("proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.InferenceUsage", null, o2), r2.exportSymbol("proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi", null, o2), r2.exportSymbol("proto.mediapipe.InferenceCalculatorOptions.Delegate.TfLite", null, o2), r2.exportSymbol("proto.mediapipe.InferenceCalculatorOptions.Delegate.Xnnpack", null, o2), proto.mediapipe.InferenceCalculatorOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.InferenceCalculatorOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.InferenceCalculatorOptions.displayName = "proto.mediapipe.InferenceCalculatorOptions"), proto.mediapipe.InferenceCalculatorOptions.Delegate = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, proto.mediapipe.InferenceCalculatorOptions.Delegate.oneofGroups_);
  }, r2.inherits(proto.mediapipe.InferenceCalculatorOptions.Delegate, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.InferenceCalculatorOptions.Delegate.displayName = "proto.mediapipe.InferenceCalculatorOptions.Delegate"), proto.mediapipe.InferenceCalculatorOptions.Delegate.TfLite = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.InferenceCalculatorOptions.Delegate.TfLite, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.InferenceCalculatorOptions.Delegate.TfLite.displayName = "proto.mediapipe.InferenceCalculatorOptions.Delegate.TfLite"), proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.displayName = "proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu"), proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi.displayName = "proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi"), proto.mediapipe.InferenceCalculatorOptions.Delegate.Xnnpack = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.InferenceCalculatorOptions.Delegate.Xnnpack, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.InferenceCalculatorOptions.Delegate.Xnnpack.displayName = "proto.mediapipe.InferenceCalculatorOptions.Delegate.Xnnpack"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.InferenceCalculatorOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.InferenceCalculatorOptions.toObject(e3, this);
  }, proto.mediapipe.InferenceCalculatorOptions.toObject = function(e3, r3) {
    var o3, i4 = { modelPath: null == (o3 = t2.Message.getField(r3, 1)) ? void 0 : o3, useGpu: t2.Message.getBooleanFieldWithDefault(r3, 2, false), useNnapi: t2.Message.getBooleanFieldWithDefault(r3, 3, false), cpuNumThread: t2.Message.getFieldWithDefault(r3, 4, -1), delegate: (o3 = r3.getDelegate()) && proto.mediapipe.InferenceCalculatorOptions.Delegate.toObject(e3, o3) };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.InferenceCalculatorOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.InferenceCalculatorOptions();
    return proto.mediapipe.InferenceCalculatorOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.InferenceCalculatorOptions.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readString();
          e3.setModelPath(r3);
          break;
        case 2:
          r3 = t3.readBool();
          e3.setUseGpu(r3);
          break;
        case 3:
          r3 = t3.readBool();
          e3.setUseNnapi(r3);
          break;
        case 4:
          r3 = t3.readInt32();
          e3.setCpuNumThread(r3);
          break;
        case 5:
          r3 = new proto.mediapipe.InferenceCalculatorOptions.Delegate();
          t3.readMessage(r3, proto.mediapipe.InferenceCalculatorOptions.Delegate.deserializeBinaryFromReader), e3.setDelegate(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.InferenceCalculatorOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.InferenceCalculatorOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.InferenceCalculatorOptions.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeString(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeBool(2, o3), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeBool(3, o3), null != (o3 = t2.Message.getField(e3, 4)) && r3.writeInt32(4, o3), null != (o3 = e3.getDelegate()) && r3.writeMessage(5, o3, proto.mediapipe.InferenceCalculatorOptions.Delegate.serializeBinaryToWriter);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.oneofGroups_ = [[1, 2, 3, 4]], proto.mediapipe.InferenceCalculatorOptions.Delegate.DelegateCase = { DELEGATE_NOT_SET: 0, TFLITE: 1, GPU: 2, NNAPI: 3, XNNPACK: 4 }, proto.mediapipe.InferenceCalculatorOptions.Delegate.prototype.getDelegateCase = function() {
    return t2.Message.computeOneofCase(this, proto.mediapipe.InferenceCalculatorOptions.Delegate.oneofGroups_[0]);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.InferenceCalculatorOptions.Delegate.prototype.toObject = function(e3) {
    return proto.mediapipe.InferenceCalculatorOptions.Delegate.toObject(e3, this);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.toObject = function(e3, t3) {
    var r3, o3 = { tflite: (r3 = t3.getTflite()) && proto.mediapipe.InferenceCalculatorOptions.Delegate.TfLite.toObject(e3, r3), gpu: (r3 = t3.getGpu()) && proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.toObject(e3, r3), nnapi: (r3 = t3.getNnapi()) && proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi.toObject(e3, r3), xnnpack: (r3 = t3.getXnnpack()) && proto.mediapipe.InferenceCalculatorOptions.Delegate.Xnnpack.toObject(e3, r3) };
    return e3 && (o3.$jspbMessageInstance = t3), o3;
  }), proto.mediapipe.InferenceCalculatorOptions.Delegate.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.InferenceCalculatorOptions.Delegate();
    return proto.mediapipe.InferenceCalculatorOptions.Delegate.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new proto.mediapipe.InferenceCalculatorOptions.Delegate.TfLite();
          t3.readMessage(r3, proto.mediapipe.InferenceCalculatorOptions.Delegate.TfLite.deserializeBinaryFromReader), e3.setTflite(r3);
          break;
        case 2:
          r3 = new proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu();
          t3.readMessage(r3, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.deserializeBinaryFromReader), e3.setGpu(r3);
          break;
        case 3:
          r3 = new proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi();
          t3.readMessage(r3, proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi.deserializeBinaryFromReader), e3.setNnapi(r3);
          break;
        case 4:
          r3 = new proto.mediapipe.InferenceCalculatorOptions.Delegate.Xnnpack();
          t3.readMessage(r3, proto.mediapipe.InferenceCalculatorOptions.Delegate.Xnnpack.deserializeBinaryFromReader), e3.setXnnpack(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.InferenceCalculatorOptions.Delegate.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.serializeBinaryToWriter = function(e3, t3) {
    var r3 = void 0;
    null != (r3 = e3.getTflite()) && t3.writeMessage(1, r3, proto.mediapipe.InferenceCalculatorOptions.Delegate.TfLite.serializeBinaryToWriter), null != (r3 = e3.getGpu()) && t3.writeMessage(2, r3, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.serializeBinaryToWriter), null != (r3 = e3.getNnapi()) && t3.writeMessage(3, r3, proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi.serializeBinaryToWriter), null != (r3 = e3.getXnnpack()) && t3.writeMessage(4, r3, proto.mediapipe.InferenceCalculatorOptions.Delegate.Xnnpack.serializeBinaryToWriter);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.InferenceCalculatorOptions.Delegate.TfLite.prototype.toObject = function(e3) {
    return proto.mediapipe.InferenceCalculatorOptions.Delegate.TfLite.toObject(e3, this);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.TfLite.toObject = function(e3, t3) {
    var r3 = {};
    return e3 && (r3.$jspbMessageInstance = t3), r3;
  }), proto.mediapipe.InferenceCalculatorOptions.Delegate.TfLite.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.InferenceCalculatorOptions.Delegate.TfLite();
    return proto.mediapipe.InferenceCalculatorOptions.Delegate.TfLite.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.TfLite.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      t3.getFieldNumber();
      t3.skipField();
    }
    return e3;
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.TfLite.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.InferenceCalculatorOptions.Delegate.TfLite.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.TfLite.serializeBinaryToWriter = function(e3, t3) {
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.toObject = function(e3) {
    return proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.toObject(e3, this);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.toObject = function(e3, r3) {
    var o3, i4 = { useAdvancedGpuApi: t2.Message.getBooleanFieldWithDefault(r3, 1, false), api: t2.Message.getFieldWithDefault(r3, 4, 0), allowPrecisionLoss: t2.Message.getBooleanFieldWithDefault(r3, 3, true), cachedKernelPath: null == (o3 = t2.Message.getField(r3, 2)) ? void 0 : o3, serializedModelDir: null == (o3 = t2.Message.getField(r3, 7)) ? void 0 : o3, modelToken: null == (o3 = t2.Message.getField(r3, 8)) ? void 0 : o3, usage: t2.Message.getFieldWithDefault(r3, 5, 2) };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu();
    return proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readBool();
          e3.setUseAdvancedGpuApi(r3);
          break;
        case 4:
          r3 = t3.readEnum();
          e3.setApi(r3);
          break;
        case 3:
          r3 = t3.readBool();
          e3.setAllowPrecisionLoss(r3);
          break;
        case 2:
          r3 = t3.readString();
          e3.setCachedKernelPath(r3);
          break;
        case 7:
          r3 = t3.readString();
          e3.setSerializedModelDir(r3);
          break;
        case 8:
          r3 = t3.readString();
          e3.setModelToken(r3);
          break;
        case 5:
          r3 = t3.readEnum();
          e3.setUsage(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeBool(1, o3), null != (o3 = t2.Message.getField(e3, 4)) && r3.writeEnum(4, o3), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeBool(3, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeString(2, o3), null != (o3 = t2.Message.getField(e3, 7)) && r3.writeString(7, o3), null != (o3 = t2.Message.getField(e3, 8)) && r3.writeString(8, o3), null != (o3 = t2.Message.getField(e3, 5)) && r3.writeEnum(5, o3);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.Api = { ANY: 0, OPENGL: 1, OPENCL: 2 }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.InferenceUsage = { UNSPECIFIED: 0, FAST_SINGLE_ANSWER: 1, SUSTAINED_SPEED: 2 }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.getUseAdvancedGpuApi = function() {
    return t2.Message.getBooleanFieldWithDefault(this, 1, false);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.setUseAdvancedGpuApi = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.clearUseAdvancedGpuApi = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.hasUseAdvancedGpuApi = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.getApi = function() {
    return t2.Message.getFieldWithDefault(this, 4, 0);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.setApi = function(e3) {
    return t2.Message.setField(this, 4, e3);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.clearApi = function() {
    return t2.Message.setField(this, 4, void 0);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.hasApi = function() {
    return null != t2.Message.getField(this, 4);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.getAllowPrecisionLoss = function() {
    return t2.Message.getBooleanFieldWithDefault(this, 3, true);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.setAllowPrecisionLoss = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.clearAllowPrecisionLoss = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.hasAllowPrecisionLoss = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.getCachedKernelPath = function() {
    return t2.Message.getFieldWithDefault(this, 2, "");
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.setCachedKernelPath = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.clearCachedKernelPath = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.hasCachedKernelPath = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.getSerializedModelDir = function() {
    return t2.Message.getFieldWithDefault(this, 7, "");
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.setSerializedModelDir = function(e3) {
    return t2.Message.setField(this, 7, e3);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.clearSerializedModelDir = function() {
    return t2.Message.setField(this, 7, void 0);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.hasSerializedModelDir = function() {
    return null != t2.Message.getField(this, 7);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.getModelToken = function() {
    return t2.Message.getFieldWithDefault(this, 8, "");
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.setModelToken = function(e3) {
    return t2.Message.setField(this, 8, e3);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.clearModelToken = function() {
    return t2.Message.setField(this, 8, void 0);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.hasModelToken = function() {
    return null != t2.Message.getField(this, 8);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.getUsage = function() {
    return t2.Message.getFieldWithDefault(this, 5, 2);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.setUsage = function(e3) {
    return t2.Message.setField(this, 5, e3);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.clearUsage = function() {
    return t2.Message.setField(this, 5, void 0);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu.prototype.hasUsage = function() {
    return null != t2.Message.getField(this, 5);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi.prototype.toObject = function(e3) {
    return proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi.toObject(e3, this);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi.toObject = function(e3, r3) {
    var o3, i4 = { cacheDir: null == (o3 = t2.Message.getField(r3, 1)) ? void 0 : o3, modelToken: null == (o3 = t2.Message.getField(r3, 2)) ? void 0 : o3, acceleratorName: null == (o3 = t2.Message.getField(r3, 3)) ? void 0 : o3 };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi();
    return proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readString();
          e3.setCacheDir(r3);
          break;
        case 2:
          r3 = t3.readString();
          e3.setModelToken(r3);
          break;
        case 3:
          r3 = t3.readString();
          e3.setAcceleratorName(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeString(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeString(2, o3), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeString(3, o3);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi.prototype.getCacheDir = function() {
    return t2.Message.getFieldWithDefault(this, 1, "");
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi.prototype.setCacheDir = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi.prototype.clearCacheDir = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi.prototype.hasCacheDir = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi.prototype.getModelToken = function() {
    return t2.Message.getFieldWithDefault(this, 2, "");
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi.prototype.setModelToken = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi.prototype.clearModelToken = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi.prototype.hasModelToken = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi.prototype.getAcceleratorName = function() {
    return t2.Message.getFieldWithDefault(this, 3, "");
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi.prototype.setAcceleratorName = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi.prototype.clearAcceleratorName = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi.prototype.hasAcceleratorName = function() {
    return null != t2.Message.getField(this, 3);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.InferenceCalculatorOptions.Delegate.Xnnpack.prototype.toObject = function(e3) {
    return proto.mediapipe.InferenceCalculatorOptions.Delegate.Xnnpack.toObject(e3, this);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Xnnpack.toObject = function(e3, r3) {
    var o3 = { numThreads: t2.Message.getFieldWithDefault(r3, 1, -1) };
    return e3 && (o3.$jspbMessageInstance = r3), o3;
  }), proto.mediapipe.InferenceCalculatorOptions.Delegate.Xnnpack.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.InferenceCalculatorOptions.Delegate.Xnnpack();
    return proto.mediapipe.InferenceCalculatorOptions.Delegate.Xnnpack.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Xnnpack.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      if (1 === t3.getFieldNumber()) {
        var r3 = t3.readInt32();
        e3.setNumThreads(r3);
      } else
        t3.skipField();
    }
    return e3;
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Xnnpack.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.InferenceCalculatorOptions.Delegate.Xnnpack.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Xnnpack.serializeBinaryToWriter = function(e3, r3) {
    var o3;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeInt32(1, o3);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Xnnpack.prototype.getNumThreads = function() {
    return t2.Message.getFieldWithDefault(this, 1, -1);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Xnnpack.prototype.setNumThreads = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Xnnpack.prototype.clearNumThreads = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.Xnnpack.prototype.hasNumThreads = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.prototype.getTflite = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.InferenceCalculatorOptions.Delegate.TfLite, 1);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.prototype.setTflite = function(e3) {
    return t2.Message.setOneofWrapperField(this, 1, proto.mediapipe.InferenceCalculatorOptions.Delegate.oneofGroups_[0], e3);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.prototype.clearTflite = function() {
    return this.setTflite(void 0);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.prototype.hasTflite = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.prototype.getGpu = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.InferenceCalculatorOptions.Delegate.Gpu, 2);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.prototype.setGpu = function(e3) {
    return t2.Message.setOneofWrapperField(this, 2, proto.mediapipe.InferenceCalculatorOptions.Delegate.oneofGroups_[0], e3);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.prototype.clearGpu = function() {
    return this.setGpu(void 0);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.prototype.hasGpu = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.prototype.getNnapi = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.InferenceCalculatorOptions.Delegate.Nnapi, 3);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.prototype.setNnapi = function(e3) {
    return t2.Message.setOneofWrapperField(this, 3, proto.mediapipe.InferenceCalculatorOptions.Delegate.oneofGroups_[0], e3);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.prototype.clearNnapi = function() {
    return this.setNnapi(void 0);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.prototype.hasNnapi = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.prototype.getXnnpack = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.InferenceCalculatorOptions.Delegate.Xnnpack, 4);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.prototype.setXnnpack = function(e3) {
    return t2.Message.setOneofWrapperField(this, 4, proto.mediapipe.InferenceCalculatorOptions.Delegate.oneofGroups_[0], e3);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.prototype.clearXnnpack = function() {
    return this.setXnnpack(void 0);
  }, proto.mediapipe.InferenceCalculatorOptions.Delegate.prototype.hasXnnpack = function() {
    return null != t2.Message.getField(this, 4);
  }, proto.mediapipe.InferenceCalculatorOptions.ext = new t2.ExtensionFieldInfo(336783863, { ext: 0 }, proto.mediapipe.InferenceCalculatorOptions, proto.mediapipe.InferenceCalculatorOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[336783863] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.InferenceCalculatorOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.InferenceCalculatorOptions.serializeBinaryToWriter, proto.mediapipe.InferenceCalculatorOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[336783863] = proto.mediapipe.InferenceCalculatorOptions.ext, proto.mediapipe.InferenceCalculatorOptions.prototype.getModelPath = function() {
    return t2.Message.getFieldWithDefault(this, 1, "");
  }, proto.mediapipe.InferenceCalculatorOptions.prototype.setModelPath = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.InferenceCalculatorOptions.prototype.clearModelPath = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.InferenceCalculatorOptions.prototype.hasModelPath = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.InferenceCalculatorOptions.prototype.getUseGpu = function() {
    return t2.Message.getBooleanFieldWithDefault(this, 2, false);
  }, proto.mediapipe.InferenceCalculatorOptions.prototype.setUseGpu = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.InferenceCalculatorOptions.prototype.clearUseGpu = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.InferenceCalculatorOptions.prototype.hasUseGpu = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.InferenceCalculatorOptions.prototype.getUseNnapi = function() {
    return t2.Message.getBooleanFieldWithDefault(this, 3, false);
  }, proto.mediapipe.InferenceCalculatorOptions.prototype.setUseNnapi = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.InferenceCalculatorOptions.prototype.clearUseNnapi = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.InferenceCalculatorOptions.prototype.hasUseNnapi = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.InferenceCalculatorOptions.prototype.getCpuNumThread = function() {
    return t2.Message.getFieldWithDefault(this, 4, -1);
  }, proto.mediapipe.InferenceCalculatorOptions.prototype.setCpuNumThread = function(e3) {
    return t2.Message.setField(this, 4, e3);
  }, proto.mediapipe.InferenceCalculatorOptions.prototype.clearCpuNumThread = function() {
    return t2.Message.setField(this, 4, void 0);
  }, proto.mediapipe.InferenceCalculatorOptions.prototype.hasCpuNumThread = function() {
    return null != t2.Message.getField(this, 4);
  }, proto.mediapipe.InferenceCalculatorOptions.prototype.getDelegate = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.InferenceCalculatorOptions.Delegate, 5);
  }, proto.mediapipe.InferenceCalculatorOptions.prototype.setDelegate = function(e3) {
    return t2.Message.setWrapperField(this, 5, e3);
  }, proto.mediapipe.InferenceCalculatorOptions.prototype.clearDelegate = function() {
    return this.setDelegate(void 0);
  }, proto.mediapipe.InferenceCalculatorOptions.prototype.hasDelegate = function() {
    return null != t2.Message.getField(this, 5);
  }, proto.mediapipe.InferenceCalculatorOptions.ext = new t2.ExtensionFieldInfo(336783863, { ext: 0 }, proto.mediapipe.InferenceCalculatorOptions, proto.mediapipe.InferenceCalculatorOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[336783863] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.InferenceCalculatorOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.InferenceCalculatorOptions.serializeBinaryToWriter, proto.mediapipe.InferenceCalculatorOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[336783863] = proto.mediapipe.InferenceCalculatorOptions.ext, r2.object.extend(e2, proto.mediapipe);
}(inference_calculator_pb), function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = inference_calculator_pb;
  r2.object.extend(proto, i3), r2.exportSymbol("proto.mediapipe.tasks.core.proto.Acceleration", null, o2), r2.exportSymbol("proto.mediapipe.tasks.core.proto.Acceleration.DelegateCase", null, o2), proto.mediapipe.tasks.core.proto.Acceleration = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, proto.mediapipe.tasks.core.proto.Acceleration.oneofGroups_);
  }, r2.inherits(proto.mediapipe.tasks.core.proto.Acceleration, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.core.proto.Acceleration.displayName = "proto.mediapipe.tasks.core.proto.Acceleration"), proto.mediapipe.tasks.core.proto.Acceleration.oneofGroups_ = [[1, 2, 4, 5]], proto.mediapipe.tasks.core.proto.Acceleration.DelegateCase = { DELEGATE_NOT_SET: 0, XNNPACK: 1, GPU: 2, TFLITE: 4, NNAPI: 5 }, proto.mediapipe.tasks.core.proto.Acceleration.prototype.getDelegateCase = function() {
    return t2.Message.computeOneofCase(this, proto.mediapipe.tasks.core.proto.Acceleration.oneofGroups_[0]);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.core.proto.Acceleration.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.core.proto.Acceleration.toObject(e3, this);
  }, proto.mediapipe.tasks.core.proto.Acceleration.toObject = function(e3, t3) {
    var r3, o3 = { xnnpack: (r3 = t3.getXnnpack()) && i3.InferenceCalculatorOptions.Delegate.Xnnpack.toObject(e3, r3), gpu: (r3 = t3.getGpu()) && i3.InferenceCalculatorOptions.Delegate.Gpu.toObject(e3, r3), tflite: (r3 = t3.getTflite()) && i3.InferenceCalculatorOptions.Delegate.TfLite.toObject(e3, r3), nnapi: (r3 = t3.getNnapi()) && i3.InferenceCalculatorOptions.Delegate.Nnapi.toObject(e3, r3) };
    return e3 && (o3.$jspbMessageInstance = t3), o3;
  }), proto.mediapipe.tasks.core.proto.Acceleration.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.core.proto.Acceleration();
    return proto.mediapipe.tasks.core.proto.Acceleration.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.core.proto.Acceleration.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new i3.InferenceCalculatorOptions.Delegate.Xnnpack();
          t3.readMessage(r3, i3.InferenceCalculatorOptions.Delegate.Xnnpack.deserializeBinaryFromReader), e3.setXnnpack(r3);
          break;
        case 2:
          r3 = new i3.InferenceCalculatorOptions.Delegate.Gpu();
          t3.readMessage(r3, i3.InferenceCalculatorOptions.Delegate.Gpu.deserializeBinaryFromReader), e3.setGpu(r3);
          break;
        case 4:
          r3 = new i3.InferenceCalculatorOptions.Delegate.TfLite();
          t3.readMessage(r3, i3.InferenceCalculatorOptions.Delegate.TfLite.deserializeBinaryFromReader), e3.setTflite(r3);
          break;
        case 5:
          r3 = new i3.InferenceCalculatorOptions.Delegate.Nnapi();
          t3.readMessage(r3, i3.InferenceCalculatorOptions.Delegate.Nnapi.deserializeBinaryFromReader), e3.setNnapi(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.core.proto.Acceleration.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.core.proto.Acceleration.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.core.proto.Acceleration.serializeBinaryToWriter = function(e3, t3) {
    var r3 = void 0;
    null != (r3 = e3.getXnnpack()) && t3.writeMessage(1, r3, i3.InferenceCalculatorOptions.Delegate.Xnnpack.serializeBinaryToWriter), null != (r3 = e3.getGpu()) && t3.writeMessage(2, r3, i3.InferenceCalculatorOptions.Delegate.Gpu.serializeBinaryToWriter), null != (r3 = e3.getTflite()) && t3.writeMessage(4, r3, i3.InferenceCalculatorOptions.Delegate.TfLite.serializeBinaryToWriter), null != (r3 = e3.getNnapi()) && t3.writeMessage(5, r3, i3.InferenceCalculatorOptions.Delegate.Nnapi.serializeBinaryToWriter);
  }, proto.mediapipe.tasks.core.proto.Acceleration.prototype.getXnnpack = function() {
    return t2.Message.getWrapperField(this, i3.InferenceCalculatorOptions.Delegate.Xnnpack, 1);
  }, proto.mediapipe.tasks.core.proto.Acceleration.prototype.setXnnpack = function(e3) {
    return t2.Message.setOneofWrapperField(this, 1, proto.mediapipe.tasks.core.proto.Acceleration.oneofGroups_[0], e3);
  }, proto.mediapipe.tasks.core.proto.Acceleration.prototype.clearXnnpack = function() {
    return this.setXnnpack(void 0);
  }, proto.mediapipe.tasks.core.proto.Acceleration.prototype.hasXnnpack = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.core.proto.Acceleration.prototype.getGpu = function() {
    return t2.Message.getWrapperField(this, i3.InferenceCalculatorOptions.Delegate.Gpu, 2);
  }, proto.mediapipe.tasks.core.proto.Acceleration.prototype.setGpu = function(e3) {
    return t2.Message.setOneofWrapperField(this, 2, proto.mediapipe.tasks.core.proto.Acceleration.oneofGroups_[0], e3);
  }, proto.mediapipe.tasks.core.proto.Acceleration.prototype.clearGpu = function() {
    return this.setGpu(void 0);
  }, proto.mediapipe.tasks.core.proto.Acceleration.prototype.hasGpu = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.tasks.core.proto.Acceleration.prototype.getTflite = function() {
    return t2.Message.getWrapperField(this, i3.InferenceCalculatorOptions.Delegate.TfLite, 4);
  }, proto.mediapipe.tasks.core.proto.Acceleration.prototype.setTflite = function(e3) {
    return t2.Message.setOneofWrapperField(this, 4, proto.mediapipe.tasks.core.proto.Acceleration.oneofGroups_[0], e3);
  }, proto.mediapipe.tasks.core.proto.Acceleration.prototype.clearTflite = function() {
    return this.setTflite(void 0);
  }, proto.mediapipe.tasks.core.proto.Acceleration.prototype.hasTflite = function() {
    return null != t2.Message.getField(this, 4);
  }, proto.mediapipe.tasks.core.proto.Acceleration.prototype.getNnapi = function() {
    return t2.Message.getWrapperField(this, i3.InferenceCalculatorOptions.Delegate.Nnapi, 5);
  }, proto.mediapipe.tasks.core.proto.Acceleration.prototype.setNnapi = function(e3) {
    return t2.Message.setOneofWrapperField(this, 5, proto.mediapipe.tasks.core.proto.Acceleration.oneofGroups_[0], e3);
  }, proto.mediapipe.tasks.core.proto.Acceleration.prototype.clearNnapi = function() {
    return this.setNnapi(void 0);
  }, proto.mediapipe.tasks.core.proto.Acceleration.prototype.hasNnapi = function() {
    return null != t2.Message.getField(this, 5);
  }, r2.object.extend(e2, proto.mediapipe.tasks.core.proto);
}(acceleration_pb);
var external_file_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")();
  r2.exportSymbol("proto.mediapipe.tasks.core.proto.ExternalFile", null, o2), r2.exportSymbol("proto.mediapipe.tasks.core.proto.FileDescriptorMeta", null, o2), r2.exportSymbol("proto.mediapipe.tasks.core.proto.FilePointerMeta", null, o2), proto.mediapipe.tasks.core.proto.ExternalFile = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.core.proto.ExternalFile, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.core.proto.ExternalFile.displayName = "proto.mediapipe.tasks.core.proto.ExternalFile"), proto.mediapipe.tasks.core.proto.FileDescriptorMeta = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.core.proto.FileDescriptorMeta, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.core.proto.FileDescriptorMeta.displayName = "proto.mediapipe.tasks.core.proto.FileDescriptorMeta"), proto.mediapipe.tasks.core.proto.FilePointerMeta = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.core.proto.FilePointerMeta, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.core.proto.FilePointerMeta.displayName = "proto.mediapipe.tasks.core.proto.FilePointerMeta"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.core.proto.ExternalFile.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.core.proto.ExternalFile.toObject(e3, this);
  }, proto.mediapipe.tasks.core.proto.ExternalFile.toObject = function(e3, r3) {
    var o3, i3 = { fileContent: r3.getFileContent_asB64(), fileName: null == (o3 = t2.Message.getField(r3, 2)) ? void 0 : o3, fileDescriptorMeta: (o3 = r3.getFileDescriptorMeta()) && proto.mediapipe.tasks.core.proto.FileDescriptorMeta.toObject(e3, o3), filePointerMeta: (o3 = r3.getFilePointerMeta()) && proto.mediapipe.tasks.core.proto.FilePointerMeta.toObject(e3, o3) };
    return e3 && (i3.$jspbMessageInstance = r3), i3;
  }), proto.mediapipe.tasks.core.proto.ExternalFile.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.core.proto.ExternalFile();
    return proto.mediapipe.tasks.core.proto.ExternalFile.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.core.proto.ExternalFile.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readBytes();
          e3.setFileContent(r3);
          break;
        case 2:
          r3 = t3.readString();
          e3.setFileName(r3);
          break;
        case 3:
          r3 = new proto.mediapipe.tasks.core.proto.FileDescriptorMeta();
          t3.readMessage(r3, proto.mediapipe.tasks.core.proto.FileDescriptorMeta.deserializeBinaryFromReader), e3.setFileDescriptorMeta(r3);
          break;
        case 4:
          r3 = new proto.mediapipe.tasks.core.proto.FilePointerMeta();
          t3.readMessage(r3, proto.mediapipe.tasks.core.proto.FilePointerMeta.deserializeBinaryFromReader), e3.setFilePointerMeta(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.core.proto.ExternalFile.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.core.proto.ExternalFile.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.core.proto.ExternalFile.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeBytes(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeString(2, o3), null != (o3 = e3.getFileDescriptorMeta()) && r3.writeMessage(3, o3, proto.mediapipe.tasks.core.proto.FileDescriptorMeta.serializeBinaryToWriter), null != (o3 = e3.getFilePointerMeta()) && r3.writeMessage(4, o3, proto.mediapipe.tasks.core.proto.FilePointerMeta.serializeBinaryToWriter);
  }, proto.mediapipe.tasks.core.proto.ExternalFile.prototype.getFileContent = function() {
    return t2.Message.getFieldWithDefault(this, 1, "");
  }, proto.mediapipe.tasks.core.proto.ExternalFile.prototype.getFileContent_asB64 = function() {
    return t2.Message.bytesAsB64(this.getFileContent());
  }, proto.mediapipe.tasks.core.proto.ExternalFile.prototype.getFileContent_asU8 = function() {
    return t2.Message.bytesAsU8(this.getFileContent());
  }, proto.mediapipe.tasks.core.proto.ExternalFile.prototype.setFileContent = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.tasks.core.proto.ExternalFile.prototype.clearFileContent = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.tasks.core.proto.ExternalFile.prototype.hasFileContent = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.core.proto.ExternalFile.prototype.getFileName = function() {
    return t2.Message.getFieldWithDefault(this, 2, "");
  }, proto.mediapipe.tasks.core.proto.ExternalFile.prototype.setFileName = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.tasks.core.proto.ExternalFile.prototype.clearFileName = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.tasks.core.proto.ExternalFile.prototype.hasFileName = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.tasks.core.proto.ExternalFile.prototype.getFileDescriptorMeta = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.tasks.core.proto.FileDescriptorMeta, 3);
  }, proto.mediapipe.tasks.core.proto.ExternalFile.prototype.setFileDescriptorMeta = function(e3) {
    return t2.Message.setWrapperField(this, 3, e3);
  }, proto.mediapipe.tasks.core.proto.ExternalFile.prototype.clearFileDescriptorMeta = function() {
    return this.setFileDescriptorMeta(void 0);
  }, proto.mediapipe.tasks.core.proto.ExternalFile.prototype.hasFileDescriptorMeta = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.tasks.core.proto.ExternalFile.prototype.getFilePointerMeta = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.tasks.core.proto.FilePointerMeta, 4);
  }, proto.mediapipe.tasks.core.proto.ExternalFile.prototype.setFilePointerMeta = function(e3) {
    return t2.Message.setWrapperField(this, 4, e3);
  }, proto.mediapipe.tasks.core.proto.ExternalFile.prototype.clearFilePointerMeta = function() {
    return this.setFilePointerMeta(void 0);
  }, proto.mediapipe.tasks.core.proto.ExternalFile.prototype.hasFilePointerMeta = function() {
    return null != t2.Message.getField(this, 4);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.core.proto.FileDescriptorMeta.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.core.proto.FileDescriptorMeta.toObject(e3, this);
  }, proto.mediapipe.tasks.core.proto.FileDescriptorMeta.toObject = function(e3, r3) {
    var o3, i3 = { fd: null == (o3 = t2.Message.getField(r3, 1)) ? void 0 : o3, length: null == (o3 = t2.Message.getField(r3, 2)) ? void 0 : o3, offset: null == (o3 = t2.Message.getField(r3, 3)) ? void 0 : o3 };
    return e3 && (i3.$jspbMessageInstance = r3), i3;
  }), proto.mediapipe.tasks.core.proto.FileDescriptorMeta.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.core.proto.FileDescriptorMeta();
    return proto.mediapipe.tasks.core.proto.FileDescriptorMeta.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.core.proto.FileDescriptorMeta.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readInt32();
          e3.setFd(r3);
          break;
        case 2:
          r3 = t3.readInt64();
          e3.setLength(r3);
          break;
        case 3:
          r3 = t3.readInt64();
          e3.setOffset(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.core.proto.FileDescriptorMeta.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.core.proto.FileDescriptorMeta.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.core.proto.FileDescriptorMeta.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeInt32(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeInt64(2, o3), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeInt64(3, o3);
  }, proto.mediapipe.tasks.core.proto.FileDescriptorMeta.prototype.getFd = function() {
    return t2.Message.getFieldWithDefault(this, 1, 0);
  }, proto.mediapipe.tasks.core.proto.FileDescriptorMeta.prototype.setFd = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.tasks.core.proto.FileDescriptorMeta.prototype.clearFd = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.tasks.core.proto.FileDescriptorMeta.prototype.hasFd = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.core.proto.FileDescriptorMeta.prototype.getLength = function() {
    return t2.Message.getFieldWithDefault(this, 2, 0);
  }, proto.mediapipe.tasks.core.proto.FileDescriptorMeta.prototype.setLength = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.tasks.core.proto.FileDescriptorMeta.prototype.clearLength = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.tasks.core.proto.FileDescriptorMeta.prototype.hasLength = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.tasks.core.proto.FileDescriptorMeta.prototype.getOffset = function() {
    return t2.Message.getFieldWithDefault(this, 3, 0);
  }, proto.mediapipe.tasks.core.proto.FileDescriptorMeta.prototype.setOffset = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.tasks.core.proto.FileDescriptorMeta.prototype.clearOffset = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.tasks.core.proto.FileDescriptorMeta.prototype.hasOffset = function() {
    return null != t2.Message.getField(this, 3);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.core.proto.FilePointerMeta.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.core.proto.FilePointerMeta.toObject(e3, this);
  }, proto.mediapipe.tasks.core.proto.FilePointerMeta.toObject = function(e3, r3) {
    var o3, i3 = { pointer: null == (o3 = t2.Message.getField(r3, 1)) ? void 0 : o3, length: null == (o3 = t2.Message.getField(r3, 2)) ? void 0 : o3 };
    return e3 && (i3.$jspbMessageInstance = r3), i3;
  }), proto.mediapipe.tasks.core.proto.FilePointerMeta.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.core.proto.FilePointerMeta();
    return proto.mediapipe.tasks.core.proto.FilePointerMeta.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.core.proto.FilePointerMeta.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readUint64();
          e3.setPointer(r3);
          break;
        case 2:
          r3 = t3.readInt64();
          e3.setLength(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.core.proto.FilePointerMeta.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.core.proto.FilePointerMeta.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.core.proto.FilePointerMeta.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeUint64(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeInt64(2, o3);
  }, proto.mediapipe.tasks.core.proto.FilePointerMeta.prototype.getPointer = function() {
    return t2.Message.getFieldWithDefault(this, 1, 0);
  }, proto.mediapipe.tasks.core.proto.FilePointerMeta.prototype.setPointer = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.tasks.core.proto.FilePointerMeta.prototype.clearPointer = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.tasks.core.proto.FilePointerMeta.prototype.hasPointer = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.core.proto.FilePointerMeta.prototype.getLength = function() {
    return t2.Message.getFieldWithDefault(this, 2, 0);
  }, proto.mediapipe.tasks.core.proto.FilePointerMeta.prototype.setLength = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.tasks.core.proto.FilePointerMeta.prototype.clearLength = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.tasks.core.proto.FilePointerMeta.prototype.hasLength = function() {
    return null != t2.Message.getField(this, 2);
  }, r2.object.extend(e2, proto.mediapipe.tasks.core.proto);
}(external_file_pb), function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = acceleration_pb;
  r2.object.extend(proto, i3);
  var a3 = external_file_pb;
  r2.object.extend(proto, a3), r2.exportSymbol("proto.mediapipe.tasks.core.proto.BaseOptions", null, o2), proto.mediapipe.tasks.core.proto.BaseOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.core.proto.BaseOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.core.proto.BaseOptions.displayName = "proto.mediapipe.tasks.core.proto.BaseOptions"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.core.proto.BaseOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.core.proto.BaseOptions.toObject(e3, this);
  }, proto.mediapipe.tasks.core.proto.BaseOptions.toObject = function(e3, r3) {
    var o3, n2 = { modelAsset: (o3 = r3.getModelAsset()) && a3.ExternalFile.toObject(e3, o3), useStreamMode: t2.Message.getBooleanFieldWithDefault(r3, 2, false), acceleration: (o3 = r3.getAcceleration()) && i3.Acceleration.toObject(e3, o3) };
    return e3 && (n2.$jspbMessageInstance = r3), n2;
  }), proto.mediapipe.tasks.core.proto.BaseOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.core.proto.BaseOptions();
    return proto.mediapipe.tasks.core.proto.BaseOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.core.proto.BaseOptions.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new a3.ExternalFile();
          t3.readMessage(r3, a3.ExternalFile.deserializeBinaryFromReader), e3.setModelAsset(r3);
          break;
        case 2:
          r3 = t3.readBool();
          e3.setUseStreamMode(r3);
          break;
        case 3:
          r3 = new i3.Acceleration();
          t3.readMessage(r3, i3.Acceleration.deserializeBinaryFromReader), e3.setAcceleration(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.core.proto.BaseOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.core.proto.BaseOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.core.proto.BaseOptions.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = e3.getModelAsset()) && r3.writeMessage(1, o3, a3.ExternalFile.serializeBinaryToWriter), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeBool(2, o3), null != (o3 = e3.getAcceleration()) && r3.writeMessage(3, o3, i3.Acceleration.serializeBinaryToWriter);
  }, proto.mediapipe.tasks.core.proto.BaseOptions.prototype.getModelAsset = function() {
    return t2.Message.getWrapperField(this, a3.ExternalFile, 1);
  }, proto.mediapipe.tasks.core.proto.BaseOptions.prototype.setModelAsset = function(e3) {
    return t2.Message.setWrapperField(this, 1, e3);
  }, proto.mediapipe.tasks.core.proto.BaseOptions.prototype.clearModelAsset = function() {
    return this.setModelAsset(void 0);
  }, proto.mediapipe.tasks.core.proto.BaseOptions.prototype.hasModelAsset = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.core.proto.BaseOptions.prototype.getUseStreamMode = function() {
    return t2.Message.getBooleanFieldWithDefault(this, 2, false);
  }, proto.mediapipe.tasks.core.proto.BaseOptions.prototype.setUseStreamMode = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.tasks.core.proto.BaseOptions.prototype.clearUseStreamMode = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.tasks.core.proto.BaseOptions.prototype.hasUseStreamMode = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.tasks.core.proto.BaseOptions.prototype.getAcceleration = function() {
    return t2.Message.getWrapperField(this, i3.Acceleration, 3);
  }, proto.mediapipe.tasks.core.proto.BaseOptions.prototype.setAcceleration = function(e3) {
    return t2.Message.setWrapperField(this, 3, e3);
  }, proto.mediapipe.tasks.core.proto.BaseOptions.prototype.clearAcceleration = function() {
    return this.setAcceleration(void 0);
  }, proto.mediapipe.tasks.core.proto.BaseOptions.prototype.hasAcceleration = function() {
    return null != t2.Message.getField(this, 3);
  }, r2.object.extend(e2, proto.mediapipe.tasks.core.proto);
}(base_options_pb);
var face_detector_graph_options_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = calculator_pb;
  r2.object.extend(proto, i3);
  var a3 = calculator_options_pb;
  r2.object.extend(proto, a3);
  var n2 = base_options_pb;
  r2.object.extend(proto, n2), r2.exportSymbol("proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions", null, o2), proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.displayName = "proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.toObject(e3, this);
  }, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.toObject = function(e3, r3) {
    var o3, i4 = { baseOptions: (o3 = r3.getBaseOptions()) && n2.BaseOptions.toObject(e3, o3), minDetectionConfidence: t2.Message.getFloatingPointFieldWithDefault(r3, 2, 0.5), minSuppressionThreshold: t2.Message.getFloatingPointFieldWithDefault(r3, 3, 0.5), numFaces: null == (o3 = t2.Message.getField(r3, 4)) ? void 0 : o3 };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions();
    return proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new n2.BaseOptions();
          t3.readMessage(r3, n2.BaseOptions.deserializeBinaryFromReader), e3.setBaseOptions(r3);
          break;
        case 2:
          r3 = t3.readFloat();
          e3.setMinDetectionConfidence(r3);
          break;
        case 3:
          r3 = t3.readFloat();
          e3.setMinSuppressionThreshold(r3);
          break;
        case 4:
          r3 = t3.readInt32();
          e3.setNumFaces(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = e3.getBaseOptions()) && r3.writeMessage(1, o3, n2.BaseOptions.serializeBinaryToWriter), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeFloat(2, o3), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeFloat(3, o3), null != (o3 = t2.Message.getField(e3, 4)) && r3.writeInt32(4, o3);
  }, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.ext = new t2.ExtensionFieldInfo(502141897, { ext: 0 }, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[502141897] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[502141897] = proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.ext, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.prototype.getBaseOptions = function() {
    return t2.Message.getWrapperField(this, n2.BaseOptions, 1);
  }, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.prototype.setBaseOptions = function(e3) {
    return t2.Message.setWrapperField(this, 1, e3);
  }, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.prototype.clearBaseOptions = function() {
    return this.setBaseOptions(void 0);
  }, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.prototype.hasBaseOptions = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.prototype.getMinDetectionConfidence = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 2, 0.5);
  }, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.prototype.setMinDetectionConfidence = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.prototype.clearMinDetectionConfidence = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.prototype.hasMinDetectionConfidence = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.prototype.getMinSuppressionThreshold = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 3, 0.5);
  }, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.prototype.setMinSuppressionThreshold = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.prototype.clearMinSuppressionThreshold = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.prototype.hasMinSuppressionThreshold = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.prototype.getNumFaces = function() {
    return t2.Message.getFieldWithDefault(this, 4, 0);
  }, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.prototype.setNumFaces = function(e3) {
    return t2.Message.setField(this, 4, e3);
  }, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.prototype.clearNumFaces = function() {
    return t2.Message.setField(this, 4, void 0);
  }, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.prototype.hasNumFaces = function() {
    return null != t2.Message.getField(this, 4);
  }, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.ext = new t2.ExtensionFieldInfo(502141897, { ext: 0 }, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[502141897] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[502141897] = proto.mediapipe.tasks.vision.face_detector.proto.FaceDetectorGraphOptions.ext, r2.object.extend(e2, proto.mediapipe.tasks.vision.face_detector.proto);
}(face_detector_graph_options_pb);
var detection_result = {};
Object.defineProperty(detection_result, "__esModule", { value: true }), detection_result.convertFromDetectionProto = void 0;
var DEFAULT_CATEGORY_INDEX = -1;
function convertFromDetectionProto(e2) {
  var t2, r2, o2, i3, a3, n2, s2, p2, d2, l2, g2, c2, u2;
  const m2 = e2.getScoreList(), f3 = e2.getLabelIdList(), h2 = e2.getLabelList(), y2 = e2.getDisplayNameList(), b2 = { categories: [], keypoints: [] };
  for (let e3 = 0; e3 < m2.length; e3++)
    b2.categories.push({ score: m2[e3], index: null !== (t2 = f3[e3]) && void 0 !== t2 ? t2 : DEFAULT_CATEGORY_INDEX, categoryName: null !== (r2 = h2[e3]) && void 0 !== r2 ? r2 : "", displayName: null !== (o2 = y2[e3]) && void 0 !== o2 ? o2 : "" });
  const _ = null === (i3 = e2.getLocationData()) || void 0 === i3 ? void 0 : i3.getBoundingBox();
  if (_ && (b2.boundingBox = { originX: null !== (a3 = _.getXmin()) && void 0 !== a3 ? a3 : 0, originY: null !== (n2 = _.getYmin()) && void 0 !== n2 ? n2 : 0, width: null !== (s2 = _.getWidth()) && void 0 !== s2 ? s2 : 0, height: null !== (p2 = _.getHeight()) && void 0 !== p2 ? p2 : 0 }), null === (d2 = e2.getLocationData()) || void 0 === d2 ? void 0 : d2.getRelativeKeypointsList().length)
    for (const t3 of e2.getLocationData().getRelativeKeypointsList())
      b2.keypoints.push({ x: null !== (l2 = t3.getX()) && void 0 !== l2 ? l2 : 0, y: null !== (g2 = t3.getY()) && void 0 !== g2 ? g2 : 0, score: null !== (c2 = t3.getScore()) && void 0 !== c2 ? c2 : 0, label: null !== (u2 = t3.getKeypointLabel()) && void 0 !== u2 ? u2 : "" });
  return b2;
}
detection_result.convertFromDetectionProto = convertFromDetectionProto;
var vision_task_runner = {};
var rect_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")();
  r2.exportSymbol("proto.mediapipe.NormalizedRect", null, o2), r2.exportSymbol("proto.mediapipe.Rect", null, o2), proto.mediapipe.Rect = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.Rect, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.Rect.displayName = "proto.mediapipe.Rect"), proto.mediapipe.NormalizedRect = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.NormalizedRect, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.NormalizedRect.displayName = "proto.mediapipe.NormalizedRect"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.Rect.prototype.toObject = function(e3) {
    return proto.mediapipe.Rect.toObject(e3, this);
  }, proto.mediapipe.Rect.toObject = function(e3, r3) {
    var o3, i3 = { xCenter: null == (o3 = t2.Message.getField(r3, 1)) ? void 0 : o3, yCenter: null == (o3 = t2.Message.getField(r3, 2)) ? void 0 : o3, height: null == (o3 = t2.Message.getField(r3, 3)) ? void 0 : o3, width: null == (o3 = t2.Message.getField(r3, 4)) ? void 0 : o3, rotation: t2.Message.getFloatingPointFieldWithDefault(r3, 5, 0), rectId: null == (o3 = t2.Message.getField(r3, 6)) ? void 0 : o3 };
    return e3 && (i3.$jspbMessageInstance = r3), i3;
  }), proto.mediapipe.Rect.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.Rect();
    return proto.mediapipe.Rect.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.Rect.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readInt32();
          e3.setXCenter(r3);
          break;
        case 2:
          r3 = t3.readInt32();
          e3.setYCenter(r3);
          break;
        case 3:
          r3 = t3.readInt32();
          e3.setHeight(r3);
          break;
        case 4:
          r3 = t3.readInt32();
          e3.setWidth(r3);
          break;
        case 5:
          r3 = t3.readFloat();
          e3.setRotation(r3);
          break;
        case 6:
          r3 = t3.readInt64();
          e3.setRectId(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.Rect.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.Rect.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.Rect.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeInt32(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeInt32(2, o3), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeInt32(3, o3), null != (o3 = t2.Message.getField(e3, 4)) && r3.writeInt32(4, o3), null != (o3 = t2.Message.getField(e3, 5)) && r3.writeFloat(5, o3), null != (o3 = t2.Message.getField(e3, 6)) && r3.writeInt64(6, o3);
  }, proto.mediapipe.Rect.prototype.getXCenter = function() {
    return t2.Message.getFieldWithDefault(this, 1, 0);
  }, proto.mediapipe.Rect.prototype.setXCenter = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.Rect.prototype.clearXCenter = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.Rect.prototype.hasXCenter = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.Rect.prototype.getYCenter = function() {
    return t2.Message.getFieldWithDefault(this, 2, 0);
  }, proto.mediapipe.Rect.prototype.setYCenter = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.Rect.prototype.clearYCenter = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.Rect.prototype.hasYCenter = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.Rect.prototype.getHeight = function() {
    return t2.Message.getFieldWithDefault(this, 3, 0);
  }, proto.mediapipe.Rect.prototype.setHeight = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.Rect.prototype.clearHeight = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.Rect.prototype.hasHeight = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.Rect.prototype.getWidth = function() {
    return t2.Message.getFieldWithDefault(this, 4, 0);
  }, proto.mediapipe.Rect.prototype.setWidth = function(e3) {
    return t2.Message.setField(this, 4, e3);
  }, proto.mediapipe.Rect.prototype.clearWidth = function() {
    return t2.Message.setField(this, 4, void 0);
  }, proto.mediapipe.Rect.prototype.hasWidth = function() {
    return null != t2.Message.getField(this, 4);
  }, proto.mediapipe.Rect.prototype.getRotation = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 5, 0);
  }, proto.mediapipe.Rect.prototype.setRotation = function(e3) {
    return t2.Message.setField(this, 5, e3);
  }, proto.mediapipe.Rect.prototype.clearRotation = function() {
    return t2.Message.setField(this, 5, void 0);
  }, proto.mediapipe.Rect.prototype.hasRotation = function() {
    return null != t2.Message.getField(this, 5);
  }, proto.mediapipe.Rect.prototype.getRectId = function() {
    return t2.Message.getFieldWithDefault(this, 6, 0);
  }, proto.mediapipe.Rect.prototype.setRectId = function(e3) {
    return t2.Message.setField(this, 6, e3);
  }, proto.mediapipe.Rect.prototype.clearRectId = function() {
    return t2.Message.setField(this, 6, void 0);
  }, proto.mediapipe.Rect.prototype.hasRectId = function() {
    return null != t2.Message.getField(this, 6);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.NormalizedRect.prototype.toObject = function(e3) {
    return proto.mediapipe.NormalizedRect.toObject(e3, this);
  }, proto.mediapipe.NormalizedRect.toObject = function(e3, r3) {
    var o3, i3 = { xCenter: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 1)) ? void 0 : o3, yCenter: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 2)) ? void 0 : o3, height: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 3)) ? void 0 : o3, width: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 4)) ? void 0 : o3, rotation: t2.Message.getFloatingPointFieldWithDefault(r3, 5, 0), rectId: null == (o3 = t2.Message.getField(r3, 6)) ? void 0 : o3 };
    return e3 && (i3.$jspbMessageInstance = r3), i3;
  }), proto.mediapipe.NormalizedRect.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.NormalizedRect();
    return proto.mediapipe.NormalizedRect.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.NormalizedRect.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readFloat();
          e3.setXCenter(r3);
          break;
        case 2:
          r3 = t3.readFloat();
          e3.setYCenter(r3);
          break;
        case 3:
          r3 = t3.readFloat();
          e3.setHeight(r3);
          break;
        case 4:
          r3 = t3.readFloat();
          e3.setWidth(r3);
          break;
        case 5:
          r3 = t3.readFloat();
          e3.setRotation(r3);
          break;
        case 6:
          r3 = t3.readInt64();
          e3.setRectId(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.NormalizedRect.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.NormalizedRect.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.NormalizedRect.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeFloat(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeFloat(2, o3), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeFloat(3, o3), null != (o3 = t2.Message.getField(e3, 4)) && r3.writeFloat(4, o3), null != (o3 = t2.Message.getField(e3, 5)) && r3.writeFloat(5, o3), null != (o3 = t2.Message.getField(e3, 6)) && r3.writeInt64(6, o3);
  }, proto.mediapipe.NormalizedRect.prototype.getXCenter = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 1, 0);
  }, proto.mediapipe.NormalizedRect.prototype.setXCenter = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.NormalizedRect.prototype.clearXCenter = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.NormalizedRect.prototype.hasXCenter = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.NormalizedRect.prototype.getYCenter = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 2, 0);
  }, proto.mediapipe.NormalizedRect.prototype.setYCenter = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.NormalizedRect.prototype.clearYCenter = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.NormalizedRect.prototype.hasYCenter = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.NormalizedRect.prototype.getHeight = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 3, 0);
  }, proto.mediapipe.NormalizedRect.prototype.setHeight = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.NormalizedRect.prototype.clearHeight = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.NormalizedRect.prototype.hasHeight = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.NormalizedRect.prototype.getWidth = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 4, 0);
  }, proto.mediapipe.NormalizedRect.prototype.setWidth = function(e3) {
    return t2.Message.setField(this, 4, e3);
  }, proto.mediapipe.NormalizedRect.prototype.clearWidth = function() {
    return t2.Message.setField(this, 4, void 0);
  }, proto.mediapipe.NormalizedRect.prototype.hasWidth = function() {
    return null != t2.Message.getField(this, 4);
  }, proto.mediapipe.NormalizedRect.prototype.getRotation = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 5, 0);
  }, proto.mediapipe.NormalizedRect.prototype.setRotation = function(e3) {
    return t2.Message.setField(this, 5, e3);
  }, proto.mediapipe.NormalizedRect.prototype.clearRotation = function() {
    return t2.Message.setField(this, 5, void 0);
  }, proto.mediapipe.NormalizedRect.prototype.hasRotation = function() {
    return null != t2.Message.getField(this, 5);
  }, proto.mediapipe.NormalizedRect.prototype.getRectId = function() {
    return t2.Message.getFieldWithDefault(this, 6, 0);
  }, proto.mediapipe.NormalizedRect.prototype.setRectId = function(e3) {
    return t2.Message.setField(this, 6, e3);
  }, proto.mediapipe.NormalizedRect.prototype.clearRectId = function() {
    return t2.Message.setField(this, 6, void 0);
  }, proto.mediapipe.NormalizedRect.prototype.hasRectId = function() {
    return null != t2.Message.getField(this, 6);
  }, r2.object.extend(e2, proto.mediapipe);
}(rect_pb);
var task_runner = {};
var graph_runner = {};
!function(e2) {
  Object.defineProperty(e2, "__esModule", { value: true }), e2.createGraphRunner = e2.createMediaPipeLib = e2.GraphRunner = e2.CALCULATOR_GRAPH_CONFIG_LISTENER_NAME = void 0;
  const t2 = platform_utils;
  e2.CALCULATOR_GRAPH_CONFIG_LISTENER_NAME = "__graph_config__";
  class r2 {
    constructor(e3, r3) {
      this.autoResizeCanvas = true, this.wasmModule = e3, this.audioPtr = null, this.audioSize = 0, this.hasMultiStreamSupport = "function" == typeof this.wasmModule._addIntToInputStream, void 0 !== r3 ? this.wasmModule.canvas = r3 : "undefined" == typeof OffscreenCanvas || (0, t2.isWebKit)() ? (console.warn("OffscreenCanvas not supported and GraphRunner constructor glCanvas parameter is undefined. Creating backup canvas."), this.wasmModule.canvas = document.createElement("canvas")) : this.wasmModule.canvas = new OffscreenCanvas(1, 1);
    }
    async initializeGraph(e3) {
      const t3 = await fetch(e3), r3 = await t3.arrayBuffer(), o3 = !(e3.endsWith(".pbtxt") || e3.endsWith(".textproto"));
      this.setGraph(new Uint8Array(r3), o3);
    }
    setGraphFromString(e3) {
      this.setGraph(new TextEncoder().encode(e3), false);
    }
    setGraph(e3, t3) {
      const r3 = e3.length, o3 = this.wasmModule._malloc(r3);
      this.wasmModule.HEAPU8.set(e3, o3), t3 ? this.wasmModule._changeBinaryGraph(r3, o3) : this.wasmModule._changeTextGraph(r3, o3), this.wasmModule._free(o3);
    }
    configureAudio(e3, t3, r3, o3, i4) {
      this.wasmModule._configureAudio || console.warn('Attempting to use configureAudio without support for input audio. Is build dep ":gl_graph_runner_audio" missing?'), o3 = o3 || "input_audio", this.wrapStringPtr(o3, (o4) => {
        i4 = i4 || "audio_header", this.wrapStringPtr(i4, (i5) => {
          this.wasmModule._configureAudio(o4, i5, e3, t3, r3);
        });
      });
    }
    setAutoResizeCanvas(e3) {
      this.autoResizeCanvas = e3;
    }
    setAutoRenderToScreen(e3) {
      this.wasmModule._setAutoRenderToScreen(e3);
    }
    bindTextureToStream(e3, t3) {
      if (!this.wasmModule.canvas)
        throw new Error("No OpenGL canvas configured.");
      t3 ? this.wasmModule._bindTextureToStream(t3) : console.assert(this.wasmModule._bindTextureToCanvas());
      const r3 = this.wasmModule.canvas.getContext("webgl2") || this.wasmModule.canvas.getContext("webgl");
      if (!r3)
        throw new Error("Failed to obtain WebGL context from the provided canvas. `getContext()` should only be invoked with `webgl` or `webgl2`.");
      let o3, i4;
      return r3.texImage2D(r3.TEXTURE_2D, 0, r3.RGBA, r3.RGBA, r3.UNSIGNED_BYTE, e3), e3.videoWidth ? (o3 = e3.videoWidth, i4 = e3.videoHeight) : e3.naturalWidth ? (o3 = e3.naturalWidth, i4 = e3.naturalHeight) : (o3 = e3.width, i4 = e3.height), !this.autoResizeCanvas || o3 === this.wasmModule.canvas.width && i4 === this.wasmModule.canvas.height || (this.wasmModule.canvas.width = o3, this.wasmModule.canvas.height = i4), [o3, i4];
    }
    processGl(e3, t3) {
      const [r3, o3] = this.bindTextureToStream(e3), i4 = this.wasmModule._malloc(16);
      this.wasmModule.HEAPU32[i4 / 4] = r3, this.wasmModule.HEAPU32[i4 / 4 + 1] = o3, this.wasmModule.HEAPF64[i4 / 8 + 1] = t3, this.wasmModule._processGl(i4), this.wasmModule._free(i4);
    }
    wrapStringPtr(e3, t3) {
      this.hasMultiStreamSupport || console.error("No wasm multistream support detected: ensure dependency inclusion of :gl_graph_runner_internal_multi_input target");
      const r3 = this.wasmModule.stringToNewUTF8(e3);
      t3(r3), this.wasmModule._free(r3);
    }
    wrapStringPtrPtr(e3, t3) {
      this.hasMultiStreamSupport || console.error("No wasm multistream support detected: ensure dependency inclusion of :gl_graph_runner_internal_multi_input target");
      const r3 = new Uint32Array(e3.length);
      for (let t4 = 0; t4 < e3.length; t4++)
        r3[t4] = this.wasmModule.stringToNewUTF8(e3[t4]);
      const o3 = this.wasmModule._malloc(4 * r3.length);
      this.wasmModule.HEAPU32.set(r3, o3 >> 2), t3(o3);
      for (const e4 of r3)
        this.wasmModule._free(e4);
      this.wasmModule._free(o3);
    }
    getCalculatorGraphConfig(t3, r3) {
      const o3 = e2.CALCULATOR_GRAPH_CONFIG_LISTENER_NAME;
      this.setListener(o3, (e3) => {
        t3(e3);
      }), this.wrapStringPtr(o3, (e3) => {
        this.wasmModule._getGraphConfig(e3, r3);
      }), delete this.wasmModule.simpleListeners[o3];
    }
    setListener(e3, t3) {
      this.wasmModule.simpleListeners = this.wasmModule.simpleListeners || {}, this.wasmModule.simpleListeners[e3] = t3;
    }
    setVectorListener(e3, t3) {
      let r3 = [];
      this.wasmModule.simpleListeners = this.wasmModule.simpleListeners || {}, this.wasmModule.simpleListeners[e3] = (e4, o3, i4) => {
        o3 ? (t3(r3, i4), r3 = []) : r3.push(e4);
      };
    }
    attachErrorListener(e3) {
      this.wasmModule.errorListener = e3;
    }
    attachEmptyPacketListener(e3, t3) {
      this.wasmModule.emptyPacketListeners = this.wasmModule.emptyPacketListeners || {}, this.wasmModule.emptyPacketListeners[e3] = t3;
    }
    addAudioToStream(e3, t3, r3) {
      this.addAudioToStreamWithShape(e3, 0, 0, t3, r3);
    }
    addAudioToStreamWithShape(e3, t3, r3, o3, i4) {
      const a3 = 4 * e3.length;
      this.audioSize !== a3 && (this.audioPtr && this.wasmModule._free(this.audioPtr), this.audioPtr = this.wasmModule._malloc(a3), this.audioSize = a3), this.wasmModule.HEAPF32.set(e3, this.audioPtr / 4), this.wrapStringPtr(o3, (e4) => {
        this.wasmModule._addAudioToInputStream(this.audioPtr, t3, r3, e4, i4);
      });
    }
    addGpuBufferToStream(e3, t3, r3) {
      this.wrapStringPtr(t3, (t4) => {
        const [o3, i4] = this.bindTextureToStream(e3, t4);
        this.wasmModule._addBoundTextureToStream(t4, o3, i4, r3);
      });
    }
    addBoolToStream(e3, t3, r3) {
      this.wrapStringPtr(t3, (t4) => {
        this.wasmModule._addBoolToInputStream(e3, t4, r3);
      });
    }
    addDoubleToStream(e3, t3, r3) {
      this.wrapStringPtr(t3, (t4) => {
        this.wasmModule._addDoubleToInputStream(e3, t4, r3);
      });
    }
    addFloatToStream(e3, t3, r3) {
      this.wrapStringPtr(t3, (t4) => {
        this.wasmModule._addFloatToInputStream(e3, t4, r3);
      });
    }
    addIntToStream(e3, t3, r3) {
      this.wrapStringPtr(t3, (t4) => {
        this.wasmModule._addIntToInputStream(e3, t4, r3);
      });
    }
    addStringToStream(e3, t3, r3) {
      this.wrapStringPtr(t3, (t4) => {
        this.wrapStringPtr(e3, (e4) => {
          this.wasmModule._addStringToInputStream(e4, t4, r3);
        });
      });
    }
    addStringRecordToStream(e3, t3, r3) {
      this.wrapStringPtr(t3, (t4) => {
        this.wrapStringPtrPtr(Object.keys(e3), (o3) => {
          this.wrapStringPtrPtr(Object.values(e3), (i4) => {
            this.wasmModule._addFlatHashMapToInputStream(o3, i4, Object.keys(e3).length, t4, r3);
          });
        });
      });
    }
    addProtoToStream(e3, t3, r3, o3) {
      this.wrapStringPtr(r3, (r4) => {
        this.wrapStringPtr(t3, (t4) => {
          const i4 = this.wasmModule._malloc(e3.length);
          this.wasmModule.HEAPU8.set(e3, i4), this.wasmModule._addProtoToInputStream(i4, e3.length, t4, r4, o3), this.wasmModule._free(i4);
        });
      });
    }
    addEmptyPacketToStream(e3, t3) {
      this.wrapStringPtr(e3, (e4) => {
        this.wasmModule._addEmptyPacketToInputStream(e4, t3);
      });
    }
    addBoolToInputSidePacket(e3, t3) {
      this.wrapStringPtr(t3, (t4) => {
        this.wasmModule._addBoolToInputSidePacket(e3, t4);
      });
    }
    addDoubleToInputSidePacket(e3, t3) {
      this.wrapStringPtr(t3, (t4) => {
        this.wasmModule._addDoubleToInputSidePacket(e3, t4);
      });
    }
    addFloatToInputSidePacket(e3, t3) {
      this.wrapStringPtr(t3, (t4) => {
        this.wasmModule._addFloatToInputSidePacket(e3, t4);
      });
    }
    addIntToInputSidePacket(e3, t3) {
      this.wrapStringPtr(t3, (t4) => {
        this.wasmModule._addIntToInputSidePacket(e3, t4);
      });
    }
    addStringToInputSidePacket(e3, t3) {
      this.wrapStringPtr(t3, (t4) => {
        this.wrapStringPtr(e3, (e4) => {
          this.wasmModule._addStringToInputSidePacket(e4, t4);
        });
      });
    }
    addProtoToInputSidePacket(e3, t3, r3) {
      this.wrapStringPtr(r3, (r4) => {
        this.wrapStringPtr(t3, (t4) => {
          const o3 = this.wasmModule._malloc(e3.length);
          this.wasmModule.HEAPU8.set(e3, o3), this.wasmModule._addProtoToInputSidePacket(o3, e3.length, t4, r4), this.wasmModule._free(o3);
        });
      });
    }
    attachBoolListener(e3, t3) {
      this.setListener(e3, t3), this.wrapStringPtr(e3, (e4) => {
        this.wasmModule._attachBoolListener(e4);
      });
    }
    attachBoolVectorListener(e3, t3) {
      this.setVectorListener(e3, t3), this.wrapStringPtr(e3, (e4) => {
        this.wasmModule._attachBoolVectorListener(e4);
      });
    }
    attachIntListener(e3, t3) {
      this.setListener(e3, t3), this.wrapStringPtr(e3, (e4) => {
        this.wasmModule._attachIntListener(e4);
      });
    }
    attachIntVectorListener(e3, t3) {
      this.setVectorListener(e3, t3), this.wrapStringPtr(e3, (e4) => {
        this.wasmModule._attachIntVectorListener(e4);
      });
    }
    attachDoubleListener(e3, t3) {
      this.setListener(e3, t3), this.wrapStringPtr(e3, (e4) => {
        this.wasmModule._attachDoubleListener(e4);
      });
    }
    attachDoubleVectorListener(e3, t3) {
      this.setVectorListener(e3, t3), this.wrapStringPtr(e3, (e4) => {
        this.wasmModule._attachDoubleVectorListener(e4);
      });
    }
    attachFloatListener(e3, t3) {
      this.setListener(e3, t3), this.wrapStringPtr(e3, (e4) => {
        this.wasmModule._attachFloatListener(e4);
      });
    }
    attachFloatVectorListener(e3, t3) {
      this.setVectorListener(e3, t3), this.wrapStringPtr(e3, (e4) => {
        this.wasmModule._attachFloatVectorListener(e4);
      });
    }
    attachStringListener(e3, t3) {
      this.setListener(e3, t3), this.wrapStringPtr(e3, (e4) => {
        this.wasmModule._attachStringListener(e4);
      });
    }
    attachStringVectorListener(e3, t3) {
      this.setVectorListener(e3, t3), this.wrapStringPtr(e3, (e4) => {
        this.wasmModule._attachStringVectorListener(e4);
      });
    }
    attachProtoListener(e3, t3, r3) {
      this.setListener(e3, t3), this.wrapStringPtr(e3, (e4) => {
        this.wasmModule._attachProtoListener(e4, r3 || false);
      });
    }
    attachProtoVectorListener(e3, t3, r3) {
      this.setVectorListener(e3, t3), this.wrapStringPtr(e3, (e4) => {
        this.wasmModule._attachProtoVectorListener(e4, r3 || false);
      });
    }
    attachAudioListener(e3, t3, r3) {
      this.wasmModule._attachAudioListener || console.warn('Attempting to use attachAudioListener without support for output audio. Is build dep ":gl_graph_runner_audio_out" missing?'), this.setListener(e3, (e4, r4) => {
        const o3 = new Float32Array(e4.buffer, e4.byteOffset, e4.length / 4);
        t3(o3, r4);
      }), this.wrapStringPtr(e3, (e4) => {
        this.wasmModule._attachAudioListener(e4, r3 || false);
      });
    }
    finishProcessing() {
      this.wasmModule._waitUntilIdle();
    }
    closeGraph() {
      this.wasmModule._closeGraph(), this.wasmModule.simpleListeners = void 0, this.wasmModule.emptyPacketListeners = void 0;
    }
  }
  async function o2(e3) {
    if ("function" != typeof importScripts) {
      const t3 = document.createElement("script");
      return t3.setAttribute("src", e3), t3.setAttribute("crossorigin", "anonymous"), new Promise((e4) => {
        t3.addEventListener("load", () => {
          e4();
        }, false), t3.addEventListener("error", () => {
          e4();
        }, false), document.body.appendChild(t3);
      });
    }
    importScripts(e3.toString());
  }
  async function i3(e3, t3, r3, i4, a3) {
    const n2 = [];
    if (t3 && n2.push(t3), r3 && n2.push(r3), n2.length && await Promise.all(n2.map(o2)), !self.ModuleFactory)
      throw new Error("ModuleFactory not set.");
    if (self.Module && a3) {
      const e4 = self.Module;
      e4.locateFile = a3.locateFile, a3.mainScriptUrlOrBlob && (e4.mainScriptUrlOrBlob = a3.mainScriptUrlOrBlob);
    }
    const s2 = await self.ModuleFactory(self.Module || a3);
    return self.ModuleFactory = self.Module = void 0, new e3(s2, i4);
  }
  e2.GraphRunner = r2, e2.createMediaPipeLib = i3, e2.createGraphRunner = async function(e3, t3, o3, a3) {
    return i3(r2, e3, t3, o3, a3);
  };
}(graph_runner);
var register_model_resources_graph_service = {};
function SupportModelResourcesGraphService(e2) {
  return class extends e2 {
    registerModelResourcesGraphService() {
      this.wasmModule._registerModelResourcesGraphService();
    }
  };
}
Object.defineProperty(register_model_resources_graph_service, "__esModule", { value: true }), register_model_resources_graph_service.SupportModelResourcesGraphService = void 0, register_model_resources_graph_service.SupportModelResourcesGraphService = SupportModelResourcesGraphService, Object.defineProperty(task_runner, "__esModule", { value: true }), task_runner.TaskRunner = task_runner.createTaskRunner = task_runner.CachedGraphRunner = void 0;
var inference_calculator_pb_1 = inference_calculator_pb;
var calculator_pb_1 = calculator_pb;
var acceleration_pb_1 = acceleration_pb;
var external_file_pb_1 = external_file_pb;
var graph_runner_1$1 = graph_runner;
var register_model_resources_graph_service_1$1 = register_model_resources_graph_service;
var NO_ASSETS = void 0;
var FREE_MEMORY_STREAM = "free_memory";
var UNUSED_STREAM_SUFFIX = "_unused_out";
var CachedGraphRunnerType = (0, register_model_resources_graph_service_1$1.SupportModelResourcesGraphService)(graph_runner_1$1.GraphRunner);
var CachedGraphRunner = class extends CachedGraphRunnerType {
};
async function createTaskRunner(e2, t2, r2, o2) {
  const i3 = { locateFile: () => r2.wasmBinaryPath.toString() }, a3 = await (0, graph_runner_1$1.createMediaPipeLib)(e2, r2.wasmLoaderPath, NO_ASSETS, t2, i3);
  return await a3.setOptions(o2), a3;
}
task_runner.CachedGraphRunner = CachedGraphRunner, task_runner.createTaskRunner = createTaskRunner;
var TaskRunner = class {
  static async createInstance(e2, t2, r2, o2) {
    return createTaskRunner(e2, t2, r2, o2);
  }
  constructor(e2) {
    this.graphRunner = e2, this.processingErrors = [], this.latestOutputTimestamp = 0, this.graphRunner.setAutoRenderToScreen(false);
  }
  applyOptions(e2) {
    var t2, r2, o2, i3, a3, n2;
    const s2 = e2.baseOptions || {};
    if ((null === (t2 = e2.baseOptions) || void 0 === t2 ? void 0 : t2.modelAssetBuffer) && (null === (r2 = e2.baseOptions) || void 0 === r2 ? void 0 : r2.modelAssetPath))
      throw new Error("Cannot set both baseOptions.modelAssetPath and baseOptions.modelAssetBuffer");
    if (!((null === (o2 = this.baseOptions.getModelAsset()) || void 0 === o2 ? void 0 : o2.hasFileContent()) || (null === (i3 = this.baseOptions.getModelAsset()) || void 0 === i3 ? void 0 : i3.hasFileName()) || (null === (a3 = e2.baseOptions) || void 0 === a3 ? void 0 : a3.modelAssetBuffer) || (null === (n2 = e2.baseOptions) || void 0 === n2 ? void 0 : n2.modelAssetPath)))
      throw new Error("Either baseOptions.modelAssetPath or baseOptions.modelAssetBuffer must be set");
    return this.setAcceleration(s2), s2.modelAssetPath ? fetch(s2.modelAssetPath.toString()).then((e3) => {
      if (e3.ok)
        return e3.arrayBuffer();
      throw new Error(`Failed to fetch model: ${s2.modelAssetPath} (${e3.status})`);
    }).then((e3) => {
      try {
        this.graphRunner.wasmModule.FS_unlink("/model.dat");
      } catch (e4) {
      }
      this.graphRunner.wasmModule.FS_createDataFile("/", "model.dat", new Uint8Array(e3), true, false, false), this.setExternalFile("/model.dat"), this.refreshGraph(), this.onGraphRefreshed();
    }) : (this.setExternalFile(s2.modelAssetBuffer), this.refreshGraph(), this.onGraphRefreshed(), Promise.resolve());
  }
  onGraphRefreshed() {
  }
  getCalculatorGraphConfig() {
    let e2;
    if (this.graphRunner.getCalculatorGraphConfig((t2) => {
      e2 = calculator_pb_1.CalculatorGraphConfig.deserializeBinary(t2);
    }), !e2)
      throw new Error("Failed to retrieve CalculatorGraphConfig");
    return e2;
  }
  setGraph(e2, t2) {
    this.graphRunner.attachErrorListener((e3, t3) => {
      this.processingErrors.push(new Error(t3));
    }), this.graphRunner.registerModelResourcesGraphService(), this.graphRunner.setGraph(e2, t2), this.keepaliveNode = void 0, this.handleErrors();
  }
  finishProcessing() {
    this.graphRunner.finishProcessing(), this.handleErrors();
  }
  setLatestOutputTimestamp(e2) {
    this.latestOutputTimestamp = Math.max(this.latestOutputTimestamp, e2);
  }
  getSynctheticTimestamp() {
    return this.latestOutputTimestamp + 1;
  }
  handleErrors() {
    try {
      const e2 = this.processingErrors.length;
      if (1 === e2)
        throw new Error(this.processingErrors[0].message);
      if (e2 > 1)
        throw new Error("Encountered multiple errors: " + this.processingErrors.map((e3) => e3.message).join(", "));
    } finally {
      this.processingErrors = [];
    }
  }
  setExternalFile(e2) {
    const t2 = this.baseOptions.getModelAsset() || new external_file_pb_1.ExternalFile();
    "string" == typeof e2 ? (t2.setFileName(e2), t2.clearFileContent()) : e2 instanceof Uint8Array && (t2.setFileContent(e2), t2.clearFileName()), this.baseOptions.setModelAsset(t2);
  }
  setAcceleration(e2) {
    let t2 = this.baseOptions.getAcceleration();
    t2 || (t2 = new acceleration_pb_1.Acceleration(), t2.setTflite(new inference_calculator_pb_1.InferenceCalculatorOptions.Delegate.TfLite())), "delegate" in e2 && ("GPU" === e2.delegate ? t2.setGpu(new inference_calculator_pb_1.InferenceCalculatorOptions.Delegate.Gpu()) : t2.setTflite(new inference_calculator_pb_1.InferenceCalculatorOptions.Delegate.TfLite())), this.baseOptions.setAcceleration(t2);
  }
  addKeepaliveNode(e2) {
    this.keepaliveNode = new calculator_pb_1.CalculatorGraphConfig.Node(), this.keepaliveNode.setCalculator("PassThroughCalculator"), this.keepaliveNode.addInputStream(FREE_MEMORY_STREAM), this.keepaliveNode.addOutputStream(FREE_MEMORY_STREAM + UNUSED_STREAM_SUFFIX), e2.addInputStream(FREE_MEMORY_STREAM), e2.addNode(this.keepaliveNode);
  }
  keepStreamAlive(e2) {
    this.keepaliveNode.addInputStream(e2), this.keepaliveNode.addOutputStream(e2 + UNUSED_STREAM_SUFFIX);
  }
  freeKeepaliveStreams() {
    this.graphRunner.addBoolToStream(true, FREE_MEMORY_STREAM, this.latestOutputTimestamp);
  }
  close() {
    this.keepaliveNode = void 0, this.graphRunner.closeGraph();
  }
};
task_runner.TaskRunner = TaskRunner;
var graph_runner_image_lib = {};
function SupportImage(e2) {
  return class extends e2 {
    get wasmImageModule() {
      return this.wasmModule;
    }
    addGpuBufferAsImageToStream(e3, t2, r2) {
      this.wrapStringPtr(t2, (t3) => {
        const [o2, i3] = this.bindTextureToStream(e3, t3);
        this.wasmImageModule._addBoundTextureAsImageToStream(t3, o2, i3, r2);
      });
    }
    attachImageListener(e3, t2) {
      this.setListener(e3, t2), this.wrapStringPtr(e3, (e4) => {
        this.wasmImageModule._attachImageListener(e4);
      });
    }
    attachImageVectorListener(e3, t2) {
      this.setVectorListener(e3, t2), this.wrapStringPtr(e3, (e4) => {
        this.wasmImageModule._attachImageVectorListener(e4);
      });
    }
  };
}
Object.defineProperty(graph_runner_image_lib, "__esModule", { value: true }), graph_runner_image_lib.SupportImage = void 0, graph_runner_image_lib.SupportImage = SupportImage, Object.defineProperty(vision_task_runner, "__esModule", { value: true }), vision_task_runner.VisionTaskRunner = vision_task_runner.VisionGraphRunner = void 0;
var rect_pb_1 = rect_pb;
var task_runner_1 = task_runner;
var image_1$1 = image;
var image_shader_context_1 = image_shader_context;
var mask_1$1 = mask;
var graph_runner_1 = graph_runner;
var graph_runner_image_lib_1 = graph_runner_image_lib;
var platform_utils_1 = platform_utils;
var register_model_resources_graph_service_1 = register_model_resources_graph_service;
var GraphRunnerVisionType = (0, register_model_resources_graph_service_1.SupportModelResourcesGraphService)((0, graph_runner_image_lib_1.SupportImage)(graph_runner_1.GraphRunner));
var VisionGraphRunner = class extends GraphRunnerVisionType {
};
function createCanvas() {
  return "undefined" != typeof OffscreenCanvas && !(0, platform_utils_1.isWebKit)() ? void 0 : document.createElement("canvas");
}
vision_task_runner.VisionGraphRunner = VisionGraphRunner;
var VisionTaskRunner = class extends task_runner_1.TaskRunner {
  static async createVisionInstance(e2, t2, r2) {
    var o2;
    const i3 = null !== (o2 = r2.canvas) && void 0 !== o2 ? o2 : createCanvas();
    return task_runner_1.TaskRunner.createInstance(e2, i3, t2, r2);
  }
  constructor(e2, t2, r2, o2) {
    super(e2), this.graphRunner = e2, this.imageStreamName = t2, this.normRectStreamName = r2, this.roiAllowed = o2, this.shaderContext = new image_shader_context_1.MPImageShaderContext();
  }
  applyOptions(e2) {
    if ("runningMode" in e2) {
      const t2 = !!e2.runningMode && "IMAGE" !== e2.runningMode;
      this.baseOptions.setUseStreamMode(t2);
    }
    if (void 0 !== e2.canvas && this.graphRunner.wasmModule.canvas !== e2.canvas)
      throw new Error("You must create a new task to reset the canvas.");
    return super.applyOptions(e2);
  }
  processImageData(e2, t2) {
    var r2;
    if (null === (r2 = this.baseOptions) || void 0 === r2 ? void 0 : r2.getUseStreamMode())
      throw new Error("Task is not initialized with image mode. 'runningMode' must be set to 'IMAGE'.");
    this.process(e2, t2, this.getSynctheticTimestamp());
  }
  processVideoData(e2, t2, r2) {
    var o2;
    if (!(null === (o2 = this.baseOptions) || void 0 === o2 ? void 0 : o2.getUseStreamMode()))
      throw new Error("Task is not initialized with video mode. 'runningMode' must be set to 'VIDEO'.");
    this.process(e2, t2, r2);
  }
  getImageSourceSize(e2) {
    return void 0 !== e2.videoWidth ? [e2.videoWidth, e2.videoHeight] : void 0 !== e2.naturalWidth ? [e2.naturalWidth, e2.naturalHeight] : [e2.width, e2.height];
  }
  convertToNormalizedRect(e2, t2) {
    const r2 = new rect_pb_1.NormalizedRect();
    if (null == t2 ? void 0 : t2.regionOfInterest) {
      if (!this.roiAllowed)
        throw new Error("This task doesn't support region-of-interest.");
      const e3 = t2.regionOfInterest;
      if (e3.left >= e3.right || e3.top >= e3.bottom)
        throw new Error("Expected RectF with left < right and top < bottom.");
      if (e3.left < 0 || e3.top < 0 || e3.right > 1 || e3.bottom > 1)
        throw new Error("Expected RectF values to be in [0,1].");
      r2.setXCenter((e3.left + e3.right) / 2), r2.setYCenter((e3.top + e3.bottom) / 2), r2.setWidth(e3.right - e3.left), r2.setHeight(e3.bottom - e3.top);
    } else
      r2.setXCenter(0.5), r2.setYCenter(0.5), r2.setWidth(1), r2.setHeight(1);
    if (null == t2 ? void 0 : t2.rotationDegrees) {
      if ((null == t2 ? void 0 : t2.rotationDegrees) % 90 != 0)
        throw new Error("Expected rotation to be a multiple of 90°.");
      if (r2.setRotation(-Math.PI * t2.rotationDegrees / 180), (null == t2 ? void 0 : t2.rotationDegrees) % 180 != 0) {
        const [t3, o2] = this.getImageSourceSize(e2), i3 = r2.getHeight() * o2 / t3, a3 = r2.getWidth() * t3 / o2;
        r2.setWidth(i3), r2.setHeight(a3);
      }
    }
    return r2;
  }
  process(e2, t2, r2) {
    const o2 = this.convertToNormalizedRect(e2, t2);
    this.graphRunner.addProtoToStream(o2.serializeBinary(), "mediapipe.NormalizedRect", this.normRectStreamName, r2), this.graphRunner.addGpuBufferAsImageToStream(e2, this.imageStreamName, null != r2 ? r2 : performance.now()), this.finishProcessing();
  }
  convertToMPImage(e2, t2) {
    const { data: r2, width: o2, height: i3 } = e2, a3 = o2 * i3;
    let n2;
    if (r2 instanceof Uint8Array)
      if (r2.length === 3 * a3) {
        const e3 = new Uint8ClampedArray(4 * a3);
        for (let t3 = 0; t3 < a3; ++t3)
          e3[4 * t3] = r2[3 * t3], e3[4 * t3 + 1] = r2[3 * t3 + 1], e3[4 * t3 + 2] = r2[3 * t3 + 2], e3[4 * t3 + 3] = 255;
        n2 = new ImageData(e3, o2, i3);
      } else {
        if (r2.length !== 4 * a3)
          throw new Error("Unsupported channel count: " + r2.length / a3);
        n2 = new ImageData(new Uint8ClampedArray(r2.buffer, r2.byteOffset, r2.length), o2, i3);
      }
    else {
      if (!(r2 instanceof WebGLTexture))
        throw new Error(`Unsupported format: ${r2.constructor.name}`);
      n2 = r2;
    }
    const s2 = new image_1$1.MPImage([n2], false, false, this.graphRunner.wasmModule.canvas, this.shaderContext, o2, i3);
    return t2 ? s2.clone() : s2;
  }
  convertToMPMask(e2, t2) {
    const { data: r2, width: o2, height: i3 } = e2, a3 = o2 * i3;
    let n2;
    if (r2 instanceof Uint8Array || r2 instanceof Float32Array) {
      if (r2.length !== a3)
        throw new Error("Unsupported channel count: " + r2.length / a3);
      n2 = r2;
    } else
      n2 = r2;
    const s2 = new mask_1$1.MPMask([n2], false, this.graphRunner.wasmModule.canvas, this.shaderContext, o2, i3);
    return t2 ? s2.clone() : s2;
  }
  close() {
    this.shaderContext.close(), super.close();
  }
};
vision_task_runner.VisionTaskRunner = VisionTaskRunner;
var face_detector_options = {};
Object.defineProperty(face_detector_options, "__esModule", { value: true });
var face_detector_result = {};
Object.defineProperty(face_detector_result, "__esModule", { value: true }), function(e2) {
  var t2 = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function(e3, t3, r3, o3) {
    void 0 === o3 && (o3 = r3);
    var i4 = Object.getOwnPropertyDescriptor(t3, r3);
    i4 && !("get" in i4 ? !t3.__esModule : i4.writable || i4.configurable) || (i4 = { enumerable: true, get: function() {
      return t3[r3];
    } }), Object.defineProperty(e3, o3, i4);
  } : function(e3, t3, r3, o3) {
    void 0 === o3 && (o3 = r3), e3[o3] = t3[r3];
  }), r2 = commonjsGlobal && commonjsGlobal.__exportStar || function(e3, r3) {
    for (var o3 in e3)
      "default" === o3 || Object.prototype.hasOwnProperty.call(r3, o3) || t2(r3, e3, o3);
  };
  Object.defineProperty(e2, "__esModule", { value: true }), e2.FaceDetector = void 0;
  const o2 = calculator_pb, i3 = calculator_options_pb, a3 = detection_pb, n2 = base_options_pb, s2 = face_detector_graph_options_pb, p2 = detection_result, d2 = vision_task_runner, l2 = "image_in", g2 = "norm_rect_in", c2 = "detections";
  r2(face_detector_options, e2), r2(face_detector_result, e2);
  class u2 extends d2.VisionTaskRunner {
    static createFromOptions(e3, t3) {
      return d2.VisionTaskRunner.createVisionInstance(u2, e3, t3);
    }
    static createFromModelBuffer(e3, t3) {
      return d2.VisionTaskRunner.createVisionInstance(u2, e3, { baseOptions: { modelAssetBuffer: t3 } });
    }
    static async createFromModelPath(e3, t3) {
      return d2.VisionTaskRunner.createVisionInstance(u2, e3, { baseOptions: { modelAssetPath: t3 } });
    }
    constructor(e3, t3) {
      super(new d2.VisionGraphRunner(e3, t3), l2, g2, false), this.result = { detections: [] }, this.options = new s2.FaceDetectorGraphOptions(), this.options.setBaseOptions(new n2.BaseOptions()), this.options.setMinDetectionConfidence(0.5), this.options.setMinSuppressionThreshold(0.3);
    }
    get baseOptions() {
      return this.options.getBaseOptions();
    }
    set baseOptions(e3) {
      this.options.setBaseOptions(e3);
    }
    setOptions(e3) {
      var t3, r3;
      return "minDetectionConfidence" in e3 && this.options.setMinDetectionConfidence(null !== (t3 = e3.minDetectionConfidence) && void 0 !== t3 ? t3 : 0.5), "minSuppressionThreshold" in e3 && this.options.setMinSuppressionThreshold(null !== (r3 = e3.minSuppressionThreshold) && void 0 !== r3 ? r3 : 0.3), this.applyOptions(e3);
    }
    detect(e3, t3) {
      return this.result = { detections: [] }, this.processImageData(e3, t3), this.result;
    }
    detectForVideo(e3, t3, r3) {
      return this.result = { detections: [] }, this.processVideoData(e3, r3, t3), this.result;
    }
    addJsFaceDetections(e3) {
      for (const t3 of e3) {
        const e4 = a3.Detection.deserializeBinary(t3);
        this.result.detections.push((0, p2.convertFromDetectionProto)(e4));
      }
    }
    refreshGraph() {
      const e3 = new o2.CalculatorGraphConfig();
      e3.addInputStream(l2), e3.addInputStream(g2), e3.addOutputStream(c2);
      const t3 = new i3.CalculatorOptions();
      t3.setExtension(s2.FaceDetectorGraphOptions.ext, this.options);
      const r3 = new o2.CalculatorGraphConfig.Node();
      r3.setCalculator("mediapipe.tasks.vision.face_detector.FaceDetectorGraph"), r3.addInputStream("IMAGE:" + l2), r3.addInputStream("NORM_RECT:" + g2), r3.addOutputStream("DETECTIONS:" + c2), r3.setOptions(t3), e3.addNode(r3), this.graphRunner.attachProtoVectorListener(c2, (e4, t4) => {
        this.addJsFaceDetections(e4), this.setLatestOutputTimestamp(t4);
      }), this.graphRunner.attachEmptyPacketListener(c2, (e4) => {
        this.setLatestOutputTimestamp(e4);
      });
      const a4 = e3.serializeBinary();
      this.setGraph(new Uint8Array(a4), true);
    }
  }
  e2.FaceDetector = u2;
}(face_detector);
var face_landmarker = {};
var classification_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")();
  r2.exportSymbol("proto.mediapipe.Classification", null, o2), r2.exportSymbol("proto.mediapipe.ClassificationList", null, o2), r2.exportSymbol("proto.mediapipe.ClassificationListCollection", null, o2), proto.mediapipe.Classification = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.Classification, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.Classification.displayName = "proto.mediapipe.Classification"), proto.mediapipe.ClassificationList = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, proto.mediapipe.ClassificationList.repeatedFields_, null);
  }, r2.inherits(proto.mediapipe.ClassificationList, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.ClassificationList.displayName = "proto.mediapipe.ClassificationList"), proto.mediapipe.ClassificationListCollection = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, proto.mediapipe.ClassificationListCollection.repeatedFields_, null);
  }, r2.inherits(proto.mediapipe.ClassificationListCollection, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.ClassificationListCollection.displayName = "proto.mediapipe.ClassificationListCollection"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.Classification.prototype.toObject = function(e3) {
    return proto.mediapipe.Classification.toObject(e3, this);
  }, proto.mediapipe.Classification.toObject = function(e3, r3) {
    var o3, i3 = { index: null == (o3 = t2.Message.getField(r3, 1)) ? void 0 : o3, score: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 2)) ? void 0 : o3, label: null == (o3 = t2.Message.getField(r3, 3)) ? void 0 : o3, displayName: null == (o3 = t2.Message.getField(r3, 4)) ? void 0 : o3 };
    return e3 && (i3.$jspbMessageInstance = r3), i3;
  }), proto.mediapipe.Classification.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.Classification();
    return proto.mediapipe.Classification.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.Classification.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readInt32();
          e3.setIndex(r3);
          break;
        case 2:
          r3 = t3.readFloat();
          e3.setScore(r3);
          break;
        case 3:
          r3 = t3.readString();
          e3.setLabel(r3);
          break;
        case 4:
          r3 = t3.readString();
          e3.setDisplayName(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.Classification.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.Classification.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.Classification.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeInt32(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeFloat(2, o3), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeString(3, o3), null != (o3 = t2.Message.getField(e3, 4)) && r3.writeString(4, o3);
  }, proto.mediapipe.Classification.prototype.getIndex = function() {
    return t2.Message.getFieldWithDefault(this, 1, 0);
  }, proto.mediapipe.Classification.prototype.setIndex = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.Classification.prototype.clearIndex = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.Classification.prototype.hasIndex = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.Classification.prototype.getScore = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 2, 0);
  }, proto.mediapipe.Classification.prototype.setScore = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.Classification.prototype.clearScore = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.Classification.prototype.hasScore = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.Classification.prototype.getLabel = function() {
    return t2.Message.getFieldWithDefault(this, 3, "");
  }, proto.mediapipe.Classification.prototype.setLabel = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.Classification.prototype.clearLabel = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.Classification.prototype.hasLabel = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.Classification.prototype.getDisplayName = function() {
    return t2.Message.getFieldWithDefault(this, 4, "");
  }, proto.mediapipe.Classification.prototype.setDisplayName = function(e3) {
    return t2.Message.setField(this, 4, e3);
  }, proto.mediapipe.Classification.prototype.clearDisplayName = function() {
    return t2.Message.setField(this, 4, void 0);
  }, proto.mediapipe.Classification.prototype.hasDisplayName = function() {
    return null != t2.Message.getField(this, 4);
  }, proto.mediapipe.ClassificationList.repeatedFields_ = [1], t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.ClassificationList.prototype.toObject = function(e3) {
    return proto.mediapipe.ClassificationList.toObject(e3, this);
  }, proto.mediapipe.ClassificationList.toObject = function(e3, r3) {
    var o3 = { classificationList: t2.Message.toObjectList(r3.getClassificationList(), proto.mediapipe.Classification.toObject, e3) };
    return e3 && (o3.$jspbMessageInstance = r3), o3;
  }), proto.mediapipe.ClassificationList.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.ClassificationList();
    return proto.mediapipe.ClassificationList.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.ClassificationList.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      if (1 === t3.getFieldNumber()) {
        var r3 = new proto.mediapipe.Classification();
        t3.readMessage(r3, proto.mediapipe.Classification.deserializeBinaryFromReader), e3.addClassification(r3);
      } else
        t3.skipField();
    }
    return e3;
  }, proto.mediapipe.ClassificationList.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.ClassificationList.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.ClassificationList.serializeBinaryToWriter = function(e3, t3) {
    var r3;
    (r3 = e3.getClassificationList()).length > 0 && t3.writeRepeatedMessage(1, r3, proto.mediapipe.Classification.serializeBinaryToWriter);
  }, proto.mediapipe.ClassificationList.prototype.getClassificationList = function() {
    return t2.Message.getRepeatedWrapperField(this, proto.mediapipe.Classification, 1);
  }, proto.mediapipe.ClassificationList.prototype.setClassificationList = function(e3) {
    return t2.Message.setRepeatedWrapperField(this, 1, e3);
  }, proto.mediapipe.ClassificationList.prototype.addClassification = function(e3, r3) {
    return t2.Message.addToRepeatedWrapperField(this, 1, e3, proto.mediapipe.Classification, r3);
  }, proto.mediapipe.ClassificationList.prototype.clearClassificationList = function() {
    return this.setClassificationList([]);
  }, proto.mediapipe.ClassificationListCollection.repeatedFields_ = [1], t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.ClassificationListCollection.prototype.toObject = function(e3) {
    return proto.mediapipe.ClassificationListCollection.toObject(e3, this);
  }, proto.mediapipe.ClassificationListCollection.toObject = function(e3, r3) {
    var o3 = { classificationListList: t2.Message.toObjectList(r3.getClassificationListList(), proto.mediapipe.ClassificationList.toObject, e3) };
    return e3 && (o3.$jspbMessageInstance = r3), o3;
  }), proto.mediapipe.ClassificationListCollection.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.ClassificationListCollection();
    return proto.mediapipe.ClassificationListCollection.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.ClassificationListCollection.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      if (1 === t3.getFieldNumber()) {
        var r3 = new proto.mediapipe.ClassificationList();
        t3.readMessage(r3, proto.mediapipe.ClassificationList.deserializeBinaryFromReader), e3.addClassificationList(r3);
      } else
        t3.skipField();
    }
    return e3;
  }, proto.mediapipe.ClassificationListCollection.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.ClassificationListCollection.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.ClassificationListCollection.serializeBinaryToWriter = function(e3, t3) {
    var r3;
    (r3 = e3.getClassificationListList()).length > 0 && t3.writeRepeatedMessage(1, r3, proto.mediapipe.ClassificationList.serializeBinaryToWriter);
  }, proto.mediapipe.ClassificationListCollection.prototype.getClassificationListList = function() {
    return t2.Message.getRepeatedWrapperField(this, proto.mediapipe.ClassificationList, 1);
  }, proto.mediapipe.ClassificationListCollection.prototype.setClassificationListList = function(e3) {
    return t2.Message.setRepeatedWrapperField(this, 1, e3);
  }, proto.mediapipe.ClassificationListCollection.prototype.addClassificationList = function(e3, r3) {
    return t2.Message.addToRepeatedWrapperField(this, 1, e3, proto.mediapipe.ClassificationList, r3);
  }, proto.mediapipe.ClassificationListCollection.prototype.clearClassificationListList = function() {
    return this.setClassificationListList([]);
  }, r2.object.extend(e2, proto.mediapipe);
}(classification_pb);
var landmark_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")();
  r2.exportSymbol("proto.mediapipe.Landmark", null, o2), r2.exportSymbol("proto.mediapipe.LandmarkList", null, o2), r2.exportSymbol("proto.mediapipe.LandmarkListCollection", null, o2), r2.exportSymbol("proto.mediapipe.NormalizedLandmark", null, o2), r2.exportSymbol("proto.mediapipe.NormalizedLandmarkList", null, o2), r2.exportSymbol("proto.mediapipe.NormalizedLandmarkListCollection", null, o2), proto.mediapipe.Landmark = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.Landmark, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.Landmark.displayName = "proto.mediapipe.Landmark"), proto.mediapipe.LandmarkList = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, proto.mediapipe.LandmarkList.repeatedFields_, null);
  }, r2.inherits(proto.mediapipe.LandmarkList, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.LandmarkList.displayName = "proto.mediapipe.LandmarkList"), proto.mediapipe.LandmarkListCollection = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, proto.mediapipe.LandmarkListCollection.repeatedFields_, null);
  }, r2.inherits(proto.mediapipe.LandmarkListCollection, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.LandmarkListCollection.displayName = "proto.mediapipe.LandmarkListCollection"), proto.mediapipe.NormalizedLandmark = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.NormalizedLandmark, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.NormalizedLandmark.displayName = "proto.mediapipe.NormalizedLandmark"), proto.mediapipe.NormalizedLandmarkList = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, proto.mediapipe.NormalizedLandmarkList.repeatedFields_, null);
  }, r2.inherits(proto.mediapipe.NormalizedLandmarkList, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.NormalizedLandmarkList.displayName = "proto.mediapipe.NormalizedLandmarkList"), proto.mediapipe.NormalizedLandmarkListCollection = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, proto.mediapipe.NormalizedLandmarkListCollection.repeatedFields_, null);
  }, r2.inherits(proto.mediapipe.NormalizedLandmarkListCollection, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.NormalizedLandmarkListCollection.displayName = "proto.mediapipe.NormalizedLandmarkListCollection"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.Landmark.prototype.toObject = function(e3) {
    return proto.mediapipe.Landmark.toObject(e3, this);
  }, proto.mediapipe.Landmark.toObject = function(e3, r3) {
    var o3, i3 = { x: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 1)) ? void 0 : o3, y: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 2)) ? void 0 : o3, z: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 3)) ? void 0 : o3, visibility: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 4)) ? void 0 : o3, presence: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 5)) ? void 0 : o3 };
    return e3 && (i3.$jspbMessageInstance = r3), i3;
  }), proto.mediapipe.Landmark.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.Landmark();
    return proto.mediapipe.Landmark.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.Landmark.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readFloat();
          e3.setX(r3);
          break;
        case 2:
          r3 = t3.readFloat();
          e3.setY(r3);
          break;
        case 3:
          r3 = t3.readFloat();
          e3.setZ(r3);
          break;
        case 4:
          r3 = t3.readFloat();
          e3.setVisibility(r3);
          break;
        case 5:
          r3 = t3.readFloat();
          e3.setPresence(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.Landmark.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.Landmark.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.Landmark.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeFloat(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeFloat(2, o3), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeFloat(3, o3), null != (o3 = t2.Message.getField(e3, 4)) && r3.writeFloat(4, o3), null != (o3 = t2.Message.getField(e3, 5)) && r3.writeFloat(5, o3);
  }, proto.mediapipe.Landmark.prototype.getX = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 1, 0);
  }, proto.mediapipe.Landmark.prototype.setX = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.Landmark.prototype.clearX = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.Landmark.prototype.hasX = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.Landmark.prototype.getY = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 2, 0);
  }, proto.mediapipe.Landmark.prototype.setY = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.Landmark.prototype.clearY = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.Landmark.prototype.hasY = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.Landmark.prototype.getZ = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 3, 0);
  }, proto.mediapipe.Landmark.prototype.setZ = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.Landmark.prototype.clearZ = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.Landmark.prototype.hasZ = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.Landmark.prototype.getVisibility = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 4, 0);
  }, proto.mediapipe.Landmark.prototype.setVisibility = function(e3) {
    return t2.Message.setField(this, 4, e3);
  }, proto.mediapipe.Landmark.prototype.clearVisibility = function() {
    return t2.Message.setField(this, 4, void 0);
  }, proto.mediapipe.Landmark.prototype.hasVisibility = function() {
    return null != t2.Message.getField(this, 4);
  }, proto.mediapipe.Landmark.prototype.getPresence = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 5, 0);
  }, proto.mediapipe.Landmark.prototype.setPresence = function(e3) {
    return t2.Message.setField(this, 5, e3);
  }, proto.mediapipe.Landmark.prototype.clearPresence = function() {
    return t2.Message.setField(this, 5, void 0);
  }, proto.mediapipe.Landmark.prototype.hasPresence = function() {
    return null != t2.Message.getField(this, 5);
  }, proto.mediapipe.LandmarkList.repeatedFields_ = [1], t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.LandmarkList.prototype.toObject = function(e3) {
    return proto.mediapipe.LandmarkList.toObject(e3, this);
  }, proto.mediapipe.LandmarkList.toObject = function(e3, r3) {
    var o3 = { landmarkList: t2.Message.toObjectList(r3.getLandmarkList(), proto.mediapipe.Landmark.toObject, e3) };
    return e3 && (o3.$jspbMessageInstance = r3), o3;
  }), proto.mediapipe.LandmarkList.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.LandmarkList();
    return proto.mediapipe.LandmarkList.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.LandmarkList.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      if (1 === t3.getFieldNumber()) {
        var r3 = new proto.mediapipe.Landmark();
        t3.readMessage(r3, proto.mediapipe.Landmark.deserializeBinaryFromReader), e3.addLandmark(r3);
      } else
        t3.skipField();
    }
    return e3;
  }, proto.mediapipe.LandmarkList.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.LandmarkList.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.LandmarkList.serializeBinaryToWriter = function(e3, t3) {
    var r3;
    (r3 = e3.getLandmarkList()).length > 0 && t3.writeRepeatedMessage(1, r3, proto.mediapipe.Landmark.serializeBinaryToWriter);
  }, proto.mediapipe.LandmarkList.prototype.getLandmarkList = function() {
    return t2.Message.getRepeatedWrapperField(this, proto.mediapipe.Landmark, 1);
  }, proto.mediapipe.LandmarkList.prototype.setLandmarkList = function(e3) {
    return t2.Message.setRepeatedWrapperField(this, 1, e3);
  }, proto.mediapipe.LandmarkList.prototype.addLandmark = function(e3, r3) {
    return t2.Message.addToRepeatedWrapperField(this, 1, e3, proto.mediapipe.Landmark, r3);
  }, proto.mediapipe.LandmarkList.prototype.clearLandmarkList = function() {
    return this.setLandmarkList([]);
  }, proto.mediapipe.LandmarkListCollection.repeatedFields_ = [1], t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.LandmarkListCollection.prototype.toObject = function(e3) {
    return proto.mediapipe.LandmarkListCollection.toObject(e3, this);
  }, proto.mediapipe.LandmarkListCollection.toObject = function(e3, r3) {
    var o3 = { landmarkListList: t2.Message.toObjectList(r3.getLandmarkListList(), proto.mediapipe.LandmarkList.toObject, e3) };
    return e3 && (o3.$jspbMessageInstance = r3), o3;
  }), proto.mediapipe.LandmarkListCollection.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.LandmarkListCollection();
    return proto.mediapipe.LandmarkListCollection.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.LandmarkListCollection.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      if (1 === t3.getFieldNumber()) {
        var r3 = new proto.mediapipe.LandmarkList();
        t3.readMessage(r3, proto.mediapipe.LandmarkList.deserializeBinaryFromReader), e3.addLandmarkList(r3);
      } else
        t3.skipField();
    }
    return e3;
  }, proto.mediapipe.LandmarkListCollection.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.LandmarkListCollection.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.LandmarkListCollection.serializeBinaryToWriter = function(e3, t3) {
    var r3;
    (r3 = e3.getLandmarkListList()).length > 0 && t3.writeRepeatedMessage(1, r3, proto.mediapipe.LandmarkList.serializeBinaryToWriter);
  }, proto.mediapipe.LandmarkListCollection.prototype.getLandmarkListList = function() {
    return t2.Message.getRepeatedWrapperField(this, proto.mediapipe.LandmarkList, 1);
  }, proto.mediapipe.LandmarkListCollection.prototype.setLandmarkListList = function(e3) {
    return t2.Message.setRepeatedWrapperField(this, 1, e3);
  }, proto.mediapipe.LandmarkListCollection.prototype.addLandmarkList = function(e3, r3) {
    return t2.Message.addToRepeatedWrapperField(this, 1, e3, proto.mediapipe.LandmarkList, r3);
  }, proto.mediapipe.LandmarkListCollection.prototype.clearLandmarkListList = function() {
    return this.setLandmarkListList([]);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.NormalizedLandmark.prototype.toObject = function(e3) {
    return proto.mediapipe.NormalizedLandmark.toObject(e3, this);
  }, proto.mediapipe.NormalizedLandmark.toObject = function(e3, r3) {
    var o3, i3 = { x: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 1)) ? void 0 : o3, y: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 2)) ? void 0 : o3, z: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 3)) ? void 0 : o3, visibility: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 4)) ? void 0 : o3, presence: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 5)) ? void 0 : o3 };
    return e3 && (i3.$jspbMessageInstance = r3), i3;
  }), proto.mediapipe.NormalizedLandmark.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.NormalizedLandmark();
    return proto.mediapipe.NormalizedLandmark.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.NormalizedLandmark.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readFloat();
          e3.setX(r3);
          break;
        case 2:
          r3 = t3.readFloat();
          e3.setY(r3);
          break;
        case 3:
          r3 = t3.readFloat();
          e3.setZ(r3);
          break;
        case 4:
          r3 = t3.readFloat();
          e3.setVisibility(r3);
          break;
        case 5:
          r3 = t3.readFloat();
          e3.setPresence(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.NormalizedLandmark.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.NormalizedLandmark.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.NormalizedLandmark.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeFloat(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeFloat(2, o3), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeFloat(3, o3), null != (o3 = t2.Message.getField(e3, 4)) && r3.writeFloat(4, o3), null != (o3 = t2.Message.getField(e3, 5)) && r3.writeFloat(5, o3);
  }, proto.mediapipe.NormalizedLandmark.prototype.getX = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 1, 0);
  }, proto.mediapipe.NormalizedLandmark.prototype.setX = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.NormalizedLandmark.prototype.clearX = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.NormalizedLandmark.prototype.hasX = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.NormalizedLandmark.prototype.getY = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 2, 0);
  }, proto.mediapipe.NormalizedLandmark.prototype.setY = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.NormalizedLandmark.prototype.clearY = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.NormalizedLandmark.prototype.hasY = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.NormalizedLandmark.prototype.getZ = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 3, 0);
  }, proto.mediapipe.NormalizedLandmark.prototype.setZ = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.NormalizedLandmark.prototype.clearZ = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.NormalizedLandmark.prototype.hasZ = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.NormalizedLandmark.prototype.getVisibility = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 4, 0);
  }, proto.mediapipe.NormalizedLandmark.prototype.setVisibility = function(e3) {
    return t2.Message.setField(this, 4, e3);
  }, proto.mediapipe.NormalizedLandmark.prototype.clearVisibility = function() {
    return t2.Message.setField(this, 4, void 0);
  }, proto.mediapipe.NormalizedLandmark.prototype.hasVisibility = function() {
    return null != t2.Message.getField(this, 4);
  }, proto.mediapipe.NormalizedLandmark.prototype.getPresence = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 5, 0);
  }, proto.mediapipe.NormalizedLandmark.prototype.setPresence = function(e3) {
    return t2.Message.setField(this, 5, e3);
  }, proto.mediapipe.NormalizedLandmark.prototype.clearPresence = function() {
    return t2.Message.setField(this, 5, void 0);
  }, proto.mediapipe.NormalizedLandmark.prototype.hasPresence = function() {
    return null != t2.Message.getField(this, 5);
  }, proto.mediapipe.NormalizedLandmarkList.repeatedFields_ = [1], t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.NormalizedLandmarkList.prototype.toObject = function(e3) {
    return proto.mediapipe.NormalizedLandmarkList.toObject(e3, this);
  }, proto.mediapipe.NormalizedLandmarkList.toObject = function(e3, r3) {
    var o3 = { landmarkList: t2.Message.toObjectList(r3.getLandmarkList(), proto.mediapipe.NormalizedLandmark.toObject, e3) };
    return e3 && (o3.$jspbMessageInstance = r3), o3;
  }), proto.mediapipe.NormalizedLandmarkList.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.NormalizedLandmarkList();
    return proto.mediapipe.NormalizedLandmarkList.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.NormalizedLandmarkList.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      if (1 === t3.getFieldNumber()) {
        var r3 = new proto.mediapipe.NormalizedLandmark();
        t3.readMessage(r3, proto.mediapipe.NormalizedLandmark.deserializeBinaryFromReader), e3.addLandmark(r3);
      } else
        t3.skipField();
    }
    return e3;
  }, proto.mediapipe.NormalizedLandmarkList.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.NormalizedLandmarkList.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.NormalizedLandmarkList.serializeBinaryToWriter = function(e3, t3) {
    var r3;
    (r3 = e3.getLandmarkList()).length > 0 && t3.writeRepeatedMessage(1, r3, proto.mediapipe.NormalizedLandmark.serializeBinaryToWriter);
  }, proto.mediapipe.NormalizedLandmarkList.prototype.getLandmarkList = function() {
    return t2.Message.getRepeatedWrapperField(this, proto.mediapipe.NormalizedLandmark, 1);
  }, proto.mediapipe.NormalizedLandmarkList.prototype.setLandmarkList = function(e3) {
    return t2.Message.setRepeatedWrapperField(this, 1, e3);
  }, proto.mediapipe.NormalizedLandmarkList.prototype.addLandmark = function(e3, r3) {
    return t2.Message.addToRepeatedWrapperField(this, 1, e3, proto.mediapipe.NormalizedLandmark, r3);
  }, proto.mediapipe.NormalizedLandmarkList.prototype.clearLandmarkList = function() {
    return this.setLandmarkList([]);
  }, proto.mediapipe.NormalizedLandmarkListCollection.repeatedFields_ = [1], t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.NormalizedLandmarkListCollection.prototype.toObject = function(e3) {
    return proto.mediapipe.NormalizedLandmarkListCollection.toObject(e3, this);
  }, proto.mediapipe.NormalizedLandmarkListCollection.toObject = function(e3, r3) {
    var o3 = { landmarkListList: t2.Message.toObjectList(r3.getLandmarkListList(), proto.mediapipe.NormalizedLandmarkList.toObject, e3) };
    return e3 && (o3.$jspbMessageInstance = r3), o3;
  }), proto.mediapipe.NormalizedLandmarkListCollection.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.NormalizedLandmarkListCollection();
    return proto.mediapipe.NormalizedLandmarkListCollection.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.NormalizedLandmarkListCollection.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      if (1 === t3.getFieldNumber()) {
        var r3 = new proto.mediapipe.NormalizedLandmarkList();
        t3.readMessage(r3, proto.mediapipe.NormalizedLandmarkList.deserializeBinaryFromReader), e3.addLandmarkList(r3);
      } else
        t3.skipField();
    }
    return e3;
  }, proto.mediapipe.NormalizedLandmarkListCollection.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.NormalizedLandmarkListCollection.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.NormalizedLandmarkListCollection.serializeBinaryToWriter = function(e3, t3) {
    var r3;
    (r3 = e3.getLandmarkListList()).length > 0 && t3.writeRepeatedMessage(1, r3, proto.mediapipe.NormalizedLandmarkList.serializeBinaryToWriter);
  }, proto.mediapipe.NormalizedLandmarkListCollection.prototype.getLandmarkListList = function() {
    return t2.Message.getRepeatedWrapperField(this, proto.mediapipe.NormalizedLandmarkList, 1);
  }, proto.mediapipe.NormalizedLandmarkListCollection.prototype.setLandmarkListList = function(e3) {
    return t2.Message.setRepeatedWrapperField(this, 1, e3);
  }, proto.mediapipe.NormalizedLandmarkListCollection.prototype.addLandmarkList = function(e3, r3) {
    return t2.Message.addToRepeatedWrapperField(this, 1, e3, proto.mediapipe.NormalizedLandmarkList, r3);
  }, proto.mediapipe.NormalizedLandmarkListCollection.prototype.clearLandmarkListList = function() {
    return this.setLandmarkListList([]);
  }, r2.object.extend(e2, proto.mediapipe);
}(landmark_pb);
var face_geometry_pb = {};
var matrix_data_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")();
  r2.exportSymbol("proto.mediapipe.MatrixData", null, o2), r2.exportSymbol("proto.mediapipe.MatrixData.Layout", null, o2), proto.mediapipe.MatrixData = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, proto.mediapipe.MatrixData.repeatedFields_, null);
  }, r2.inherits(proto.mediapipe.MatrixData, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.MatrixData.displayName = "proto.mediapipe.MatrixData"), proto.mediapipe.MatrixData.repeatedFields_ = [3], t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.MatrixData.prototype.toObject = function(e3) {
    return proto.mediapipe.MatrixData.toObject(e3, this);
  }, proto.mediapipe.MatrixData.toObject = function(e3, r3) {
    var o3, i3 = { rows: null == (o3 = t2.Message.getField(r3, 1)) ? void 0 : o3, cols: null == (o3 = t2.Message.getField(r3, 2)) ? void 0 : o3, packedDataList: null == (o3 = t2.Message.getRepeatedFloatingPointField(r3, 3)) ? void 0 : o3, layout: t2.Message.getFieldWithDefault(r3, 4, 0) };
    return e3 && (i3.$jspbMessageInstance = r3), i3;
  }), proto.mediapipe.MatrixData.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.MatrixData();
    return proto.mediapipe.MatrixData.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.MatrixData.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readInt32();
          e3.setRows(r3);
          break;
        case 2:
          r3 = t3.readInt32();
          e3.setCols(r3);
          break;
        case 3:
          for (var o3 = t3.isDelimited() ? t3.readPackedFloat() : [t3.readFloat()], i3 = 0; i3 < o3.length; i3++)
            e3.addPackedData(o3[i3]);
          break;
        case 4:
          r3 = t3.readEnum();
          e3.setLayout(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.MatrixData.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.MatrixData.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.MatrixData.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeInt32(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeInt32(2, o3), (o3 = e3.getPackedDataList()).length > 0 && r3.writePackedFloat(3, o3), null != (o3 = t2.Message.getField(e3, 4)) && r3.writeEnum(4, o3);
  }, proto.mediapipe.MatrixData.Layout = { COLUMN_MAJOR: 0, ROW_MAJOR: 1 }, proto.mediapipe.MatrixData.prototype.getRows = function() {
    return t2.Message.getFieldWithDefault(this, 1, 0);
  }, proto.mediapipe.MatrixData.prototype.setRows = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.MatrixData.prototype.clearRows = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.MatrixData.prototype.hasRows = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.MatrixData.prototype.getCols = function() {
    return t2.Message.getFieldWithDefault(this, 2, 0);
  }, proto.mediapipe.MatrixData.prototype.setCols = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.MatrixData.prototype.clearCols = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.MatrixData.prototype.hasCols = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.MatrixData.prototype.getPackedDataList = function() {
    return t2.Message.getRepeatedFloatingPointField(this, 3);
  }, proto.mediapipe.MatrixData.prototype.setPackedDataList = function(e3) {
    return t2.Message.setField(this, 3, e3 || []);
  }, proto.mediapipe.MatrixData.prototype.addPackedData = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 3, e3, r3);
  }, proto.mediapipe.MatrixData.prototype.clearPackedDataList = function() {
    return this.setPackedDataList([]);
  }, proto.mediapipe.MatrixData.prototype.getLayout = function() {
    return t2.Message.getFieldWithDefault(this, 4, 0);
  }, proto.mediapipe.MatrixData.prototype.setLayout = function(e3) {
    return t2.Message.setField(this, 4, e3);
  }, proto.mediapipe.MatrixData.prototype.clearLayout = function() {
    return t2.Message.setField(this, 4, void 0);
  }, proto.mediapipe.MatrixData.prototype.hasLayout = function() {
    return null != t2.Message.getField(this, 4);
  }, r2.object.extend(e2, proto.mediapipe);
}(matrix_data_pb);
var mesh_3d_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")();
  r2.exportSymbol("proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d", null, o2), r2.exportSymbol("proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.PrimitiveType", null, o2), r2.exportSymbol("proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.VertexType", null, o2), proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.repeatedFields_, null);
  }, r2.inherits(proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.displayName = "proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d"), proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.repeatedFields_ = [3, 4], t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.toObject(e3, this);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.toObject = function(e3, r3) {
    var o3, i3 = { vertexType: null == (o3 = t2.Message.getField(r3, 1)) ? void 0 : o3, primitiveType: null == (o3 = t2.Message.getField(r3, 2)) ? void 0 : o3, vertexBufferList: null == (o3 = t2.Message.getRepeatedFloatingPointField(r3, 3)) ? void 0 : o3, indexBufferList: null == (o3 = t2.Message.getRepeatedField(r3, 4)) ? void 0 : o3 };
    return e3 && (i3.$jspbMessageInstance = r3), i3;
  }), proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d();
    return proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readEnum();
          e3.setVertexType(r3);
          break;
        case 2:
          r3 = t3.readEnum();
          e3.setPrimitiveType(r3);
          break;
        case 3:
          for (var o3 = t3.isDelimited() ? t3.readPackedFloat() : [t3.readFloat()], i3 = 0; i3 < o3.length; i3++)
            e3.addVertexBuffer(o3[i3]);
          break;
        case 4:
          for (o3 = t3.isDelimited() ? t3.readPackedUint32() : [t3.readUint32()], i3 = 0; i3 < o3.length; i3++)
            e3.addIndexBuffer(o3[i3]);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeEnum(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeEnum(2, o3), (o3 = e3.getVertexBufferList()).length > 0 && r3.writeRepeatedFloat(3, o3), (o3 = e3.getIndexBufferList()).length > 0 && r3.writeRepeatedUint32(4, o3);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.VertexType = { VERTEX_PT: 0 }, proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.PrimitiveType = { TRIANGLE: 0 }, proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.prototype.getVertexType = function() {
    return t2.Message.getFieldWithDefault(this, 1, 0);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.prototype.setVertexType = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.prototype.clearVertexType = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.prototype.hasVertexType = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.prototype.getPrimitiveType = function() {
    return t2.Message.getFieldWithDefault(this, 2, 0);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.prototype.setPrimitiveType = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.prototype.clearPrimitiveType = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.prototype.hasPrimitiveType = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.prototype.getVertexBufferList = function() {
    return t2.Message.getRepeatedFloatingPointField(this, 3);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.prototype.setVertexBufferList = function(e3) {
    return t2.Message.setField(this, 3, e3 || []);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.prototype.addVertexBuffer = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 3, e3, r3);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.prototype.clearVertexBufferList = function() {
    return this.setVertexBufferList([]);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.prototype.getIndexBufferList = function() {
    return t2.Message.getRepeatedField(this, 4);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.prototype.setIndexBufferList = function(e3) {
    return t2.Message.setField(this, 4, e3 || []);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.prototype.addIndexBuffer = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 4, e3, r3);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.Mesh3d.prototype.clearIndexBufferList = function() {
    return this.setIndexBufferList([]);
  }, r2.object.extend(e2, proto.mediapipe.tasks.vision.face_geometry.proto);
}(mesh_3d_pb), function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = matrix_data_pb;
  r2.object.extend(proto, i3);
  var a3 = mesh_3d_pb;
  r2.object.extend(proto, a3), r2.exportSymbol("proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometry", null, o2), proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometry = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometry, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometry.displayName = "proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometry"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometry.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometry.toObject(e3, this);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometry.toObject = function(e3, t3) {
    var r3, o3 = { mesh: (r3 = t3.getMesh()) && a3.Mesh3d.toObject(e3, r3), poseTransformMatrix: (r3 = t3.getPoseTransformMatrix()) && i3.MatrixData.toObject(e3, r3) };
    return e3 && (o3.$jspbMessageInstance = t3), o3;
  }), proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometry.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometry();
    return proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometry.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometry.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new a3.Mesh3d();
          t3.readMessage(r3, a3.Mesh3d.deserializeBinaryFromReader), e3.setMesh(r3);
          break;
        case 2:
          r3 = new i3.MatrixData();
          t3.readMessage(r3, i3.MatrixData.deserializeBinaryFromReader), e3.setPoseTransformMatrix(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometry.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometry.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometry.serializeBinaryToWriter = function(e3, t3) {
    var r3 = void 0;
    null != (r3 = e3.getMesh()) && t3.writeMessage(1, r3, a3.Mesh3d.serializeBinaryToWriter), null != (r3 = e3.getPoseTransformMatrix()) && t3.writeMessage(2, r3, i3.MatrixData.serializeBinaryToWriter);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometry.prototype.getMesh = function() {
    return t2.Message.getWrapperField(this, a3.Mesh3d, 1);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometry.prototype.setMesh = function(e3) {
    return t2.Message.setWrapperField(this, 1, e3);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometry.prototype.clearMesh = function() {
    return this.setMesh(void 0);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometry.prototype.hasMesh = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometry.prototype.getPoseTransformMatrix = function() {
    return t2.Message.getWrapperField(this, i3.MatrixData, 2);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometry.prototype.setPoseTransformMatrix = function(e3) {
    return t2.Message.setWrapperField(this, 2, e3);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometry.prototype.clearPoseTransformMatrix = function() {
    return this.setPoseTransformMatrix(void 0);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometry.prototype.hasPoseTransformMatrix = function() {
    return null != t2.Message.getField(this, 2);
  }, r2.object.extend(e2, proto.mediapipe.tasks.vision.face_geometry.proto);
}(face_geometry_pb);
var face_landmarker_graph_options_pb = {};
var face_geometry_graph_options_pb = {};
var geometry_pipeline_calculator_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = calculator_options_pb;
  r2.object.extend(proto, i3);
  var a3 = external_file_pb;
  r2.object.extend(proto, a3), r2.exportSymbol("proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions", null, o2), proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions.displayName = "proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions.toObject(e3, this);
  }, proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions.toObject = function(e3, t3) {
    var r3, o3 = { metadataFile: (r3 = t3.getMetadataFile()) && a3.ExternalFile.toObject(e3, r3) };
    return e3 && (o3.$jspbMessageInstance = t3), o3;
  }), proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions();
    return proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      if (1 === t3.getFieldNumber()) {
        var r3 = new a3.ExternalFile();
        t3.readMessage(r3, a3.ExternalFile.deserializeBinaryFromReader), e3.setMetadataFile(r3);
      } else
        t3.skipField();
    }
    return e3;
  }, proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions.serializeBinaryToWriter = function(e3, t3) {
    var r3;
    null != (r3 = e3.getMetadataFile()) && t3.writeMessage(1, r3, a3.ExternalFile.serializeBinaryToWriter);
  }, proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions.ext = new t2.ExtensionFieldInfo(512499200, { ext: 0 }, proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions, proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions.toObject, 0), i3.CalculatorOptions.extensionsBinary[512499200] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions.deserializeBinaryFromReader, false), i3.CalculatorOptions.extensions[512499200] = proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions.ext, proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions.prototype.getMetadataFile = function() {
    return t2.Message.getWrapperField(this, a3.ExternalFile, 1);
  }, proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions.prototype.setMetadataFile = function(e3) {
    return t2.Message.setWrapperField(this, 1, e3);
  }, proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions.prototype.clearMetadataFile = function() {
    return this.setMetadataFile(void 0);
  }, proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions.prototype.hasMetadataFile = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions.ext = new t2.ExtensionFieldInfo(512499200, { ext: 0 }, proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions, proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions.toObject, 0), i3.CalculatorOptions.extensionsBinary[512499200] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions.deserializeBinaryFromReader, false), i3.CalculatorOptions.extensions[512499200] = proto.mediapipe.tasks.vision.face_geometry.FaceGeometryPipelineCalculatorOptions.ext, r2.object.extend(e2, proto.mediapipe.tasks.vision.face_geometry);
}(geometry_pipeline_calculator_pb), function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = calculator_options_pb;
  r2.object.extend(proto, i3);
  var a3 = geometry_pipeline_calculator_pb;
  r2.object.extend(proto, a3), r2.exportSymbol("proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions", null, o2), proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions.displayName = "proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions.toObject(e3, this);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions.toObject = function(e3, t3) {
    var r3, o3 = { geometryPipelineOptions: (r3 = t3.getGeometryPipelineOptions()) && a3.FaceGeometryPipelineCalculatorOptions.toObject(e3, r3) };
    return e3 && (o3.$jspbMessageInstance = t3), o3;
  }), proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions();
    return proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      if (1 === t3.getFieldNumber()) {
        var r3 = new a3.FaceGeometryPipelineCalculatorOptions();
        t3.readMessage(r3, a3.FaceGeometryPipelineCalculatorOptions.deserializeBinaryFromReader), e3.setGeometryPipelineOptions(r3);
      } else
        t3.skipField();
    }
    return e3;
  }, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions.serializeBinaryToWriter = function(e3, t3) {
    var r3;
    null != (r3 = e3.getGeometryPipelineOptions()) && t3.writeMessage(1, r3, a3.FaceGeometryPipelineCalculatorOptions.serializeBinaryToWriter);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions.ext = new t2.ExtensionFieldInfo(515723506, { ext: 0 }, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions.toObject, 0), i3.CalculatorOptions.extensionsBinary[515723506] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions.deserializeBinaryFromReader, false), i3.CalculatorOptions.extensions[515723506] = proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions.ext, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions.prototype.getGeometryPipelineOptions = function() {
    return t2.Message.getWrapperField(this, a3.FaceGeometryPipelineCalculatorOptions, 1);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions.prototype.setGeometryPipelineOptions = function(e3) {
    return t2.Message.setWrapperField(this, 1, e3);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions.prototype.clearGeometryPipelineOptions = function() {
    return this.setGeometryPipelineOptions(void 0);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions.prototype.hasGeometryPipelineOptions = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions.ext = new t2.ExtensionFieldInfo(515723506, { ext: 0 }, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions.toObject, 0), i3.CalculatorOptions.extensionsBinary[515723506] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions.deserializeBinaryFromReader, false), i3.CalculatorOptions.extensions[515723506] = proto.mediapipe.tasks.vision.face_geometry.proto.FaceGeometryGraphOptions.ext, r2.object.extend(e2, proto.mediapipe.tasks.vision.face_geometry.proto);
}(face_geometry_graph_options_pb);
var face_landmarks_detector_graph_options_pb = {};
var face_blendshapes_graph_options_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = calculator_pb;
  r2.object.extend(proto, i3);
  var a3 = calculator_options_pb;
  r2.object.extend(proto, a3);
  var n2 = base_options_pb;
  r2.object.extend(proto, n2), r2.exportSymbol("proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions", null, o2), proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions.displayName = "proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions.toObject(e3, this);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions.toObject = function(e3, t3) {
    var r3, o3 = { baseOptions: (r3 = t3.getBaseOptions()) && n2.BaseOptions.toObject(e3, r3) };
    return e3 && (o3.$jspbMessageInstance = t3), o3;
  }), proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions();
    return proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      if (1 === t3.getFieldNumber()) {
        var r3 = new n2.BaseOptions();
        t3.readMessage(r3, n2.BaseOptions.deserializeBinaryFromReader), e3.setBaseOptions(r3);
      } else
        t3.skipField();
    }
    return e3;
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions.serializeBinaryToWriter = function(e3, t3) {
    var r3;
    null != (r3 = e3.getBaseOptions()) && t3.writeMessage(1, r3, n2.BaseOptions.serializeBinaryToWriter);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions.ext = new t2.ExtensionFieldInfo(508981768, { ext: 0 }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[508981768] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[508981768] = proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions.ext, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions.prototype.getBaseOptions = function() {
    return t2.Message.getWrapperField(this, n2.BaseOptions, 1);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions.prototype.setBaseOptions = function(e3) {
    return t2.Message.setWrapperField(this, 1, e3);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions.prototype.clearBaseOptions = function() {
    return this.setBaseOptions(void 0);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions.prototype.hasBaseOptions = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions.ext = new t2.ExtensionFieldInfo(508981768, { ext: 0 }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[508981768] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[508981768] = proto.mediapipe.tasks.vision.face_landmarker.proto.FaceBlendshapesGraphOptions.ext, r2.object.extend(e2, proto.mediapipe.tasks.vision.face_landmarker.proto);
}(face_blendshapes_graph_options_pb), function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = calculator_pb;
  r2.object.extend(proto, i3);
  var a3 = calculator_options_pb;
  r2.object.extend(proto, a3);
  var n2 = base_options_pb;
  r2.object.extend(proto, n2);
  var s2 = face_blendshapes_graph_options_pb;
  r2.object.extend(proto, s2), r2.exportSymbol("proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions", null, o2), proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.displayName = "proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.toObject(e3, this);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.toObject = function(e3, r3) {
    var o3, i4 = { baseOptions: (o3 = r3.getBaseOptions()) && n2.BaseOptions.toObject(e3, o3), minDetectionConfidence: t2.Message.getFloatingPointFieldWithDefault(r3, 2, 0.5), smoothLandmarks: null == (o3 = t2.Message.getBooleanField(r3, 4)) ? void 0 : o3, faceBlendshapesGraphOptions: (o3 = r3.getFaceBlendshapesGraphOptions()) && s2.FaceBlendshapesGraphOptions.toObject(e3, o3) };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions();
    return proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new n2.BaseOptions();
          t3.readMessage(r3, n2.BaseOptions.deserializeBinaryFromReader), e3.setBaseOptions(r3);
          break;
        case 2:
          r3 = t3.readFloat();
          e3.setMinDetectionConfidence(r3);
          break;
        case 4:
          r3 = t3.readBool();
          e3.setSmoothLandmarks(r3);
          break;
        case 3:
          r3 = new s2.FaceBlendshapesGraphOptions();
          t3.readMessage(r3, s2.FaceBlendshapesGraphOptions.deserializeBinaryFromReader), e3.setFaceBlendshapesGraphOptions(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = e3.getBaseOptions()) && r3.writeMessage(1, o3, n2.BaseOptions.serializeBinaryToWriter), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeFloat(2, o3), null != (o3 = t2.Message.getField(e3, 4)) && r3.writeBool(4, o3), null != (o3 = e3.getFaceBlendshapesGraphOptions()) && r3.writeMessage(3, o3, s2.FaceBlendshapesGraphOptions.serializeBinaryToWriter);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.ext = new t2.ExtensionFieldInfo(508968149, { ext: 0 }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[508968149] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[508968149] = proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.ext, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.prototype.getBaseOptions = function() {
    return t2.Message.getWrapperField(this, n2.BaseOptions, 1);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.prototype.setBaseOptions = function(e3) {
    return t2.Message.setWrapperField(this, 1, e3);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.prototype.clearBaseOptions = function() {
    return this.setBaseOptions(void 0);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.prototype.hasBaseOptions = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.prototype.getMinDetectionConfidence = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 2, 0.5);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.prototype.setMinDetectionConfidence = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.prototype.clearMinDetectionConfidence = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.prototype.hasMinDetectionConfidence = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.prototype.getSmoothLandmarks = function() {
    return t2.Message.getBooleanFieldWithDefault(this, 4, false);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.prototype.setSmoothLandmarks = function(e3) {
    return t2.Message.setField(this, 4, e3);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.prototype.clearSmoothLandmarks = function() {
    return t2.Message.setField(this, 4, void 0);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.prototype.hasSmoothLandmarks = function() {
    return null != t2.Message.getField(this, 4);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.prototype.getFaceBlendshapesGraphOptions = function() {
    return t2.Message.getWrapperField(this, s2.FaceBlendshapesGraphOptions, 3);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.prototype.setFaceBlendshapesGraphOptions = function(e3) {
    return t2.Message.setWrapperField(this, 3, e3);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.prototype.clearFaceBlendshapesGraphOptions = function() {
    return this.setFaceBlendshapesGraphOptions(void 0);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.prototype.hasFaceBlendshapesGraphOptions = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.ext = new t2.ExtensionFieldInfo(508968149, { ext: 0 }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[508968149] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[508968149] = proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarksDetectorGraphOptions.ext, r2.object.extend(e2, proto.mediapipe.tasks.vision.face_landmarker.proto);
}(face_landmarks_detector_graph_options_pb), function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = calculator_pb;
  r2.object.extend(proto, i3);
  var a3 = calculator_options_pb;
  r2.object.extend(proto, a3);
  var n2 = base_options_pb;
  r2.object.extend(proto, n2);
  var s2 = face_detector_graph_options_pb;
  r2.object.extend(proto, s2);
  var p2 = face_geometry_graph_options_pb;
  r2.object.extend(proto, p2);
  var d2 = face_landmarks_detector_graph_options_pb;
  r2.object.extend(proto, d2), r2.exportSymbol("proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions", null, o2), proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.displayName = "proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.toObject(e3, this);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.toObject = function(e3, r3) {
    var o3, i4 = { baseOptions: (o3 = r3.getBaseOptions()) && n2.BaseOptions.toObject(e3, o3), faceDetectorGraphOptions: (o3 = r3.getFaceDetectorGraphOptions()) && s2.FaceDetectorGraphOptions.toObject(e3, o3), faceLandmarksDetectorGraphOptions: (o3 = r3.getFaceLandmarksDetectorGraphOptions()) && d2.FaceLandmarksDetectorGraphOptions.toObject(e3, o3), minTrackingConfidence: t2.Message.getFloatingPointFieldWithDefault(r3, 4, 0.5), faceGeometryGraphOptions: (o3 = r3.getFaceGeometryGraphOptions()) && p2.FaceGeometryGraphOptions.toObject(e3, o3) };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions();
    return proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new n2.BaseOptions();
          t3.readMessage(r3, n2.BaseOptions.deserializeBinaryFromReader), e3.setBaseOptions(r3);
          break;
        case 2:
          r3 = new s2.FaceDetectorGraphOptions();
          t3.readMessage(r3, s2.FaceDetectorGraphOptions.deserializeBinaryFromReader), e3.setFaceDetectorGraphOptions(r3);
          break;
        case 3:
          r3 = new d2.FaceLandmarksDetectorGraphOptions();
          t3.readMessage(r3, d2.FaceLandmarksDetectorGraphOptions.deserializeBinaryFromReader), e3.setFaceLandmarksDetectorGraphOptions(r3);
          break;
        case 4:
          r3 = t3.readFloat();
          e3.setMinTrackingConfidence(r3);
          break;
        case 5:
          r3 = new p2.FaceGeometryGraphOptions();
          t3.readMessage(r3, p2.FaceGeometryGraphOptions.deserializeBinaryFromReader), e3.setFaceGeometryGraphOptions(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = e3.getBaseOptions()) && r3.writeMessage(1, o3, n2.BaseOptions.serializeBinaryToWriter), null != (o3 = e3.getFaceDetectorGraphOptions()) && r3.writeMessage(2, o3, s2.FaceDetectorGraphOptions.serializeBinaryToWriter), null != (o3 = e3.getFaceLandmarksDetectorGraphOptions()) && r3.writeMessage(3, o3, d2.FaceLandmarksDetectorGraphOptions.serializeBinaryToWriter), null != (o3 = t2.Message.getField(e3, 4)) && r3.writeFloat(4, o3), null != (o3 = e3.getFaceGeometryGraphOptions()) && r3.writeMessage(5, o3, p2.FaceGeometryGraphOptions.serializeBinaryToWriter);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.ext = new t2.ExtensionFieldInfo(508968150, { ext: 0 }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[508968150] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[508968150] = proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.ext, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.prototype.getBaseOptions = function() {
    return t2.Message.getWrapperField(this, n2.BaseOptions, 1);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.prototype.setBaseOptions = function(e3) {
    return t2.Message.setWrapperField(this, 1, e3);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.prototype.clearBaseOptions = function() {
    return this.setBaseOptions(void 0);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.prototype.hasBaseOptions = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.prototype.getFaceDetectorGraphOptions = function() {
    return t2.Message.getWrapperField(this, s2.FaceDetectorGraphOptions, 2);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.prototype.setFaceDetectorGraphOptions = function(e3) {
    return t2.Message.setWrapperField(this, 2, e3);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.prototype.clearFaceDetectorGraphOptions = function() {
    return this.setFaceDetectorGraphOptions(void 0);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.prototype.hasFaceDetectorGraphOptions = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.prototype.getFaceLandmarksDetectorGraphOptions = function() {
    return t2.Message.getWrapperField(this, d2.FaceLandmarksDetectorGraphOptions, 3);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.prototype.setFaceLandmarksDetectorGraphOptions = function(e3) {
    return t2.Message.setWrapperField(this, 3, e3);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.prototype.clearFaceLandmarksDetectorGraphOptions = function() {
    return this.setFaceLandmarksDetectorGraphOptions(void 0);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.prototype.hasFaceLandmarksDetectorGraphOptions = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.prototype.getMinTrackingConfidence = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 4, 0.5);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.prototype.setMinTrackingConfidence = function(e3) {
    return t2.Message.setField(this, 4, e3);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.prototype.clearMinTrackingConfidence = function() {
    return t2.Message.setField(this, 4, void 0);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.prototype.hasMinTrackingConfidence = function() {
    return null != t2.Message.getField(this, 4);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.prototype.getFaceGeometryGraphOptions = function() {
    return t2.Message.getWrapperField(this, p2.FaceGeometryGraphOptions, 5);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.prototype.setFaceGeometryGraphOptions = function(e3) {
    return t2.Message.setWrapperField(this, 5, e3);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.prototype.clearFaceGeometryGraphOptions = function() {
    return this.setFaceGeometryGraphOptions(void 0);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.prototype.hasFaceGeometryGraphOptions = function() {
    return null != t2.Message.getField(this, 5);
  }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.ext = new t2.ExtensionFieldInfo(508968150, { ext: 0 }, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[508968150] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[508968150] = proto.mediapipe.tasks.vision.face_landmarker.proto.FaceLandmarkerGraphOptions.ext, r2.object.extend(e2, proto.mediapipe.tasks.vision.face_landmarker.proto);
}(face_landmarker_graph_options_pb);
var classifier_result = {};
Object.defineProperty(classifier_result, "__esModule", { value: true }), classifier_result.convertFromClassificationResultProto = classifier_result.convertFromClassifications = void 0;
var DEFAULT_INDEX$1 = -1;
var DEFAULT_SCORE = 0;
function convertFromClassifications(e2, t2 = DEFAULT_INDEX$1, r2 = "") {
  return { categories: e2.map((e3) => {
    var t3, r3, o2, i3;
    return { index: null !== (t3 = e3.getIndex()) && void 0 !== t3 ? t3 : DEFAULT_INDEX$1, score: null !== (r3 = e3.getScore()) && void 0 !== r3 ? r3 : DEFAULT_SCORE, categoryName: null !== (o2 = e3.getLabel()) && void 0 !== o2 ? o2 : "", displayName: null !== (i3 = e3.getDisplayName()) && void 0 !== i3 ? i3 : "" };
  }), headIndex: t2, headName: r2 };
}
function convertFromClassificationsProto(e2) {
  var t2, r2;
  return convertFromClassifications(null !== (r2 = null === (t2 = e2.getClassificationList()) || void 0 === t2 ? void 0 : t2.getClassificationList()) && void 0 !== r2 ? r2 : [], e2.getHeadIndex(), e2.getHeadName());
}
function convertFromClassificationResultProto(e2) {
  const t2 = { classifications: e2.getClassificationsList().map((e3) => convertFromClassificationsProto(e3)) };
  return e2.hasTimestampMs() && (t2.timestampMs = e2.getTimestampMs()), t2;
}
classifier_result.convertFromClassifications = convertFromClassifications, classifier_result.convertFromClassificationResultProto = convertFromClassificationResultProto;
var landmark_result = {};
function convertToLandmarks(e2) {
  var t2, r2, o2;
  const i3 = [];
  for (const a3 of e2.getLandmarkList())
    i3.push({ x: null !== (t2 = a3.getX()) && void 0 !== t2 ? t2 : 0, y: null !== (r2 = a3.getY()) && void 0 !== r2 ? r2 : 0, z: null !== (o2 = a3.getZ()) && void 0 !== o2 ? o2 : 0 });
  return i3;
}
function convertToWorldLandmarks(e2) {
  var t2, r2, o2;
  const i3 = [];
  for (const a3 of e2.getLandmarkList())
    i3.push({ x: null !== (t2 = a3.getX()) && void 0 !== t2 ? t2 : 0, y: null !== (r2 = a3.getY()) && void 0 !== r2 ? r2 : 0, z: null !== (o2 = a3.getZ()) && void 0 !== o2 ? o2 : 0 });
  return i3;
}
Object.defineProperty(landmark_result, "__esModule", { value: true }), landmark_result.convertToWorldLandmarks = landmark_result.convertToLandmarks = void 0, landmark_result.convertToLandmarks = convertToLandmarks, landmark_result.convertToWorldLandmarks = convertToWorldLandmarks;
var face_landmarks_connections = {};
var exports2;
exports2 = face_landmarks_connections, Object.defineProperty(exports2, "__esModule", { value: true }), exports2.FACE_LANDMARKS_TESSELATION = exports2.FACE_LANDMARKS_CONTOURS = exports2.FACE_LANDMARKS_FACE_OVAL = exports2.FACE_LANDMARKS_RIGHT_IRIS = exports2.FACE_LANDMARKS_RIGHT_EYEBROW = exports2.FACE_LANDMARKS_RIGHT_EYE = exports2.FACE_LANDMARKS_LEFT_IRIS = exports2.FACE_LANDMARKS_LEFT_EYEBROW = exports2.FACE_LANDMARKS_LEFT_EYE = exports2.FACE_LANDMARKS_LIPS = void 0, exports2.FACE_LANDMARKS_LIPS = [{ start: 61, end: 146 }, { start: 146, end: 91 }, { start: 91, end: 181 }, { start: 181, end: 84 }, { start: 84, end: 17 }, { start: 17, end: 314 }, { start: 314, end: 405 }, { start: 405, end: 321 }, { start: 321, end: 375 }, { start: 375, end: 291 }, { start: 61, end: 185 }, { start: 185, end: 40 }, { start: 40, end: 39 }, { start: 39, end: 37 }, { start: 37, end: 0 }, { start: 0, end: 267 }, { start: 267, end: 269 }, { start: 269, end: 270 }, { start: 270, end: 409 }, { start: 409, end: 291 }, { start: 78, end: 95 }, { start: 95, end: 88 }, { start: 88, end: 178 }, { start: 178, end: 87 }, { start: 87, end: 14 }, { start: 14, end: 317 }, { start: 317, end: 402 }, { start: 402, end: 318 }, { start: 318, end: 324 }, { start: 324, end: 308 }, { start: 78, end: 191 }, { start: 191, end: 80 }, { start: 80, end: 81 }, { start: 81, end: 82 }, { start: 82, end: 13 }, { start: 13, end: 312 }, { start: 312, end: 311 }, { start: 311, end: 310 }, { start: 310, end: 415 }, { start: 415, end: 308 }], exports2.FACE_LANDMARKS_LEFT_EYE = [{ start: 263, end: 249 }, { start: 249, end: 390 }, { start: 390, end: 373 }, { start: 373, end: 374 }, { start: 374, end: 380 }, { start: 380, end: 381 }, { start: 381, end: 382 }, { start: 382, end: 362 }, { start: 263, end: 466 }, { start: 466, end: 388 }, { start: 388, end: 387 }, { start: 387, end: 386 }, { start: 386, end: 385 }, { start: 385, end: 384 }, { start: 384, end: 398 }, { start: 398, end: 362 }], exports2.FACE_LANDMARKS_LEFT_EYEBROW = [{ start: 276, end: 283 }, { start: 283, end: 282 }, { start: 282, end: 295 }, { start: 295, end: 285 }, { start: 300, end: 293 }, { start: 293, end: 334 }, { start: 334, end: 296 }, { start: 296, end: 336 }], exports2.FACE_LANDMARKS_LEFT_IRIS = [{ start: 474, end: 475 }, { start: 475, end: 476 }, { start: 476, end: 477 }, { start: 477, end: 474 }], exports2.FACE_LANDMARKS_RIGHT_EYE = [{ start: 33, end: 7 }, { start: 7, end: 163 }, { start: 163, end: 144 }, { start: 144, end: 145 }, { start: 145, end: 153 }, { start: 153, end: 154 }, { start: 154, end: 155 }, { start: 155, end: 133 }, { start: 33, end: 246 }, { start: 246, end: 161 }, { start: 161, end: 160 }, { start: 160, end: 159 }, { start: 159, end: 158 }, { start: 158, end: 157 }, { start: 157, end: 173 }, { start: 173, end: 133 }], exports2.FACE_LANDMARKS_RIGHT_EYEBROW = [{ start: 46, end: 53 }, { start: 53, end: 52 }, { start: 52, end: 65 }, { start: 65, end: 55 }, { start: 70, end: 63 }, { start: 63, end: 105 }, { start: 105, end: 66 }, { start: 66, end: 107 }], exports2.FACE_LANDMARKS_RIGHT_IRIS = [{ start: 469, end: 470 }, { start: 470, end: 471 }, { start: 471, end: 472 }, { start: 472, end: 469 }], exports2.FACE_LANDMARKS_FACE_OVAL = [{ start: 10, end: 338 }, { start: 338, end: 297 }, { start: 297, end: 332 }, { start: 332, end: 284 }, { start: 284, end: 251 }, { start: 251, end: 389 }, { start: 389, end: 356 }, { start: 356, end: 454 }, { start: 454, end: 323 }, { start: 323, end: 361 }, { start: 361, end: 288 }, { start: 288, end: 397 }, { start: 397, end: 365 }, { start: 365, end: 379 }, { start: 379, end: 378 }, { start: 378, end: 400 }, { start: 400, end: 377 }, { start: 377, end: 152 }, { start: 152, end: 148 }, { start: 148, end: 176 }, { start: 176, end: 149 }, { start: 149, end: 150 }, { start: 150, end: 136 }, { start: 136, end: 172 }, { start: 172, end: 58 }, { start: 58, end: 132 }, { start: 132, end: 93 }, { start: 93, end: 234 }, { start: 234, end: 127 }, { start: 127, end: 162 }, { start: 162, end: 21 }, { start: 21, end: 54 }, { start: 54, end: 103 }, { start: 103, end: 67 }, { start: 67, end: 109 }, { start: 109, end: 10 }], exports2.FACE_LANDMARKS_CONTOURS = [...exports2.FACE_LANDMARKS_LIPS, ...exports2.FACE_LANDMARKS_LEFT_EYE, ...exports2.FACE_LANDMARKS_LEFT_EYEBROW, ...exports2.FACE_LANDMARKS_RIGHT_EYE, ...exports2.FACE_LANDMARKS_RIGHT_EYEBROW, ...exports2.FACE_LANDMARKS_FACE_OVAL], exports2.FACE_LANDMARKS_TESSELATION = [{ start: 127, end: 34 }, { start: 34, end: 139 }, { start: 139, end: 127 }, { start: 11, end: 0 }, { start: 0, end: 37 }, { start: 37, end: 11 }, { start: 232, end: 231 }, { start: 231, end: 120 }, { start: 120, end: 232 }, { start: 72, end: 37 }, { start: 37, end: 39 }, { start: 39, end: 72 }, { start: 128, end: 121 }, { start: 121, end: 47 }, { start: 47, end: 128 }, { start: 232, end: 121 }, { start: 121, end: 128 }, { start: 128, end: 232 }, { start: 104, end: 69 }, { start: 69, end: 67 }, { start: 67, end: 104 }, { start: 175, end: 171 }, { start: 171, end: 148 }, { start: 148, end: 175 }, { start: 118, end: 50 }, { start: 50, end: 101 }, { start: 101, end: 118 }, { start: 73, end: 39 }, { start: 39, end: 40 }, { start: 40, end: 73 }, { start: 9, end: 151 }, { start: 151, end: 108 }, { start: 108, end: 9 }, { start: 48, end: 115 }, { start: 115, end: 131 }, { start: 131, end: 48 }, { start: 194, end: 204 }, { start: 204, end: 211 }, { start: 211, end: 194 }, { start: 74, end: 40 }, { start: 40, end: 185 }, { start: 185, end: 74 }, { start: 80, end: 42 }, { start: 42, end: 183 }, { start: 183, end: 80 }, { start: 40, end: 92 }, { start: 92, end: 186 }, { start: 186, end: 40 }, { start: 230, end: 229 }, { start: 229, end: 118 }, { start: 118, end: 230 }, { start: 202, end: 212 }, { start: 212, end: 214 }, { start: 214, end: 202 }, { start: 83, end: 18 }, { start: 18, end: 17 }, { start: 17, end: 83 }, { start: 76, end: 61 }, { start: 61, end: 146 }, { start: 146, end: 76 }, { start: 160, end: 29 }, { start: 29, end: 30 }, { start: 30, end: 160 }, { start: 56, end: 157 }, { start: 157, end: 173 }, { start: 173, end: 56 }, { start: 106, end: 204 }, { start: 204, end: 194 }, { start: 194, end: 106 }, { start: 135, end: 214 }, { start: 214, end: 192 }, { start: 192, end: 135 }, { start: 203, end: 165 }, { start: 165, end: 98 }, { start: 98, end: 203 }, { start: 21, end: 71 }, { start: 71, end: 68 }, { start: 68, end: 21 }, { start: 51, end: 45 }, { start: 45, end: 4 }, { start: 4, end: 51 }, { start: 144, end: 24 }, { start: 24, end: 23 }, { start: 23, end: 144 }, { start: 77, end: 146 }, { start: 146, end: 91 }, { start: 91, end: 77 }, { start: 205, end: 50 }, { start: 50, end: 187 }, { start: 187, end: 205 }, { start: 201, end: 200 }, { start: 200, end: 18 }, { start: 18, end: 201 }, { start: 91, end: 106 }, { start: 106, end: 182 }, { start: 182, end: 91 }, { start: 90, end: 91 }, { start: 91, end: 181 }, { start: 181, end: 90 }, { start: 85, end: 84 }, { start: 84, end: 17 }, { start: 17, end: 85 }, { start: 206, end: 203 }, { start: 203, end: 36 }, { start: 36, end: 206 }, { start: 148, end: 171 }, { start: 171, end: 140 }, { start: 140, end: 148 }, { start: 92, end: 40 }, { start: 40, end: 39 }, { start: 39, end: 92 }, { start: 193, end: 189 }, { start: 189, end: 244 }, { start: 244, end: 193 }, { start: 159, end: 158 }, { start: 158, end: 28 }, { start: 28, end: 159 }, { start: 247, end: 246 }, { start: 246, end: 161 }, { start: 161, end: 247 }, { start: 236, end: 3 }, { start: 3, end: 196 }, { start: 196, end: 236 }, { start: 54, end: 68 }, { start: 68, end: 104 }, { start: 104, end: 54 }, { start: 193, end: 168 }, { start: 168, end: 8 }, { start: 8, end: 193 }, { start: 117, end: 228 }, { start: 228, end: 31 }, { start: 31, end: 117 }, { start: 189, end: 193 }, { start: 193, end: 55 }, { start: 55, end: 189 }, { start: 98, end: 97 }, { start: 97, end: 99 }, { start: 99, end: 98 }, { start: 126, end: 47 }, { start: 47, end: 100 }, { start: 100, end: 126 }, { start: 166, end: 79 }, { start: 79, end: 218 }, { start: 218, end: 166 }, { start: 155, end: 154 }, { start: 154, end: 26 }, { start: 26, end: 155 }, { start: 209, end: 49 }, { start: 49, end: 131 }, { start: 131, end: 209 }, { start: 135, end: 136 }, { start: 136, end: 150 }, { start: 150, end: 135 }, { start: 47, end: 126 }, { start: 126, end: 217 }, { start: 217, end: 47 }, { start: 223, end: 52 }, { start: 52, end: 53 }, { start: 53, end: 223 }, { start: 45, end: 51 }, { start: 51, end: 134 }, { start: 134, end: 45 }, { start: 211, end: 170 }, { start: 170, end: 140 }, { start: 140, end: 211 }, { start: 67, end: 69 }, { start: 69, end: 108 }, { start: 108, end: 67 }, { start: 43, end: 106 }, { start: 106, end: 91 }, { start: 91, end: 43 }, { start: 230, end: 119 }, { start: 119, end: 120 }, { start: 120, end: 230 }, { start: 226, end: 130 }, { start: 130, end: 247 }, { start: 247, end: 226 }, { start: 63, end: 53 }, { start: 53, end: 52 }, { start: 52, end: 63 }, { start: 238, end: 20 }, { start: 20, end: 242 }, { start: 242, end: 238 }, { start: 46, end: 70 }, { start: 70, end: 156 }, { start: 156, end: 46 }, { start: 78, end: 62 }, { start: 62, end: 96 }, { start: 96, end: 78 }, { start: 46, end: 53 }, { start: 53, end: 63 }, { start: 63, end: 46 }, { start: 143, end: 34 }, { start: 34, end: 227 }, { start: 227, end: 143 }, { start: 123, end: 117 }, { start: 117, end: 111 }, { start: 111, end: 123 }, { start: 44, end: 125 }, { start: 125, end: 19 }, { start: 19, end: 44 }, { start: 236, end: 134 }, { start: 134, end: 51 }, { start: 51, end: 236 }, { start: 216, end: 206 }, { start: 206, end: 205 }, { start: 205, end: 216 }, { start: 154, end: 153 }, { start: 153, end: 22 }, { start: 22, end: 154 }, { start: 39, end: 37 }, { start: 37, end: 167 }, { start: 167, end: 39 }, { start: 200, end: 201 }, { start: 201, end: 208 }, { start: 208, end: 200 }, { start: 36, end: 142 }, { start: 142, end: 100 }, { start: 100, end: 36 }, { start: 57, end: 212 }, { start: 212, end: 202 }, { start: 202, end: 57 }, { start: 20, end: 60 }, { start: 60, end: 99 }, { start: 99, end: 20 }, { start: 28, end: 158 }, { start: 158, end: 157 }, { start: 157, end: 28 }, { start: 35, end: 226 }, { start: 226, end: 113 }, { start: 113, end: 35 }, { start: 160, end: 159 }, { start: 159, end: 27 }, { start: 27, end: 160 }, { start: 204, end: 202 }, { start: 202, end: 210 }, { start: 210, end: 204 }, { start: 113, end: 225 }, { start: 225, end: 46 }, { start: 46, end: 113 }, { start: 43, end: 202 }, { start: 202, end: 204 }, { start: 204, end: 43 }, { start: 62, end: 76 }, { start: 76, end: 77 }, { start: 77, end: 62 }, { start: 137, end: 123 }, { start: 123, end: 116 }, { start: 116, end: 137 }, { start: 41, end: 38 }, { start: 38, end: 72 }, { start: 72, end: 41 }, { start: 203, end: 129 }, { start: 129, end: 142 }, { start: 142, end: 203 }, { start: 64, end: 98 }, { start: 98, end: 240 }, { start: 240, end: 64 }, { start: 49, end: 102 }, { start: 102, end: 64 }, { start: 64, end: 49 }, { start: 41, end: 73 }, { start: 73, end: 74 }, { start: 74, end: 41 }, { start: 212, end: 216 }, { start: 216, end: 207 }, { start: 207, end: 212 }, { start: 42, end: 74 }, { start: 74, end: 184 }, { start: 184, end: 42 }, { start: 169, end: 170 }, { start: 170, end: 211 }, { start: 211, end: 169 }, { start: 170, end: 149 }, { start: 149, end: 176 }, { start: 176, end: 170 }, { start: 105, end: 66 }, { start: 66, end: 69 }, { start: 69, end: 105 }, { start: 122, end: 6 }, { start: 6, end: 168 }, { start: 168, end: 122 }, { start: 123, end: 147 }, { start: 147, end: 187 }, { start: 187, end: 123 }, { start: 96, end: 77 }, { start: 77, end: 90 }, { start: 90, end: 96 }, { start: 65, end: 55 }, { start: 55, end: 107 }, { start: 107, end: 65 }, { start: 89, end: 90 }, { start: 90, end: 180 }, { start: 180, end: 89 }, { start: 101, end: 100 }, { start: 100, end: 120 }, { start: 120, end: 101 }, { start: 63, end: 105 }, { start: 105, end: 104 }, { start: 104, end: 63 }, { start: 93, end: 137 }, { start: 137, end: 227 }, { start: 227, end: 93 }, { start: 15, end: 86 }, { start: 86, end: 85 }, { start: 85, end: 15 }, { start: 129, end: 102 }, { start: 102, end: 49 }, { start: 49, end: 129 }, { start: 14, end: 87 }, { start: 87, end: 86 }, { start: 86, end: 14 }, { start: 55, end: 8 }, { start: 8, end: 9 }, { start: 9, end: 55 }, { start: 100, end: 47 }, { start: 47, end: 121 }, { start: 121, end: 100 }, { start: 145, end: 23 }, { start: 23, end: 22 }, { start: 22, end: 145 }, { start: 88, end: 89 }, { start: 89, end: 179 }, { start: 179, end: 88 }, { start: 6, end: 122 }, { start: 122, end: 196 }, { start: 196, end: 6 }, { start: 88, end: 95 }, { start: 95, end: 96 }, { start: 96, end: 88 }, { start: 138, end: 172 }, { start: 172, end: 136 }, { start: 136, end: 138 }, { start: 215, end: 58 }, { start: 58, end: 172 }, { start: 172, end: 215 }, { start: 115, end: 48 }, { start: 48, end: 219 }, { start: 219, end: 115 }, { start: 42, end: 80 }, { start: 80, end: 81 }, { start: 81, end: 42 }, { start: 195, end: 3 }, { start: 3, end: 51 }, { start: 51, end: 195 }, { start: 43, end: 146 }, { start: 146, end: 61 }, { start: 61, end: 43 }, { start: 171, end: 175 }, { start: 175, end: 199 }, { start: 199, end: 171 }, { start: 81, end: 82 }, { start: 82, end: 38 }, { start: 38, end: 81 }, { start: 53, end: 46 }, { start: 46, end: 225 }, { start: 225, end: 53 }, { start: 144, end: 163 }, { start: 163, end: 110 }, { start: 110, end: 144 }, { start: 52, end: 65 }, { start: 65, end: 66 }, { start: 66, end: 52 }, { start: 229, end: 228 }, { start: 228, end: 117 }, { start: 117, end: 229 }, { start: 34, end: 127 }, { start: 127, end: 234 }, { start: 234, end: 34 }, { start: 107, end: 108 }, { start: 108, end: 69 }, { start: 69, end: 107 }, { start: 109, end: 108 }, { start: 108, end: 151 }, { start: 151, end: 109 }, { start: 48, end: 64 }, { start: 64, end: 235 }, { start: 235, end: 48 }, { start: 62, end: 78 }, { start: 78, end: 191 }, { start: 191, end: 62 }, { start: 129, end: 209 }, { start: 209, end: 126 }, { start: 126, end: 129 }, { start: 111, end: 35 }, { start: 35, end: 143 }, { start: 143, end: 111 }, { start: 117, end: 123 }, { start: 123, end: 50 }, { start: 50, end: 117 }, { start: 222, end: 65 }, { start: 65, end: 52 }, { start: 52, end: 222 }, { start: 19, end: 125 }, { start: 125, end: 141 }, { start: 141, end: 19 }, { start: 221, end: 55 }, { start: 55, end: 65 }, { start: 65, end: 221 }, { start: 3, end: 195 }, { start: 195, end: 197 }, { start: 197, end: 3 }, { start: 25, end: 7 }, { start: 7, end: 33 }, { start: 33, end: 25 }, { start: 220, end: 237 }, { start: 237, end: 44 }, { start: 44, end: 220 }, { start: 70, end: 71 }, { start: 71, end: 139 }, { start: 139, end: 70 }, { start: 122, end: 193 }, { start: 193, end: 245 }, { start: 245, end: 122 }, { start: 247, end: 130 }, { start: 130, end: 33 }, { start: 33, end: 247 }, { start: 71, end: 21 }, { start: 21, end: 162 }, { start: 162, end: 71 }, { start: 170, end: 169 }, { start: 169, end: 150 }, { start: 150, end: 170 }, { start: 188, end: 174 }, { start: 174, end: 196 }, { start: 196, end: 188 }, { start: 216, end: 186 }, { start: 186, end: 92 }, { start: 92, end: 216 }, { start: 2, end: 97 }, { start: 97, end: 167 }, { start: 167, end: 2 }, { start: 141, end: 125 }, { start: 125, end: 241 }, { start: 241, end: 141 }, { start: 164, end: 167 }, { start: 167, end: 37 }, { start: 37, end: 164 }, { start: 72, end: 38 }, { start: 38, end: 12 }, { start: 12, end: 72 }, { start: 38, end: 82 }, { start: 82, end: 13 }, { start: 13, end: 38 }, { start: 63, end: 68 }, { start: 68, end: 71 }, { start: 71, end: 63 }, { start: 226, end: 35 }, { start: 35, end: 111 }, { start: 111, end: 226 }, { start: 101, end: 50 }, { start: 50, end: 205 }, { start: 205, end: 101 }, { start: 206, end: 92 }, { start: 92, end: 165 }, { start: 165, end: 206 }, { start: 209, end: 198 }, { start: 198, end: 217 }, { start: 217, end: 209 }, { start: 165, end: 167 }, { start: 167, end: 97 }, { start: 97, end: 165 }, { start: 220, end: 115 }, { start: 115, end: 218 }, { start: 218, end: 220 }, { start: 133, end: 112 }, { start: 112, end: 243 }, { start: 243, end: 133 }, { start: 239, end: 238 }, { start: 238, end: 241 }, { start: 241, end: 239 }, { start: 214, end: 135 }, { start: 135, end: 169 }, { start: 169, end: 214 }, { start: 190, end: 173 }, { start: 173, end: 133 }, { start: 133, end: 190 }, { start: 171, end: 208 }, { start: 208, end: 32 }, { start: 32, end: 171 }, { start: 125, end: 44 }, { start: 44, end: 237 }, { start: 237, end: 125 }, { start: 86, end: 87 }, { start: 87, end: 178 }, { start: 178, end: 86 }, { start: 85, end: 86 }, { start: 86, end: 179 }, { start: 179, end: 85 }, { start: 84, end: 85 }, { start: 85, end: 180 }, { start: 180, end: 84 }, { start: 83, end: 84 }, { start: 84, end: 181 }, { start: 181, end: 83 }, { start: 201, end: 83 }, { start: 83, end: 182 }, { start: 182, end: 201 }, { start: 137, end: 93 }, { start: 93, end: 132 }, { start: 132, end: 137 }, { start: 76, end: 62 }, { start: 62, end: 183 }, { start: 183, end: 76 }, { start: 61, end: 76 }, { start: 76, end: 184 }, { start: 184, end: 61 }, { start: 57, end: 61 }, { start: 61, end: 185 }, { start: 185, end: 57 }, { start: 212, end: 57 }, { start: 57, end: 186 }, { start: 186, end: 212 }, { start: 214, end: 207 }, { start: 207, end: 187 }, { start: 187, end: 214 }, { start: 34, end: 143 }, { start: 143, end: 156 }, { start: 156, end: 34 }, { start: 79, end: 239 }, { start: 239, end: 237 }, { start: 237, end: 79 }, { start: 123, end: 137 }, { start: 137, end: 177 }, { start: 177, end: 123 }, { start: 44, end: 1 }, { start: 1, end: 4 }, { start: 4, end: 44 }, { start: 201, end: 194 }, { start: 194, end: 32 }, { start: 32, end: 201 }, { start: 64, end: 102 }, { start: 102, end: 129 }, { start: 129, end: 64 }, { start: 213, end: 215 }, { start: 215, end: 138 }, { start: 138, end: 213 }, { start: 59, end: 166 }, { start: 166, end: 219 }, { start: 219, end: 59 }, { start: 242, end: 99 }, { start: 99, end: 97 }, { start: 97, end: 242 }, { start: 2, end: 94 }, { start: 94, end: 141 }, { start: 141, end: 2 }, { start: 75, end: 59 }, { start: 59, end: 235 }, { start: 235, end: 75 }, { start: 24, end: 110 }, { start: 110, end: 228 }, { start: 228, end: 24 }, { start: 25, end: 130 }, { start: 130, end: 226 }, { start: 226, end: 25 }, { start: 23, end: 24 }, { start: 24, end: 229 }, { start: 229, end: 23 }, { start: 22, end: 23 }, { start: 23, end: 230 }, { start: 230, end: 22 }, { start: 26, end: 22 }, { start: 22, end: 231 }, { start: 231, end: 26 }, { start: 112, end: 26 }, { start: 26, end: 232 }, { start: 232, end: 112 }, { start: 189, end: 190 }, { start: 190, end: 243 }, { start: 243, end: 189 }, { start: 221, end: 56 }, { start: 56, end: 190 }, { start: 190, end: 221 }, { start: 28, end: 56 }, { start: 56, end: 221 }, { start: 221, end: 28 }, { start: 27, end: 28 }, { start: 28, end: 222 }, { start: 222, end: 27 }, { start: 29, end: 27 }, { start: 27, end: 223 }, { start: 223, end: 29 }, { start: 30, end: 29 }, { start: 29, end: 224 }, { start: 224, end: 30 }, { start: 247, end: 30 }, { start: 30, end: 225 }, { start: 225, end: 247 }, { start: 238, end: 79 }, { start: 79, end: 20 }, { start: 20, end: 238 }, { start: 166, end: 59 }, { start: 59, end: 75 }, { start: 75, end: 166 }, { start: 60, end: 75 }, { start: 75, end: 240 }, { start: 240, end: 60 }, { start: 147, end: 177 }, { start: 177, end: 215 }, { start: 215, end: 147 }, { start: 20, end: 79 }, { start: 79, end: 166 }, { start: 166, end: 20 }, { start: 187, end: 147 }, { start: 147, end: 213 }, { start: 213, end: 187 }, { start: 112, end: 233 }, { start: 233, end: 244 }, { start: 244, end: 112 }, { start: 233, end: 128 }, { start: 128, end: 245 }, { start: 245, end: 233 }, { start: 128, end: 114 }, { start: 114, end: 188 }, { start: 188, end: 128 }, { start: 114, end: 217 }, { start: 217, end: 174 }, { start: 174, end: 114 }, { start: 131, end: 115 }, { start: 115, end: 220 }, { start: 220, end: 131 }, { start: 217, end: 198 }, { start: 198, end: 236 }, { start: 236, end: 217 }, { start: 198, end: 131 }, { start: 131, end: 134 }, { start: 134, end: 198 }, { start: 177, end: 132 }, { start: 132, end: 58 }, { start: 58, end: 177 }, { start: 143, end: 35 }, { start: 35, end: 124 }, { start: 124, end: 143 }, { start: 110, end: 163 }, { start: 163, end: 7 }, { start: 7, end: 110 }, { start: 228, end: 110 }, { start: 110, end: 25 }, { start: 25, end: 228 }, { start: 356, end: 389 }, { start: 389, end: 368 }, { start: 368, end: 356 }, { start: 11, end: 302 }, { start: 302, end: 267 }, { start: 267, end: 11 }, { start: 452, end: 350 }, { start: 350, end: 349 }, { start: 349, end: 452 }, { start: 302, end: 303 }, { start: 303, end: 269 }, { start: 269, end: 302 }, { start: 357, end: 343 }, { start: 343, end: 277 }, { start: 277, end: 357 }, { start: 452, end: 453 }, { start: 453, end: 357 }, { start: 357, end: 452 }, { start: 333, end: 332 }, { start: 332, end: 297 }, { start: 297, end: 333 }, { start: 175, end: 152 }, { start: 152, end: 377 }, { start: 377, end: 175 }, { start: 347, end: 348 }, { start: 348, end: 330 }, { start: 330, end: 347 }, { start: 303, end: 304 }, { start: 304, end: 270 }, { start: 270, end: 303 }, { start: 9, end: 336 }, { start: 336, end: 337 }, { start: 337, end: 9 }, { start: 278, end: 279 }, { start: 279, end: 360 }, { start: 360, end: 278 }, { start: 418, end: 262 }, { start: 262, end: 431 }, { start: 431, end: 418 }, { start: 304, end: 408 }, { start: 408, end: 409 }, { start: 409, end: 304 }, { start: 310, end: 415 }, { start: 415, end: 407 }, { start: 407, end: 310 }, { start: 270, end: 409 }, { start: 409, end: 410 }, { start: 410, end: 270 }, { start: 450, end: 348 }, { start: 348, end: 347 }, { start: 347, end: 450 }, { start: 422, end: 430 }, { start: 430, end: 434 }, { start: 434, end: 422 }, { start: 313, end: 314 }, { start: 314, end: 17 }, { start: 17, end: 313 }, { start: 306, end: 307 }, { start: 307, end: 375 }, { start: 375, end: 306 }, { start: 387, end: 388 }, { start: 388, end: 260 }, { start: 260, end: 387 }, { start: 286, end: 414 }, { start: 414, end: 398 }, { start: 398, end: 286 }, { start: 335, end: 406 }, { start: 406, end: 418 }, { start: 418, end: 335 }, { start: 364, end: 367 }, { start: 367, end: 416 }, { start: 416, end: 364 }, { start: 423, end: 358 }, { start: 358, end: 327 }, { start: 327, end: 423 }, { start: 251, end: 284 }, { start: 284, end: 298 }, { start: 298, end: 251 }, { start: 281, end: 5 }, { start: 5, end: 4 }, { start: 4, end: 281 }, { start: 373, end: 374 }, { start: 374, end: 253 }, { start: 253, end: 373 }, { start: 307, end: 320 }, { start: 320, end: 321 }, { start: 321, end: 307 }, { start: 425, end: 427 }, { start: 427, end: 411 }, { start: 411, end: 425 }, { start: 421, end: 313 }, { start: 313, end: 18 }, { start: 18, end: 421 }, { start: 321, end: 405 }, { start: 405, end: 406 }, { start: 406, end: 321 }, { start: 320, end: 404 }, { start: 404, end: 405 }, { start: 405, end: 320 }, { start: 315, end: 16 }, { start: 16, end: 17 }, { start: 17, end: 315 }, { start: 426, end: 425 }, { start: 425, end: 266 }, { start: 266, end: 426 }, { start: 377, end: 400 }, { start: 400, end: 369 }, { start: 369, end: 377 }, { start: 322, end: 391 }, { start: 391, end: 269 }, { start: 269, end: 322 }, { start: 417, end: 465 }, { start: 465, end: 464 }, { start: 464, end: 417 }, { start: 386, end: 257 }, { start: 257, end: 258 }, { start: 258, end: 386 }, { start: 466, end: 260 }, { start: 260, end: 388 }, { start: 388, end: 466 }, { start: 456, end: 399 }, { start: 399, end: 419 }, { start: 419, end: 456 }, { start: 284, end: 332 }, { start: 332, end: 333 }, { start: 333, end: 284 }, { start: 417, end: 285 }, { start: 285, end: 8 }, { start: 8, end: 417 }, { start: 346, end: 340 }, { start: 340, end: 261 }, { start: 261, end: 346 }, { start: 413, end: 441 }, { start: 441, end: 285 }, { start: 285, end: 413 }, { start: 327, end: 460 }, { start: 460, end: 328 }, { start: 328, end: 327 }, { start: 355, end: 371 }, { start: 371, end: 329 }, { start: 329, end: 355 }, { start: 392, end: 439 }, { start: 439, end: 438 }, { start: 438, end: 392 }, { start: 382, end: 341 }, { start: 341, end: 256 }, { start: 256, end: 382 }, { start: 429, end: 420 }, { start: 420, end: 360 }, { start: 360, end: 429 }, { start: 364, end: 394 }, { start: 394, end: 379 }, { start: 379, end: 364 }, { start: 277, end: 343 }, { start: 343, end: 437 }, { start: 437, end: 277 }, { start: 443, end: 444 }, { start: 444, end: 283 }, { start: 283, end: 443 }, { start: 275, end: 440 }, { start: 440, end: 363 }, { start: 363, end: 275 }, { start: 431, end: 262 }, { start: 262, end: 369 }, { start: 369, end: 431 }, { start: 297, end: 338 }, { start: 338, end: 337 }, { start: 337, end: 297 }, { start: 273, end: 375 }, { start: 375, end: 321 }, { start: 321, end: 273 }, { start: 450, end: 451 }, { start: 451, end: 349 }, { start: 349, end: 450 }, { start: 446, end: 342 }, { start: 342, end: 467 }, { start: 467, end: 446 }, { start: 293, end: 334 }, { start: 334, end: 282 }, { start: 282, end: 293 }, { start: 458, end: 461 }, { start: 461, end: 462 }, { start: 462, end: 458 }, { start: 276, end: 353 }, { start: 353, end: 383 }, { start: 383, end: 276 }, { start: 308, end: 324 }, { start: 324, end: 325 }, { start: 325, end: 308 }, { start: 276, end: 300 }, { start: 300, end: 293 }, { start: 293, end: 276 }, { start: 372, end: 345 }, { start: 345, end: 447 }, { start: 447, end: 372 }, { start: 352, end: 345 }, { start: 345, end: 340 }, { start: 340, end: 352 }, { start: 274, end: 1 }, { start: 1, end: 19 }, { start: 19, end: 274 }, { start: 456, end: 248 }, { start: 248, end: 281 }, { start: 281, end: 456 }, { start: 436, end: 427 }, { start: 427, end: 425 }, { start: 425, end: 436 }, { start: 381, end: 256 }, { start: 256, end: 252 }, { start: 252, end: 381 }, { start: 269, end: 391 }, { start: 391, end: 393 }, { start: 393, end: 269 }, { start: 200, end: 199 }, { start: 199, end: 428 }, { start: 428, end: 200 }, { start: 266, end: 330 }, { start: 330, end: 329 }, { start: 329, end: 266 }, { start: 287, end: 273 }, { start: 273, end: 422 }, { start: 422, end: 287 }, { start: 250, end: 462 }, { start: 462, end: 328 }, { start: 328, end: 250 }, { start: 258, end: 286 }, { start: 286, end: 384 }, { start: 384, end: 258 }, { start: 265, end: 353 }, { start: 353, end: 342 }, { start: 342, end: 265 }, { start: 387, end: 259 }, { start: 259, end: 257 }, { start: 257, end: 387 }, { start: 424, end: 431 }, { start: 431, end: 430 }, { start: 430, end: 424 }, { start: 342, end: 353 }, { start: 353, end: 276 }, { start: 276, end: 342 }, { start: 273, end: 335 }, { start: 335, end: 424 }, { start: 424, end: 273 }, { start: 292, end: 325 }, { start: 325, end: 307 }, { start: 307, end: 292 }, { start: 366, end: 447 }, { start: 447, end: 345 }, { start: 345, end: 366 }, { start: 271, end: 303 }, { start: 303, end: 302 }, { start: 302, end: 271 }, { start: 423, end: 266 }, { start: 266, end: 371 }, { start: 371, end: 423 }, { start: 294, end: 455 }, { start: 455, end: 460 }, { start: 460, end: 294 }, { start: 279, end: 278 }, { start: 278, end: 294 }, { start: 294, end: 279 }, { start: 271, end: 272 }, { start: 272, end: 304 }, { start: 304, end: 271 }, { start: 432, end: 434 }, { start: 434, end: 427 }, { start: 427, end: 432 }, { start: 272, end: 407 }, { start: 407, end: 408 }, { start: 408, end: 272 }, { start: 394, end: 430 }, { start: 430, end: 431 }, { start: 431, end: 394 }, { start: 395, end: 369 }, { start: 369, end: 400 }, { start: 400, end: 395 }, { start: 334, end: 333 }, { start: 333, end: 299 }, { start: 299, end: 334 }, { start: 351, end: 417 }, { start: 417, end: 168 }, { start: 168, end: 351 }, { start: 352, end: 280 }, { start: 280, end: 411 }, { start: 411, end: 352 }, { start: 325, end: 319 }, { start: 319, end: 320 }, { start: 320, end: 325 }, { start: 295, end: 296 }, { start: 296, end: 336 }, { start: 336, end: 295 }, { start: 319, end: 403 }, { start: 403, end: 404 }, { start: 404, end: 319 }, { start: 330, end: 348 }, { start: 348, end: 349 }, { start: 349, end: 330 }, { start: 293, end: 298 }, { start: 298, end: 333 }, { start: 333, end: 293 }, { start: 323, end: 454 }, { start: 454, end: 447 }, { start: 447, end: 323 }, { start: 15, end: 16 }, { start: 16, end: 315 }, { start: 315, end: 15 }, { start: 358, end: 429 }, { start: 429, end: 279 }, { start: 279, end: 358 }, { start: 14, end: 15 }, { start: 15, end: 316 }, { start: 316, end: 14 }, { start: 285, end: 336 }, { start: 336, end: 9 }, { start: 9, end: 285 }, { start: 329, end: 349 }, { start: 349, end: 350 }, { start: 350, end: 329 }, { start: 374, end: 380 }, { start: 380, end: 252 }, { start: 252, end: 374 }, { start: 318, end: 402 }, { start: 402, end: 403 }, { start: 403, end: 318 }, { start: 6, end: 197 }, { start: 197, end: 419 }, { start: 419, end: 6 }, { start: 318, end: 319 }, { start: 319, end: 325 }, { start: 325, end: 318 }, { start: 367, end: 364 }, { start: 364, end: 365 }, { start: 365, end: 367 }, { start: 435, end: 367 }, { start: 367, end: 397 }, { start: 397, end: 435 }, { start: 344, end: 438 }, { start: 438, end: 439 }, { start: 439, end: 344 }, { start: 272, end: 271 }, { start: 271, end: 311 }, { start: 311, end: 272 }, { start: 195, end: 5 }, { start: 5, end: 281 }, { start: 281, end: 195 }, { start: 273, end: 287 }, { start: 287, end: 291 }, { start: 291, end: 273 }, { start: 396, end: 428 }, { start: 428, end: 199 }, { start: 199, end: 396 }, { start: 311, end: 271 }, { start: 271, end: 268 }, { start: 268, end: 311 }, { start: 283, end: 444 }, { start: 444, end: 445 }, { start: 445, end: 283 }, { start: 373, end: 254 }, { start: 254, end: 339 }, { start: 339, end: 373 }, { start: 282, end: 334 }, { start: 334, end: 296 }, { start: 296, end: 282 }, { start: 449, end: 347 }, { start: 347, end: 346 }, { start: 346, end: 449 }, { start: 264, end: 447 }, { start: 447, end: 454 }, { start: 454, end: 264 }, { start: 336, end: 296 }, { start: 296, end: 299 }, { start: 299, end: 336 }, { start: 338, end: 10 }, { start: 10, end: 151 }, { start: 151, end: 338 }, { start: 278, end: 439 }, { start: 439, end: 455 }, { start: 455, end: 278 }, { start: 292, end: 407 }, { start: 407, end: 415 }, { start: 415, end: 292 }, { start: 358, end: 371 }, { start: 371, end: 355 }, { start: 355, end: 358 }, { start: 340, end: 345 }, { start: 345, end: 372 }, { start: 372, end: 340 }, { start: 346, end: 347 }, { start: 347, end: 280 }, { start: 280, end: 346 }, { start: 442, end: 443 }, { start: 443, end: 282 }, { start: 282, end: 442 }, { start: 19, end: 94 }, { start: 94, end: 370 }, { start: 370, end: 19 }, { start: 441, end: 442 }, { start: 442, end: 295 }, { start: 295, end: 441 }, { start: 248, end: 419 }, { start: 419, end: 197 }, { start: 197, end: 248 }, { start: 263, end: 255 }, { start: 255, end: 359 }, { start: 359, end: 263 }, { start: 440, end: 275 }, { start: 275, end: 274 }, { start: 274, end: 440 }, { start: 300, end: 383 }, { start: 383, end: 368 }, { start: 368, end: 300 }, { start: 351, end: 412 }, { start: 412, end: 465 }, { start: 465, end: 351 }, { start: 263, end: 467 }, { start: 467, end: 466 }, { start: 466, end: 263 }, { start: 301, end: 368 }, { start: 368, end: 389 }, { start: 389, end: 301 }, { start: 395, end: 378 }, { start: 378, end: 379 }, { start: 379, end: 395 }, { start: 412, end: 351 }, { start: 351, end: 419 }, { start: 419, end: 412 }, { start: 436, end: 426 }, { start: 426, end: 322 }, { start: 322, end: 436 }, { start: 2, end: 164 }, { start: 164, end: 393 }, { start: 393, end: 2 }, { start: 370, end: 462 }, { start: 462, end: 461 }, { start: 461, end: 370 }, { start: 164, end: 0 }, { start: 0, end: 267 }, { start: 267, end: 164 }, { start: 302, end: 11 }, { start: 11, end: 12 }, { start: 12, end: 302 }, { start: 268, end: 12 }, { start: 12, end: 13 }, { start: 13, end: 268 }, { start: 293, end: 300 }, { start: 300, end: 301 }, { start: 301, end: 293 }, { start: 446, end: 261 }, { start: 261, end: 340 }, { start: 340, end: 446 }, { start: 330, end: 266 }, { start: 266, end: 425 }, { start: 425, end: 330 }, { start: 426, end: 423 }, { start: 423, end: 391 }, { start: 391, end: 426 }, { start: 429, end: 355 }, { start: 355, end: 437 }, { start: 437, end: 429 }, { start: 391, end: 327 }, { start: 327, end: 326 }, { start: 326, end: 391 }, { start: 440, end: 457 }, { start: 457, end: 438 }, { start: 438, end: 440 }, { start: 341, end: 382 }, { start: 382, end: 362 }, { start: 362, end: 341 }, { start: 459, end: 457 }, { start: 457, end: 461 }, { start: 461, end: 459 }, { start: 434, end: 430 }, { start: 430, end: 394 }, { start: 394, end: 434 }, { start: 414, end: 463 }, { start: 463, end: 362 }, { start: 362, end: 414 }, { start: 396, end: 369 }, { start: 369, end: 262 }, { start: 262, end: 396 }, { start: 354, end: 461 }, { start: 461, end: 457 }, { start: 457, end: 354 }, { start: 316, end: 403 }, { start: 403, end: 402 }, { start: 402, end: 316 }, { start: 315, end: 404 }, { start: 404, end: 403 }, { start: 403, end: 315 }, { start: 314, end: 405 }, { start: 405, end: 404 }, { start: 404, end: 314 }, { start: 313, end: 406 }, { start: 406, end: 405 }, { start: 405, end: 313 }, { start: 421, end: 418 }, { start: 418, end: 406 }, { start: 406, end: 421 }, { start: 366, end: 401 }, { start: 401, end: 361 }, { start: 361, end: 366 }, { start: 306, end: 408 }, { start: 408, end: 407 }, { start: 407, end: 306 }, { start: 291, end: 409 }, { start: 409, end: 408 }, { start: 408, end: 291 }, { start: 287, end: 410 }, { start: 410, end: 409 }, { start: 409, end: 287 }, { start: 432, end: 436 }, { start: 436, end: 410 }, { start: 410, end: 432 }, { start: 434, end: 416 }, { start: 416, end: 411 }, { start: 411, end: 434 }, { start: 264, end: 368 }, { start: 368, end: 383 }, { start: 383, end: 264 }, { start: 309, end: 438 }, { start: 438, end: 457 }, { start: 457, end: 309 }, { start: 352, end: 376 }, { start: 376, end: 401 }, { start: 401, end: 352 }, { start: 274, end: 275 }, { start: 275, end: 4 }, { start: 4, end: 274 }, { start: 421, end: 428 }, { start: 428, end: 262 }, { start: 262, end: 421 }, { start: 294, end: 327 }, { start: 327, end: 358 }, { start: 358, end: 294 }, { start: 433, end: 416 }, { start: 416, end: 367 }, { start: 367, end: 433 }, { start: 289, end: 455 }, { start: 455, end: 439 }, { start: 439, end: 289 }, { start: 462, end: 370 }, { start: 370, end: 326 }, { start: 326, end: 462 }, { start: 2, end: 326 }, { start: 326, end: 370 }, { start: 370, end: 2 }, { start: 305, end: 460 }, { start: 460, end: 455 }, { start: 455, end: 305 }, { start: 254, end: 449 }, { start: 449, end: 448 }, { start: 448, end: 254 }, { start: 255, end: 261 }, { start: 261, end: 446 }, { start: 446, end: 255 }, { start: 253, end: 450 }, { start: 450, end: 449 }, { start: 449, end: 253 }, { start: 252, end: 451 }, { start: 451, end: 450 }, { start: 450, end: 252 }, { start: 256, end: 452 }, { start: 452, end: 451 }, { start: 451, end: 256 }, { start: 341, end: 453 }, { start: 453, end: 452 }, { start: 452, end: 341 }, { start: 413, end: 464 }, { start: 464, end: 463 }, { start: 463, end: 413 }, { start: 441, end: 413 }, { start: 413, end: 414 }, { start: 414, end: 441 }, { start: 258, end: 442 }, { start: 442, end: 441 }, { start: 441, end: 258 }, { start: 257, end: 443 }, { start: 443, end: 442 }, { start: 442, end: 257 }, { start: 259, end: 444 }, { start: 444, end: 443 }, { start: 443, end: 259 }, { start: 260, end: 445 }, { start: 445, end: 444 }, { start: 444, end: 260 }, { start: 467, end: 342 }, { start: 342, end: 445 }, { start: 445, end: 467 }, { start: 459, end: 458 }, { start: 458, end: 250 }, { start: 250, end: 459 }, { start: 289, end: 392 }, { start: 392, end: 290 }, { start: 290, end: 289 }, { start: 290, end: 328 }, { start: 328, end: 460 }, { start: 460, end: 290 }, { start: 376, end: 433 }, { start: 433, end: 435 }, { start: 435, end: 376 }, { start: 250, end: 290 }, { start: 290, end: 392 }, { start: 392, end: 250 }, { start: 411, end: 416 }, { start: 416, end: 433 }, { start: 433, end: 411 }, { start: 341, end: 463 }, { start: 463, end: 464 }, { start: 464, end: 341 }, { start: 453, end: 464 }, { start: 464, end: 465 }, { start: 465, end: 453 }, { start: 357, end: 465 }, { start: 465, end: 412 }, { start: 412, end: 357 }, { start: 343, end: 412 }, { start: 412, end: 399 }, { start: 399, end: 343 }, { start: 360, end: 363 }, { start: 363, end: 440 }, { start: 440, end: 360 }, { start: 437, end: 399 }, { start: 399, end: 456 }, { start: 456, end: 437 }, { start: 420, end: 456 }, { start: 456, end: 363 }, { start: 363, end: 420 }, { start: 401, end: 435 }, { start: 435, end: 288 }, { start: 288, end: 401 }, { start: 372, end: 383 }, { start: 383, end: 353 }, { start: 353, end: 372 }, { start: 339, end: 255 }, { start: 255, end: 249 }, { start: 249, end: 339 }, { start: 448, end: 261 }, { start: 261, end: 255 }, { start: 255, end: 448 }, { start: 133, end: 243 }, { start: 243, end: 190 }, { start: 190, end: 133 }, { start: 133, end: 155 }, { start: 155, end: 112 }, { start: 112, end: 133 }, { start: 33, end: 246 }, { start: 246, end: 247 }, { start: 247, end: 33 }, { start: 33, end: 130 }, { start: 130, end: 25 }, { start: 25, end: 33 }, { start: 398, end: 384 }, { start: 384, end: 286 }, { start: 286, end: 398 }, { start: 362, end: 398 }, { start: 398, end: 414 }, { start: 414, end: 362 }, { start: 362, end: 463 }, { start: 463, end: 341 }, { start: 341, end: 362 }, { start: 263, end: 359 }, { start: 359, end: 467 }, { start: 467, end: 263 }, { start: 263, end: 249 }, { start: 249, end: 255 }, { start: 255, end: 263 }, { start: 466, end: 467 }, { start: 467, end: 260 }, { start: 260, end: 466 }, { start: 75, end: 60 }, { start: 60, end: 166 }, { start: 166, end: 75 }, { start: 238, end: 239 }, { start: 239, end: 79 }, { start: 79, end: 238 }, { start: 162, end: 127 }, { start: 127, end: 139 }, { start: 139, end: 162 }, { start: 72, end: 11 }, { start: 11, end: 37 }, { start: 37, end: 72 }, { start: 121, end: 232 }, { start: 232, end: 120 }, { start: 120, end: 121 }, { start: 73, end: 72 }, { start: 72, end: 39 }, { start: 39, end: 73 }, { start: 114, end: 128 }, { start: 128, end: 47 }, { start: 47, end: 114 }, { start: 233, end: 232 }, { start: 232, end: 128 }, { start: 128, end: 233 }, { start: 103, end: 104 }, { start: 104, end: 67 }, { start: 67, end: 103 }, { start: 152, end: 175 }, { start: 175, end: 148 }, { start: 148, end: 152 }, { start: 119, end: 118 }, { start: 118, end: 101 }, { start: 101, end: 119 }, { start: 74, end: 73 }, { start: 73, end: 40 }, { start: 40, end: 74 }, { start: 107, end: 9 }, { start: 9, end: 108 }, { start: 108, end: 107 }, { start: 49, end: 48 }, { start: 48, end: 131 }, { start: 131, end: 49 }, { start: 32, end: 194 }, { start: 194, end: 211 }, { start: 211, end: 32 }, { start: 184, end: 74 }, { start: 74, end: 185 }, { start: 185, end: 184 }, { start: 191, end: 80 }, { start: 80, end: 183 }, { start: 183, end: 191 }, { start: 185, end: 40 }, { start: 40, end: 186 }, { start: 186, end: 185 }, { start: 119, end: 230 }, { start: 230, end: 118 }, { start: 118, end: 119 }, { start: 210, end: 202 }, { start: 202, end: 214 }, { start: 214, end: 210 }, { start: 84, end: 83 }, { start: 83, end: 17 }, { start: 17, end: 84 }, { start: 77, end: 76 }, { start: 76, end: 146 }, { start: 146, end: 77 }, { start: 161, end: 160 }, { start: 160, end: 30 }, { start: 30, end: 161 }, { start: 190, end: 56 }, { start: 56, end: 173 }, { start: 173, end: 190 }, { start: 182, end: 106 }, { start: 106, end: 194 }, { start: 194, end: 182 }, { start: 138, end: 135 }, { start: 135, end: 192 }, { start: 192, end: 138 }, { start: 129, end: 203 }, { start: 203, end: 98 }, { start: 98, end: 129 }, { start: 54, end: 21 }, { start: 21, end: 68 }, { start: 68, end: 54 }, { start: 5, end: 51 }, { start: 51, end: 4 }, { start: 4, end: 5 }, { start: 145, end: 144 }, { start: 144, end: 23 }, { start: 23, end: 145 }, { start: 90, end: 77 }, { start: 77, end: 91 }, { start: 91, end: 90 }, { start: 207, end: 205 }, { start: 205, end: 187 }, { start: 187, end: 207 }, { start: 83, end: 201 }, { start: 201, end: 18 }, { start: 18, end: 83 }, { start: 181, end: 91 }, { start: 91, end: 182 }, { start: 182, end: 181 }, { start: 180, end: 90 }, { start: 90, end: 181 }, { start: 181, end: 180 }, { start: 16, end: 85 }, { start: 85, end: 17 }, { start: 17, end: 16 }, { start: 205, end: 206 }, { start: 206, end: 36 }, { start: 36, end: 205 }, { start: 176, end: 148 }, { start: 148, end: 140 }, { start: 140, end: 176 }, { start: 165, end: 92 }, { start: 92, end: 39 }, { start: 39, end: 165 }, { start: 245, end: 193 }, { start: 193, end: 244 }, { start: 244, end: 245 }, { start: 27, end: 159 }, { start: 159, end: 28 }, { start: 28, end: 27 }, { start: 30, end: 247 }, { start: 247, end: 161 }, { start: 161, end: 30 }, { start: 174, end: 236 }, { start: 236, end: 196 }, { start: 196, end: 174 }, { start: 103, end: 54 }, { start: 54, end: 104 }, { start: 104, end: 103 }, { start: 55, end: 193 }, { start: 193, end: 8 }, { start: 8, end: 55 }, { start: 111, end: 117 }, { start: 117, end: 31 }, { start: 31, end: 111 }, { start: 221, end: 189 }, { start: 189, end: 55 }, { start: 55, end: 221 }, { start: 240, end: 98 }, { start: 98, end: 99 }, { start: 99, end: 240 }, { start: 142, end: 126 }, { start: 126, end: 100 }, { start: 100, end: 142 }, { start: 219, end: 166 }, { start: 166, end: 218 }, { start: 218, end: 219 }, { start: 112, end: 155 }, { start: 155, end: 26 }, { start: 26, end: 112 }, { start: 198, end: 209 }, { start: 209, end: 131 }, { start: 131, end: 198 }, { start: 169, end: 135 }, { start: 135, end: 150 }, { start: 150, end: 169 }, { start: 114, end: 47 }, { start: 47, end: 217 }, { start: 217, end: 114 }, { start: 224, end: 223 }, { start: 223, end: 53 }, { start: 53, end: 224 }, { start: 220, end: 45 }, { start: 45, end: 134 }, { start: 134, end: 220 }, { start: 32, end: 211 }, { start: 211, end: 140 }, { start: 140, end: 32 }, { start: 109, end: 67 }, { start: 67, end: 108 }, { start: 108, end: 109 }, { start: 146, end: 43 }, { start: 43, end: 91 }, { start: 91, end: 146 }, { start: 231, end: 230 }, { start: 230, end: 120 }, { start: 120, end: 231 }, { start: 113, end: 226 }, { start: 226, end: 247 }, { start: 247, end: 113 }, { start: 105, end: 63 }, { start: 63, end: 52 }, { start: 52, end: 105 }, { start: 241, end: 238 }, { start: 238, end: 242 }, { start: 242, end: 241 }, { start: 124, end: 46 }, { start: 46, end: 156 }, { start: 156, end: 124 }, { start: 95, end: 78 }, { start: 78, end: 96 }, { start: 96, end: 95 }, { start: 70, end: 46 }, { start: 46, end: 63 }, { start: 63, end: 70 }, { start: 116, end: 143 }, { start: 143, end: 227 }, { start: 227, end: 116 }, { start: 116, end: 123 }, { start: 123, end: 111 }, { start: 111, end: 116 }, { start: 1, end: 44 }, { start: 44, end: 19 }, { start: 19, end: 1 }, { start: 3, end: 236 }, { start: 236, end: 51 }, { start: 51, end: 3 }, { start: 207, end: 216 }, { start: 216, end: 205 }, { start: 205, end: 207 }, { start: 26, end: 154 }, { start: 154, end: 22 }, { start: 22, end: 26 }, { start: 165, end: 39 }, { start: 39, end: 167 }, { start: 167, end: 165 }, { start: 199, end: 200 }, { start: 200, end: 208 }, { start: 208, end: 199 }, { start: 101, end: 36 }, { start: 36, end: 100 }, { start: 100, end: 101 }, { start: 43, end: 57 }, { start: 57, end: 202 }, { start: 202, end: 43 }, { start: 242, end: 20 }, { start: 20, end: 99 }, { start: 99, end: 242 }, { start: 56, end: 28 }, { start: 28, end: 157 }, { start: 157, end: 56 }, { start: 124, end: 35 }, { start: 35, end: 113 }, { start: 113, end: 124 }, { start: 29, end: 160 }, { start: 160, end: 27 }, { start: 27, end: 29 }, { start: 211, end: 204 }, { start: 204, end: 210 }, { start: 210, end: 211 }, { start: 124, end: 113 }, { start: 113, end: 46 }, { start: 46, end: 124 }, { start: 106, end: 43 }, { start: 43, end: 204 }, { start: 204, end: 106 }, { start: 96, end: 62 }, { start: 62, end: 77 }, { start: 77, end: 96 }, { start: 227, end: 137 }, { start: 137, end: 116 }, { start: 116, end: 227 }, { start: 73, end: 41 }, { start: 41, end: 72 }, { start: 72, end: 73 }, { start: 36, end: 203 }, { start: 203, end: 142 }, { start: 142, end: 36 }, { start: 235, end: 64 }, { start: 64, end: 240 }, { start: 240, end: 235 }, { start: 48, end: 49 }, { start: 49, end: 64 }, { start: 64, end: 48 }, { start: 42, end: 41 }, { start: 41, end: 74 }, { start: 74, end: 42 }, { start: 214, end: 212 }, { start: 212, end: 207 }, { start: 207, end: 214 }, { start: 183, end: 42 }, { start: 42, end: 184 }, { start: 184, end: 183 }, { start: 210, end: 169 }, { start: 169, end: 211 }, { start: 211, end: 210 }, { start: 140, end: 170 }, { start: 170, end: 176 }, { start: 176, end: 140 }, { start: 104, end: 105 }, { start: 105, end: 69 }, { start: 69, end: 104 }, { start: 193, end: 122 }, { start: 122, end: 168 }, { start: 168, end: 193 }, { start: 50, end: 123 }, { start: 123, end: 187 }, { start: 187, end: 50 }, { start: 89, end: 96 }, { start: 96, end: 90 }, { start: 90, end: 89 }, { start: 66, end: 65 }, { start: 65, end: 107 }, { start: 107, end: 66 }, { start: 179, end: 89 }, { start: 89, end: 180 }, { start: 180, end: 179 }, { start: 119, end: 101 }, { start: 101, end: 120 }, { start: 120, end: 119 }, { start: 68, end: 63 }, { start: 63, end: 104 }, { start: 104, end: 68 }, { start: 234, end: 93 }, { start: 93, end: 227 }, { start: 227, end: 234 }, { start: 16, end: 15 }, { start: 15, end: 85 }, { start: 85, end: 16 }, { start: 209, end: 129 }, { start: 129, end: 49 }, { start: 49, end: 209 }, { start: 15, end: 14 }, { start: 14, end: 86 }, { start: 86, end: 15 }, { start: 107, end: 55 }, { start: 55, end: 9 }, { start: 9, end: 107 }, { start: 120, end: 100 }, { start: 100, end: 121 }, { start: 121, end: 120 }, { start: 153, end: 145 }, { start: 145, end: 22 }, { start: 22, end: 153 }, { start: 178, end: 88 }, { start: 88, end: 179 }, { start: 179, end: 178 }, { start: 197, end: 6 }, { start: 6, end: 196 }, { start: 196, end: 197 }, { start: 89, end: 88 }, { start: 88, end: 96 }, { start: 96, end: 89 }, { start: 135, end: 138 }, { start: 138, end: 136 }, { start: 136, end: 135 }, { start: 138, end: 215 }, { start: 215, end: 172 }, { start: 172, end: 138 }, { start: 218, end: 115 }, { start: 115, end: 219 }, { start: 219, end: 218 }, { start: 41, end: 42 }, { start: 42, end: 81 }, { start: 81, end: 41 }, { start: 5, end: 195 }, { start: 195, end: 51 }, { start: 51, end: 5 }, { start: 57, end: 43 }, { start: 43, end: 61 }, { start: 61, end: 57 }, { start: 208, end: 171 }, { start: 171, end: 199 }, { start: 199, end: 208 }, { start: 41, end: 81 }, { start: 81, end: 38 }, { start: 38, end: 41 }, { start: 224, end: 53 }, { start: 53, end: 225 }, { start: 225, end: 224 }, { start: 24, end: 144 }, { start: 144, end: 110 }, { start: 110, end: 24 }, { start: 105, end: 52 }, { start: 52, end: 66 }, { start: 66, end: 105 }, { start: 118, end: 229 }, { start: 229, end: 117 }, { start: 117, end: 118 }, { start: 227, end: 34 }, { start: 34, end: 234 }, { start: 234, end: 227 }, { start: 66, end: 107 }, { start: 107, end: 69 }, { start: 69, end: 66 }, { start: 10, end: 109 }, { start: 109, end: 151 }, { start: 151, end: 10 }, { start: 219, end: 48 }, { start: 48, end: 235 }, { start: 235, end: 219 }, { start: 183, end: 62 }, { start: 62, end: 191 }, { start: 191, end: 183 }, { start: 142, end: 129 }, { start: 129, end: 126 }, { start: 126, end: 142 }, { start: 116, end: 111 }, { start: 111, end: 143 }, { start: 143, end: 116 }, { start: 118, end: 117 }, { start: 117, end: 50 }, { start: 50, end: 118 }, { start: 223, end: 222 }, { start: 222, end: 52 }, { start: 52, end: 223 }, { start: 94, end: 19 }, { start: 19, end: 141 }, { start: 141, end: 94 }, { start: 222, end: 221 }, { start: 221, end: 65 }, { start: 65, end: 222 }, { start: 196, end: 3 }, { start: 3, end: 197 }, { start: 197, end: 196 }, { start: 45, end: 220 }, { start: 220, end: 44 }, { start: 44, end: 45 }, { start: 156, end: 70 }, { start: 70, end: 139 }, { start: 139, end: 156 }, { start: 188, end: 122 }, { start: 122, end: 245 }, { start: 245, end: 188 }, { start: 139, end: 71 }, { start: 71, end: 162 }, { start: 162, end: 139 }, { start: 149, end: 170 }, { start: 170, end: 150 }, { start: 150, end: 149 }, { start: 122, end: 188 }, { start: 188, end: 196 }, { start: 196, end: 122 }, { start: 206, end: 216 }, { start: 216, end: 92 }, { start: 92, end: 206 }, { start: 164, end: 2 }, { start: 2, end: 167 }, { start: 167, end: 164 }, { start: 242, end: 141 }, { start: 141, end: 241 }, { start: 241, end: 242 }, { start: 0, end: 164 }, { start: 164, end: 37 }, { start: 37, end: 0 }, { start: 11, end: 72 }, { start: 72, end: 12 }, { start: 12, end: 11 }, { start: 12, end: 38 }, { start: 38, end: 13 }, { start: 13, end: 12 }, { start: 70, end: 63 }, { start: 63, end: 71 }, { start: 71, end: 70 }, { start: 31, end: 226 }, { start: 226, end: 111 }, { start: 111, end: 31 }, { start: 36, end: 101 }, { start: 101, end: 205 }, { start: 205, end: 36 }, { start: 203, end: 206 }, { start: 206, end: 165 }, { start: 165, end: 203 }, { start: 126, end: 209 }, { start: 209, end: 217 }, { start: 217, end: 126 }, { start: 98, end: 165 }, { start: 165, end: 97 }, { start: 97, end: 98 }, { start: 237, end: 220 }, { start: 220, end: 218 }, { start: 218, end: 237 }, { start: 237, end: 239 }, { start: 239, end: 241 }, { start: 241, end: 237 }, { start: 210, end: 214 }, { start: 214, end: 169 }, { start: 169, end: 210 }, { start: 140, end: 171 }, { start: 171, end: 32 }, { start: 32, end: 140 }, { start: 241, end: 125 }, { start: 125, end: 237 }, { start: 237, end: 241 }, { start: 179, end: 86 }, { start: 86, end: 178 }, { start: 178, end: 179 }, { start: 180, end: 85 }, { start: 85, end: 179 }, { start: 179, end: 180 }, { start: 181, end: 84 }, { start: 84, end: 180 }, { start: 180, end: 181 }, { start: 182, end: 83 }, { start: 83, end: 181 }, { start: 181, end: 182 }, { start: 194, end: 201 }, { start: 201, end: 182 }, { start: 182, end: 194 }, { start: 177, end: 137 }, { start: 137, end: 132 }, { start: 132, end: 177 }, { start: 184, end: 76 }, { start: 76, end: 183 }, { start: 183, end: 184 }, { start: 185, end: 61 }, { start: 61, end: 184 }, { start: 184, end: 185 }, { start: 186, end: 57 }, { start: 57, end: 185 }, { start: 185, end: 186 }, { start: 216, end: 212 }, { start: 212, end: 186 }, { start: 186, end: 216 }, { start: 192, end: 214 }, { start: 214, end: 187 }, { start: 187, end: 192 }, { start: 139, end: 34 }, { start: 34, end: 156 }, { start: 156, end: 139 }, { start: 218, end: 79 }, { start: 79, end: 237 }, { start: 237, end: 218 }, { start: 147, end: 123 }, { start: 123, end: 177 }, { start: 177, end: 147 }, { start: 45, end: 44 }, { start: 44, end: 4 }, { start: 4, end: 45 }, { start: 208, end: 201 }, { start: 201, end: 32 }, { start: 32, end: 208 }, { start: 98, end: 64 }, { start: 64, end: 129 }, { start: 129, end: 98 }, { start: 192, end: 213 }, { start: 213, end: 138 }, { start: 138, end: 192 }, { start: 235, end: 59 }, { start: 59, end: 219 }, { start: 219, end: 235 }, { start: 141, end: 242 }, { start: 242, end: 97 }, { start: 97, end: 141 }, { start: 97, end: 2 }, { start: 2, end: 141 }, { start: 141, end: 97 }, { start: 240, end: 75 }, { start: 75, end: 235 }, { start: 235, end: 240 }, { start: 229, end: 24 }, { start: 24, end: 228 }, { start: 228, end: 229 }, { start: 31, end: 25 }, { start: 25, end: 226 }, { start: 226, end: 31 }, { start: 230, end: 23 }, { start: 23, end: 229 }, { start: 229, end: 230 }, { start: 231, end: 22 }, { start: 22, end: 230 }, { start: 230, end: 231 }, { start: 232, end: 26 }, { start: 26, end: 231 }, { start: 231, end: 232 }, { start: 233, end: 112 }, { start: 112, end: 232 }, { start: 232, end: 233 }, { start: 244, end: 189 }, { start: 189, end: 243 }, { start: 243, end: 244 }, { start: 189, end: 221 }, { start: 221, end: 190 }, { start: 190, end: 189 }, { start: 222, end: 28 }, { start: 28, end: 221 }, { start: 221, end: 222 }, { start: 223, end: 27 }, { start: 27, end: 222 }, { start: 222, end: 223 }, { start: 224, end: 29 }, { start: 29, end: 223 }, { start: 223, end: 224 }, { start: 225, end: 30 }, { start: 30, end: 224 }, { start: 224, end: 225 }, { start: 113, end: 247 }, { start: 247, end: 225 }, { start: 225, end: 113 }, { start: 99, end: 60 }, { start: 60, end: 240 }, { start: 240, end: 99 }, { start: 213, end: 147 }, { start: 147, end: 215 }, { start: 215, end: 213 }, { start: 60, end: 20 }, { start: 20, end: 166 }, { start: 166, end: 60 }, { start: 192, end: 187 }, { start: 187, end: 213 }, { start: 213, end: 192 }, { start: 243, end: 112 }, { start: 112, end: 244 }, { start: 244, end: 243 }, { start: 244, end: 233 }, { start: 233, end: 245 }, { start: 245, end: 244 }, { start: 245, end: 128 }, { start: 128, end: 188 }, { start: 188, end: 245 }, { start: 188, end: 114 }, { start: 114, end: 174 }, { start: 174, end: 188 }, { start: 134, end: 131 }, { start: 131, end: 220 }, { start: 220, end: 134 }, { start: 174, end: 217 }, { start: 217, end: 236 }, { start: 236, end: 174 }, { start: 236, end: 198 }, { start: 198, end: 134 }, { start: 134, end: 236 }, { start: 215, end: 177 }, { start: 177, end: 58 }, { start: 58, end: 215 }, { start: 156, end: 143 }, { start: 143, end: 124 }, { start: 124, end: 156 }, { start: 25, end: 110 }, { start: 110, end: 7 }, { start: 7, end: 25 }, { start: 31, end: 228 }, { start: 228, end: 25 }, { start: 25, end: 31 }, { start: 264, end: 356 }, { start: 356, end: 368 }, { start: 368, end: 264 }, { start: 0, end: 11 }, { start: 11, end: 267 }, { start: 267, end: 0 }, { start: 451, end: 452 }, { start: 452, end: 349 }, { start: 349, end: 451 }, { start: 267, end: 302 }, { start: 302, end: 269 }, { start: 269, end: 267 }, { start: 350, end: 357 }, { start: 357, end: 277 }, { start: 277, end: 350 }, { start: 350, end: 452 }, { start: 452, end: 357 }, { start: 357, end: 350 }, { start: 299, end: 333 }, { start: 333, end: 297 }, { start: 297, end: 299 }, { start: 396, end: 175 }, { start: 175, end: 377 }, { start: 377, end: 396 }, { start: 280, end: 347 }, { start: 347, end: 330 }, { start: 330, end: 280 }, { start: 269, end: 303 }, { start: 303, end: 270 }, { start: 270, end: 269 }, { start: 151, end: 9 }, { start: 9, end: 337 }, { start: 337, end: 151 }, { start: 344, end: 278 }, { start: 278, end: 360 }, { start: 360, end: 344 }, { start: 424, end: 418 }, { start: 418, end: 431 }, { start: 431, end: 424 }, { start: 270, end: 304 }, { start: 304, end: 409 }, { start: 409, end: 270 }, { start: 272, end: 310 }, { start: 310, end: 407 }, { start: 407, end: 272 }, { start: 322, end: 270 }, { start: 270, end: 410 }, { start: 410, end: 322 }, { start: 449, end: 450 }, { start: 450, end: 347 }, { start: 347, end: 449 }, { start: 432, end: 422 }, { start: 422, end: 434 }, { start: 434, end: 432 }, { start: 18, end: 313 }, { start: 313, end: 17 }, { start: 17, end: 18 }, { start: 291, end: 306 }, { start: 306, end: 375 }, { start: 375, end: 291 }, { start: 259, end: 387 }, { start: 387, end: 260 }, { start: 260, end: 259 }, { start: 424, end: 335 }, { start: 335, end: 418 }, { start: 418, end: 424 }, { start: 434, end: 364 }, { start: 364, end: 416 }, { start: 416, end: 434 }, { start: 391, end: 423 }, { start: 423, end: 327 }, { start: 327, end: 391 }, { start: 301, end: 251 }, { start: 251, end: 298 }, { start: 298, end: 301 }, { start: 275, end: 281 }, { start: 281, end: 4 }, { start: 4, end: 275 }, { start: 254, end: 373 }, { start: 373, end: 253 }, { start: 253, end: 254 }, { start: 375, end: 307 }, { start: 307, end: 321 }, { start: 321, end: 375 }, { start: 280, end: 425 }, { start: 425, end: 411 }, { start: 411, end: 280 }, { start: 200, end: 421 }, { start: 421, end: 18 }, { start: 18, end: 200 }, { start: 335, end: 321 }, { start: 321, end: 406 }, { start: 406, end: 335 }, { start: 321, end: 320 }, { start: 320, end: 405 }, { start: 405, end: 321 }, { start: 314, end: 315 }, { start: 315, end: 17 }, { start: 17, end: 314 }, { start: 423, end: 426 }, { start: 426, end: 266 }, { start: 266, end: 423 }, { start: 396, end: 377 }, { start: 377, end: 369 }, { start: 369, end: 396 }, { start: 270, end: 322 }, { start: 322, end: 269 }, { start: 269, end: 270 }, { start: 413, end: 417 }, { start: 417, end: 464 }, { start: 464, end: 413 }, { start: 385, end: 386 }, { start: 386, end: 258 }, { start: 258, end: 385 }, { start: 248, end: 456 }, { start: 456, end: 419 }, { start: 419, end: 248 }, { start: 298, end: 284 }, { start: 284, end: 333 }, { start: 333, end: 298 }, { start: 168, end: 417 }, { start: 417, end: 8 }, { start: 8, end: 168 }, { start: 448, end: 346 }, { start: 346, end: 261 }, { start: 261, end: 448 }, { start: 417, end: 413 }, { start: 413, end: 285 }, { start: 285, end: 417 }, { start: 326, end: 327 }, { start: 327, end: 328 }, { start: 328, end: 326 }, { start: 277, end: 355 }, { start: 355, end: 329 }, { start: 329, end: 277 }, { start: 309, end: 392 }, { start: 392, end: 438 }, { start: 438, end: 309 }, { start: 381, end: 382 }, { start: 382, end: 256 }, { start: 256, end: 381 }, { start: 279, end: 429 }, { start: 429, end: 360 }, { start: 360, end: 279 }, { start: 365, end: 364 }, { start: 364, end: 379 }, { start: 379, end: 365 }, { start: 355, end: 277 }, { start: 277, end: 437 }, { start: 437, end: 355 }, { start: 282, end: 443 }, { start: 443, end: 283 }, { start: 283, end: 282 }, { start: 281, end: 275 }, { start: 275, end: 363 }, { start: 363, end: 281 }, { start: 395, end: 431 }, { start: 431, end: 369 }, { start: 369, end: 395 }, { start: 299, end: 297 }, { start: 297, end: 337 }, { start: 337, end: 299 }, { start: 335, end: 273 }, { start: 273, end: 321 }, { start: 321, end: 335 }, { start: 348, end: 450 }, { start: 450, end: 349 }, { start: 349, end: 348 }, { start: 359, end: 446 }, { start: 446, end: 467 }, { start: 467, end: 359 }, { start: 283, end: 293 }, { start: 293, end: 282 }, { start: 282, end: 283 }, { start: 250, end: 458 }, { start: 458, end: 462 }, { start: 462, end: 250 }, { start: 300, end: 276 }, { start: 276, end: 383 }, { start: 383, end: 300 }, { start: 292, end: 308 }, { start: 308, end: 325 }, { start: 325, end: 292 }, { start: 283, end: 276 }, { start: 276, end: 293 }, { start: 293, end: 283 }, { start: 264, end: 372 }, { start: 372, end: 447 }, { start: 447, end: 264 }, { start: 346, end: 352 }, { start: 352, end: 340 }, { start: 340, end: 346 }, { start: 354, end: 274 }, { start: 274, end: 19 }, { start: 19, end: 354 }, { start: 363, end: 456 }, { start: 456, end: 281 }, { start: 281, end: 363 }, { start: 426, end: 436 }, { start: 436, end: 425 }, { start: 425, end: 426 }, { start: 380, end: 381 }, { start: 381, end: 252 }, { start: 252, end: 380 }, { start: 267, end: 269 }, { start: 269, end: 393 }, { start: 393, end: 267 }, { start: 421, end: 200 }, { start: 200, end: 428 }, { start: 428, end: 421 }, { start: 371, end: 266 }, { start: 266, end: 329 }, { start: 329, end: 371 }, { start: 432, end: 287 }, { start: 287, end: 422 }, { start: 422, end: 432 }, { start: 290, end: 250 }, { start: 250, end: 328 }, { start: 328, end: 290 }, { start: 385, end: 258 }, { start: 258, end: 384 }, { start: 384, end: 385 }, { start: 446, end: 265 }, { start: 265, end: 342 }, { start: 342, end: 446 }, { start: 386, end: 387 }, { start: 387, end: 257 }, { start: 257, end: 386 }, { start: 422, end: 424 }, { start: 424, end: 430 }, { start: 430, end: 422 }, { start: 445, end: 342 }, { start: 342, end: 276 }, { start: 276, end: 445 }, { start: 422, end: 273 }, { start: 273, end: 424 }, { start: 424, end: 422 }, { start: 306, end: 292 }, { start: 292, end: 307 }, { start: 307, end: 306 }, { start: 352, end: 366 }, { start: 366, end: 345 }, { start: 345, end: 352 }, { start: 268, end: 271 }, { start: 271, end: 302 }, { start: 302, end: 268 }, { start: 358, end: 423 }, { start: 423, end: 371 }, { start: 371, end: 358 }, { start: 327, end: 294 }, { start: 294, end: 460 }, { start: 460, end: 327 }, { start: 331, end: 279 }, { start: 279, end: 294 }, { start: 294, end: 331 }, { start: 303, end: 271 }, { start: 271, end: 304 }, { start: 304, end: 303 }, { start: 436, end: 432 }, { start: 432, end: 427 }, { start: 427, end: 436 }, { start: 304, end: 272 }, { start: 272, end: 408 }, { start: 408, end: 304 }, { start: 395, end: 394 }, { start: 394, end: 431 }, { start: 431, end: 395 }, { start: 378, end: 395 }, { start: 395, end: 400 }, { start: 400, end: 378 }, { start: 296, end: 334 }, { start: 334, end: 299 }, { start: 299, end: 296 }, { start: 6, end: 351 }, { start: 351, end: 168 }, { start: 168, end: 6 }, { start: 376, end: 352 }, { start: 352, end: 411 }, { start: 411, end: 376 }, { start: 307, end: 325 }, { start: 325, end: 320 }, { start: 320, end: 307 }, { start: 285, end: 295 }, { start: 295, end: 336 }, { start: 336, end: 285 }, { start: 320, end: 319 }, { start: 319, end: 404 }, { start: 404, end: 320 }, { start: 329, end: 330 }, { start: 330, end: 349 }, { start: 349, end: 329 }, { start: 334, end: 293 }, { start: 293, end: 333 }, { start: 333, end: 334 }, { start: 366, end: 323 }, { start: 323, end: 447 }, { start: 447, end: 366 }, { start: 316, end: 15 }, { start: 15, end: 315 }, { start: 315, end: 316 }, { start: 331, end: 358 }, { start: 358, end: 279 }, { start: 279, end: 331 }, { start: 317, end: 14 }, { start: 14, end: 316 }, { start: 316, end: 317 }, { start: 8, end: 285 }, { start: 285, end: 9 }, { start: 9, end: 8 }, { start: 277, end: 329 }, { start: 329, end: 350 }, { start: 350, end: 277 }, { start: 253, end: 374 }, { start: 374, end: 252 }, { start: 252, end: 253 }, { start: 319, end: 318 }, { start: 318, end: 403 }, { start: 403, end: 319 }, { start: 351, end: 6 }, { start: 6, end: 419 }, { start: 419, end: 351 }, { start: 324, end: 318 }, { start: 318, end: 325 }, { start: 325, end: 324 }, { start: 397, end: 367 }, { start: 367, end: 365 }, { start: 365, end: 397 }, { start: 288, end: 435 }, { start: 435, end: 397 }, { start: 397, end: 288 }, { start: 278, end: 344 }, { start: 344, end: 439 }, { start: 439, end: 278 }, { start: 310, end: 272 }, { start: 272, end: 311 }, { start: 311, end: 310 }, { start: 248, end: 195 }, { start: 195, end: 281 }, { start: 281, end: 248 }, { start: 375, end: 273 }, { start: 273, end: 291 }, { start: 291, end: 375 }, { start: 175, end: 396 }, { start: 396, end: 199 }, { start: 199, end: 175 }, { start: 312, end: 311 }, { start: 311, end: 268 }, { start: 268, end: 312 }, { start: 276, end: 283 }, { start: 283, end: 445 }, { start: 445, end: 276 }, { start: 390, end: 373 }, { start: 373, end: 339 }, { start: 339, end: 390 }, { start: 295, end: 282 }, { start: 282, end: 296 }, { start: 296, end: 295 }, { start: 448, end: 449 }, { start: 449, end: 346 }, { start: 346, end: 448 }, { start: 356, end: 264 }, { start: 264, end: 454 }, { start: 454, end: 356 }, { start: 337, end: 336 }, { start: 336, end: 299 }, { start: 299, end: 337 }, { start: 337, end: 338 }, { start: 338, end: 151 }, { start: 151, end: 337 }, { start: 294, end: 278 }, { start: 278, end: 455 }, { start: 455, end: 294 }, { start: 308, end: 292 }, { start: 292, end: 415 }, { start: 415, end: 308 }, { start: 429, end: 358 }, { start: 358, end: 355 }, { start: 355, end: 429 }, { start: 265, end: 340 }, { start: 340, end: 372 }, { start: 372, end: 265 }, { start: 352, end: 346 }, { start: 346, end: 280 }, { start: 280, end: 352 }, { start: 295, end: 442 }, { start: 442, end: 282 }, { start: 282, end: 295 }, { start: 354, end: 19 }, { start: 19, end: 370 }, { start: 370, end: 354 }, { start: 285, end: 441 }, { start: 441, end: 295 }, { start: 295, end: 285 }, { start: 195, end: 248 }, { start: 248, end: 197 }, { start: 197, end: 195 }, { start: 457, end: 440 }, { start: 440, end: 274 }, { start: 274, end: 457 }, { start: 301, end: 300 }, { start: 300, end: 368 }, { start: 368, end: 301 }, { start: 417, end: 351 }, { start: 351, end: 465 }, { start: 465, end: 417 }, { start: 251, end: 301 }, { start: 301, end: 389 }, { start: 389, end: 251 }, { start: 394, end: 395 }, { start: 395, end: 379 }, { start: 379, end: 394 }, { start: 399, end: 412 }, { start: 412, end: 419 }, { start: 419, end: 399 }, { start: 410, end: 436 }, { start: 436, end: 322 }, { start: 322, end: 410 }, { start: 326, end: 2 }, { start: 2, end: 393 }, { start: 393, end: 326 }, { start: 354, end: 370 }, { start: 370, end: 461 }, { start: 461, end: 354 }, { start: 393, end: 164 }, { start: 164, end: 267 }, { start: 267, end: 393 }, { start: 268, end: 302 }, { start: 302, end: 12 }, { start: 12, end: 268 }, { start: 312, end: 268 }, { start: 268, end: 13 }, { start: 13, end: 312 }, { start: 298, end: 293 }, { start: 293, end: 301 }, { start: 301, end: 298 }, { start: 265, end: 446 }, { start: 446, end: 340 }, { start: 340, end: 265 }, { start: 280, end: 330 }, { start: 330, end: 425 }, { start: 425, end: 280 }, { start: 322, end: 426 }, { start: 426, end: 391 }, { start: 391, end: 322 }, { start: 420, end: 429 }, { start: 429, end: 437 }, { start: 437, end: 420 }, { start: 393, end: 391 }, { start: 391, end: 326 }, { start: 326, end: 393 }, { start: 344, end: 440 }, { start: 440, end: 438 }, { start: 438, end: 344 }, { start: 458, end: 459 }, { start: 459, end: 461 }, { start: 461, end: 458 }, { start: 364, end: 434 }, { start: 434, end: 394 }, { start: 394, end: 364 }, { start: 428, end: 396 }, { start: 396, end: 262 }, { start: 262, end: 428 }, { start: 274, end: 354 }, { start: 354, end: 457 }, { start: 457, end: 274 }, { start: 317, end: 316 }, { start: 316, end: 402 }, { start: 402, end: 317 }, { start: 316, end: 315 }, { start: 315, end: 403 }, { start: 403, end: 316 }, { start: 315, end: 314 }, { start: 314, end: 404 }, { start: 404, end: 315 }, { start: 314, end: 313 }, { start: 313, end: 405 }, { start: 405, end: 314 }, { start: 313, end: 421 }, { start: 421, end: 406 }, { start: 406, end: 313 }, { start: 323, end: 366 }, { start: 366, end: 361 }, { start: 361, end: 323 }, { start: 292, end: 306 }, { start: 306, end: 407 }, { start: 407, end: 292 }, { start: 306, end: 291 }, { start: 291, end: 408 }, { start: 408, end: 306 }, { start: 291, end: 287 }, { start: 287, end: 409 }, { start: 409, end: 291 }, { start: 287, end: 432 }, { start: 432, end: 410 }, { start: 410, end: 287 }, { start: 427, end: 434 }, { start: 434, end: 411 }, { start: 411, end: 427 }, { start: 372, end: 264 }, { start: 264, end: 383 }, { start: 383, end: 372 }, { start: 459, end: 309 }, { start: 309, end: 457 }, { start: 457, end: 459 }, { start: 366, end: 352 }, { start: 352, end: 401 }, { start: 401, end: 366 }, { start: 1, end: 274 }, { start: 274, end: 4 }, { start: 4, end: 1 }, { start: 418, end: 421 }, { start: 421, end: 262 }, { start: 262, end: 418 }, { start: 331, end: 294 }, { start: 294, end: 358 }, { start: 358, end: 331 }, { start: 435, end: 433 }, { start: 433, end: 367 }, { start: 367, end: 435 }, { start: 392, end: 289 }, { start: 289, end: 439 }, { start: 439, end: 392 }, { start: 328, end: 462 }, { start: 462, end: 326 }, { start: 326, end: 328 }, { start: 94, end: 2 }, { start: 2, end: 370 }, { start: 370, end: 94 }, { start: 289, end: 305 }, { start: 305, end: 455 }, { start: 455, end: 289 }, { start: 339, end: 254 }, { start: 254, end: 448 }, { start: 448, end: 339 }, { start: 359, end: 255 }, { start: 255, end: 446 }, { start: 446, end: 359 }, { start: 254, end: 253 }, { start: 253, end: 449 }, { start: 449, end: 254 }, { start: 253, end: 252 }, { start: 252, end: 450 }, { start: 450, end: 253 }, { start: 252, end: 256 }, { start: 256, end: 451 }, { start: 451, end: 252 }, { start: 256, end: 341 }, { start: 341, end: 452 }, { start: 452, end: 256 }, { start: 414, end: 413 }, { start: 413, end: 463 }, { start: 463, end: 414 }, { start: 286, end: 441 }, { start: 441, end: 414 }, { start: 414, end: 286 }, { start: 286, end: 258 }, { start: 258, end: 441 }, { start: 441, end: 286 }, { start: 258, end: 257 }, { start: 257, end: 442 }, { start: 442, end: 258 }, { start: 257, end: 259 }, { start: 259, end: 443 }, { start: 443, end: 257 }, { start: 259, end: 260 }, { start: 260, end: 444 }, { start: 444, end: 259 }, { start: 260, end: 467 }, { start: 467, end: 445 }, { start: 445, end: 260 }, { start: 309, end: 459 }, { start: 459, end: 250 }, { start: 250, end: 309 }, { start: 305, end: 289 }, { start: 289, end: 290 }, { start: 290, end: 305 }, { start: 305, end: 290 }, { start: 290, end: 460 }, { start: 460, end: 305 }, { start: 401, end: 376 }, { start: 376, end: 435 }, { start: 435, end: 401 }, { start: 309, end: 250 }, { start: 250, end: 392 }, { start: 392, end: 309 }, { start: 376, end: 411 }, { start: 411, end: 433 }, { start: 433, end: 376 }, { start: 453, end: 341 }, { start: 341, end: 464 }, { start: 464, end: 453 }, { start: 357, end: 453 }, { start: 453, end: 465 }, { start: 465, end: 357 }, { start: 343, end: 357 }, { start: 357, end: 412 }, { start: 412, end: 343 }, { start: 437, end: 343 }, { start: 343, end: 399 }, { start: 399, end: 437 }, { start: 344, end: 360 }, { start: 360, end: 440 }, { start: 440, end: 344 }, { start: 420, end: 437 }, { start: 437, end: 456 }, { start: 456, end: 420 }, { start: 360, end: 420 }, { start: 420, end: 363 }, { start: 363, end: 360 }, { start: 361, end: 401 }, { start: 401, end: 288 }, { start: 288, end: 361 }, { start: 265, end: 372 }, { start: 372, end: 353 }, { start: 353, end: 265 }, { start: 390, end: 339 }, { start: 339, end: 249 }, { start: 249, end: 390 }, { start: 339, end: 448 }, { start: 448, end: 255 }, { start: 255, end: 339 }];
var face_landmarker_options = {};
Object.defineProperty(face_landmarker_options, "__esModule", { value: true });
var face_landmarker_result = {};
Object.defineProperty(face_landmarker_result, "__esModule", { value: true }), function(e2) {
  var t2 = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function(e3, t3, r3, o3) {
    void 0 === o3 && (o3 = r3);
    var i4 = Object.getOwnPropertyDescriptor(t3, r3);
    i4 && !("get" in i4 ? !t3.__esModule : i4.writable || i4.configurable) || (i4 = { enumerable: true, get: function() {
      return t3[r3];
    } }), Object.defineProperty(e3, o3, i4);
  } : function(e3, t3, r3, o3) {
    void 0 === o3 && (o3 = r3), e3[o3] = t3[r3];
  }), r2 = commonjsGlobal && commonjsGlobal.__exportStar || function(e3, r3) {
    for (var o3 in e3)
      "default" === o3 || Object.prototype.hasOwnProperty.call(r3, o3) || t2(r3, e3, o3);
  };
  Object.defineProperty(e2, "__esModule", { value: true }), e2.FaceLandmarker = void 0;
  const o2 = calculator_pb, i3 = calculator_options_pb, a3 = classification_pb, n2 = landmark_pb, s2 = base_options_pb, p2 = face_detector_graph_options_pb, d2 = face_geometry_pb, l2 = face_landmarker_graph_options_pb, g2 = face_landmarks_detector_graph_options_pb, c2 = classifier_result, u2 = landmark_result, m2 = vision_task_runner, f3 = face_landmarks_connections;
  r2(face_landmarker_options, e2), r2(face_landmarker_result, e2);
  const h2 = "image_in", y2 = "norm_rect", b2 = "face_landmarks", _ = "blendshapes", O2 = "face_geometry", F2 = 0.5;
  class M2 extends m2.VisionTaskRunner {
    static createFromOptions(e3, t3) {
      return m2.VisionTaskRunner.createVisionInstance(M2, e3, t3);
    }
    static createFromModelBuffer(e3, t3) {
      return m2.VisionTaskRunner.createVisionInstance(M2, e3, { baseOptions: { modelAssetBuffer: t3 } });
    }
    static createFromModelPath(e3, t3) {
      return m2.VisionTaskRunner.createVisionInstance(M2, e3, { baseOptions: { modelAssetPath: t3 } });
    }
    constructor(e3, t3) {
      super(new m2.VisionGraphRunner(e3, t3), h2, y2, false), this.result = { faceLandmarks: [], faceBlendshapes: [], facialTransformationMatrixes: [] }, this.outputFaceBlendshapes = false, this.outputFacialTransformationMatrixes = false, this.options = new l2.FaceLandmarkerGraphOptions(), this.options.setBaseOptions(new s2.BaseOptions()), this.faceLandmarksDetectorGraphOptions = new g2.FaceLandmarksDetectorGraphOptions(), this.options.setFaceLandmarksDetectorGraphOptions(this.faceLandmarksDetectorGraphOptions), this.faceDetectorGraphOptions = new p2.FaceDetectorGraphOptions(), this.options.setFaceDetectorGraphOptions(this.faceDetectorGraphOptions), this.initDefaults();
    }
    get baseOptions() {
      return this.options.getBaseOptions();
    }
    set baseOptions(e3) {
      this.options.setBaseOptions(e3);
    }
    setOptions(e3) {
      var t3, r3, o3, i4;
      return "numFaces" in e3 && this.faceDetectorGraphOptions.setNumFaces(null !== (t3 = e3.numFaces) && void 0 !== t3 ? t3 : 1), "minFaceDetectionConfidence" in e3 && this.faceDetectorGraphOptions.setMinDetectionConfidence(null !== (r3 = e3.minFaceDetectionConfidence) && void 0 !== r3 ? r3 : F2), "minTrackingConfidence" in e3 && this.options.setMinTrackingConfidence(null !== (o3 = e3.minTrackingConfidence) && void 0 !== o3 ? o3 : F2), "minFacePresenceConfidence" in e3 && this.faceLandmarksDetectorGraphOptions.setMinDetectionConfidence(null !== (i4 = e3.minFacePresenceConfidence) && void 0 !== i4 ? i4 : F2), "outputFaceBlendshapes" in e3 && (this.outputFaceBlendshapes = !!e3.outputFaceBlendshapes), "outputFacialTransformationMatrixes" in e3 && (this.outputFacialTransformationMatrixes = !!e3.outputFacialTransformationMatrixes), this.applyOptions(e3);
    }
    detect(e3, t3) {
      return this.resetResults(), this.processImageData(e3, t3), this.result;
    }
    detectForVideo(e3, t3, r3) {
      return this.resetResults(), this.processVideoData(e3, r3, t3), this.result;
    }
    resetResults() {
      this.result = { faceLandmarks: [], faceBlendshapes: [], facialTransformationMatrixes: [] };
    }
    initDefaults() {
      this.faceDetectorGraphOptions.setNumFaces(1), this.faceDetectorGraphOptions.setMinDetectionConfidence(F2), this.faceLandmarksDetectorGraphOptions.setMinDetectionConfidence(F2), this.options.setMinTrackingConfidence(F2);
    }
    addJsLandmarks(e3) {
      for (const t3 of e3) {
        const e4 = n2.NormalizedLandmarkList.deserializeBinary(t3);
        this.result.faceLandmarks.push((0, u2.convertToLandmarks)(e4));
      }
    }
    addBlenshape(e3) {
      var t3;
      if (this.outputFaceBlendshapes)
        for (const r3 of e3) {
          const e4 = a3.ClassificationList.deserializeBinary(r3);
          this.result.faceBlendshapes.push((0, c2.convertFromClassifications)(null !== (t3 = e4.getClassificationList()) && void 0 !== t3 ? t3 : []));
        }
    }
    addFacialTransformationMatrixes(e3) {
      var t3, r3, o3;
      if (this.outputFacialTransformationMatrixes)
        for (const i4 of e3) {
          const e4 = d2.FaceGeometry.deserializeBinary(i4).getPoseTransformMatrix();
          e4 && this.result.facialTransformationMatrixes.push({ rows: null !== (t3 = e4.getRows()) && void 0 !== t3 ? t3 : 0, columns: null !== (r3 = e4.getCols()) && void 0 !== r3 ? r3 : 0, data: null !== (o3 = e4.getPackedDataList()) && void 0 !== o3 ? o3 : [] });
        }
    }
    refreshGraph() {
      const e3 = new o2.CalculatorGraphConfig();
      e3.addInputStream(h2), e3.addInputStream(y2), e3.addOutputStream(b2);
      const t3 = new i3.CalculatorOptions();
      t3.setExtension(l2.FaceLandmarkerGraphOptions.ext, this.options);
      const r3 = new o2.CalculatorGraphConfig.Node();
      r3.setCalculator("mediapipe.tasks.vision.face_landmarker.FaceLandmarkerGraph"), r3.addInputStream("IMAGE:" + h2), r3.addInputStream("NORM_RECT:" + y2), r3.addOutputStream("NORM_LANDMARKS:" + b2), r3.setOptions(t3), e3.addNode(r3), this.graphRunner.attachProtoVectorListener(b2, (e4, t4) => {
        this.addJsLandmarks(e4), this.setLatestOutputTimestamp(t4);
      }), this.graphRunner.attachEmptyPacketListener(b2, (e4) => {
        this.setLatestOutputTimestamp(e4);
      }), this.outputFaceBlendshapes && (e3.addOutputStream(_), r3.addOutputStream("BLENDSHAPES:" + _), this.graphRunner.attachProtoVectorListener(_, (e4, t4) => {
        this.addBlenshape(e4), this.setLatestOutputTimestamp(t4);
      }), this.graphRunner.attachEmptyPacketListener(_, (e4) => {
        this.setLatestOutputTimestamp(e4);
      })), this.outputFacialTransformationMatrixes && (e3.addOutputStream(O2), r3.addOutputStream("FACE_GEOMETRY:" + O2), this.graphRunner.attachProtoVectorListener(O2, (e4, t4) => {
        this.addFacialTransformationMatrixes(e4), this.setLatestOutputTimestamp(t4);
      }), this.graphRunner.attachEmptyPacketListener(O2, (e4) => {
        this.setLatestOutputTimestamp(e4);
      }));
      const a4 = e3.serializeBinary();
      this.setGraph(new Uint8Array(a4), true);
    }
  }
  e2.FaceLandmarker = M2, M2.FACE_LANDMARKS_LIPS = f3.FACE_LANDMARKS_LIPS, M2.FACE_LANDMARKS_LEFT_EYE = f3.FACE_LANDMARKS_LEFT_EYE, M2.FACE_LANDMARKS_LEFT_EYEBROW = f3.FACE_LANDMARKS_LEFT_EYEBROW, M2.FACE_LANDMARKS_LEFT_IRIS = f3.FACE_LANDMARKS_LEFT_IRIS, M2.FACE_LANDMARKS_RIGHT_EYE = f3.FACE_LANDMARKS_RIGHT_EYE, M2.FACE_LANDMARKS_RIGHT_EYEBROW = f3.FACE_LANDMARKS_RIGHT_EYEBROW, M2.FACE_LANDMARKS_RIGHT_IRIS = f3.FACE_LANDMARKS_RIGHT_IRIS, M2.FACE_LANDMARKS_FACE_OVAL = f3.FACE_LANDMARKS_FACE_OVAL, M2.FACE_LANDMARKS_CONTOURS = f3.FACE_LANDMARKS_CONTOURS, M2.FACE_LANDMARKS_TESSELATION = f3.FACE_LANDMARKS_TESSELATION;
}(face_landmarker);
var face_stylizer = {};
var face_stylizer_graph_options_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = calculator_pb;
  r2.object.extend(proto, i3);
  var a3 = calculator_options_pb;
  r2.object.extend(proto, a3);
  var n2 = base_options_pb;
  r2.object.extend(proto, n2);
  var s2 = face_landmarker_graph_options_pb;
  r2.object.extend(proto, s2), r2.exportSymbol("proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions", null, o2), proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.displayName = "proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.toObject(e3, this);
  }, proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.toObject = function(e3, r3) {
    var o3, i4 = { baseOptions: (o3 = r3.getBaseOptions()) && n2.BaseOptions.toObject(e3, o3), faceLandmarkerGraphOptions: (o3 = r3.getFaceLandmarkerGraphOptions()) && s2.FaceLandmarkerGraphOptions.toObject(e3, o3), faceAlignmentSize: t2.Message.getFieldWithDefault(r3, 3, 256) };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions();
    return proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new n2.BaseOptions();
          t3.readMessage(r3, n2.BaseOptions.deserializeBinaryFromReader), e3.setBaseOptions(r3);
          break;
        case 2:
          r3 = new s2.FaceLandmarkerGraphOptions();
          t3.readMessage(r3, s2.FaceLandmarkerGraphOptions.deserializeBinaryFromReader), e3.setFaceLandmarkerGraphOptions(r3);
          break;
        case 3:
          r3 = t3.readInt32();
          e3.setFaceAlignmentSize(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = e3.getBaseOptions()) && r3.writeMessage(1, o3, n2.BaseOptions.serializeBinaryToWriter), null != (o3 = e3.getFaceLandmarkerGraphOptions()) && r3.writeMessage(2, o3, s2.FaceLandmarkerGraphOptions.serializeBinaryToWriter), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeInt32(3, o3);
  }, proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.ext = new t2.ExtensionFieldInfo(513916220, { ext: 0 }, proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions, proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[513916220] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[513916220] = proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.ext, proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.prototype.getBaseOptions = function() {
    return t2.Message.getWrapperField(this, n2.BaseOptions, 1);
  }, proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.prototype.setBaseOptions = function(e3) {
    return t2.Message.setWrapperField(this, 1, e3);
  }, proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.prototype.clearBaseOptions = function() {
    return this.setBaseOptions(void 0);
  }, proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.prototype.hasBaseOptions = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.prototype.getFaceLandmarkerGraphOptions = function() {
    return t2.Message.getWrapperField(this, s2.FaceLandmarkerGraphOptions, 2);
  }, proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.prototype.setFaceLandmarkerGraphOptions = function(e3) {
    return t2.Message.setWrapperField(this, 2, e3);
  }, proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.prototype.clearFaceLandmarkerGraphOptions = function() {
    return this.setFaceLandmarkerGraphOptions(void 0);
  }, proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.prototype.hasFaceLandmarkerGraphOptions = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.prototype.getFaceAlignmentSize = function() {
    return t2.Message.getFieldWithDefault(this, 3, 256);
  }, proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.prototype.setFaceAlignmentSize = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.prototype.clearFaceAlignmentSize = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.prototype.hasFaceAlignmentSize = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.ext = new t2.ExtensionFieldInfo(513916220, { ext: 0 }, proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions, proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[513916220] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[513916220] = proto.mediapipe.tasks.vision.face_stylizer.proto.FaceStylizerGraphOptions.ext, r2.object.extend(e2, proto.mediapipe.tasks.vision.face_stylizer.proto);
}(face_stylizer_graph_options_pb);
var face_stylizer_options = {};
Object.defineProperty(face_stylizer_options, "__esModule", { value: true }), function(e2) {
  var t2 = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function(e3, t3, r3, o3) {
    void 0 === o3 && (o3 = r3);
    var i4 = Object.getOwnPropertyDescriptor(t3, r3);
    i4 && !("get" in i4 ? !t3.__esModule : i4.writable || i4.configurable) || (i4 = { enumerable: true, get: function() {
      return t3[r3];
    } }), Object.defineProperty(e3, o3, i4);
  } : function(e3, t3, r3, o3) {
    void 0 === o3 && (o3 = r3), e3[o3] = t3[r3];
  }), r2 = commonjsGlobal && commonjsGlobal.__exportStar || function(e3, r3) {
    for (var o3 in e3)
      "default" === o3 || Object.prototype.hasOwnProperty.call(r3, o3) || t2(r3, e3, o3);
  };
  Object.defineProperty(e2, "__esModule", { value: true }), e2.FaceStylizer = void 0;
  const o2 = calculator_pb, i3 = calculator_options_pb, a3 = base_options_pb, n2 = face_stylizer_graph_options_pb, s2 = vision_task_runner;
  r2(face_stylizer_options, e2);
  const p2 = "image_in", d2 = "norm_rect", l2 = "stylized_image";
  class g2 extends s2.VisionTaskRunner {
    static createFromOptions(e3, t3) {
      return s2.VisionTaskRunner.createVisionInstance(g2, e3, t3);
    }
    static createFromModelBuffer(e3, t3) {
      return s2.VisionTaskRunner.createVisionInstance(g2, e3, { baseOptions: { modelAssetBuffer: t3 } });
    }
    static createFromModelPath(e3, t3) {
      return s2.VisionTaskRunner.createVisionInstance(g2, e3, { baseOptions: { modelAssetPath: t3 } });
    }
    constructor(e3, t3) {
      super(new s2.VisionGraphRunner(e3, t3), p2, d2, true), this.options = new n2.FaceStylizerGraphOptions(), this.options.setBaseOptions(new a3.BaseOptions());
    }
    get baseOptions() {
      return this.options.getBaseOptions();
    }
    set baseOptions(e3) {
      this.options.setBaseOptions(e3);
    }
    setOptions(e3) {
      return super.applyOptions(e3);
    }
    stylize(e3, t3, r3) {
      const o3 = "function" != typeof t3 ? t3 : {};
      if (this.userCallback = "function" == typeof t3 ? t3 : r3, this.processImageData(e3, null != o3 ? o3 : {}), !this.userCallback)
        return this.result;
    }
    stylizeForVideo(e3, t3, r3, o3) {
      const i4 = "function" != typeof r3 ? r3 : {};
      if (this.userCallback = "function" == typeof r3 ? r3 : o3, this.processVideoData(e3, i4, t3), this.userCallback = void 0, !this.userCallback)
        return this.result;
    }
    refreshGraph() {
      const e3 = new o2.CalculatorGraphConfig();
      e3.addInputStream(p2), e3.addInputStream(d2), e3.addOutputStream(l2);
      const t3 = new i3.CalculatorOptions();
      t3.setExtension(n2.FaceStylizerGraphOptions.ext, this.options);
      const r3 = new o2.CalculatorGraphConfig.Node();
      r3.setCalculator("mediapipe.tasks.vision.face_stylizer.FaceStylizerGraph"), r3.addInputStream("IMAGE:" + p2), r3.addInputStream("NORM_RECT:" + d2), r3.addOutputStream("STYLIZED_IMAGE:" + l2), r3.setOptions(t3), e3.addNode(r3), this.graphRunner.attachImageListener(l2, (e4, t4) => {
        const r4 = this.convertToMPImage(e4, !this.userCallback);
        this.result = r4, this.userCallback && this.userCallback(r4), this.setLatestOutputTimestamp(t4);
      }), this.graphRunner.attachEmptyPacketListener(l2, (e4) => {
        this.result = null, this.userCallback && this.userCallback(null), this.setLatestOutputTimestamp(e4);
      });
      const a4 = e3.serializeBinary();
      this.setGraph(new Uint8Array(a4), true);
    }
  }
  e2.FaceStylizer = g2;
}(face_stylizer);
var gesture_recognizer = {};
var gesture_classifier_graph_options_pb = {};
var classifier_options_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")();
  r2.exportSymbol("proto.mediapipe.tasks.components.processors.proto.ClassifierOptions", null, o2), proto.mediapipe.tasks.components.processors.proto.ClassifierOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.repeatedFields_, null);
  }, r2.inherits(proto.mediapipe.tasks.components.processors.proto.ClassifierOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.displayName = "proto.mediapipe.tasks.components.processors.proto.ClassifierOptions"), proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.repeatedFields_ = [4, 5], t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.toObject(e3, this);
  }, proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.toObject = function(e3, r3) {
    var o3, i3 = { displayNamesLocale: t2.Message.getFieldWithDefault(r3, 1, "en"), maxResults: t2.Message.getFieldWithDefault(r3, 2, -1), scoreThreshold: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 3)) ? void 0 : o3, categoryAllowlistList: null == (o3 = t2.Message.getRepeatedField(r3, 4)) ? void 0 : o3, categoryDenylistList: null == (o3 = t2.Message.getRepeatedField(r3, 5)) ? void 0 : o3 };
    return e3 && (i3.$jspbMessageInstance = r3), i3;
  }), proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.components.processors.proto.ClassifierOptions();
    return proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readString();
          e3.setDisplayNamesLocale(r3);
          break;
        case 2:
          r3 = t3.readInt32();
          e3.setMaxResults(r3);
          break;
        case 3:
          r3 = t3.readFloat();
          e3.setScoreThreshold(r3);
          break;
        case 4:
          r3 = t3.readString();
          e3.addCategoryAllowlist(r3);
          break;
        case 5:
          r3 = t3.readString();
          e3.addCategoryDenylist(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeString(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeInt32(2, o3), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeFloat(3, o3), (o3 = e3.getCategoryAllowlistList()).length > 0 && r3.writeRepeatedString(4, o3), (o3 = e3.getCategoryDenylistList()).length > 0 && r3.writeRepeatedString(5, o3);
  }, proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.prototype.getDisplayNamesLocale = function() {
    return t2.Message.getFieldWithDefault(this, 1, "en");
  }, proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.prototype.setDisplayNamesLocale = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.prototype.clearDisplayNamesLocale = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.prototype.hasDisplayNamesLocale = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.prototype.getMaxResults = function() {
    return t2.Message.getFieldWithDefault(this, 2, -1);
  }, proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.prototype.setMaxResults = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.prototype.clearMaxResults = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.prototype.hasMaxResults = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.prototype.getScoreThreshold = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 3, 0);
  }, proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.prototype.setScoreThreshold = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.prototype.clearScoreThreshold = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.prototype.hasScoreThreshold = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.prototype.getCategoryAllowlistList = function() {
    return t2.Message.getRepeatedField(this, 4);
  }, proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.prototype.setCategoryAllowlistList = function(e3) {
    return t2.Message.setField(this, 4, e3 || []);
  }, proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.prototype.addCategoryAllowlist = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 4, e3, r3);
  }, proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.prototype.clearCategoryAllowlistList = function() {
    return this.setCategoryAllowlistList([]);
  }, proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.prototype.getCategoryDenylistList = function() {
    return t2.Message.getRepeatedField(this, 5);
  }, proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.prototype.setCategoryDenylistList = function(e3) {
    return t2.Message.setField(this, 5, e3 || []);
  }, proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.prototype.addCategoryDenylist = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 5, e3, r3);
  }, proto.mediapipe.tasks.components.processors.proto.ClassifierOptions.prototype.clearCategoryDenylistList = function() {
    return this.setCategoryDenylistList([]);
  }, r2.object.extend(e2, proto.mediapipe.tasks.components.processors.proto);
}(classifier_options_pb), function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = calculator_pb;
  r2.object.extend(proto, i3);
  var a3 = calculator_options_pb;
  r2.object.extend(proto, a3);
  var n2 = classifier_options_pb;
  r2.object.extend(proto, n2);
  var s2 = base_options_pb;
  r2.object.extend(proto, s2), r2.exportSymbol("proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions", null, o2), proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.displayName = "proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.toObject(e3, this);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.toObject = function(e3, t3) {
    var r3, o3 = { baseOptions: (r3 = t3.getBaseOptions()) && s2.BaseOptions.toObject(e3, r3), classifierOptions: (r3 = t3.getClassifierOptions()) && n2.ClassifierOptions.toObject(e3, r3) };
    return e3 && (o3.$jspbMessageInstance = t3), o3;
  }), proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions();
    return proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new s2.BaseOptions();
          t3.readMessage(r3, s2.BaseOptions.deserializeBinaryFromReader), e3.setBaseOptions(r3);
          break;
        case 2:
          r3 = new n2.ClassifierOptions();
          t3.readMessage(r3, n2.ClassifierOptions.deserializeBinaryFromReader), e3.setClassifierOptions(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.serializeBinaryToWriter = function(e3, t3) {
    var r3 = void 0;
    null != (r3 = e3.getBaseOptions()) && t3.writeMessage(1, r3, s2.BaseOptions.serializeBinaryToWriter), null != (r3 = e3.getClassifierOptions()) && t3.writeMessage(2, r3, n2.ClassifierOptions.serializeBinaryToWriter);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.ext = new t2.ExtensionFieldInfo(478825465, { ext: 0 }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[478825465] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[478825465] = proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.ext, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.prototype.getBaseOptions = function() {
    return t2.Message.getWrapperField(this, s2.BaseOptions, 1);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.prototype.setBaseOptions = function(e3) {
    return t2.Message.setWrapperField(this, 1, e3);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.prototype.clearBaseOptions = function() {
    return this.setBaseOptions(void 0);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.prototype.hasBaseOptions = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.prototype.getClassifierOptions = function() {
    return t2.Message.getWrapperField(this, n2.ClassifierOptions, 2);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.prototype.setClassifierOptions = function(e3) {
    return t2.Message.setWrapperField(this, 2, e3);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.prototype.clearClassifierOptions = function() {
    return this.setClassifierOptions(void 0);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.prototype.hasClassifierOptions = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.ext = new t2.ExtensionFieldInfo(478825465, { ext: 0 }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[478825465] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[478825465] = proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureClassifierGraphOptions.ext, r2.object.extend(e2, proto.mediapipe.tasks.vision.gesture_recognizer.proto);
}(gesture_classifier_graph_options_pb);
var gesture_recognizer_graph_options_pb = {};
var hand_gesture_recognizer_graph_options_pb = {};
var gesture_embedder_graph_options_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = calculator_pb;
  r2.object.extend(proto, i3);
  var a3 = calculator_options_pb;
  r2.object.extend(proto, a3);
  var n2 = base_options_pb;
  r2.object.extend(proto, n2), r2.exportSymbol("proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions", null, o2), proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions.displayName = "proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions.toObject(e3, this);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions.toObject = function(e3, t3) {
    var r3, o3 = { baseOptions: (r3 = t3.getBaseOptions()) && n2.BaseOptions.toObject(e3, r3) };
    return e3 && (o3.$jspbMessageInstance = t3), o3;
  }), proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions();
    return proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      if (1 === t3.getFieldNumber()) {
        var r3 = new n2.BaseOptions();
        t3.readMessage(r3, n2.BaseOptions.deserializeBinaryFromReader), e3.setBaseOptions(r3);
      } else
        t3.skipField();
    }
    return e3;
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions.serializeBinaryToWriter = function(e3, t3) {
    var r3;
    null != (r3 = e3.getBaseOptions()) && t3.writeMessage(1, r3, n2.BaseOptions.serializeBinaryToWriter);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions.ext = new t2.ExtensionFieldInfo(478825422, { ext: 0 }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[478825422] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[478825422] = proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions.ext, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions.prototype.getBaseOptions = function() {
    return t2.Message.getWrapperField(this, n2.BaseOptions, 1);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions.prototype.setBaseOptions = function(e3) {
    return t2.Message.setWrapperField(this, 1, e3);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions.prototype.clearBaseOptions = function() {
    return this.setBaseOptions(void 0);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions.prototype.hasBaseOptions = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions.ext = new t2.ExtensionFieldInfo(478825422, { ext: 0 }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[478825422] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[478825422] = proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureEmbedderGraphOptions.ext, r2.object.extend(e2, proto.mediapipe.tasks.vision.gesture_recognizer.proto);
}(gesture_embedder_graph_options_pb), function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = calculator_pb;
  r2.object.extend(proto, i3);
  var a3 = calculator_options_pb;
  r2.object.extend(proto, a3);
  var n2 = base_options_pb;
  r2.object.extend(proto, n2);
  var s2 = gesture_classifier_graph_options_pb;
  r2.object.extend(proto, s2);
  var p2 = gesture_embedder_graph_options_pb;
  r2.object.extend(proto, p2), r2.exportSymbol("proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions", null, o2), proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.displayName = "proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.toObject(e3, this);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.toObject = function(e3, t3) {
    var r3, o3 = { baseOptions: (r3 = t3.getBaseOptions()) && n2.BaseOptions.toObject(e3, r3), gestureEmbedderGraphOptions: (r3 = t3.getGestureEmbedderGraphOptions()) && p2.GestureEmbedderGraphOptions.toObject(e3, r3), cannedGestureClassifierGraphOptions: (r3 = t3.getCannedGestureClassifierGraphOptions()) && s2.GestureClassifierGraphOptions.toObject(e3, r3), customGestureClassifierGraphOptions: (r3 = t3.getCustomGestureClassifierGraphOptions()) && s2.GestureClassifierGraphOptions.toObject(e3, r3) };
    return e3 && (o3.$jspbMessageInstance = t3), o3;
  }), proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions();
    return proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new n2.BaseOptions();
          t3.readMessage(r3, n2.BaseOptions.deserializeBinaryFromReader), e3.setBaseOptions(r3);
          break;
        case 2:
          r3 = new p2.GestureEmbedderGraphOptions();
          t3.readMessage(r3, p2.GestureEmbedderGraphOptions.deserializeBinaryFromReader), e3.setGestureEmbedderGraphOptions(r3);
          break;
        case 3:
          r3 = new s2.GestureClassifierGraphOptions();
          t3.readMessage(r3, s2.GestureClassifierGraphOptions.deserializeBinaryFromReader), e3.setCannedGestureClassifierGraphOptions(r3);
          break;
        case 4:
          r3 = new s2.GestureClassifierGraphOptions();
          t3.readMessage(r3, s2.GestureClassifierGraphOptions.deserializeBinaryFromReader), e3.setCustomGestureClassifierGraphOptions(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.serializeBinaryToWriter = function(e3, t3) {
    var r3 = void 0;
    null != (r3 = e3.getBaseOptions()) && t3.writeMessage(1, r3, n2.BaseOptions.serializeBinaryToWriter), null != (r3 = e3.getGestureEmbedderGraphOptions()) && t3.writeMessage(2, r3, p2.GestureEmbedderGraphOptions.serializeBinaryToWriter), null != (r3 = e3.getCannedGestureClassifierGraphOptions()) && t3.writeMessage(3, r3, s2.GestureClassifierGraphOptions.serializeBinaryToWriter), null != (r3 = e3.getCustomGestureClassifierGraphOptions()) && t3.writeMessage(4, r3, s2.GestureClassifierGraphOptions.serializeBinaryToWriter);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.ext = new t2.ExtensionFieldInfo(463370452, { ext: 0 }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[463370452] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[463370452] = proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.ext, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.prototype.getBaseOptions = function() {
    return t2.Message.getWrapperField(this, n2.BaseOptions, 1);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.prototype.setBaseOptions = function(e3) {
    return t2.Message.setWrapperField(this, 1, e3);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.prototype.clearBaseOptions = function() {
    return this.setBaseOptions(void 0);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.prototype.hasBaseOptions = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.prototype.getGestureEmbedderGraphOptions = function() {
    return t2.Message.getWrapperField(this, p2.GestureEmbedderGraphOptions, 2);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.prototype.setGestureEmbedderGraphOptions = function(e3) {
    return t2.Message.setWrapperField(this, 2, e3);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.prototype.clearGestureEmbedderGraphOptions = function() {
    return this.setGestureEmbedderGraphOptions(void 0);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.prototype.hasGestureEmbedderGraphOptions = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.prototype.getCannedGestureClassifierGraphOptions = function() {
    return t2.Message.getWrapperField(this, s2.GestureClassifierGraphOptions, 3);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.prototype.setCannedGestureClassifierGraphOptions = function(e3) {
    return t2.Message.setWrapperField(this, 3, e3);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.prototype.clearCannedGestureClassifierGraphOptions = function() {
    return this.setCannedGestureClassifierGraphOptions(void 0);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.prototype.hasCannedGestureClassifierGraphOptions = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.prototype.getCustomGestureClassifierGraphOptions = function() {
    return t2.Message.getWrapperField(this, s2.GestureClassifierGraphOptions, 4);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.prototype.setCustomGestureClassifierGraphOptions = function(e3) {
    return t2.Message.setWrapperField(this, 4, e3);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.prototype.clearCustomGestureClassifierGraphOptions = function() {
    return this.setCustomGestureClassifierGraphOptions(void 0);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.prototype.hasCustomGestureClassifierGraphOptions = function() {
    return null != t2.Message.getField(this, 4);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.ext = new t2.ExtensionFieldInfo(463370452, { ext: 0 }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[463370452] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[463370452] = proto.mediapipe.tasks.vision.gesture_recognizer.proto.HandGestureRecognizerGraphOptions.ext, r2.object.extend(e2, proto.mediapipe.tasks.vision.gesture_recognizer.proto);
}(hand_gesture_recognizer_graph_options_pb);
var hand_landmarker_graph_options_pb = {};
var hand_detector_graph_options_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = calculator_pb;
  r2.object.extend(proto, i3);
  var a3 = calculator_options_pb;
  r2.object.extend(proto, a3);
  var n2 = base_options_pb;
  r2.object.extend(proto, n2), r2.exportSymbol("proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions", null, o2), proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.displayName = "proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.toObject(e3, this);
  }, proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.toObject = function(e3, r3) {
    var o3, i4 = { baseOptions: (o3 = r3.getBaseOptions()) && n2.BaseOptions.toObject(e3, o3), minDetectionConfidence: t2.Message.getFloatingPointFieldWithDefault(r3, 2, 0.5), numHands: null == (o3 = t2.Message.getField(r3, 3)) ? void 0 : o3 };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions();
    return proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new n2.BaseOptions();
          t3.readMessage(r3, n2.BaseOptions.deserializeBinaryFromReader), e3.setBaseOptions(r3);
          break;
        case 2:
          r3 = t3.readFloat();
          e3.setMinDetectionConfidence(r3);
          break;
        case 3:
          r3 = t3.readInt32();
          e3.setNumHands(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = e3.getBaseOptions()) && r3.writeMessage(1, o3, n2.BaseOptions.serializeBinaryToWriter), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeFloat(2, o3), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeInt32(3, o3);
  }, proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.ext = new t2.ExtensionFieldInfo(464864288, { ext: 0 }, proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions, proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[464864288] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[464864288] = proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.ext, proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.prototype.getBaseOptions = function() {
    return t2.Message.getWrapperField(this, n2.BaseOptions, 1);
  }, proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.prototype.setBaseOptions = function(e3) {
    return t2.Message.setWrapperField(this, 1, e3);
  }, proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.prototype.clearBaseOptions = function() {
    return this.setBaseOptions(void 0);
  }, proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.prototype.hasBaseOptions = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.prototype.getMinDetectionConfidence = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 2, 0.5);
  }, proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.prototype.setMinDetectionConfidence = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.prototype.clearMinDetectionConfidence = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.prototype.hasMinDetectionConfidence = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.prototype.getNumHands = function() {
    return t2.Message.getFieldWithDefault(this, 3, 0);
  }, proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.prototype.setNumHands = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.prototype.clearNumHands = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.prototype.hasNumHands = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.ext = new t2.ExtensionFieldInfo(464864288, { ext: 0 }, proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions, proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[464864288] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[464864288] = proto.mediapipe.tasks.vision.hand_detector.proto.HandDetectorGraphOptions.ext, r2.object.extend(e2, proto.mediapipe.tasks.vision.hand_detector.proto);
}(hand_detector_graph_options_pb);
var hand_landmarks_detector_graph_options_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = calculator_pb;
  r2.object.extend(proto, i3);
  var a3 = calculator_options_pb;
  r2.object.extend(proto, a3);
  var n2 = base_options_pb;
  r2.object.extend(proto, n2), r2.exportSymbol("proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions", null, o2), proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.displayName = "proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.toObject(e3, this);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.toObject = function(e3, r3) {
    var o3, i4 = { baseOptions: (o3 = r3.getBaseOptions()) && n2.BaseOptions.toObject(e3, o3), minDetectionConfidence: t2.Message.getFloatingPointFieldWithDefault(r3, 2, 0.5) };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions();
    return proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new n2.BaseOptions();
          t3.readMessage(r3, n2.BaseOptions.deserializeBinaryFromReader), e3.setBaseOptions(r3);
          break;
        case 2:
          r3 = t3.readFloat();
          e3.setMinDetectionConfidence(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = e3.getBaseOptions()) && r3.writeMessage(1, o3, n2.BaseOptions.serializeBinaryToWriter), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeFloat(2, o3);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.ext = new t2.ExtensionFieldInfo(474472470, { ext: 0 }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[474472470] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[474472470] = proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.ext, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.prototype.getBaseOptions = function() {
    return t2.Message.getWrapperField(this, n2.BaseOptions, 1);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.prototype.setBaseOptions = function(e3) {
    return t2.Message.setWrapperField(this, 1, e3);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.prototype.clearBaseOptions = function() {
    return this.setBaseOptions(void 0);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.prototype.hasBaseOptions = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.prototype.getMinDetectionConfidence = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 2, 0.5);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.prototype.setMinDetectionConfidence = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.prototype.clearMinDetectionConfidence = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.prototype.hasMinDetectionConfidence = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.ext = new t2.ExtensionFieldInfo(474472470, { ext: 0 }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[474472470] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[474472470] = proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarksDetectorGraphOptions.ext, r2.object.extend(e2, proto.mediapipe.tasks.vision.hand_landmarker.proto);
}(hand_landmarks_detector_graph_options_pb), function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = calculator_pb;
  r2.object.extend(proto, i3);
  var a3 = calculator_options_pb;
  r2.object.extend(proto, a3);
  var n2 = base_options_pb;
  r2.object.extend(proto, n2);
  var s2 = hand_detector_graph_options_pb;
  r2.object.extend(proto, s2);
  var p2 = hand_landmarks_detector_graph_options_pb;
  r2.object.extend(proto, p2), r2.exportSymbol("proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions", null, o2), proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.displayName = "proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.toObject(e3, this);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.toObject = function(e3, r3) {
    var o3, i4 = { baseOptions: (o3 = r3.getBaseOptions()) && n2.BaseOptions.toObject(e3, o3), handDetectorGraphOptions: (o3 = r3.getHandDetectorGraphOptions()) && s2.HandDetectorGraphOptions.toObject(e3, o3), handLandmarksDetectorGraphOptions: (o3 = r3.getHandLandmarksDetectorGraphOptions()) && p2.HandLandmarksDetectorGraphOptions.toObject(e3, o3), minTrackingConfidence: t2.Message.getFloatingPointFieldWithDefault(r3, 4, 0.5) };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions();
    return proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new n2.BaseOptions();
          t3.readMessage(r3, n2.BaseOptions.deserializeBinaryFromReader), e3.setBaseOptions(r3);
          break;
        case 2:
          r3 = new s2.HandDetectorGraphOptions();
          t3.readMessage(r3, s2.HandDetectorGraphOptions.deserializeBinaryFromReader), e3.setHandDetectorGraphOptions(r3);
          break;
        case 3:
          r3 = new p2.HandLandmarksDetectorGraphOptions();
          t3.readMessage(r3, p2.HandLandmarksDetectorGraphOptions.deserializeBinaryFromReader), e3.setHandLandmarksDetectorGraphOptions(r3);
          break;
        case 4:
          r3 = t3.readFloat();
          e3.setMinTrackingConfidence(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = e3.getBaseOptions()) && r3.writeMessage(1, o3, n2.BaseOptions.serializeBinaryToWriter), null != (o3 = e3.getHandDetectorGraphOptions()) && r3.writeMessage(2, o3, s2.HandDetectorGraphOptions.serializeBinaryToWriter), null != (o3 = e3.getHandLandmarksDetectorGraphOptions()) && r3.writeMessage(3, o3, p2.HandLandmarksDetectorGraphOptions.serializeBinaryToWriter), null != (o3 = t2.Message.getField(e3, 4)) && r3.writeFloat(4, o3);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.ext = new t2.ExtensionFieldInfo(462713202, { ext: 0 }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[462713202] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[462713202] = proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.ext, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.prototype.getBaseOptions = function() {
    return t2.Message.getWrapperField(this, n2.BaseOptions, 1);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.prototype.setBaseOptions = function(e3) {
    return t2.Message.setWrapperField(this, 1, e3);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.prototype.clearBaseOptions = function() {
    return this.setBaseOptions(void 0);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.prototype.hasBaseOptions = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.prototype.getHandDetectorGraphOptions = function() {
    return t2.Message.getWrapperField(this, s2.HandDetectorGraphOptions, 2);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.prototype.setHandDetectorGraphOptions = function(e3) {
    return t2.Message.setWrapperField(this, 2, e3);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.prototype.clearHandDetectorGraphOptions = function() {
    return this.setHandDetectorGraphOptions(void 0);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.prototype.hasHandDetectorGraphOptions = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.prototype.getHandLandmarksDetectorGraphOptions = function() {
    return t2.Message.getWrapperField(this, p2.HandLandmarksDetectorGraphOptions, 3);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.prototype.setHandLandmarksDetectorGraphOptions = function(e3) {
    return t2.Message.setWrapperField(this, 3, e3);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.prototype.clearHandLandmarksDetectorGraphOptions = function() {
    return this.setHandLandmarksDetectorGraphOptions(void 0);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.prototype.hasHandLandmarksDetectorGraphOptions = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.prototype.getMinTrackingConfidence = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 4, 0.5);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.prototype.setMinTrackingConfidence = function(e3) {
    return t2.Message.setField(this, 4, e3);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.prototype.clearMinTrackingConfidence = function() {
    return t2.Message.setField(this, 4, void 0);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.prototype.hasMinTrackingConfidence = function() {
    return null != t2.Message.getField(this, 4);
  }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.ext = new t2.ExtensionFieldInfo(462713202, { ext: 0 }, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[462713202] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[462713202] = proto.mediapipe.tasks.vision.hand_landmarker.proto.HandLandmarkerGraphOptions.ext, r2.object.extend(e2, proto.mediapipe.tasks.vision.hand_landmarker.proto);
}(hand_landmarker_graph_options_pb), function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = calculator_pb;
  r2.object.extend(proto, i3);
  var a3 = calculator_options_pb;
  r2.object.extend(proto, a3);
  var n2 = base_options_pb;
  r2.object.extend(proto, n2);
  var s2 = hand_gesture_recognizer_graph_options_pb;
  r2.object.extend(proto, s2);
  var p2 = hand_landmarker_graph_options_pb;
  r2.object.extend(proto, p2), r2.exportSymbol("proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions", null, o2), proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.displayName = "proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.toObject(e3, this);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.toObject = function(e3, t3) {
    var r3, o3 = { baseOptions: (r3 = t3.getBaseOptions()) && n2.BaseOptions.toObject(e3, r3), handLandmarkerGraphOptions: (r3 = t3.getHandLandmarkerGraphOptions()) && p2.HandLandmarkerGraphOptions.toObject(e3, r3), handGestureRecognizerGraphOptions: (r3 = t3.getHandGestureRecognizerGraphOptions()) && s2.HandGestureRecognizerGraphOptions.toObject(e3, r3) };
    return e3 && (o3.$jspbMessageInstance = t3), o3;
  }), proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions();
    return proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new n2.BaseOptions();
          t3.readMessage(r3, n2.BaseOptions.deserializeBinaryFromReader), e3.setBaseOptions(r3);
          break;
        case 2:
          r3 = new p2.HandLandmarkerGraphOptions();
          t3.readMessage(r3, p2.HandLandmarkerGraphOptions.deserializeBinaryFromReader), e3.setHandLandmarkerGraphOptions(r3);
          break;
        case 3:
          r3 = new s2.HandGestureRecognizerGraphOptions();
          t3.readMessage(r3, s2.HandGestureRecognizerGraphOptions.deserializeBinaryFromReader), e3.setHandGestureRecognizerGraphOptions(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.serializeBinaryToWriter = function(e3, t3) {
    var r3 = void 0;
    null != (r3 = e3.getBaseOptions()) && t3.writeMessage(1, r3, n2.BaseOptions.serializeBinaryToWriter), null != (r3 = e3.getHandLandmarkerGraphOptions()) && t3.writeMessage(2, r3, p2.HandLandmarkerGraphOptions.serializeBinaryToWriter), null != (r3 = e3.getHandGestureRecognizerGraphOptions()) && t3.writeMessage(3, r3, s2.HandGestureRecognizerGraphOptions.serializeBinaryToWriter);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.ext = new t2.ExtensionFieldInfo(479097054, { ext: 0 }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[479097054] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[479097054] = proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.ext, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.prototype.getBaseOptions = function() {
    return t2.Message.getWrapperField(this, n2.BaseOptions, 1);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.prototype.setBaseOptions = function(e3) {
    return t2.Message.setWrapperField(this, 1, e3);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.prototype.clearBaseOptions = function() {
    return this.setBaseOptions(void 0);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.prototype.hasBaseOptions = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.prototype.getHandLandmarkerGraphOptions = function() {
    return t2.Message.getWrapperField(this, p2.HandLandmarkerGraphOptions, 2);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.prototype.setHandLandmarkerGraphOptions = function(e3) {
    return t2.Message.setWrapperField(this, 2, e3);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.prototype.clearHandLandmarkerGraphOptions = function() {
    return this.setHandLandmarkerGraphOptions(void 0);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.prototype.hasHandLandmarkerGraphOptions = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.prototype.getHandGestureRecognizerGraphOptions = function() {
    return t2.Message.getWrapperField(this, s2.HandGestureRecognizerGraphOptions, 3);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.prototype.setHandGestureRecognizerGraphOptions = function(e3) {
    return t2.Message.setWrapperField(this, 3, e3);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.prototype.clearHandGestureRecognizerGraphOptions = function() {
    return this.setHandGestureRecognizerGraphOptions(void 0);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.prototype.hasHandGestureRecognizerGraphOptions = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.ext = new t2.ExtensionFieldInfo(479097054, { ext: 0 }, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[479097054] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[479097054] = proto.mediapipe.tasks.vision.gesture_recognizer.proto.GestureRecognizerGraphOptions.ext, r2.object.extend(e2, proto.mediapipe.tasks.vision.gesture_recognizer.proto);
}(gesture_recognizer_graph_options_pb);
var classifier_options = {};
Object.defineProperty(classifier_options, "__esModule", { value: true }), classifier_options.convertClassifierOptionsToProto = void 0;
var classifier_options_pb_1 = classifier_options_pb;
function convertClassifierOptionsToProto(e2, t2) {
  const r2 = t2 ? t2.clone() : new classifier_options_pb_1.ClassifierOptions();
  return void 0 !== e2.displayNamesLocale ? r2.setDisplayNamesLocale(e2.displayNamesLocale) : void 0 === e2.displayNamesLocale && r2.clearDisplayNamesLocale(), void 0 !== e2.maxResults ? r2.setMaxResults(e2.maxResults) : "maxResults" in e2 && r2.clearMaxResults(), void 0 !== e2.scoreThreshold ? r2.setScoreThreshold(e2.scoreThreshold) : "scoreThreshold" in e2 && r2.clearScoreThreshold(), void 0 !== e2.categoryAllowlist ? r2.setCategoryAllowlistList(e2.categoryAllowlist) : "categoryAllowlist" in e2 && r2.clearCategoryAllowlistList(), void 0 !== e2.categoryDenylist ? r2.setCategoryDenylistList(e2.categoryDenylist) : "categoryDenylist" in e2 && r2.clearCategoryDenylistList(), r2;
}
classifier_options.convertClassifierOptionsToProto = convertClassifierOptionsToProto;
var hand_landmarks_connections = {};
Object.defineProperty(hand_landmarks_connections, "__esModule", { value: true }), hand_landmarks_connections.HAND_CONNECTIONS = void 0, hand_landmarks_connections.HAND_CONNECTIONS = [{ start: 0, end: 1 }, { start: 1, end: 2 }, { start: 2, end: 3 }, { start: 3, end: 4 }, { start: 0, end: 5 }, { start: 5, end: 6 }, { start: 6, end: 7 }, { start: 7, end: 8 }, { start: 5, end: 9 }, { start: 9, end: 10 }, { start: 10, end: 11 }, { start: 11, end: 12 }, { start: 9, end: 13 }, { start: 13, end: 14 }, { start: 14, end: 15 }, { start: 15, end: 16 }, { start: 13, end: 17 }, { start: 0, end: 17 }, { start: 17, end: 18 }, { start: 18, end: 19 }, { start: 19, end: 20 }];
var gesture_recognizer_options = {};
Object.defineProperty(gesture_recognizer_options, "__esModule", { value: true });
var gesture_recognizer_result = {};
Object.defineProperty(gesture_recognizer_result, "__esModule", { value: true }), function(e2) {
  var t2 = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function(e3, t3, r3, o3) {
    void 0 === o3 && (o3 = r3);
    var i4 = Object.getOwnPropertyDescriptor(t3, r3);
    i4 && !("get" in i4 ? !t3.__esModule : i4.writable || i4.configurable) || (i4 = { enumerable: true, get: function() {
      return t3[r3];
    } }), Object.defineProperty(e3, o3, i4);
  } : function(e3, t3, r3, o3) {
    void 0 === o3 && (o3 = r3), e3[o3] = t3[r3];
  }), r2 = commonjsGlobal && commonjsGlobal.__exportStar || function(e3, r3) {
    for (var o3 in e3)
      "default" === o3 || Object.prototype.hasOwnProperty.call(r3, o3) || t2(r3, e3, o3);
  };
  Object.defineProperty(e2, "__esModule", { value: true }), e2.GestureRecognizer = void 0;
  const o2 = calculator_pb, i3 = calculator_options_pb, a3 = classification_pb, n2 = landmark_pb, s2 = base_options_pb, p2 = gesture_classifier_graph_options_pb, d2 = gesture_recognizer_graph_options_pb, l2 = hand_gesture_recognizer_graph_options_pb, g2 = hand_detector_graph_options_pb, c2 = hand_landmarker_graph_options_pb, u2 = hand_landmarks_detector_graph_options_pb, m2 = classifier_options, f3 = vision_task_runner, h2 = hand_landmarks_connections;
  r2(gesture_recognizer_options, e2), r2(gesture_recognizer_result, e2);
  const y2 = "image_in", b2 = "norm_rect", _ = "hand_gestures", O2 = "hand_landmarks", F2 = "world_hand_landmarks", M2 = "handedness", R2 = 0.5;
  class v5 extends f3.VisionTaskRunner {
    static createFromOptions(e3, t3) {
      return f3.VisionTaskRunner.createVisionInstance(v5, e3, t3);
    }
    static createFromModelBuffer(e3, t3) {
      return f3.VisionTaskRunner.createVisionInstance(v5, e3, { baseOptions: { modelAssetBuffer: t3 } });
    }
    static createFromModelPath(e3, t3) {
      return f3.VisionTaskRunner.createVisionInstance(v5, e3, { baseOptions: { modelAssetPath: t3 } });
    }
    constructor(e3, t3) {
      super(new f3.VisionGraphRunner(e3, t3), y2, b2, false), this.gestures = [], this.landmarks = [], this.worldLandmarks = [], this.handednesses = [], this.options = new d2.GestureRecognizerGraphOptions(), this.options.setBaseOptions(new s2.BaseOptions()), this.handLandmarkerGraphOptions = new c2.HandLandmarkerGraphOptions(), this.options.setHandLandmarkerGraphOptions(this.handLandmarkerGraphOptions), this.handLandmarksDetectorGraphOptions = new u2.HandLandmarksDetectorGraphOptions(), this.handLandmarkerGraphOptions.setHandLandmarksDetectorGraphOptions(this.handLandmarksDetectorGraphOptions), this.handDetectorGraphOptions = new g2.HandDetectorGraphOptions(), this.handLandmarkerGraphOptions.setHandDetectorGraphOptions(this.handDetectorGraphOptions), this.handGestureRecognizerGraphOptions = new l2.HandGestureRecognizerGraphOptions(), this.options.setHandGestureRecognizerGraphOptions(this.handGestureRecognizerGraphOptions), this.handDetectorGraphOptions.setMinDetectionConfidence(R2), this.handLandmarkerGraphOptions.setMinTrackingConfidence(R2), this.handLandmarksDetectorGraphOptions.setMinDetectionConfidence(R2);
    }
    get baseOptions() {
      return this.options.getBaseOptions();
    }
    set baseOptions(e3) {
      this.options.setBaseOptions(e3);
    }
    setOptions(e3) {
      var t3, r3, o3, i4, a4, n3, s3, d3;
      if (this.handDetectorGraphOptions.setNumHands(null !== (t3 = e3.numHands) && void 0 !== t3 ? t3 : 1), "minHandDetectionConfidence" in e3 && this.handDetectorGraphOptions.setMinDetectionConfidence(null !== (r3 = e3.minHandDetectionConfidence) && void 0 !== r3 ? r3 : R2), "minTrackingConfidence" in e3 && this.handLandmarkerGraphOptions.setMinTrackingConfidence(null !== (o3 = e3.minTrackingConfidence) && void 0 !== o3 ? o3 : R2), "minHandPresenceConfidence" in e3 && this.handLandmarksDetectorGraphOptions.setMinDetectionConfidence(null !== (i4 = e3.minHandPresenceConfidence) && void 0 !== i4 ? i4 : R2), e3.cannedGesturesClassifierOptions) {
        const t4 = new p2.GestureClassifierGraphOptions();
        t4.setClassifierOptions((0, m2.convertClassifierOptionsToProto)(e3.cannedGesturesClassifierOptions, null === (a4 = this.handGestureRecognizerGraphOptions.getCannedGestureClassifierGraphOptions()) || void 0 === a4 ? void 0 : a4.getClassifierOptions())), this.handGestureRecognizerGraphOptions.setCannedGestureClassifierGraphOptions(t4);
      } else
        void 0 === e3.cannedGesturesClassifierOptions && (null === (n3 = this.handGestureRecognizerGraphOptions.getCannedGestureClassifierGraphOptions()) || void 0 === n3 || n3.clearClassifierOptions());
      if (e3.customGesturesClassifierOptions) {
        const t4 = new p2.GestureClassifierGraphOptions();
        t4.setClassifierOptions((0, m2.convertClassifierOptionsToProto)(e3.customGesturesClassifierOptions, null === (s3 = this.handGestureRecognizerGraphOptions.getCustomGestureClassifierGraphOptions()) || void 0 === s3 ? void 0 : s3.getClassifierOptions())), this.handGestureRecognizerGraphOptions.setCustomGestureClassifierGraphOptions(t4);
      } else
        void 0 === e3.customGesturesClassifierOptions && (null === (d3 = this.handGestureRecognizerGraphOptions.getCustomGestureClassifierGraphOptions()) || void 0 === d3 || d3.clearClassifierOptions());
      return this.applyOptions(e3);
    }
    recognize(e3, t3) {
      return this.resetResults(), this.processImageData(e3, t3), this.processResults();
    }
    recognizeForVideo(e3, t3, r3) {
      return this.resetResults(), this.processVideoData(e3, r3, t3), this.processResults();
    }
    resetResults() {
      this.gestures = [], this.landmarks = [], this.worldLandmarks = [], this.handednesses = [];
    }
    processResults() {
      return 0 === this.gestures.length ? { gestures: [], landmarks: [], worldLandmarks: [], handednesses: [] } : { gestures: this.gestures, landmarks: this.landmarks, worldLandmarks: this.worldLandmarks, handednesses: this.handednesses };
    }
    toJsCategories(e3, t3 = true) {
      var r3, o3, i4;
      const n3 = [];
      for (const s3 of e3) {
        const e4 = a3.ClassificationList.deserializeBinary(s3), p3 = [];
        for (const a4 of e4.getClassificationList()) {
          const e5 = t3 && a4.hasIndex() ? a4.getIndex() : -1;
          p3.push({ score: null !== (r3 = a4.getScore()) && void 0 !== r3 ? r3 : 0, index: e5, categoryName: null !== (o3 = a4.getLabel()) && void 0 !== o3 ? o3 : "", displayName: null !== (i4 = a4.getDisplayName()) && void 0 !== i4 ? i4 : "" });
        }
        n3.push(p3);
      }
      return n3;
    }
    addJsLandmarks(e3) {
      var t3, r3, o3;
      for (const i4 of e3) {
        const e4 = n2.NormalizedLandmarkList.deserializeBinary(i4), a4 = [];
        for (const i5 of e4.getLandmarkList())
          a4.push({ x: null !== (t3 = i5.getX()) && void 0 !== t3 ? t3 : 0, y: null !== (r3 = i5.getY()) && void 0 !== r3 ? r3 : 0, z: null !== (o3 = i5.getZ()) && void 0 !== o3 ? o3 : 0 });
        this.landmarks.push(a4);
      }
    }
    adddJsWorldLandmarks(e3) {
      var t3, r3, o3;
      for (const i4 of e3) {
        const e4 = n2.LandmarkList.deserializeBinary(i4), a4 = [];
        for (const i5 of e4.getLandmarkList())
          a4.push({ x: null !== (t3 = i5.getX()) && void 0 !== t3 ? t3 : 0, y: null !== (r3 = i5.getY()) && void 0 !== r3 ? r3 : 0, z: null !== (o3 = i5.getZ()) && void 0 !== o3 ? o3 : 0 });
        this.worldLandmarks.push(a4);
      }
    }
    refreshGraph() {
      const e3 = new o2.CalculatorGraphConfig();
      e3.addInputStream(y2), e3.addInputStream(b2), e3.addOutputStream(_), e3.addOutputStream(O2), e3.addOutputStream(F2), e3.addOutputStream(M2);
      const t3 = new i3.CalculatorOptions();
      t3.setExtension(d2.GestureRecognizerGraphOptions.ext, this.options);
      const r3 = new o2.CalculatorGraphConfig.Node();
      r3.setCalculator("mediapipe.tasks.vision.gesture_recognizer.GestureRecognizerGraph"), r3.addInputStream("IMAGE:" + y2), r3.addInputStream("NORM_RECT:" + b2), r3.addOutputStream("HAND_GESTURES:" + _), r3.addOutputStream("LANDMARKS:" + O2), r3.addOutputStream("WORLD_LANDMARKS:" + F2), r3.addOutputStream("HANDEDNESS:" + M2), r3.setOptions(t3), e3.addNode(r3), this.graphRunner.attachProtoVectorListener(O2, (e4, t4) => {
        this.addJsLandmarks(e4), this.setLatestOutputTimestamp(t4);
      }), this.graphRunner.attachEmptyPacketListener(O2, (e4) => {
        this.setLatestOutputTimestamp(e4);
      }), this.graphRunner.attachProtoVectorListener(F2, (e4, t4) => {
        this.adddJsWorldLandmarks(e4), this.setLatestOutputTimestamp(t4);
      }), this.graphRunner.attachEmptyPacketListener(F2, (e4) => {
        this.setLatestOutputTimestamp(e4);
      }), this.graphRunner.attachProtoVectorListener(_, (e4, t4) => {
        this.gestures.push(...this.toJsCategories(e4, false)), this.setLatestOutputTimestamp(t4);
      }), this.graphRunner.attachEmptyPacketListener(_, (e4) => {
        this.setLatestOutputTimestamp(e4);
      }), this.graphRunner.attachProtoVectorListener(M2, (e4, t4) => {
        this.handednesses.push(...this.toJsCategories(e4)), this.setLatestOutputTimestamp(t4);
      }), this.graphRunner.attachEmptyPacketListener(M2, (e4) => {
        this.setLatestOutputTimestamp(e4);
      });
      const a4 = e3.serializeBinary();
      this.setGraph(new Uint8Array(a4), true);
    }
  }
  e2.GestureRecognizer = v5, v5.HAND_CONNECTIONS = h2.HAND_CONNECTIONS;
}(gesture_recognizer);
var hand_landmarker = {};
var hand_landmarker_options = {};
Object.defineProperty(hand_landmarker_options, "__esModule", { value: true });
var hand_landmarker_result = {};
Object.defineProperty(hand_landmarker_result, "__esModule", { value: true }), function(e2) {
  var t2 = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function(e3, t3, r3, o3) {
    void 0 === o3 && (o3 = r3);
    var i4 = Object.getOwnPropertyDescriptor(t3, r3);
    i4 && !("get" in i4 ? !t3.__esModule : i4.writable || i4.configurable) || (i4 = { enumerable: true, get: function() {
      return t3[r3];
    } }), Object.defineProperty(e3, o3, i4);
  } : function(e3, t3, r3, o3) {
    void 0 === o3 && (o3 = r3), e3[o3] = t3[r3];
  }), r2 = commonjsGlobal && commonjsGlobal.__exportStar || function(e3, r3) {
    for (var o3 in e3)
      "default" === o3 || Object.prototype.hasOwnProperty.call(r3, o3) || t2(r3, e3, o3);
  };
  Object.defineProperty(e2, "__esModule", { value: true }), e2.HandLandmarker = void 0;
  const o2 = calculator_pb, i3 = calculator_options_pb, a3 = classification_pb, n2 = landmark_pb, s2 = base_options_pb, p2 = hand_detector_graph_options_pb, d2 = hand_landmarker_graph_options_pb, l2 = hand_landmarks_detector_graph_options_pb, g2 = landmark_result, c2 = vision_task_runner, u2 = hand_landmarks_connections;
  r2(hand_landmarker_options, e2), r2(hand_landmarker_result, e2);
  const m2 = "image_in", f3 = "norm_rect", h2 = "hand_landmarks", y2 = "world_hand_landmarks", b2 = "handedness", _ = 0.5;
  class O2 extends c2.VisionTaskRunner {
    static createFromOptions(e3, t3) {
      return c2.VisionTaskRunner.createVisionInstance(O2, e3, t3);
    }
    static createFromModelBuffer(e3, t3) {
      return c2.VisionTaskRunner.createVisionInstance(O2, e3, { baseOptions: { modelAssetBuffer: t3 } });
    }
    static createFromModelPath(e3, t3) {
      return c2.VisionTaskRunner.createVisionInstance(O2, e3, { baseOptions: { modelAssetPath: t3 } });
    }
    constructor(e3, t3) {
      super(new c2.VisionGraphRunner(e3, t3), m2, f3, false), this.landmarks = [], this.worldLandmarks = [], this.handednesses = [], this.options = new d2.HandLandmarkerGraphOptions(), this.options.setBaseOptions(new s2.BaseOptions()), this.handLandmarksDetectorGraphOptions = new l2.HandLandmarksDetectorGraphOptions(), this.options.setHandLandmarksDetectorGraphOptions(this.handLandmarksDetectorGraphOptions), this.handDetectorGraphOptions = new p2.HandDetectorGraphOptions(), this.options.setHandDetectorGraphOptions(this.handDetectorGraphOptions), this.initDefaults();
    }
    get baseOptions() {
      return this.options.getBaseOptions();
    }
    set baseOptions(e3) {
      this.options.setBaseOptions(e3);
    }
    setOptions(e3) {
      var t3, r3, o3, i4;
      return "numHands" in e3 && this.handDetectorGraphOptions.setNumHands(null !== (t3 = e3.numHands) && void 0 !== t3 ? t3 : 1), "minHandDetectionConfidence" in e3 && this.handDetectorGraphOptions.setMinDetectionConfidence(null !== (r3 = e3.minHandDetectionConfidence) && void 0 !== r3 ? r3 : _), "minTrackingConfidence" in e3 && this.options.setMinTrackingConfidence(null !== (o3 = e3.minTrackingConfidence) && void 0 !== o3 ? o3 : _), "minHandPresenceConfidence" in e3 && this.handLandmarksDetectorGraphOptions.setMinDetectionConfidence(null !== (i4 = e3.minHandPresenceConfidence) && void 0 !== i4 ? i4 : _), this.applyOptions(e3);
    }
    detect(e3, t3) {
      return this.resetResults(), this.processImageData(e3, t3), this.processResults();
    }
    detectForVideo(e3, t3, r3) {
      return this.resetResults(), this.processVideoData(e3, r3, t3), this.processResults();
    }
    resetResults() {
      this.landmarks = [], this.worldLandmarks = [], this.handednesses = [];
    }
    processResults() {
      return { landmarks: this.landmarks, worldLandmarks: this.worldLandmarks, handednesses: this.handednesses };
    }
    initDefaults() {
      this.handDetectorGraphOptions.setNumHands(1), this.handDetectorGraphOptions.setMinDetectionConfidence(_), this.handLandmarksDetectorGraphOptions.setMinDetectionConfidence(_), this.options.setMinTrackingConfidence(_);
    }
    toJsCategories(e3) {
      var t3, r3, o3, i4;
      const n3 = [];
      for (const s3 of e3) {
        const e4 = a3.ClassificationList.deserializeBinary(s3), p3 = [];
        for (const a4 of e4.getClassificationList())
          p3.push({ score: null !== (t3 = a4.getScore()) && void 0 !== t3 ? t3 : 0, index: null !== (r3 = a4.getIndex()) && void 0 !== r3 ? r3 : -1, categoryName: null !== (o3 = a4.getLabel()) && void 0 !== o3 ? o3 : "", displayName: null !== (i4 = a4.getDisplayName()) && void 0 !== i4 ? i4 : "" });
        n3.push(p3);
      }
      return n3;
    }
    addJsLandmarks(e3) {
      for (const t3 of e3) {
        const e4 = n2.NormalizedLandmarkList.deserializeBinary(t3);
        this.landmarks.push((0, g2.convertToLandmarks)(e4));
      }
    }
    adddJsWorldLandmarks(e3) {
      for (const t3 of e3) {
        const e4 = n2.LandmarkList.deserializeBinary(t3);
        this.worldLandmarks.push((0, g2.convertToWorldLandmarks)(e4));
      }
    }
    refreshGraph() {
      const e3 = new o2.CalculatorGraphConfig();
      e3.addInputStream(m2), e3.addInputStream(f3), e3.addOutputStream(h2), e3.addOutputStream(y2), e3.addOutputStream(b2);
      const t3 = new i3.CalculatorOptions();
      t3.setExtension(d2.HandLandmarkerGraphOptions.ext, this.options);
      const r3 = new o2.CalculatorGraphConfig.Node();
      r3.setCalculator("mediapipe.tasks.vision.hand_landmarker.HandLandmarkerGraph"), r3.addInputStream("IMAGE:" + m2), r3.addInputStream("NORM_RECT:" + f3), r3.addOutputStream("LANDMARKS:" + h2), r3.addOutputStream("WORLD_LANDMARKS:" + y2), r3.addOutputStream("HANDEDNESS:" + b2), r3.setOptions(t3), e3.addNode(r3), this.graphRunner.attachProtoVectorListener(h2, (e4, t4) => {
        this.addJsLandmarks(e4), this.setLatestOutputTimestamp(t4);
      }), this.graphRunner.attachEmptyPacketListener(h2, (e4) => {
        this.setLatestOutputTimestamp(e4);
      }), this.graphRunner.attachProtoVectorListener(y2, (e4, t4) => {
        this.adddJsWorldLandmarks(e4), this.setLatestOutputTimestamp(t4);
      }), this.graphRunner.attachEmptyPacketListener(y2, (e4) => {
        this.setLatestOutputTimestamp(e4);
      }), this.graphRunner.attachProtoVectorListener(b2, (e4, t4) => {
        this.handednesses.push(...this.toJsCategories(e4)), this.setLatestOutputTimestamp(t4);
      }), this.graphRunner.attachEmptyPacketListener(b2, (e4) => {
        this.setLatestOutputTimestamp(e4);
      });
      const a4 = e3.serializeBinary();
      this.setGraph(new Uint8Array(a4), true);
    }
  }
  e2.HandLandmarker = O2, O2.HAND_CONNECTIONS = u2.HAND_CONNECTIONS;
}(hand_landmarker);
var image_classifier = {};
var classifications_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = classification_pb;
  r2.object.extend(proto, i3), r2.exportSymbol("proto.mediapipe.tasks.components.containers.proto.ClassificationResult", null, o2), r2.exportSymbol("proto.mediapipe.tasks.components.containers.proto.Classifications", null, o2), proto.mediapipe.tasks.components.containers.proto.Classifications = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.components.containers.proto.Classifications, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.components.containers.proto.Classifications.displayName = "proto.mediapipe.tasks.components.containers.proto.Classifications"), proto.mediapipe.tasks.components.containers.proto.ClassificationResult = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, proto.mediapipe.tasks.components.containers.proto.ClassificationResult.repeatedFields_, null);
  }, r2.inherits(proto.mediapipe.tasks.components.containers.proto.ClassificationResult, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.components.containers.proto.ClassificationResult.displayName = "proto.mediapipe.tasks.components.containers.proto.ClassificationResult"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.components.containers.proto.Classifications.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.components.containers.proto.Classifications.toObject(e3, this);
  }, proto.mediapipe.tasks.components.containers.proto.Classifications.toObject = function(e3, r3) {
    var o3, a3 = { classificationList: (o3 = r3.getClassificationList()) && i3.ClassificationList.toObject(e3, o3), headIndex: null == (o3 = t2.Message.getField(r3, 2)) ? void 0 : o3, headName: null == (o3 = t2.Message.getField(r3, 3)) ? void 0 : o3 };
    return e3 && (a3.$jspbMessageInstance = r3), a3;
  }), proto.mediapipe.tasks.components.containers.proto.Classifications.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.components.containers.proto.Classifications();
    return proto.mediapipe.tasks.components.containers.proto.Classifications.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.components.containers.proto.Classifications.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 4:
          var r3 = new i3.ClassificationList();
          t3.readMessage(r3, i3.ClassificationList.deserializeBinaryFromReader), e3.setClassificationList(r3);
          break;
        case 2:
          r3 = t3.readInt32();
          e3.setHeadIndex(r3);
          break;
        case 3:
          r3 = t3.readString();
          e3.setHeadName(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.components.containers.proto.Classifications.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.components.containers.proto.Classifications.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.components.containers.proto.Classifications.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = e3.getClassificationList()) && r3.writeMessage(4, o3, i3.ClassificationList.serializeBinaryToWriter), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeInt32(2, o3), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeString(3, o3);
  }, proto.mediapipe.tasks.components.containers.proto.Classifications.prototype.getClassificationList = function() {
    return t2.Message.getWrapperField(this, i3.ClassificationList, 4);
  }, proto.mediapipe.tasks.components.containers.proto.Classifications.prototype.setClassificationList = function(e3) {
    return t2.Message.setWrapperField(this, 4, e3);
  }, proto.mediapipe.tasks.components.containers.proto.Classifications.prototype.clearClassificationList = function() {
    return this.setClassificationList(void 0);
  }, proto.mediapipe.tasks.components.containers.proto.Classifications.prototype.hasClassificationList = function() {
    return null != t2.Message.getField(this, 4);
  }, proto.mediapipe.tasks.components.containers.proto.Classifications.prototype.getHeadIndex = function() {
    return t2.Message.getFieldWithDefault(this, 2, 0);
  }, proto.mediapipe.tasks.components.containers.proto.Classifications.prototype.setHeadIndex = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.tasks.components.containers.proto.Classifications.prototype.clearHeadIndex = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.tasks.components.containers.proto.Classifications.prototype.hasHeadIndex = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.tasks.components.containers.proto.Classifications.prototype.getHeadName = function() {
    return t2.Message.getFieldWithDefault(this, 3, "");
  }, proto.mediapipe.tasks.components.containers.proto.Classifications.prototype.setHeadName = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.tasks.components.containers.proto.Classifications.prototype.clearHeadName = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.tasks.components.containers.proto.Classifications.prototype.hasHeadName = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.tasks.components.containers.proto.ClassificationResult.repeatedFields_ = [1], t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.components.containers.proto.ClassificationResult.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.components.containers.proto.ClassificationResult.toObject(e3, this);
  }, proto.mediapipe.tasks.components.containers.proto.ClassificationResult.toObject = function(e3, r3) {
    var o3, i4 = { classificationsList: t2.Message.toObjectList(r3.getClassificationsList(), proto.mediapipe.tasks.components.containers.proto.Classifications.toObject, e3), timestampMs: null == (o3 = t2.Message.getField(r3, 2)) ? void 0 : o3 };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.tasks.components.containers.proto.ClassificationResult.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.components.containers.proto.ClassificationResult();
    return proto.mediapipe.tasks.components.containers.proto.ClassificationResult.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.components.containers.proto.ClassificationResult.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new proto.mediapipe.tasks.components.containers.proto.Classifications();
          t3.readMessage(r3, proto.mediapipe.tasks.components.containers.proto.Classifications.deserializeBinaryFromReader), e3.addClassifications(r3);
          break;
        case 2:
          r3 = t3.readInt64();
          e3.setTimestampMs(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.components.containers.proto.ClassificationResult.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.components.containers.proto.ClassificationResult.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.components.containers.proto.ClassificationResult.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    (o3 = e3.getClassificationsList()).length > 0 && r3.writeRepeatedMessage(1, o3, proto.mediapipe.tasks.components.containers.proto.Classifications.serializeBinaryToWriter), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeInt64(2, o3);
  }, proto.mediapipe.tasks.components.containers.proto.ClassificationResult.prototype.getClassificationsList = function() {
    return t2.Message.getRepeatedWrapperField(this, proto.mediapipe.tasks.components.containers.proto.Classifications, 1);
  }, proto.mediapipe.tasks.components.containers.proto.ClassificationResult.prototype.setClassificationsList = function(e3) {
    return t2.Message.setRepeatedWrapperField(this, 1, e3);
  }, proto.mediapipe.tasks.components.containers.proto.ClassificationResult.prototype.addClassifications = function(e3, r3) {
    return t2.Message.addToRepeatedWrapperField(this, 1, e3, proto.mediapipe.tasks.components.containers.proto.Classifications, r3);
  }, proto.mediapipe.tasks.components.containers.proto.ClassificationResult.prototype.clearClassificationsList = function() {
    return this.setClassificationsList([]);
  }, proto.mediapipe.tasks.components.containers.proto.ClassificationResult.prototype.getTimestampMs = function() {
    return t2.Message.getFieldWithDefault(this, 2, 0);
  }, proto.mediapipe.tasks.components.containers.proto.ClassificationResult.prototype.setTimestampMs = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.tasks.components.containers.proto.ClassificationResult.prototype.clearTimestampMs = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.tasks.components.containers.proto.ClassificationResult.prototype.hasTimestampMs = function() {
    return null != t2.Message.getField(this, 2);
  }, r2.object.extend(e2, proto.mediapipe.tasks.components.containers.proto);
}(classifications_pb);
var image_classifier_graph_options_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = calculator_pb;
  r2.object.extend(proto, i3);
  var a3 = calculator_options_pb;
  r2.object.extend(proto, a3);
  var n2 = classifier_options_pb;
  r2.object.extend(proto, n2);
  var s2 = base_options_pb;
  r2.object.extend(proto, s2), r2.exportSymbol("proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions", null, o2), proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.displayName = "proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.toObject(e3, this);
  }, proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.toObject = function(e3, t3) {
    var r3, o3 = { baseOptions: (r3 = t3.getBaseOptions()) && s2.BaseOptions.toObject(e3, r3), classifierOptions: (r3 = t3.getClassifierOptions()) && n2.ClassifierOptions.toObject(e3, r3) };
    return e3 && (o3.$jspbMessageInstance = t3), o3;
  }), proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions();
    return proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new s2.BaseOptions();
          t3.readMessage(r3, s2.BaseOptions.deserializeBinaryFromReader), e3.setBaseOptions(r3);
          break;
        case 2:
          r3 = new n2.ClassifierOptions();
          t3.readMessage(r3, n2.ClassifierOptions.deserializeBinaryFromReader), e3.setClassifierOptions(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.serializeBinaryToWriter = function(e3, t3) {
    var r3 = void 0;
    null != (r3 = e3.getBaseOptions()) && t3.writeMessage(1, r3, s2.BaseOptions.serializeBinaryToWriter), null != (r3 = e3.getClassifierOptions()) && t3.writeMessage(2, r3, n2.ClassifierOptions.serializeBinaryToWriter);
  }, proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.ext = new t2.ExtensionFieldInfo(456383383, { ext: 0 }, proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions, proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[456383383] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[456383383] = proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.ext, proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.prototype.getBaseOptions = function() {
    return t2.Message.getWrapperField(this, s2.BaseOptions, 1);
  }, proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.prototype.setBaseOptions = function(e3) {
    return t2.Message.setWrapperField(this, 1, e3);
  }, proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.prototype.clearBaseOptions = function() {
    return this.setBaseOptions(void 0);
  }, proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.prototype.hasBaseOptions = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.prototype.getClassifierOptions = function() {
    return t2.Message.getWrapperField(this, n2.ClassifierOptions, 2);
  }, proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.prototype.setClassifierOptions = function(e3) {
    return t2.Message.setWrapperField(this, 2, e3);
  }, proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.prototype.clearClassifierOptions = function() {
    return this.setClassifierOptions(void 0);
  }, proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.prototype.hasClassifierOptions = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.ext = new t2.ExtensionFieldInfo(456383383, { ext: 0 }, proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions, proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[456383383] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[456383383] = proto.mediapipe.tasks.vision.image_classifier.proto.ImageClassifierGraphOptions.ext, r2.object.extend(e2, proto.mediapipe.tasks.vision.image_classifier.proto);
}(image_classifier_graph_options_pb);
var image_classifier_options = {};
Object.defineProperty(image_classifier_options, "__esModule", { value: true });
var image_classifier_result = {};
Object.defineProperty(image_classifier_result, "__esModule", { value: true }), function(e2) {
  var t2 = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function(e3, t3, r3, o3) {
    void 0 === o3 && (o3 = r3);
    var i4 = Object.getOwnPropertyDescriptor(t3, r3);
    i4 && !("get" in i4 ? !t3.__esModule : i4.writable || i4.configurable) || (i4 = { enumerable: true, get: function() {
      return t3[r3];
    } }), Object.defineProperty(e3, o3, i4);
  } : function(e3, t3, r3, o3) {
    void 0 === o3 && (o3 = r3), e3[o3] = t3[r3];
  }), r2 = commonjsGlobal && commonjsGlobal.__exportStar || function(e3, r3) {
    for (var o3 in e3)
      "default" === o3 || Object.prototype.hasOwnProperty.call(r3, o3) || t2(r3, e3, o3);
  };
  Object.defineProperty(e2, "__esModule", { value: true }), e2.ImageClassifier = void 0;
  const o2 = calculator_pb, i3 = calculator_options_pb, a3 = classifications_pb, n2 = base_options_pb, s2 = image_classifier_graph_options_pb, p2 = classifier_options, d2 = classifier_result, l2 = vision_task_runner, g2 = "input_image", c2 = "norm_rect", u2 = "classifications";
  r2(image_classifier_options, e2), r2(image_classifier_result, e2);
  class m2 extends l2.VisionTaskRunner {
    static createFromOptions(e3, t3) {
      return l2.VisionTaskRunner.createVisionInstance(m2, e3, t3);
    }
    static createFromModelBuffer(e3, t3) {
      return l2.VisionTaskRunner.createVisionInstance(m2, e3, { baseOptions: { modelAssetBuffer: t3 } });
    }
    static createFromModelPath(e3, t3) {
      return l2.VisionTaskRunner.createVisionInstance(m2, e3, { baseOptions: { modelAssetPath: t3 } });
    }
    constructor(e3, t3) {
      super(new l2.VisionGraphRunner(e3, t3), g2, c2, true), this.classificationResult = { classifications: [] }, this.options = new s2.ImageClassifierGraphOptions(), this.options.setBaseOptions(new n2.BaseOptions());
    }
    get baseOptions() {
      return this.options.getBaseOptions();
    }
    set baseOptions(e3) {
      this.options.setBaseOptions(e3);
    }
    setOptions(e3) {
      return this.options.setClassifierOptions((0, p2.convertClassifierOptionsToProto)(e3, this.options.getClassifierOptions())), this.applyOptions(e3);
    }
    classify(e3, t3) {
      return this.classificationResult = { classifications: [] }, this.processImageData(e3, t3), this.classificationResult;
    }
    classifyForVideo(e3, t3, r3) {
      return this.classificationResult = { classifications: [] }, this.processVideoData(e3, r3, t3), this.classificationResult;
    }
    refreshGraph() {
      const e3 = new o2.CalculatorGraphConfig();
      e3.addInputStream(g2), e3.addInputStream(c2), e3.addOutputStream(u2);
      const t3 = new i3.CalculatorOptions();
      t3.setExtension(s2.ImageClassifierGraphOptions.ext, this.options);
      const r3 = new o2.CalculatorGraphConfig.Node();
      r3.setCalculator("mediapipe.tasks.vision.image_classifier.ImageClassifierGraph"), r3.addInputStream("IMAGE:" + g2), r3.addInputStream("NORM_RECT:" + c2), r3.addOutputStream("CLASSIFICATIONS:" + u2), r3.setOptions(t3), e3.addNode(r3), this.graphRunner.attachProtoListener(u2, (e4, t4) => {
        this.classificationResult = (0, d2.convertFromClassificationResultProto)(a3.ClassificationResult.deserializeBinary(e4)), this.setLatestOutputTimestamp(t4);
      }), this.graphRunner.attachEmptyPacketListener(u2, (e4) => {
        this.setLatestOutputTimestamp(e4);
      });
      const n3 = e3.serializeBinary();
      this.setGraph(new Uint8Array(n3), true);
    }
  }
  e2.ImageClassifier = m2;
}(image_classifier);
var image_embedder = {};
var embeddings_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")();
  r2.exportSymbol("proto.mediapipe.tasks.components.containers.proto.Embedding", null, o2), r2.exportSymbol("proto.mediapipe.tasks.components.containers.proto.Embedding.EmbeddingCase", null, o2), r2.exportSymbol("proto.mediapipe.tasks.components.containers.proto.EmbeddingResult", null, o2), r2.exportSymbol("proto.mediapipe.tasks.components.containers.proto.FloatEmbedding", null, o2), r2.exportSymbol("proto.mediapipe.tasks.components.containers.proto.QuantizedEmbedding", null, o2), proto.mediapipe.tasks.components.containers.proto.FloatEmbedding = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, proto.mediapipe.tasks.components.containers.proto.FloatEmbedding.repeatedFields_, null);
  }, r2.inherits(proto.mediapipe.tasks.components.containers.proto.FloatEmbedding, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.components.containers.proto.FloatEmbedding.displayName = "proto.mediapipe.tasks.components.containers.proto.FloatEmbedding"), proto.mediapipe.tasks.components.containers.proto.QuantizedEmbedding = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.components.containers.proto.QuantizedEmbedding, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.components.containers.proto.QuantizedEmbedding.displayName = "proto.mediapipe.tasks.components.containers.proto.QuantizedEmbedding"), proto.mediapipe.tasks.components.containers.proto.Embedding = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, proto.mediapipe.tasks.components.containers.proto.Embedding.oneofGroups_);
  }, r2.inherits(proto.mediapipe.tasks.components.containers.proto.Embedding, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.components.containers.proto.Embedding.displayName = "proto.mediapipe.tasks.components.containers.proto.Embedding"), proto.mediapipe.tasks.components.containers.proto.EmbeddingResult = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, proto.mediapipe.tasks.components.containers.proto.EmbeddingResult.repeatedFields_, null);
  }, r2.inherits(proto.mediapipe.tasks.components.containers.proto.EmbeddingResult, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.components.containers.proto.EmbeddingResult.displayName = "proto.mediapipe.tasks.components.containers.proto.EmbeddingResult"), proto.mediapipe.tasks.components.containers.proto.FloatEmbedding.repeatedFields_ = [1], t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.components.containers.proto.FloatEmbedding.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.components.containers.proto.FloatEmbedding.toObject(e3, this);
  }, proto.mediapipe.tasks.components.containers.proto.FloatEmbedding.toObject = function(e3, r3) {
    var o3, i3 = { valuesList: null == (o3 = t2.Message.getRepeatedFloatingPointField(r3, 1)) ? void 0 : o3 };
    return e3 && (i3.$jspbMessageInstance = r3), i3;
  }), proto.mediapipe.tasks.components.containers.proto.FloatEmbedding.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.components.containers.proto.FloatEmbedding();
    return proto.mediapipe.tasks.components.containers.proto.FloatEmbedding.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.components.containers.proto.FloatEmbedding.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      if (1 === t3.getFieldNumber())
        for (var r3 = t3.isDelimited() ? t3.readPackedFloat() : [t3.readFloat()], o3 = 0; o3 < r3.length; o3++)
          e3.addValues(r3[o3]);
      else
        t3.skipField();
    }
    return e3;
  }, proto.mediapipe.tasks.components.containers.proto.FloatEmbedding.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.components.containers.proto.FloatEmbedding.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.components.containers.proto.FloatEmbedding.serializeBinaryToWriter = function(e3, t3) {
    var r3;
    (r3 = e3.getValuesList()).length > 0 && t3.writePackedFloat(1, r3);
  }, proto.mediapipe.tasks.components.containers.proto.FloatEmbedding.prototype.getValuesList = function() {
    return t2.Message.getRepeatedFloatingPointField(this, 1);
  }, proto.mediapipe.tasks.components.containers.proto.FloatEmbedding.prototype.setValuesList = function(e3) {
    return t2.Message.setField(this, 1, e3 || []);
  }, proto.mediapipe.tasks.components.containers.proto.FloatEmbedding.prototype.addValues = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 1, e3, r3);
  }, proto.mediapipe.tasks.components.containers.proto.FloatEmbedding.prototype.clearValuesList = function() {
    return this.setValuesList([]);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.components.containers.proto.QuantizedEmbedding.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.components.containers.proto.QuantizedEmbedding.toObject(e3, this);
  }, proto.mediapipe.tasks.components.containers.proto.QuantizedEmbedding.toObject = function(e3, t3) {
    var r3 = { values: t3.getValues_asB64() };
    return e3 && (r3.$jspbMessageInstance = t3), r3;
  }), proto.mediapipe.tasks.components.containers.proto.QuantizedEmbedding.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.components.containers.proto.QuantizedEmbedding();
    return proto.mediapipe.tasks.components.containers.proto.QuantizedEmbedding.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.components.containers.proto.QuantizedEmbedding.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      if (1 === t3.getFieldNumber()) {
        var r3 = t3.readBytes();
        e3.setValues(r3);
      } else
        t3.skipField();
    }
    return e3;
  }, proto.mediapipe.tasks.components.containers.proto.QuantizedEmbedding.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.components.containers.proto.QuantizedEmbedding.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.components.containers.proto.QuantizedEmbedding.serializeBinaryToWriter = function(e3, r3) {
    var o3;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeBytes(1, o3);
  }, proto.mediapipe.tasks.components.containers.proto.QuantizedEmbedding.prototype.getValues = function() {
    return t2.Message.getFieldWithDefault(this, 1, "");
  }, proto.mediapipe.tasks.components.containers.proto.QuantizedEmbedding.prototype.getValues_asB64 = function() {
    return t2.Message.bytesAsB64(this.getValues());
  }, proto.mediapipe.tasks.components.containers.proto.QuantizedEmbedding.prototype.getValues_asU8 = function() {
    return t2.Message.bytesAsU8(this.getValues());
  }, proto.mediapipe.tasks.components.containers.proto.QuantizedEmbedding.prototype.setValues = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.tasks.components.containers.proto.QuantizedEmbedding.prototype.clearValues = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.tasks.components.containers.proto.QuantizedEmbedding.prototype.hasValues = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.components.containers.proto.Embedding.oneofGroups_ = [[1, 2]], proto.mediapipe.tasks.components.containers.proto.Embedding.EmbeddingCase = { EMBEDDING_NOT_SET: 0, FLOAT_EMBEDDING: 1, QUANTIZED_EMBEDDING: 2 }, proto.mediapipe.tasks.components.containers.proto.Embedding.prototype.getEmbeddingCase = function() {
    return t2.Message.computeOneofCase(this, proto.mediapipe.tasks.components.containers.proto.Embedding.oneofGroups_[0]);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.components.containers.proto.Embedding.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.components.containers.proto.Embedding.toObject(e3, this);
  }, proto.mediapipe.tasks.components.containers.proto.Embedding.toObject = function(e3, r3) {
    var o3, i3 = { floatEmbedding: (o3 = r3.getFloatEmbedding()) && proto.mediapipe.tasks.components.containers.proto.FloatEmbedding.toObject(e3, o3), quantizedEmbedding: (o3 = r3.getQuantizedEmbedding()) && proto.mediapipe.tasks.components.containers.proto.QuantizedEmbedding.toObject(e3, o3), headIndex: null == (o3 = t2.Message.getField(r3, 3)) ? void 0 : o3, headName: null == (o3 = t2.Message.getField(r3, 4)) ? void 0 : o3 };
    return e3 && (i3.$jspbMessageInstance = r3), i3;
  }), proto.mediapipe.tasks.components.containers.proto.Embedding.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.components.containers.proto.Embedding();
    return proto.mediapipe.tasks.components.containers.proto.Embedding.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.components.containers.proto.Embedding.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new proto.mediapipe.tasks.components.containers.proto.FloatEmbedding();
          t3.readMessage(r3, proto.mediapipe.tasks.components.containers.proto.FloatEmbedding.deserializeBinaryFromReader), e3.setFloatEmbedding(r3);
          break;
        case 2:
          r3 = new proto.mediapipe.tasks.components.containers.proto.QuantizedEmbedding();
          t3.readMessage(r3, proto.mediapipe.tasks.components.containers.proto.QuantizedEmbedding.deserializeBinaryFromReader), e3.setQuantizedEmbedding(r3);
          break;
        case 3:
          r3 = t3.readInt32();
          e3.setHeadIndex(r3);
          break;
        case 4:
          r3 = t3.readString();
          e3.setHeadName(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.components.containers.proto.Embedding.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.components.containers.proto.Embedding.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.components.containers.proto.Embedding.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = e3.getFloatEmbedding()) && r3.writeMessage(1, o3, proto.mediapipe.tasks.components.containers.proto.FloatEmbedding.serializeBinaryToWriter), null != (o3 = e3.getQuantizedEmbedding()) && r3.writeMessage(2, o3, proto.mediapipe.tasks.components.containers.proto.QuantizedEmbedding.serializeBinaryToWriter), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeInt32(3, o3), null != (o3 = t2.Message.getField(e3, 4)) && r3.writeString(4, o3);
  }, proto.mediapipe.tasks.components.containers.proto.Embedding.prototype.getFloatEmbedding = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.tasks.components.containers.proto.FloatEmbedding, 1);
  }, proto.mediapipe.tasks.components.containers.proto.Embedding.prototype.setFloatEmbedding = function(e3) {
    return t2.Message.setOneofWrapperField(this, 1, proto.mediapipe.tasks.components.containers.proto.Embedding.oneofGroups_[0], e3);
  }, proto.mediapipe.tasks.components.containers.proto.Embedding.prototype.clearFloatEmbedding = function() {
    return this.setFloatEmbedding(void 0);
  }, proto.mediapipe.tasks.components.containers.proto.Embedding.prototype.hasFloatEmbedding = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.components.containers.proto.Embedding.prototype.getQuantizedEmbedding = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.tasks.components.containers.proto.QuantizedEmbedding, 2);
  }, proto.mediapipe.tasks.components.containers.proto.Embedding.prototype.setQuantizedEmbedding = function(e3) {
    return t2.Message.setOneofWrapperField(this, 2, proto.mediapipe.tasks.components.containers.proto.Embedding.oneofGroups_[0], e3);
  }, proto.mediapipe.tasks.components.containers.proto.Embedding.prototype.clearQuantizedEmbedding = function() {
    return this.setQuantizedEmbedding(void 0);
  }, proto.mediapipe.tasks.components.containers.proto.Embedding.prototype.hasQuantizedEmbedding = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.tasks.components.containers.proto.Embedding.prototype.getHeadIndex = function() {
    return t2.Message.getFieldWithDefault(this, 3, 0);
  }, proto.mediapipe.tasks.components.containers.proto.Embedding.prototype.setHeadIndex = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.tasks.components.containers.proto.Embedding.prototype.clearHeadIndex = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.tasks.components.containers.proto.Embedding.prototype.hasHeadIndex = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.tasks.components.containers.proto.Embedding.prototype.getHeadName = function() {
    return t2.Message.getFieldWithDefault(this, 4, "");
  }, proto.mediapipe.tasks.components.containers.proto.Embedding.prototype.setHeadName = function(e3) {
    return t2.Message.setField(this, 4, e3);
  }, proto.mediapipe.tasks.components.containers.proto.Embedding.prototype.clearHeadName = function() {
    return t2.Message.setField(this, 4, void 0);
  }, proto.mediapipe.tasks.components.containers.proto.Embedding.prototype.hasHeadName = function() {
    return null != t2.Message.getField(this, 4);
  }, proto.mediapipe.tasks.components.containers.proto.EmbeddingResult.repeatedFields_ = [1], t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.components.containers.proto.EmbeddingResult.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.components.containers.proto.EmbeddingResult.toObject(e3, this);
  }, proto.mediapipe.tasks.components.containers.proto.EmbeddingResult.toObject = function(e3, r3) {
    var o3, i3 = { embeddingsList: t2.Message.toObjectList(r3.getEmbeddingsList(), proto.mediapipe.tasks.components.containers.proto.Embedding.toObject, e3), timestampMs: null == (o3 = t2.Message.getField(r3, 2)) ? void 0 : o3 };
    return e3 && (i3.$jspbMessageInstance = r3), i3;
  }), proto.mediapipe.tasks.components.containers.proto.EmbeddingResult.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.components.containers.proto.EmbeddingResult();
    return proto.mediapipe.tasks.components.containers.proto.EmbeddingResult.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.components.containers.proto.EmbeddingResult.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new proto.mediapipe.tasks.components.containers.proto.Embedding();
          t3.readMessage(r3, proto.mediapipe.tasks.components.containers.proto.Embedding.deserializeBinaryFromReader), e3.addEmbeddings(r3);
          break;
        case 2:
          r3 = t3.readInt64();
          e3.setTimestampMs(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.components.containers.proto.EmbeddingResult.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.components.containers.proto.EmbeddingResult.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.components.containers.proto.EmbeddingResult.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    (o3 = e3.getEmbeddingsList()).length > 0 && r3.writeRepeatedMessage(1, o3, proto.mediapipe.tasks.components.containers.proto.Embedding.serializeBinaryToWriter), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeInt64(2, o3);
  }, proto.mediapipe.tasks.components.containers.proto.EmbeddingResult.prototype.getEmbeddingsList = function() {
    return t2.Message.getRepeatedWrapperField(this, proto.mediapipe.tasks.components.containers.proto.Embedding, 1);
  }, proto.mediapipe.tasks.components.containers.proto.EmbeddingResult.prototype.setEmbeddingsList = function(e3) {
    return t2.Message.setRepeatedWrapperField(this, 1, e3);
  }, proto.mediapipe.tasks.components.containers.proto.EmbeddingResult.prototype.addEmbeddings = function(e3, r3) {
    return t2.Message.addToRepeatedWrapperField(this, 1, e3, proto.mediapipe.tasks.components.containers.proto.Embedding, r3);
  }, proto.mediapipe.tasks.components.containers.proto.EmbeddingResult.prototype.clearEmbeddingsList = function() {
    return this.setEmbeddingsList([]);
  }, proto.mediapipe.tasks.components.containers.proto.EmbeddingResult.prototype.getTimestampMs = function() {
    return t2.Message.getFieldWithDefault(this, 2, 0);
  }, proto.mediapipe.tasks.components.containers.proto.EmbeddingResult.prototype.setTimestampMs = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.tasks.components.containers.proto.EmbeddingResult.prototype.clearTimestampMs = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.tasks.components.containers.proto.EmbeddingResult.prototype.hasTimestampMs = function() {
    return null != t2.Message.getField(this, 2);
  }, r2.object.extend(e2, proto.mediapipe.tasks.components.containers.proto);
}(embeddings_pb);
var image_embedder_graph_options_pb = {};
var embedder_options_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")();
  r2.exportSymbol("proto.mediapipe.tasks.components.processors.proto.EmbedderOptions", null, o2), proto.mediapipe.tasks.components.processors.proto.EmbedderOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.components.processors.proto.EmbedderOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.components.processors.proto.EmbedderOptions.displayName = "proto.mediapipe.tasks.components.processors.proto.EmbedderOptions"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.components.processors.proto.EmbedderOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.components.processors.proto.EmbedderOptions.toObject(e3, this);
  }, proto.mediapipe.tasks.components.processors.proto.EmbedderOptions.toObject = function(e3, r3) {
    var o3, i3 = { l2Normalize: null == (o3 = t2.Message.getBooleanField(r3, 1)) ? void 0 : o3, quantize: null == (o3 = t2.Message.getBooleanField(r3, 2)) ? void 0 : o3 };
    return e3 && (i3.$jspbMessageInstance = r3), i3;
  }), proto.mediapipe.tasks.components.processors.proto.EmbedderOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.components.processors.proto.EmbedderOptions();
    return proto.mediapipe.tasks.components.processors.proto.EmbedderOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.components.processors.proto.EmbedderOptions.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readBool();
          e3.setL2Normalize(r3);
          break;
        case 2:
          r3 = t3.readBool();
          e3.setQuantize(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.components.processors.proto.EmbedderOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.components.processors.proto.EmbedderOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.components.processors.proto.EmbedderOptions.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeBool(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeBool(2, o3);
  }, proto.mediapipe.tasks.components.processors.proto.EmbedderOptions.prototype.getL2Normalize = function() {
    return t2.Message.getBooleanFieldWithDefault(this, 1, false);
  }, proto.mediapipe.tasks.components.processors.proto.EmbedderOptions.prototype.setL2Normalize = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.tasks.components.processors.proto.EmbedderOptions.prototype.clearL2Normalize = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.tasks.components.processors.proto.EmbedderOptions.prototype.hasL2Normalize = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.components.processors.proto.EmbedderOptions.prototype.getQuantize = function() {
    return t2.Message.getBooleanFieldWithDefault(this, 2, false);
  }, proto.mediapipe.tasks.components.processors.proto.EmbedderOptions.prototype.setQuantize = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.tasks.components.processors.proto.EmbedderOptions.prototype.clearQuantize = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.tasks.components.processors.proto.EmbedderOptions.prototype.hasQuantize = function() {
    return null != t2.Message.getField(this, 2);
  }, r2.object.extend(e2, proto.mediapipe.tasks.components.processors.proto);
}(embedder_options_pb), function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = calculator_pb;
  r2.object.extend(proto, i3);
  var a3 = calculator_options_pb;
  r2.object.extend(proto, a3);
  var n2 = embedder_options_pb;
  r2.object.extend(proto, n2);
  var s2 = base_options_pb;
  r2.object.extend(proto, s2), r2.exportSymbol("proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions", null, o2), proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.displayName = "proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.toObject(e3, this);
  }, proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.toObject = function(e3, t3) {
    var r3, o3 = { baseOptions: (r3 = t3.getBaseOptions()) && s2.BaseOptions.toObject(e3, r3), embedderOptions: (r3 = t3.getEmbedderOptions()) && n2.EmbedderOptions.toObject(e3, r3) };
    return e3 && (o3.$jspbMessageInstance = t3), o3;
  }), proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions();
    return proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new s2.BaseOptions();
          t3.readMessage(r3, s2.BaseOptions.deserializeBinaryFromReader), e3.setBaseOptions(r3);
          break;
        case 2:
          r3 = new n2.EmbedderOptions();
          t3.readMessage(r3, n2.EmbedderOptions.deserializeBinaryFromReader), e3.setEmbedderOptions(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.serializeBinaryToWriter = function(e3, t3) {
    var r3 = void 0;
    null != (r3 = e3.getBaseOptions()) && t3.writeMessage(1, r3, s2.BaseOptions.serializeBinaryToWriter), null != (r3 = e3.getEmbedderOptions()) && t3.writeMessage(2, r3, n2.EmbedderOptions.serializeBinaryToWriter);
  }, proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.ext = new t2.ExtensionFieldInfo(476348187, { ext: 0 }, proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions, proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[476348187] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[476348187] = proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.ext, proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.prototype.getBaseOptions = function() {
    return t2.Message.getWrapperField(this, s2.BaseOptions, 1);
  }, proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.prototype.setBaseOptions = function(e3) {
    return t2.Message.setWrapperField(this, 1, e3);
  }, proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.prototype.clearBaseOptions = function() {
    return this.setBaseOptions(void 0);
  }, proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.prototype.hasBaseOptions = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.prototype.getEmbedderOptions = function() {
    return t2.Message.getWrapperField(this, n2.EmbedderOptions, 2);
  }, proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.prototype.setEmbedderOptions = function(e3) {
    return t2.Message.setWrapperField(this, 2, e3);
  }, proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.prototype.clearEmbedderOptions = function() {
    return this.setEmbedderOptions(void 0);
  }, proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.prototype.hasEmbedderOptions = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.ext = new t2.ExtensionFieldInfo(476348187, { ext: 0 }, proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions, proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[476348187] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[476348187] = proto.mediapipe.tasks.vision.image_embedder.proto.ImageEmbedderGraphOptions.ext, r2.object.extend(e2, proto.mediapipe.tasks.vision.image_embedder.proto);
}(image_embedder_graph_options_pb);
var embedder_options = {};
Object.defineProperty(embedder_options, "__esModule", { value: true }), embedder_options.convertEmbedderOptionsToProto = void 0;
var embedder_options_pb_1 = embedder_options_pb;
function convertEmbedderOptionsToProto(e2, t2) {
  const r2 = t2 ? t2.clone() : new embedder_options_pb_1.EmbedderOptions();
  return void 0 !== e2.l2Normalize ? r2.setL2Normalize(e2.l2Normalize) : "l2Normalize" in e2 && r2.clearL2Normalize(), void 0 !== e2.quantize ? r2.setQuantize(e2.quantize) : "quantize" in e2 && r2.clearQuantize(), r2;
}
embedder_options.convertEmbedderOptionsToProto = convertEmbedderOptionsToProto;
var embedder_result = {};
Object.defineProperty(embedder_result, "__esModule", { value: true }), embedder_result.convertFromEmbeddingResultProto = void 0;
var DEFAULT_INDEX = -1;
function convertFromEmbeddingsProto(e2) {
  var t2, r2, o2, i3;
  const a3 = { headIndex: null !== (t2 = e2.getHeadIndex()) && void 0 !== t2 ? t2 : DEFAULT_INDEX, headName: null !== (r2 = e2.getHeadName()) && void 0 !== r2 ? r2 : "" };
  if (e2.hasFloatEmbedding())
    a3.floatEmbedding = e2.getFloatEmbedding().getValuesList();
  else {
    const t3 = null !== (i3 = null === (o2 = e2.getQuantizedEmbedding()) || void 0 === o2 ? void 0 : o2.getValues()) && void 0 !== i3 ? i3 : "";
    a3.quantizedEmbedding = "string" == typeof t3 ? Uint8Array.from(atob(t3), (e3) => e3.charCodeAt(0)) : t3;
  }
  return a3;
}
function convertFromEmbeddingResultProto(e2) {
  return { embeddings: e2.getEmbeddingsList().map((e3) => convertFromEmbeddingsProto(e3)), timestampMs: e2.getTimestampMs() };
}
embedder_result.convertFromEmbeddingResultProto = convertFromEmbeddingResultProto;
var cosine_similarity = {};
function computeCosineSimilarity(e2, t2) {
  if (e2.floatEmbedding && t2.floatEmbedding)
    return compute(e2.floatEmbedding, t2.floatEmbedding);
  if (e2.quantizedEmbedding && t2.quantizedEmbedding)
    return compute(convertToBytes(e2.quantizedEmbedding), convertToBytes(t2.quantizedEmbedding));
  throw new Error("Cannot compute cosine similarity between quantized and float embeddings.");
}
function convertToBytes(e2) {
  return Array.from(e2, (e3) => e3 > 127 ? e3 - 256 : e3);
}
function compute(e2, t2) {
  if (e2.length !== t2.length)
    throw new Error(`Cannot compute cosine similarity between embeddings of different sizes (${e2.length} vs. ${t2.length}).`);
  let r2 = 0, o2 = 0, i3 = 0;
  for (let a3 = 0; a3 < e2.length; a3++)
    r2 += e2[a3] * t2[a3], o2 += e2[a3] * e2[a3], i3 += t2[a3] * t2[a3];
  if (o2 <= 0 || i3 <= 0)
    throw new Error("Cannot compute cosine similarity on embedding with 0 norm.");
  return r2 / Math.sqrt(o2 * i3);
}
Object.defineProperty(cosine_similarity, "__esModule", { value: true }), cosine_similarity.computeCosineSimilarity = void 0, cosine_similarity.computeCosineSimilarity = computeCosineSimilarity;
var image_embedder_options = {};
Object.defineProperty(image_embedder_options, "__esModule", { value: true });
var image_embedder_result = {};
Object.defineProperty(image_embedder_result, "__esModule", { value: true }), function(e2) {
  var t2 = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function(e3, t3, r3, o3) {
    void 0 === o3 && (o3 = r3);
    var i4 = Object.getOwnPropertyDescriptor(t3, r3);
    i4 && !("get" in i4 ? !t3.__esModule : i4.writable || i4.configurable) || (i4 = { enumerable: true, get: function() {
      return t3[r3];
    } }), Object.defineProperty(e3, o3, i4);
  } : function(e3, t3, r3, o3) {
    void 0 === o3 && (o3 = r3), e3[o3] = t3[r3];
  }), r2 = commonjsGlobal && commonjsGlobal.__exportStar || function(e3, r3) {
    for (var o3 in e3)
      "default" === o3 || Object.prototype.hasOwnProperty.call(r3, o3) || t2(r3, e3, o3);
  };
  Object.defineProperty(e2, "__esModule", { value: true }), e2.ImageEmbedder = void 0;
  const o2 = calculator_pb, i3 = calculator_options_pb, a3 = embeddings_pb, n2 = base_options_pb, s2 = image_embedder_graph_options_pb, p2 = embedder_options, d2 = embedder_result, l2 = cosine_similarity, g2 = vision_task_runner, c2 = "image_in", u2 = "norm_rect", m2 = "embeddings_out";
  r2(image_embedder_options, e2), r2(image_embedder_result, e2);
  class f3 extends g2.VisionTaskRunner {
    static createFromOptions(e3, t3) {
      return g2.VisionTaskRunner.createVisionInstance(f3, e3, t3);
    }
    static createFromModelBuffer(e3, t3) {
      return g2.VisionTaskRunner.createVisionInstance(f3, e3, { baseOptions: { modelAssetBuffer: t3 } });
    }
    static createFromModelPath(e3, t3) {
      return g2.VisionTaskRunner.createVisionInstance(f3, e3, { baseOptions: { modelAssetPath: t3 } });
    }
    constructor(e3, t3) {
      super(new g2.VisionGraphRunner(e3, t3), c2, u2, true), this.options = new s2.ImageEmbedderGraphOptions(), this.embeddings = { embeddings: [] }, this.options.setBaseOptions(new n2.BaseOptions());
    }
    get baseOptions() {
      return this.options.getBaseOptions();
    }
    set baseOptions(e3) {
      this.options.setBaseOptions(e3);
    }
    setOptions(e3) {
      return this.options.setEmbedderOptions((0, p2.convertEmbedderOptionsToProto)(e3, this.options.getEmbedderOptions())), this.applyOptions(e3);
    }
    embed(e3, t3) {
      return this.processImageData(e3, t3), this.embeddings;
    }
    embedForVideo(e3, t3, r3) {
      return this.processVideoData(e3, r3, t3), this.embeddings;
    }
    static cosineSimilarity(e3, t3) {
      return (0, l2.computeCosineSimilarity)(e3, t3);
    }
    addJsImageEmdedding(e3) {
      const t3 = a3.EmbeddingResult.deserializeBinary(e3);
      this.embeddings = (0, d2.convertFromEmbeddingResultProto)(t3);
    }
    refreshGraph() {
      const e3 = new o2.CalculatorGraphConfig();
      e3.addInputStream(c2), e3.addInputStream(u2), e3.addOutputStream(m2);
      const t3 = new i3.CalculatorOptions();
      t3.setExtension(s2.ImageEmbedderGraphOptions.ext, this.options);
      const r3 = new o2.CalculatorGraphConfig.Node();
      r3.setCalculator("mediapipe.tasks.vision.image_embedder.ImageEmbedderGraph"), r3.addInputStream("IMAGE:" + c2), r3.addInputStream("NORM_RECT:" + u2), r3.addOutputStream("EMBEDDINGS:" + m2), r3.setOptions(t3), e3.addNode(r3), this.graphRunner.attachProtoListener(m2, (e4, t4) => {
        this.addJsImageEmdedding(e4), this.setLatestOutputTimestamp(t4);
      }), this.graphRunner.attachEmptyPacketListener(m2, (e4) => {
        this.setLatestOutputTimestamp(e4);
      });
      const a4 = e3.serializeBinary();
      this.setGraph(new Uint8Array(a4), true);
    }
  }
  e2.ImageEmbedder = f3;
}(image_embedder);
var image_segmenter = {};
var tensors_to_segmentation_calculator_pb = {};
var segmenter_options_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")();
  r2.exportSymbol("proto.mediapipe.tasks.vision.image_segmenter.proto.SegmenterOptions", null, o2), r2.exportSymbol("proto.mediapipe.tasks.vision.image_segmenter.proto.SegmenterOptions.Activation", null, o2), r2.exportSymbol("proto.mediapipe.tasks.vision.image_segmenter.proto.SegmenterOptions.OutputType", null, o2), proto.mediapipe.tasks.vision.image_segmenter.proto.SegmenterOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.vision.image_segmenter.proto.SegmenterOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.vision.image_segmenter.proto.SegmenterOptions.displayName = "proto.mediapipe.tasks.vision.image_segmenter.proto.SegmenterOptions"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.vision.image_segmenter.proto.SegmenterOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.vision.image_segmenter.proto.SegmenterOptions.toObject(e3, this);
  }, proto.mediapipe.tasks.vision.image_segmenter.proto.SegmenterOptions.toObject = function(e3, r3) {
    var o3, i3 = { outputType: null == (o3 = t2.Message.getField(r3, 1)) ? void 0 : o3, activation: t2.Message.getFieldWithDefault(r3, 2, 0) };
    return e3 && (i3.$jspbMessageInstance = r3), i3;
  }), proto.mediapipe.tasks.vision.image_segmenter.proto.SegmenterOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.vision.image_segmenter.proto.SegmenterOptions();
    return proto.mediapipe.tasks.vision.image_segmenter.proto.SegmenterOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.vision.image_segmenter.proto.SegmenterOptions.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readEnum();
          e3.setOutputType(r3);
          break;
        case 2:
          r3 = t3.readEnum();
          e3.setActivation(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.vision.image_segmenter.proto.SegmenterOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.vision.image_segmenter.proto.SegmenterOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.vision.image_segmenter.proto.SegmenterOptions.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeEnum(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeEnum(2, o3);
  }, proto.mediapipe.tasks.vision.image_segmenter.proto.SegmenterOptions.OutputType = { UNSPECIFIED: 0, CATEGORY_MASK: 1, CONFIDENCE_MASK: 2 }, proto.mediapipe.tasks.vision.image_segmenter.proto.SegmenterOptions.Activation = { NONE: 0, SIGMOID: 1, SOFTMAX: 2 }, proto.mediapipe.tasks.vision.image_segmenter.proto.SegmenterOptions.prototype.getOutputType = function() {
    return t2.Message.getFieldWithDefault(this, 1, 0);
  }, proto.mediapipe.tasks.vision.image_segmenter.proto.SegmenterOptions.prototype.setOutputType = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.tasks.vision.image_segmenter.proto.SegmenterOptions.prototype.clearOutputType = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.tasks.vision.image_segmenter.proto.SegmenterOptions.prototype.hasOutputType = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.vision.image_segmenter.proto.SegmenterOptions.prototype.getActivation = function() {
    return t2.Message.getFieldWithDefault(this, 2, 0);
  }, proto.mediapipe.tasks.vision.image_segmenter.proto.SegmenterOptions.prototype.setActivation = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.tasks.vision.image_segmenter.proto.SegmenterOptions.prototype.clearActivation = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.tasks.vision.image_segmenter.proto.SegmenterOptions.prototype.hasActivation = function() {
    return null != t2.Message.getField(this, 2);
  }, r2.object.extend(e2, proto.mediapipe.tasks.vision.image_segmenter.proto);
}(segmenter_options_pb);
var label_map_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")();
  r2.exportSymbol("proto.mediapipe.LabelMapItem", null, o2), proto.mediapipe.LabelMapItem = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, proto.mediapipe.LabelMapItem.repeatedFields_, null);
  }, r2.inherits(proto.mediapipe.LabelMapItem, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.LabelMapItem.displayName = "proto.mediapipe.LabelMapItem"), proto.mediapipe.LabelMapItem.repeatedFields_ = [3], t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.LabelMapItem.prototype.toObject = function(e3) {
    return proto.mediapipe.LabelMapItem.toObject(e3, this);
  }, proto.mediapipe.LabelMapItem.toObject = function(e3, r3) {
    var o3, i3 = { name: null == (o3 = t2.Message.getField(r3, 1)) ? void 0 : o3, displayName: null == (o3 = t2.Message.getField(r3, 2)) ? void 0 : o3, childNameList: null == (o3 = t2.Message.getRepeatedField(r3, 3)) ? void 0 : o3 };
    return e3 && (i3.$jspbMessageInstance = r3), i3;
  }), proto.mediapipe.LabelMapItem.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.LabelMapItem();
    return proto.mediapipe.LabelMapItem.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.LabelMapItem.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readString();
          e3.setName(r3);
          break;
        case 2:
          r3 = t3.readString();
          e3.setDisplayName(r3);
          break;
        case 3:
          r3 = t3.readString();
          e3.addChildName(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.LabelMapItem.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.LabelMapItem.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.LabelMapItem.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeString(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeString(2, o3), (o3 = e3.getChildNameList()).length > 0 && r3.writeRepeatedString(3, o3);
  }, proto.mediapipe.LabelMapItem.prototype.getName = function() {
    return t2.Message.getFieldWithDefault(this, 1, "");
  }, proto.mediapipe.LabelMapItem.prototype.setName = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.LabelMapItem.prototype.clearName = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.LabelMapItem.prototype.hasName = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.LabelMapItem.prototype.getDisplayName = function() {
    return t2.Message.getFieldWithDefault(this, 2, "");
  }, proto.mediapipe.LabelMapItem.prototype.setDisplayName = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.LabelMapItem.prototype.clearDisplayName = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.LabelMapItem.prototype.hasDisplayName = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.LabelMapItem.prototype.getChildNameList = function() {
    return t2.Message.getRepeatedField(this, 3);
  }, proto.mediapipe.LabelMapItem.prototype.setChildNameList = function(e3) {
    return t2.Message.setField(this, 3, e3 || []);
  }, proto.mediapipe.LabelMapItem.prototype.addChildName = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 3, e3, r3);
  }, proto.mediapipe.LabelMapItem.prototype.clearChildNameList = function() {
    return this.setChildNameList([]);
  }, r2.object.extend(e2, proto.mediapipe);
}(label_map_pb), function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = calculator_options_pb;
  r2.object.extend(proto, i3);
  var a3 = segmenter_options_pb;
  r2.object.extend(proto, a3);
  var n2 = label_map_pb;
  r2.object.extend(proto, n2), r2.exportSymbol("proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions", null, o2), proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions.displayName = "proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions.toObject(e3, this);
  }, proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions.toObject = function(e3, t3) {
    var r3, o3 = { segmenterOptions: (r3 = t3.getSegmenterOptions()) && a3.SegmenterOptions.toObject(e3, r3), labelItemsMap: (r3 = t3.getLabelItemsMap()) ? r3.toObject(e3, proto.mediapipe.LabelMapItem.toObject) : [] };
    return e3 && (o3.$jspbMessageInstance = t3), o3;
  }), proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions();
    return proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions.deserializeBinaryFromReader = function(e3, r3) {
    for (; r3.nextField() && !r3.isEndGroup(); ) {
      switch (r3.getFieldNumber()) {
        case 1:
          var o3 = new a3.SegmenterOptions();
          r3.readMessage(o3, a3.SegmenterOptions.deserializeBinaryFromReader), e3.setSegmenterOptions(o3);
          break;
        case 2:
          o3 = e3.getLabelItemsMap();
          r3.readMessage(o3, function(e4, r4) {
            t2.Map.deserializeBinary(e4, r4, t2.BinaryReader.prototype.readInt64, t2.BinaryReader.prototype.readMessage, proto.mediapipe.LabelMapItem.deserializeBinaryFromReader, 0, new proto.mediapipe.LabelMapItem());
          });
          break;
        default:
          r3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = e3.getSegmenterOptions()) && r3.writeMessage(1, o3, a3.SegmenterOptions.serializeBinaryToWriter), (o3 = e3.getLabelItemsMap(true)) && o3.getLength() > 0 && o3.serializeBinary(2, r3, t2.BinaryWriter.prototype.writeInt64, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.LabelMapItem.serializeBinaryToWriter);
  }, proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions.ext = new t2.ExtensionFieldInfo(458105876, { ext: 0 }, proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions, proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions.toObject, 0), i3.CalculatorOptions.extensionsBinary[458105876] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions.serializeBinaryToWriter, proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions.deserializeBinaryFromReader, false), i3.CalculatorOptions.extensions[458105876] = proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions.ext, proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions.prototype.getSegmenterOptions = function() {
    return t2.Message.getWrapperField(this, a3.SegmenterOptions, 1);
  }, proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions.prototype.setSegmenterOptions = function(e3) {
    return t2.Message.setWrapperField(this, 1, e3);
  }, proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions.prototype.clearSegmenterOptions = function() {
    return this.setSegmenterOptions(void 0);
  }, proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions.prototype.hasSegmenterOptions = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions.prototype.getLabelItemsMap = function(e3) {
    return t2.Message.getMapField(this, 2, e3, proto.mediapipe.LabelMapItem);
  }, proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions.prototype.clearLabelItemsMap = function() {
    return this.getLabelItemsMap().clear(), this;
  }, proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions.ext = new t2.ExtensionFieldInfo(458105876, { ext: 0 }, proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions, proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions.toObject, 0), i3.CalculatorOptions.extensionsBinary[458105876] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions.serializeBinaryToWriter, proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions.deserializeBinaryFromReader, false), i3.CalculatorOptions.extensions[458105876] = proto.mediapipe.tasks.TensorsToSegmentationCalculatorOptions.ext, r2.object.extend(e2, proto.mediapipe.tasks);
}(tensors_to_segmentation_calculator_pb);
var image_segmenter_graph_options_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = calculator_pb;
  r2.object.extend(proto, i3);
  var a3 = calculator_options_pb;
  r2.object.extend(proto, a3);
  var n2 = base_options_pb;
  r2.object.extend(proto, n2);
  var s2 = segmenter_options_pb;
  r2.object.extend(proto, s2), r2.exportSymbol("proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions", null, o2), proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.displayName = "proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.toObject(e3, this);
  }, proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.toObject = function(e3, r3) {
    var o3, i4 = { baseOptions: (o3 = r3.getBaseOptions()) && n2.BaseOptions.toObject(e3, o3), displayNamesLocale: t2.Message.getFieldWithDefault(r3, 2, "en"), segmenterOptions: (o3 = r3.getSegmenterOptions()) && s2.SegmenterOptions.toObject(e3, o3) };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions();
    return proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new n2.BaseOptions();
          t3.readMessage(r3, n2.BaseOptions.deserializeBinaryFromReader), e3.setBaseOptions(r3);
          break;
        case 2:
          r3 = t3.readString();
          e3.setDisplayNamesLocale(r3);
          break;
        case 3:
          r3 = new s2.SegmenterOptions();
          t3.readMessage(r3, s2.SegmenterOptions.deserializeBinaryFromReader), e3.setSegmenterOptions(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = e3.getBaseOptions()) && r3.writeMessage(1, o3, n2.BaseOptions.serializeBinaryToWriter), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeString(2, o3), null != (o3 = e3.getSegmenterOptions()) && r3.writeMessage(3, o3, s2.SegmenterOptions.serializeBinaryToWriter);
  }, proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.ext = new t2.ExtensionFieldInfo(458105758, { ext: 0 }, proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions, proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[458105758] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[458105758] = proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.ext, proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.prototype.getBaseOptions = function() {
    return t2.Message.getWrapperField(this, n2.BaseOptions, 1);
  }, proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.prototype.setBaseOptions = function(e3) {
    return t2.Message.setWrapperField(this, 1, e3);
  }, proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.prototype.clearBaseOptions = function() {
    return this.setBaseOptions(void 0);
  }, proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.prototype.hasBaseOptions = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.prototype.getDisplayNamesLocale = function() {
    return t2.Message.getFieldWithDefault(this, 2, "en");
  }, proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.prototype.setDisplayNamesLocale = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.prototype.clearDisplayNamesLocale = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.prototype.hasDisplayNamesLocale = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.prototype.getSegmenterOptions = function() {
    return t2.Message.getWrapperField(this, s2.SegmenterOptions, 3);
  }, proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.prototype.setSegmenterOptions = function(e3) {
    return t2.Message.setWrapperField(this, 3, e3);
  }, proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.prototype.clearSegmenterOptions = function() {
    return this.setSegmenterOptions(void 0);
  }, proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.prototype.hasSegmenterOptions = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.ext = new t2.ExtensionFieldInfo(458105758, { ext: 0 }, proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions, proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[458105758] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[458105758] = proto.mediapipe.tasks.vision.image_segmenter.proto.ImageSegmenterGraphOptions.ext, r2.object.extend(e2, proto.mediapipe.tasks.vision.image_segmenter.proto);
}(image_segmenter_graph_options_pb);
var image_segmenter_result = {};
Object.defineProperty(image_segmenter_result, "__esModule", { value: true }), image_segmenter_result.ImageSegmenterResult = void 0;
var ImageSegmenterResult = class {
  constructor(e2, t2, r2) {
    this.confidenceMasks = e2, this.categoryMask = t2, this.qualityScores = r2;
  }
  close() {
    var e2, t2;
    null === (e2 = this.confidenceMasks) || void 0 === e2 || e2.forEach((e3) => {
      e3.close();
    }), null === (t2 = this.categoryMask) || void 0 === t2 || t2.close();
  }
};
image_segmenter_result.ImageSegmenterResult = ImageSegmenterResult;
var image_segmenter_options = {};
Object.defineProperty(image_segmenter_options, "__esModule", { value: true }), function(e2) {
  var t2 = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function(e3, t3, r3, o3) {
    void 0 === o3 && (o3 = r3);
    var i4 = Object.getOwnPropertyDescriptor(t3, r3);
    i4 && !("get" in i4 ? !t3.__esModule : i4.writable || i4.configurable) || (i4 = { enumerable: true, get: function() {
      return t3[r3];
    } }), Object.defineProperty(e3, o3, i4);
  } : function(e3, t3, r3, o3) {
    void 0 === o3 && (o3 = r3), e3[o3] = t3[r3];
  }), r2 = commonjsGlobal && commonjsGlobal.__exportStar || function(e3, r3) {
    for (var o3 in e3)
      "default" === o3 || Object.prototype.hasOwnProperty.call(r3, o3) || t2(r3, e3, o3);
  };
  Object.defineProperty(e2, "__esModule", { value: true }), e2.ImageSegmenter = void 0;
  const o2 = calculator_pb, i3 = calculator_options_pb, a3 = base_options_pb, n2 = tensors_to_segmentation_calculator_pb, s2 = image_segmenter_graph_options_pb, p2 = segmenter_options_pb, d2 = vision_task_runner, l2 = image_segmenter_result;
  r2(image_segmenter_options, e2), r2(image_segmenter_result, e2);
  const g2 = "image_in", c2 = "norm_rect", u2 = "confidence_masks", m2 = "category_mask", f3 = "quality_scores", h2 = "mediapipe.tasks.TensorsToSegmentationCalculator";
  class y2 extends d2.VisionTaskRunner {
    static createFromOptions(e3, t3) {
      return d2.VisionTaskRunner.createVisionInstance(y2, e3, t3);
    }
    static createFromModelBuffer(e3, t3) {
      return d2.VisionTaskRunner.createVisionInstance(y2, e3, { baseOptions: { modelAssetBuffer: t3 } });
    }
    static createFromModelPath(e3, t3) {
      return d2.VisionTaskRunner.createVisionInstance(y2, e3, { baseOptions: { modelAssetPath: t3 } });
    }
    constructor(e3, t3) {
      super(new d2.VisionGraphRunner(e3, t3), g2, c2, false), this.labels = [], this.outputCategoryMask = false, this.outputConfidenceMasks = true, this.options = new s2.ImageSegmenterGraphOptions(), this.segmenterOptions = new p2.SegmenterOptions(), this.options.setSegmenterOptions(this.segmenterOptions), this.options.setBaseOptions(new a3.BaseOptions());
    }
    get baseOptions() {
      return this.options.getBaseOptions();
    }
    set baseOptions(e3) {
      this.options.setBaseOptions(e3);
    }
    setOptions(e3) {
      var t3, r3;
      return void 0 !== e3.displayNamesLocale ? this.options.setDisplayNamesLocale(e3.displayNamesLocale) : "displayNamesLocale" in e3 && this.options.clearDisplayNamesLocale(), "outputCategoryMask" in e3 && (this.outputCategoryMask = null !== (t3 = e3.outputCategoryMask) && void 0 !== t3 && t3), "outputConfidenceMasks" in e3 && (this.outputConfidenceMasks = null === (r3 = e3.outputConfidenceMasks) || void 0 === r3 || r3), super.applyOptions(e3);
    }
    onGraphRefreshed() {
      this.populateLabels();
    }
    populateLabels() {
      var e3, t3, r3;
      const o3 = this.getCalculatorGraphConfig().getNodeList().filter((e4) => e4.getName().includes(h2));
      if (this.labels = [], o3.length > 1)
        throw new Error(`The graph has more than one ${h2}.`);
      if (1 === o3.length) {
        (null !== (r3 = null === (t3 = null === (e3 = o3[0].getOptions()) || void 0 === e3 ? void 0 : e3.getExtension(n2.TensorsToSegmentationCalculatorOptions.ext)) || void 0 === t3 ? void 0 : t3.getLabelItemsMap()) && void 0 !== r3 ? r3 : /* @__PURE__ */ new Map()).forEach((e4, t4) => {
          this.labels[Number(t4)] = e4.getName();
        });
      }
    }
    segment(e3, t3, r3) {
      const o3 = "function" != typeof t3 ? t3 : {};
      return this.userCallback = "function" == typeof t3 ? t3 : r3, this.reset(), this.processImageData(e3, o3), this.processResults();
    }
    segmentForVideo(e3, t3, r3, o3) {
      const i4 = "function" != typeof r3 ? r3 : {};
      return this.userCallback = "function" == typeof r3 ? r3 : o3, this.reset(), this.processVideoData(e3, i4, t3), this.processResults();
    }
    getLabels() {
      return this.labels;
    }
    reset() {
      this.categoryMask = void 0, this.confidenceMasks = void 0, this.qualityScores = void 0;
    }
    processResults() {
      try {
        const e3 = new l2.ImageSegmenterResult(this.confidenceMasks, this.categoryMask, this.qualityScores);
        if (!this.userCallback)
          return e3;
        this.userCallback(e3);
      } finally {
        this.freeKeepaliveStreams();
      }
    }
    refreshGraph() {
      const e3 = new o2.CalculatorGraphConfig();
      e3.addInputStream(g2), e3.addInputStream(c2);
      const t3 = new i3.CalculatorOptions();
      t3.setExtension(s2.ImageSegmenterGraphOptions.ext, this.options);
      const r3 = new o2.CalculatorGraphConfig.Node();
      r3.setCalculator("mediapipe.tasks.vision.image_segmenter.ImageSegmenterGraph"), r3.addInputStream("IMAGE:" + g2), r3.addInputStream("NORM_RECT:" + c2), r3.setOptions(t3), e3.addNode(r3), this.addKeepaliveNode(e3), this.outputConfidenceMasks && (e3.addOutputStream(u2), r3.addOutputStream("CONFIDENCE_MASKS:" + u2), this.keepStreamAlive(u2), this.graphRunner.attachImageVectorListener(u2, (e4, t4) => {
        this.confidenceMasks = e4.map((e5) => this.convertToMPMask(e5, !this.userCallback)), this.setLatestOutputTimestamp(t4);
      }), this.graphRunner.attachEmptyPacketListener(u2, (e4) => {
        this.confidenceMasks = [], this.setLatestOutputTimestamp(e4);
      })), this.outputCategoryMask && (e3.addOutputStream(m2), r3.addOutputStream("CATEGORY_MASK:" + m2), this.keepStreamAlive(m2), this.graphRunner.attachImageListener(m2, (e4, t4) => {
        this.categoryMask = this.convertToMPMask(e4, !this.userCallback), this.setLatestOutputTimestamp(t4);
      }), this.graphRunner.attachEmptyPacketListener(m2, (e4) => {
        this.categoryMask = void 0, this.setLatestOutputTimestamp(e4);
      })), e3.addOutputStream(f3), r3.addOutputStream("QUALITY_SCORES:" + f3), this.graphRunner.attachFloatVectorListener(f3, (e4, t4) => {
        this.qualityScores = e4, this.setLatestOutputTimestamp(t4);
      }), this.graphRunner.attachEmptyPacketListener(f3, (e4) => {
        this.categoryMask = void 0, this.setLatestOutputTimestamp(e4);
      });
      const a4 = e3.serializeBinary();
      this.setGraph(new Uint8Array(a4), true);
    }
  }
  e2.ImageSegmenter = y2;
}(image_segmenter);
var interactive_segmenter = {};
var color_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")();
  r2.exportSymbol("proto.mediapipe.Color", null, o2), r2.exportSymbol("proto.mediapipe.ColorMap", null, o2), proto.mediapipe.Color = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.Color, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.Color.displayName = "proto.mediapipe.Color"), proto.mediapipe.ColorMap = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.ColorMap, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.ColorMap.displayName = "proto.mediapipe.ColorMap"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.Color.prototype.toObject = function(e3) {
    return proto.mediapipe.Color.toObject(e3, this);
  }, proto.mediapipe.Color.toObject = function(e3, r3) {
    var o3, i3 = { r: null == (o3 = t2.Message.getField(r3, 1)) ? void 0 : o3, g: null == (o3 = t2.Message.getField(r3, 2)) ? void 0 : o3, b: null == (o3 = t2.Message.getField(r3, 3)) ? void 0 : o3 };
    return e3 && (i3.$jspbMessageInstance = r3), i3;
  }), proto.mediapipe.Color.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.Color();
    return proto.mediapipe.Color.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.Color.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readInt32();
          e3.setR(r3);
          break;
        case 2:
          r3 = t3.readInt32();
          e3.setG(r3);
          break;
        case 3:
          r3 = t3.readInt32();
          e3.setB(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.Color.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.Color.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.Color.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeInt32(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeInt32(2, o3), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeInt32(3, o3);
  }, proto.mediapipe.Color.prototype.getR = function() {
    return t2.Message.getFieldWithDefault(this, 1, 0);
  }, proto.mediapipe.Color.prototype.setR = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.Color.prototype.clearR = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.Color.prototype.hasR = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.Color.prototype.getG = function() {
    return t2.Message.getFieldWithDefault(this, 2, 0);
  }, proto.mediapipe.Color.prototype.setG = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.Color.prototype.clearG = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.Color.prototype.hasG = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.Color.prototype.getB = function() {
    return t2.Message.getFieldWithDefault(this, 3, 0);
  }, proto.mediapipe.Color.prototype.setB = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.Color.prototype.clearB = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.Color.prototype.hasB = function() {
    return null != t2.Message.getField(this, 3);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.ColorMap.prototype.toObject = function(e3) {
    return proto.mediapipe.ColorMap.toObject(e3, this);
  }, proto.mediapipe.ColorMap.toObject = function(e3, t3) {
    var r3, o3 = { labelToColorMap: (r3 = t3.getLabelToColorMap()) ? r3.toObject(e3, proto.mediapipe.Color.toObject) : [] };
    return e3 && (o3.$jspbMessageInstance = t3), o3;
  }), proto.mediapipe.ColorMap.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.ColorMap();
    return proto.mediapipe.ColorMap.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.ColorMap.deserializeBinaryFromReader = function(e3, r3) {
    for (; r3.nextField() && !r3.isEndGroup(); ) {
      if (1 === r3.getFieldNumber()) {
        var o3 = e3.getLabelToColorMap();
        r3.readMessage(o3, function(e4, r4) {
          t2.Map.deserializeBinary(e4, r4, t2.BinaryReader.prototype.readString, t2.BinaryReader.prototype.readMessage, proto.mediapipe.Color.deserializeBinaryFromReader, "", new proto.mediapipe.Color());
        });
      } else
        r3.skipField();
    }
    return e3;
  }, proto.mediapipe.ColorMap.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.ColorMap.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.ColorMap.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    (o3 = e3.getLabelToColorMap(true)) && o3.getLength() > 0 && o3.serializeBinary(1, r3, t2.BinaryWriter.prototype.writeString, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.Color.serializeBinaryToWriter);
  }, proto.mediapipe.ColorMap.prototype.getLabelToColorMap = function(e3) {
    return t2.Message.getMapField(this, 1, e3, proto.mediapipe.Color);
  }, proto.mediapipe.ColorMap.prototype.clearLabelToColorMap = function() {
    return this.getLabelToColorMap().clear(), this;
  }, r2.object.extend(e2, proto.mediapipe);
}(color_pb);
var render_data_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = color_pb;
  r2.object.extend(proto, i3), r2.exportSymbol("proto.mediapipe.RenderAnnotation", null, o2), r2.exportSymbol("proto.mediapipe.RenderAnnotation.Arrow", null, o2), r2.exportSymbol("proto.mediapipe.RenderAnnotation.DataCase", null, o2), r2.exportSymbol("proto.mediapipe.RenderAnnotation.FilledOval", null, o2), r2.exportSymbol("proto.mediapipe.RenderAnnotation.FilledRectangle", null, o2), r2.exportSymbol("proto.mediapipe.RenderAnnotation.FilledRoundedRectangle", null, o2), r2.exportSymbol("proto.mediapipe.RenderAnnotation.GradientLine", null, o2), r2.exportSymbol("proto.mediapipe.RenderAnnotation.Line", null, o2), r2.exportSymbol("proto.mediapipe.RenderAnnotation.Line.LineType", null, o2), r2.exportSymbol("proto.mediapipe.RenderAnnotation.Oval", null, o2), r2.exportSymbol("proto.mediapipe.RenderAnnotation.Point", null, o2), r2.exportSymbol("proto.mediapipe.RenderAnnotation.Rectangle", null, o2), r2.exportSymbol("proto.mediapipe.RenderAnnotation.RoundedRectangle", null, o2), r2.exportSymbol("proto.mediapipe.RenderAnnotation.Scribble", null, o2), r2.exportSymbol("proto.mediapipe.RenderAnnotation.Text", null, o2), r2.exportSymbol("proto.mediapipe.RenderData", null, o2), r2.exportSymbol("proto.mediapipe.RenderViewport", null, o2), proto.mediapipe.RenderData = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, proto.mediapipe.RenderData.repeatedFields_, null);
  }, r2.inherits(proto.mediapipe.RenderData, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.RenderData.displayName = "proto.mediapipe.RenderData"), proto.mediapipe.RenderAnnotation = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, proto.mediapipe.RenderAnnotation.oneofGroups_);
  }, r2.inherits(proto.mediapipe.RenderAnnotation, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.RenderAnnotation.displayName = "proto.mediapipe.RenderAnnotation"), proto.mediapipe.RenderAnnotation.Rectangle = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.RenderAnnotation.Rectangle, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.RenderAnnotation.Rectangle.displayName = "proto.mediapipe.RenderAnnotation.Rectangle"), proto.mediapipe.RenderAnnotation.FilledRectangle = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.RenderAnnotation.FilledRectangle, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.RenderAnnotation.FilledRectangle.displayName = "proto.mediapipe.RenderAnnotation.FilledRectangle"), proto.mediapipe.RenderAnnotation.RoundedRectangle = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.RenderAnnotation.RoundedRectangle, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.RenderAnnotation.RoundedRectangle.displayName = "proto.mediapipe.RenderAnnotation.RoundedRectangle"), proto.mediapipe.RenderAnnotation.FilledRoundedRectangle = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.RenderAnnotation.FilledRoundedRectangle, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.RenderAnnotation.FilledRoundedRectangle.displayName = "proto.mediapipe.RenderAnnotation.FilledRoundedRectangle"), proto.mediapipe.RenderAnnotation.Oval = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.RenderAnnotation.Oval, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.RenderAnnotation.Oval.displayName = "proto.mediapipe.RenderAnnotation.Oval"), proto.mediapipe.RenderAnnotation.FilledOval = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.RenderAnnotation.FilledOval, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.RenderAnnotation.FilledOval.displayName = "proto.mediapipe.RenderAnnotation.FilledOval"), proto.mediapipe.RenderAnnotation.Point = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.RenderAnnotation.Point, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.RenderAnnotation.Point.displayName = "proto.mediapipe.RenderAnnotation.Point"), proto.mediapipe.RenderAnnotation.Line = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.RenderAnnotation.Line, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.RenderAnnotation.Line.displayName = "proto.mediapipe.RenderAnnotation.Line"), proto.mediapipe.RenderAnnotation.GradientLine = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.RenderAnnotation.GradientLine, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.RenderAnnotation.GradientLine.displayName = "proto.mediapipe.RenderAnnotation.GradientLine"), proto.mediapipe.RenderAnnotation.Scribble = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, proto.mediapipe.RenderAnnotation.Scribble.repeatedFields_, null);
  }, r2.inherits(proto.mediapipe.RenderAnnotation.Scribble, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.RenderAnnotation.Scribble.displayName = "proto.mediapipe.RenderAnnotation.Scribble"), proto.mediapipe.RenderAnnotation.Arrow = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.RenderAnnotation.Arrow, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.RenderAnnotation.Arrow.displayName = "proto.mediapipe.RenderAnnotation.Arrow"), proto.mediapipe.RenderAnnotation.Text = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.RenderAnnotation.Text, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.RenderAnnotation.Text.displayName = "proto.mediapipe.RenderAnnotation.Text"), proto.mediapipe.RenderViewport = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.RenderViewport, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.RenderViewport.displayName = "proto.mediapipe.RenderViewport"), proto.mediapipe.RenderData.repeatedFields_ = [1], t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.RenderData.prototype.toObject = function(e3) {
    return proto.mediapipe.RenderData.toObject(e3, this);
  }, proto.mediapipe.RenderData.toObject = function(e3, r3) {
    var o3, i4 = { renderAnnotationsList: t2.Message.toObjectList(r3.getRenderAnnotationsList(), proto.mediapipe.RenderAnnotation.toObject, e3), sceneClass: null == (o3 = t2.Message.getField(r3, 2)) ? void 0 : o3, sceneViewport: (o3 = r3.getSceneViewport()) && proto.mediapipe.RenderViewport.toObject(e3, o3) };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.RenderData.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.RenderData();
    return proto.mediapipe.RenderData.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.RenderData.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new proto.mediapipe.RenderAnnotation();
          t3.readMessage(r3, proto.mediapipe.RenderAnnotation.deserializeBinaryFromReader), e3.addRenderAnnotations(r3);
          break;
        case 2:
          r3 = t3.readString();
          e3.setSceneClass(r3);
          break;
        case 3:
          r3 = new proto.mediapipe.RenderViewport();
          t3.readMessage(r3, proto.mediapipe.RenderViewport.deserializeBinaryFromReader), e3.setSceneViewport(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.RenderData.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.RenderData.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.RenderData.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    (o3 = e3.getRenderAnnotationsList()).length > 0 && r3.writeRepeatedMessage(1, o3, proto.mediapipe.RenderAnnotation.serializeBinaryToWriter), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeString(2, o3), null != (o3 = e3.getSceneViewport()) && r3.writeMessage(3, o3, proto.mediapipe.RenderViewport.serializeBinaryToWriter);
  }, proto.mediapipe.RenderData.prototype.getRenderAnnotationsList = function() {
    return t2.Message.getRepeatedWrapperField(this, proto.mediapipe.RenderAnnotation, 1);
  }, proto.mediapipe.RenderData.prototype.setRenderAnnotationsList = function(e3) {
    return t2.Message.setRepeatedWrapperField(this, 1, e3);
  }, proto.mediapipe.RenderData.prototype.addRenderAnnotations = function(e3, r3) {
    return t2.Message.addToRepeatedWrapperField(this, 1, e3, proto.mediapipe.RenderAnnotation, r3);
  }, proto.mediapipe.RenderData.prototype.clearRenderAnnotationsList = function() {
    return this.setRenderAnnotationsList([]);
  }, proto.mediapipe.RenderData.prototype.getSceneClass = function() {
    return t2.Message.getFieldWithDefault(this, 2, "");
  }, proto.mediapipe.RenderData.prototype.setSceneClass = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.RenderData.prototype.clearSceneClass = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.RenderData.prototype.hasSceneClass = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.RenderData.prototype.getSceneViewport = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.RenderViewport, 3);
  }, proto.mediapipe.RenderData.prototype.setSceneViewport = function(e3) {
    return t2.Message.setWrapperField(this, 3, e3);
  }, proto.mediapipe.RenderData.prototype.clearSceneViewport = function() {
    return this.setSceneViewport(void 0);
  }, proto.mediapipe.RenderData.prototype.hasSceneViewport = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.RenderAnnotation.oneofGroups_ = [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15]], proto.mediapipe.RenderAnnotation.DataCase = { DATA_NOT_SET: 0, RECTANGLE: 1, FILLED_RECTANGLE: 2, OVAL: 3, FILLED_OVAL: 4, POINT: 5, LINE: 6, ARROW: 7, TEXT: 8, ROUNDED_RECTANGLE: 9, FILLED_ROUNDED_RECTANGLE: 10, GRADIENT_LINE: 14, SCRIBBLE: 15 }, proto.mediapipe.RenderAnnotation.prototype.getDataCase = function() {
    return t2.Message.computeOneofCase(this, proto.mediapipe.RenderAnnotation.oneofGroups_[0]);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.RenderAnnotation.prototype.toObject = function(e3) {
    return proto.mediapipe.RenderAnnotation.toObject(e3, this);
  }, proto.mediapipe.RenderAnnotation.toObject = function(e3, r3) {
    var o3, a3 = { rectangle: (o3 = r3.getRectangle()) && proto.mediapipe.RenderAnnotation.Rectangle.toObject(e3, o3), filledRectangle: (o3 = r3.getFilledRectangle()) && proto.mediapipe.RenderAnnotation.FilledRectangle.toObject(e3, o3), oval: (o3 = r3.getOval()) && proto.mediapipe.RenderAnnotation.Oval.toObject(e3, o3), filledOval: (o3 = r3.getFilledOval()) && proto.mediapipe.RenderAnnotation.FilledOval.toObject(e3, o3), point: (o3 = r3.getPoint()) && proto.mediapipe.RenderAnnotation.Point.toObject(e3, o3), line: (o3 = r3.getLine()) && proto.mediapipe.RenderAnnotation.Line.toObject(e3, o3), arrow: (o3 = r3.getArrow()) && proto.mediapipe.RenderAnnotation.Arrow.toObject(e3, o3), text: (o3 = r3.getText()) && proto.mediapipe.RenderAnnotation.Text.toObject(e3, o3), roundedRectangle: (o3 = r3.getRoundedRectangle()) && proto.mediapipe.RenderAnnotation.RoundedRectangle.toObject(e3, o3), filledRoundedRectangle: (o3 = r3.getFilledRoundedRectangle()) && proto.mediapipe.RenderAnnotation.FilledRoundedRectangle.toObject(e3, o3), gradientLine: (o3 = r3.getGradientLine()) && proto.mediapipe.RenderAnnotation.GradientLine.toObject(e3, o3), scribble: (o3 = r3.getScribble()) && proto.mediapipe.RenderAnnotation.Scribble.toObject(e3, o3), thickness: t2.Message.getFloatingPointFieldWithDefault(r3, 11, 1), color: (o3 = r3.getColor()) && i3.Color.toObject(e3, o3), sceneTag: null == (o3 = t2.Message.getField(r3, 13)) ? void 0 : o3 };
    return e3 && (a3.$jspbMessageInstance = r3), a3;
  }), proto.mediapipe.RenderAnnotation.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.RenderAnnotation();
    return proto.mediapipe.RenderAnnotation.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.RenderAnnotation.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new proto.mediapipe.RenderAnnotation.Rectangle();
          t3.readMessage(r3, proto.mediapipe.RenderAnnotation.Rectangle.deserializeBinaryFromReader), e3.setRectangle(r3);
          break;
        case 2:
          r3 = new proto.mediapipe.RenderAnnotation.FilledRectangle();
          t3.readMessage(r3, proto.mediapipe.RenderAnnotation.FilledRectangle.deserializeBinaryFromReader), e3.setFilledRectangle(r3);
          break;
        case 3:
          r3 = new proto.mediapipe.RenderAnnotation.Oval();
          t3.readMessage(r3, proto.mediapipe.RenderAnnotation.Oval.deserializeBinaryFromReader), e3.setOval(r3);
          break;
        case 4:
          r3 = new proto.mediapipe.RenderAnnotation.FilledOval();
          t3.readMessage(r3, proto.mediapipe.RenderAnnotation.FilledOval.deserializeBinaryFromReader), e3.setFilledOval(r3);
          break;
        case 5:
          r3 = new proto.mediapipe.RenderAnnotation.Point();
          t3.readMessage(r3, proto.mediapipe.RenderAnnotation.Point.deserializeBinaryFromReader), e3.setPoint(r3);
          break;
        case 6:
          r3 = new proto.mediapipe.RenderAnnotation.Line();
          t3.readMessage(r3, proto.mediapipe.RenderAnnotation.Line.deserializeBinaryFromReader), e3.setLine(r3);
          break;
        case 7:
          r3 = new proto.mediapipe.RenderAnnotation.Arrow();
          t3.readMessage(r3, proto.mediapipe.RenderAnnotation.Arrow.deserializeBinaryFromReader), e3.setArrow(r3);
          break;
        case 8:
          r3 = new proto.mediapipe.RenderAnnotation.Text();
          t3.readMessage(r3, proto.mediapipe.RenderAnnotation.Text.deserializeBinaryFromReader), e3.setText(r3);
          break;
        case 9:
          r3 = new proto.mediapipe.RenderAnnotation.RoundedRectangle();
          t3.readMessage(r3, proto.mediapipe.RenderAnnotation.RoundedRectangle.deserializeBinaryFromReader), e3.setRoundedRectangle(r3);
          break;
        case 10:
          r3 = new proto.mediapipe.RenderAnnotation.FilledRoundedRectangle();
          t3.readMessage(r3, proto.mediapipe.RenderAnnotation.FilledRoundedRectangle.deserializeBinaryFromReader), e3.setFilledRoundedRectangle(r3);
          break;
        case 14:
          r3 = new proto.mediapipe.RenderAnnotation.GradientLine();
          t3.readMessage(r3, proto.mediapipe.RenderAnnotation.GradientLine.deserializeBinaryFromReader), e3.setGradientLine(r3);
          break;
        case 15:
          r3 = new proto.mediapipe.RenderAnnotation.Scribble();
          t3.readMessage(r3, proto.mediapipe.RenderAnnotation.Scribble.deserializeBinaryFromReader), e3.setScribble(r3);
          break;
        case 11:
          r3 = t3.readDouble();
          e3.setThickness(r3);
          break;
        case 12:
          r3 = new i3.Color();
          t3.readMessage(r3, i3.Color.deserializeBinaryFromReader), e3.setColor(r3);
          break;
        case 13:
          r3 = t3.readString();
          e3.setSceneTag(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.RenderAnnotation.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.RenderAnnotation.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.RenderAnnotation.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = e3.getRectangle()) && r3.writeMessage(1, o3, proto.mediapipe.RenderAnnotation.Rectangle.serializeBinaryToWriter), null != (o3 = e3.getFilledRectangle()) && r3.writeMessage(2, o3, proto.mediapipe.RenderAnnotation.FilledRectangle.serializeBinaryToWriter), null != (o3 = e3.getOval()) && r3.writeMessage(3, o3, proto.mediapipe.RenderAnnotation.Oval.serializeBinaryToWriter), null != (o3 = e3.getFilledOval()) && r3.writeMessage(4, o3, proto.mediapipe.RenderAnnotation.FilledOval.serializeBinaryToWriter), null != (o3 = e3.getPoint()) && r3.writeMessage(5, o3, proto.mediapipe.RenderAnnotation.Point.serializeBinaryToWriter), null != (o3 = e3.getLine()) && r3.writeMessage(6, o3, proto.mediapipe.RenderAnnotation.Line.serializeBinaryToWriter), null != (o3 = e3.getArrow()) && r3.writeMessage(7, o3, proto.mediapipe.RenderAnnotation.Arrow.serializeBinaryToWriter), null != (o3 = e3.getText()) && r3.writeMessage(8, o3, proto.mediapipe.RenderAnnotation.Text.serializeBinaryToWriter), null != (o3 = e3.getRoundedRectangle()) && r3.writeMessage(9, o3, proto.mediapipe.RenderAnnotation.RoundedRectangle.serializeBinaryToWriter), null != (o3 = e3.getFilledRoundedRectangle()) && r3.writeMessage(10, o3, proto.mediapipe.RenderAnnotation.FilledRoundedRectangle.serializeBinaryToWriter), null != (o3 = e3.getGradientLine()) && r3.writeMessage(14, o3, proto.mediapipe.RenderAnnotation.GradientLine.serializeBinaryToWriter), null != (o3 = e3.getScribble()) && r3.writeMessage(15, o3, proto.mediapipe.RenderAnnotation.Scribble.serializeBinaryToWriter), null != (o3 = t2.Message.getField(e3, 11)) && r3.writeDouble(11, o3), null != (o3 = e3.getColor()) && r3.writeMessage(12, o3, i3.Color.serializeBinaryToWriter), null != (o3 = t2.Message.getField(e3, 13)) && r3.writeString(13, o3);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.RenderAnnotation.Rectangle.prototype.toObject = function(e3) {
    return proto.mediapipe.RenderAnnotation.Rectangle.toObject(e3, this);
  }, proto.mediapipe.RenderAnnotation.Rectangle.toObject = function(e3, r3) {
    var o3, i4 = { left: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 1)) ? void 0 : o3, top: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 2)) ? void 0 : o3, right: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 3)) ? void 0 : o3, bottom: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 4)) ? void 0 : o3, normalized: t2.Message.getBooleanFieldWithDefault(r3, 5, false), rotation: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 6)) ? void 0 : o3, topLeftThickness: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 7)) ? void 0 : o3 };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.RenderAnnotation.Rectangle.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.RenderAnnotation.Rectangle();
    return proto.mediapipe.RenderAnnotation.Rectangle.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.RenderAnnotation.Rectangle.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readDouble();
          e3.setLeft(r3);
          break;
        case 2:
          r3 = t3.readDouble();
          e3.setTop(r3);
          break;
        case 3:
          r3 = t3.readDouble();
          e3.setRight(r3);
          break;
        case 4:
          r3 = t3.readDouble();
          e3.setBottom(r3);
          break;
        case 5:
          r3 = t3.readBool();
          e3.setNormalized(r3);
          break;
        case 6:
          r3 = t3.readDouble();
          e3.setRotation(r3);
          break;
        case 7:
          r3 = t3.readDouble();
          e3.setTopLeftThickness(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.RenderAnnotation.Rectangle.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.RenderAnnotation.Rectangle.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.RenderAnnotation.Rectangle.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeDouble(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeDouble(2, o3), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeDouble(3, o3), null != (o3 = t2.Message.getField(e3, 4)) && r3.writeDouble(4, o3), null != (o3 = t2.Message.getField(e3, 5)) && r3.writeBool(5, o3), null != (o3 = t2.Message.getField(e3, 6)) && r3.writeDouble(6, o3), null != (o3 = t2.Message.getField(e3, 7)) && r3.writeDouble(7, o3);
  }, proto.mediapipe.RenderAnnotation.Rectangle.prototype.getLeft = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 1, 0);
  }, proto.mediapipe.RenderAnnotation.Rectangle.prototype.setLeft = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.RenderAnnotation.Rectangle.prototype.clearLeft = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.RenderAnnotation.Rectangle.prototype.hasLeft = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.RenderAnnotation.Rectangle.prototype.getTop = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 2, 0);
  }, proto.mediapipe.RenderAnnotation.Rectangle.prototype.setTop = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.RenderAnnotation.Rectangle.prototype.clearTop = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.RenderAnnotation.Rectangle.prototype.hasTop = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.RenderAnnotation.Rectangle.prototype.getRight = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 3, 0);
  }, proto.mediapipe.RenderAnnotation.Rectangle.prototype.setRight = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.RenderAnnotation.Rectangle.prototype.clearRight = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.RenderAnnotation.Rectangle.prototype.hasRight = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.RenderAnnotation.Rectangle.prototype.getBottom = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 4, 0);
  }, proto.mediapipe.RenderAnnotation.Rectangle.prototype.setBottom = function(e3) {
    return t2.Message.setField(this, 4, e3);
  }, proto.mediapipe.RenderAnnotation.Rectangle.prototype.clearBottom = function() {
    return t2.Message.setField(this, 4, void 0);
  }, proto.mediapipe.RenderAnnotation.Rectangle.prototype.hasBottom = function() {
    return null != t2.Message.getField(this, 4);
  }, proto.mediapipe.RenderAnnotation.Rectangle.prototype.getNormalized = function() {
    return t2.Message.getBooleanFieldWithDefault(this, 5, false);
  }, proto.mediapipe.RenderAnnotation.Rectangle.prototype.setNormalized = function(e3) {
    return t2.Message.setField(this, 5, e3);
  }, proto.mediapipe.RenderAnnotation.Rectangle.prototype.clearNormalized = function() {
    return t2.Message.setField(this, 5, void 0);
  }, proto.mediapipe.RenderAnnotation.Rectangle.prototype.hasNormalized = function() {
    return null != t2.Message.getField(this, 5);
  }, proto.mediapipe.RenderAnnotation.Rectangle.prototype.getRotation = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 6, 0);
  }, proto.mediapipe.RenderAnnotation.Rectangle.prototype.setRotation = function(e3) {
    return t2.Message.setField(this, 6, e3);
  }, proto.mediapipe.RenderAnnotation.Rectangle.prototype.clearRotation = function() {
    return t2.Message.setField(this, 6, void 0);
  }, proto.mediapipe.RenderAnnotation.Rectangle.prototype.hasRotation = function() {
    return null != t2.Message.getField(this, 6);
  }, proto.mediapipe.RenderAnnotation.Rectangle.prototype.getTopLeftThickness = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 7, 0);
  }, proto.mediapipe.RenderAnnotation.Rectangle.prototype.setTopLeftThickness = function(e3) {
    return t2.Message.setField(this, 7, e3);
  }, proto.mediapipe.RenderAnnotation.Rectangle.prototype.clearTopLeftThickness = function() {
    return t2.Message.setField(this, 7, void 0);
  }, proto.mediapipe.RenderAnnotation.Rectangle.prototype.hasTopLeftThickness = function() {
    return null != t2.Message.getField(this, 7);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.RenderAnnotation.FilledRectangle.prototype.toObject = function(e3) {
    return proto.mediapipe.RenderAnnotation.FilledRectangle.toObject(e3, this);
  }, proto.mediapipe.RenderAnnotation.FilledRectangle.toObject = function(e3, t3) {
    var r3, o3 = { rectangle: (r3 = t3.getRectangle()) && proto.mediapipe.RenderAnnotation.Rectangle.toObject(e3, r3), fillColor: (r3 = t3.getFillColor()) && i3.Color.toObject(e3, r3) };
    return e3 && (o3.$jspbMessageInstance = t3), o3;
  }), proto.mediapipe.RenderAnnotation.FilledRectangle.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.RenderAnnotation.FilledRectangle();
    return proto.mediapipe.RenderAnnotation.FilledRectangle.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.RenderAnnotation.FilledRectangle.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new proto.mediapipe.RenderAnnotation.Rectangle();
          t3.readMessage(r3, proto.mediapipe.RenderAnnotation.Rectangle.deserializeBinaryFromReader), e3.setRectangle(r3);
          break;
        case 2:
          r3 = new i3.Color();
          t3.readMessage(r3, i3.Color.deserializeBinaryFromReader), e3.setFillColor(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.RenderAnnotation.FilledRectangle.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.RenderAnnotation.FilledRectangle.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.RenderAnnotation.FilledRectangle.serializeBinaryToWriter = function(e3, t3) {
    var r3 = void 0;
    null != (r3 = e3.getRectangle()) && t3.writeMessage(1, r3, proto.mediapipe.RenderAnnotation.Rectangle.serializeBinaryToWriter), null != (r3 = e3.getFillColor()) && t3.writeMessage(2, r3, i3.Color.serializeBinaryToWriter);
  }, proto.mediapipe.RenderAnnotation.FilledRectangle.prototype.getRectangle = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.RenderAnnotation.Rectangle, 1);
  }, proto.mediapipe.RenderAnnotation.FilledRectangle.prototype.setRectangle = function(e3) {
    return t2.Message.setWrapperField(this, 1, e3);
  }, proto.mediapipe.RenderAnnotation.FilledRectangle.prototype.clearRectangle = function() {
    return this.setRectangle(void 0);
  }, proto.mediapipe.RenderAnnotation.FilledRectangle.prototype.hasRectangle = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.RenderAnnotation.FilledRectangle.prototype.getFillColor = function() {
    return t2.Message.getWrapperField(this, i3.Color, 2);
  }, proto.mediapipe.RenderAnnotation.FilledRectangle.prototype.setFillColor = function(e3) {
    return t2.Message.setWrapperField(this, 2, e3);
  }, proto.mediapipe.RenderAnnotation.FilledRectangle.prototype.clearFillColor = function() {
    return this.setFillColor(void 0);
  }, proto.mediapipe.RenderAnnotation.FilledRectangle.prototype.hasFillColor = function() {
    return null != t2.Message.getField(this, 2);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.RenderAnnotation.RoundedRectangle.prototype.toObject = function(e3) {
    return proto.mediapipe.RenderAnnotation.RoundedRectangle.toObject(e3, this);
  }, proto.mediapipe.RenderAnnotation.RoundedRectangle.toObject = function(e3, r3) {
    var o3, i4 = { rectangle: (o3 = r3.getRectangle()) && proto.mediapipe.RenderAnnotation.Rectangle.toObject(e3, o3), cornerRadius: t2.Message.getFieldWithDefault(r3, 2, 0), lineType: t2.Message.getFieldWithDefault(r3, 3, 4) };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.RenderAnnotation.RoundedRectangle.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.RenderAnnotation.RoundedRectangle();
    return proto.mediapipe.RenderAnnotation.RoundedRectangle.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.RenderAnnotation.RoundedRectangle.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new proto.mediapipe.RenderAnnotation.Rectangle();
          t3.readMessage(r3, proto.mediapipe.RenderAnnotation.Rectangle.deserializeBinaryFromReader), e3.setRectangle(r3);
          break;
        case 2:
          r3 = t3.readInt32();
          e3.setCornerRadius(r3);
          break;
        case 3:
          r3 = t3.readInt32();
          e3.setLineType(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.RenderAnnotation.RoundedRectangle.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.RenderAnnotation.RoundedRectangle.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.RenderAnnotation.RoundedRectangle.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = e3.getRectangle()) && r3.writeMessage(1, o3, proto.mediapipe.RenderAnnotation.Rectangle.serializeBinaryToWriter), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeInt32(2, o3), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeInt32(3, o3);
  }, proto.mediapipe.RenderAnnotation.RoundedRectangle.prototype.getRectangle = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.RenderAnnotation.Rectangle, 1);
  }, proto.mediapipe.RenderAnnotation.RoundedRectangle.prototype.setRectangle = function(e3) {
    return t2.Message.setWrapperField(this, 1, e3);
  }, proto.mediapipe.RenderAnnotation.RoundedRectangle.prototype.clearRectangle = function() {
    return this.setRectangle(void 0);
  }, proto.mediapipe.RenderAnnotation.RoundedRectangle.prototype.hasRectangle = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.RenderAnnotation.RoundedRectangle.prototype.getCornerRadius = function() {
    return t2.Message.getFieldWithDefault(this, 2, 0);
  }, proto.mediapipe.RenderAnnotation.RoundedRectangle.prototype.setCornerRadius = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.RenderAnnotation.RoundedRectangle.prototype.clearCornerRadius = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.RenderAnnotation.RoundedRectangle.prototype.hasCornerRadius = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.RenderAnnotation.RoundedRectangle.prototype.getLineType = function() {
    return t2.Message.getFieldWithDefault(this, 3, 4);
  }, proto.mediapipe.RenderAnnotation.RoundedRectangle.prototype.setLineType = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.RenderAnnotation.RoundedRectangle.prototype.clearLineType = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.RenderAnnotation.RoundedRectangle.prototype.hasLineType = function() {
    return null != t2.Message.getField(this, 3);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.RenderAnnotation.FilledRoundedRectangle.prototype.toObject = function(e3) {
    return proto.mediapipe.RenderAnnotation.FilledRoundedRectangle.toObject(e3, this);
  }, proto.mediapipe.RenderAnnotation.FilledRoundedRectangle.toObject = function(e3, t3) {
    var r3, o3 = { roundedRectangle: (r3 = t3.getRoundedRectangle()) && proto.mediapipe.RenderAnnotation.RoundedRectangle.toObject(e3, r3), fillColor: (r3 = t3.getFillColor()) && i3.Color.toObject(e3, r3) };
    return e3 && (o3.$jspbMessageInstance = t3), o3;
  }), proto.mediapipe.RenderAnnotation.FilledRoundedRectangle.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.RenderAnnotation.FilledRoundedRectangle();
    return proto.mediapipe.RenderAnnotation.FilledRoundedRectangle.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.RenderAnnotation.FilledRoundedRectangle.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new proto.mediapipe.RenderAnnotation.RoundedRectangle();
          t3.readMessage(r3, proto.mediapipe.RenderAnnotation.RoundedRectangle.deserializeBinaryFromReader), e3.setRoundedRectangle(r3);
          break;
        case 2:
          r3 = new i3.Color();
          t3.readMessage(r3, i3.Color.deserializeBinaryFromReader), e3.setFillColor(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.RenderAnnotation.FilledRoundedRectangle.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.RenderAnnotation.FilledRoundedRectangle.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.RenderAnnotation.FilledRoundedRectangle.serializeBinaryToWriter = function(e3, t3) {
    var r3 = void 0;
    null != (r3 = e3.getRoundedRectangle()) && t3.writeMessage(1, r3, proto.mediapipe.RenderAnnotation.RoundedRectangle.serializeBinaryToWriter), null != (r3 = e3.getFillColor()) && t3.writeMessage(2, r3, i3.Color.serializeBinaryToWriter);
  }, proto.mediapipe.RenderAnnotation.FilledRoundedRectangle.prototype.getRoundedRectangle = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.RenderAnnotation.RoundedRectangle, 1);
  }, proto.mediapipe.RenderAnnotation.FilledRoundedRectangle.prototype.setRoundedRectangle = function(e3) {
    return t2.Message.setWrapperField(this, 1, e3);
  }, proto.mediapipe.RenderAnnotation.FilledRoundedRectangle.prototype.clearRoundedRectangle = function() {
    return this.setRoundedRectangle(void 0);
  }, proto.mediapipe.RenderAnnotation.FilledRoundedRectangle.prototype.hasRoundedRectangle = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.RenderAnnotation.FilledRoundedRectangle.prototype.getFillColor = function() {
    return t2.Message.getWrapperField(this, i3.Color, 2);
  }, proto.mediapipe.RenderAnnotation.FilledRoundedRectangle.prototype.setFillColor = function(e3) {
    return t2.Message.setWrapperField(this, 2, e3);
  }, proto.mediapipe.RenderAnnotation.FilledRoundedRectangle.prototype.clearFillColor = function() {
    return this.setFillColor(void 0);
  }, proto.mediapipe.RenderAnnotation.FilledRoundedRectangle.prototype.hasFillColor = function() {
    return null != t2.Message.getField(this, 2);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.RenderAnnotation.Oval.prototype.toObject = function(e3) {
    return proto.mediapipe.RenderAnnotation.Oval.toObject(e3, this);
  }, proto.mediapipe.RenderAnnotation.Oval.toObject = function(e3, t3) {
    var r3, o3 = { rectangle: (r3 = t3.getRectangle()) && proto.mediapipe.RenderAnnotation.Rectangle.toObject(e3, r3) };
    return e3 && (o3.$jspbMessageInstance = t3), o3;
  }), proto.mediapipe.RenderAnnotation.Oval.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.RenderAnnotation.Oval();
    return proto.mediapipe.RenderAnnotation.Oval.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.RenderAnnotation.Oval.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      if (1 === t3.getFieldNumber()) {
        var r3 = new proto.mediapipe.RenderAnnotation.Rectangle();
        t3.readMessage(r3, proto.mediapipe.RenderAnnotation.Rectangle.deserializeBinaryFromReader), e3.setRectangle(r3);
      } else
        t3.skipField();
    }
    return e3;
  }, proto.mediapipe.RenderAnnotation.Oval.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.RenderAnnotation.Oval.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.RenderAnnotation.Oval.serializeBinaryToWriter = function(e3, t3) {
    var r3;
    null != (r3 = e3.getRectangle()) && t3.writeMessage(1, r3, proto.mediapipe.RenderAnnotation.Rectangle.serializeBinaryToWriter);
  }, proto.mediapipe.RenderAnnotation.Oval.prototype.getRectangle = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.RenderAnnotation.Rectangle, 1);
  }, proto.mediapipe.RenderAnnotation.Oval.prototype.setRectangle = function(e3) {
    return t2.Message.setWrapperField(this, 1, e3);
  }, proto.mediapipe.RenderAnnotation.Oval.prototype.clearRectangle = function() {
    return this.setRectangle(void 0);
  }, proto.mediapipe.RenderAnnotation.Oval.prototype.hasRectangle = function() {
    return null != t2.Message.getField(this, 1);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.RenderAnnotation.FilledOval.prototype.toObject = function(e3) {
    return proto.mediapipe.RenderAnnotation.FilledOval.toObject(e3, this);
  }, proto.mediapipe.RenderAnnotation.FilledOval.toObject = function(e3, t3) {
    var r3, o3 = { oval: (r3 = t3.getOval()) && proto.mediapipe.RenderAnnotation.Oval.toObject(e3, r3), fillColor: (r3 = t3.getFillColor()) && i3.Color.toObject(e3, r3) };
    return e3 && (o3.$jspbMessageInstance = t3), o3;
  }), proto.mediapipe.RenderAnnotation.FilledOval.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.RenderAnnotation.FilledOval();
    return proto.mediapipe.RenderAnnotation.FilledOval.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.RenderAnnotation.FilledOval.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new proto.mediapipe.RenderAnnotation.Oval();
          t3.readMessage(r3, proto.mediapipe.RenderAnnotation.Oval.deserializeBinaryFromReader), e3.setOval(r3);
          break;
        case 2:
          r3 = new i3.Color();
          t3.readMessage(r3, i3.Color.deserializeBinaryFromReader), e3.setFillColor(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.RenderAnnotation.FilledOval.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.RenderAnnotation.FilledOval.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.RenderAnnotation.FilledOval.serializeBinaryToWriter = function(e3, t3) {
    var r3 = void 0;
    null != (r3 = e3.getOval()) && t3.writeMessage(1, r3, proto.mediapipe.RenderAnnotation.Oval.serializeBinaryToWriter), null != (r3 = e3.getFillColor()) && t3.writeMessage(2, r3, i3.Color.serializeBinaryToWriter);
  }, proto.mediapipe.RenderAnnotation.FilledOval.prototype.getOval = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.RenderAnnotation.Oval, 1);
  }, proto.mediapipe.RenderAnnotation.FilledOval.prototype.setOval = function(e3) {
    return t2.Message.setWrapperField(this, 1, e3);
  }, proto.mediapipe.RenderAnnotation.FilledOval.prototype.clearOval = function() {
    return this.setOval(void 0);
  }, proto.mediapipe.RenderAnnotation.FilledOval.prototype.hasOval = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.RenderAnnotation.FilledOval.prototype.getFillColor = function() {
    return t2.Message.getWrapperField(this, i3.Color, 2);
  }, proto.mediapipe.RenderAnnotation.FilledOval.prototype.setFillColor = function(e3) {
    return t2.Message.setWrapperField(this, 2, e3);
  }, proto.mediapipe.RenderAnnotation.FilledOval.prototype.clearFillColor = function() {
    return this.setFillColor(void 0);
  }, proto.mediapipe.RenderAnnotation.FilledOval.prototype.hasFillColor = function() {
    return null != t2.Message.getField(this, 2);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.RenderAnnotation.Point.prototype.toObject = function(e3) {
    return proto.mediapipe.RenderAnnotation.Point.toObject(e3, this);
  }, proto.mediapipe.RenderAnnotation.Point.toObject = function(e3, r3) {
    var o3, i4 = { x: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 1)) ? void 0 : o3, y: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 2)) ? void 0 : o3, normalized: t2.Message.getBooleanFieldWithDefault(r3, 3, false) };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.RenderAnnotation.Point.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.RenderAnnotation.Point();
    return proto.mediapipe.RenderAnnotation.Point.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.RenderAnnotation.Point.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readDouble();
          e3.setX(r3);
          break;
        case 2:
          r3 = t3.readDouble();
          e3.setY(r3);
          break;
        case 3:
          r3 = t3.readBool();
          e3.setNormalized(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.RenderAnnotation.Point.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.RenderAnnotation.Point.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.RenderAnnotation.Point.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeDouble(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeDouble(2, o3), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeBool(3, o3);
  }, proto.mediapipe.RenderAnnotation.Point.prototype.getX = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 1, 0);
  }, proto.mediapipe.RenderAnnotation.Point.prototype.setX = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.RenderAnnotation.Point.prototype.clearX = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.RenderAnnotation.Point.prototype.hasX = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.RenderAnnotation.Point.prototype.getY = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 2, 0);
  }, proto.mediapipe.RenderAnnotation.Point.prototype.setY = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.RenderAnnotation.Point.prototype.clearY = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.RenderAnnotation.Point.prototype.hasY = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.RenderAnnotation.Point.prototype.getNormalized = function() {
    return t2.Message.getBooleanFieldWithDefault(this, 3, false);
  }, proto.mediapipe.RenderAnnotation.Point.prototype.setNormalized = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.RenderAnnotation.Point.prototype.clearNormalized = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.RenderAnnotation.Point.prototype.hasNormalized = function() {
    return null != t2.Message.getField(this, 3);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.RenderAnnotation.Line.prototype.toObject = function(e3) {
    return proto.mediapipe.RenderAnnotation.Line.toObject(e3, this);
  }, proto.mediapipe.RenderAnnotation.Line.toObject = function(e3, r3) {
    var o3, i4 = { xStart: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 1)) ? void 0 : o3, yStart: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 2)) ? void 0 : o3, xEnd: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 3)) ? void 0 : o3, yEnd: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 4)) ? void 0 : o3, normalized: t2.Message.getBooleanFieldWithDefault(r3, 5, false), lineType: t2.Message.getFieldWithDefault(r3, 6, 1) };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.RenderAnnotation.Line.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.RenderAnnotation.Line();
    return proto.mediapipe.RenderAnnotation.Line.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.RenderAnnotation.Line.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readDouble();
          e3.setXStart(r3);
          break;
        case 2:
          r3 = t3.readDouble();
          e3.setYStart(r3);
          break;
        case 3:
          r3 = t3.readDouble();
          e3.setXEnd(r3);
          break;
        case 4:
          r3 = t3.readDouble();
          e3.setYEnd(r3);
          break;
        case 5:
          r3 = t3.readBool();
          e3.setNormalized(r3);
          break;
        case 6:
          r3 = t3.readEnum();
          e3.setLineType(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.RenderAnnotation.Line.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.RenderAnnotation.Line.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.RenderAnnotation.Line.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeDouble(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeDouble(2, o3), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeDouble(3, o3), null != (o3 = t2.Message.getField(e3, 4)) && r3.writeDouble(4, o3), null != (o3 = t2.Message.getField(e3, 5)) && r3.writeBool(5, o3), null != (o3 = t2.Message.getField(e3, 6)) && r3.writeEnum(6, o3);
  }, proto.mediapipe.RenderAnnotation.Line.LineType = { UNKNOWN: 0, SOLID: 1, DASHED: 2 }, proto.mediapipe.RenderAnnotation.Line.prototype.getXStart = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 1, 0);
  }, proto.mediapipe.RenderAnnotation.Line.prototype.setXStart = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.RenderAnnotation.Line.prototype.clearXStart = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.RenderAnnotation.Line.prototype.hasXStart = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.RenderAnnotation.Line.prototype.getYStart = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 2, 0);
  }, proto.mediapipe.RenderAnnotation.Line.prototype.setYStart = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.RenderAnnotation.Line.prototype.clearYStart = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.RenderAnnotation.Line.prototype.hasYStart = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.RenderAnnotation.Line.prototype.getXEnd = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 3, 0);
  }, proto.mediapipe.RenderAnnotation.Line.prototype.setXEnd = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.RenderAnnotation.Line.prototype.clearXEnd = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.RenderAnnotation.Line.prototype.hasXEnd = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.RenderAnnotation.Line.prototype.getYEnd = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 4, 0);
  }, proto.mediapipe.RenderAnnotation.Line.prototype.setYEnd = function(e3) {
    return t2.Message.setField(this, 4, e3);
  }, proto.mediapipe.RenderAnnotation.Line.prototype.clearYEnd = function() {
    return t2.Message.setField(this, 4, void 0);
  }, proto.mediapipe.RenderAnnotation.Line.prototype.hasYEnd = function() {
    return null != t2.Message.getField(this, 4);
  }, proto.mediapipe.RenderAnnotation.Line.prototype.getNormalized = function() {
    return t2.Message.getBooleanFieldWithDefault(this, 5, false);
  }, proto.mediapipe.RenderAnnotation.Line.prototype.setNormalized = function(e3) {
    return t2.Message.setField(this, 5, e3);
  }, proto.mediapipe.RenderAnnotation.Line.prototype.clearNormalized = function() {
    return t2.Message.setField(this, 5, void 0);
  }, proto.mediapipe.RenderAnnotation.Line.prototype.hasNormalized = function() {
    return null != t2.Message.getField(this, 5);
  }, proto.mediapipe.RenderAnnotation.Line.prototype.getLineType = function() {
    return t2.Message.getFieldWithDefault(this, 6, 1);
  }, proto.mediapipe.RenderAnnotation.Line.prototype.setLineType = function(e3) {
    return t2.Message.setField(this, 6, e3);
  }, proto.mediapipe.RenderAnnotation.Line.prototype.clearLineType = function() {
    return t2.Message.setField(this, 6, void 0);
  }, proto.mediapipe.RenderAnnotation.Line.prototype.hasLineType = function() {
    return null != t2.Message.getField(this, 6);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.RenderAnnotation.GradientLine.prototype.toObject = function(e3) {
    return proto.mediapipe.RenderAnnotation.GradientLine.toObject(e3, this);
  }, proto.mediapipe.RenderAnnotation.GradientLine.toObject = function(e3, r3) {
    var o3, a3 = { xStart: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 1)) ? void 0 : o3, yStart: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 2)) ? void 0 : o3, xEnd: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 3)) ? void 0 : o3, yEnd: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 4)) ? void 0 : o3, normalized: t2.Message.getBooleanFieldWithDefault(r3, 5, false), color1: (o3 = r3.getColor1()) && i3.Color.toObject(e3, o3), color2: (o3 = r3.getColor2()) && i3.Color.toObject(e3, o3) };
    return e3 && (a3.$jspbMessageInstance = r3), a3;
  }), proto.mediapipe.RenderAnnotation.GradientLine.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.RenderAnnotation.GradientLine();
    return proto.mediapipe.RenderAnnotation.GradientLine.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.RenderAnnotation.GradientLine.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readDouble();
          e3.setXStart(r3);
          break;
        case 2:
          r3 = t3.readDouble();
          e3.setYStart(r3);
          break;
        case 3:
          r3 = t3.readDouble();
          e3.setXEnd(r3);
          break;
        case 4:
          r3 = t3.readDouble();
          e3.setYEnd(r3);
          break;
        case 5:
          r3 = t3.readBool();
          e3.setNormalized(r3);
          break;
        case 6:
          r3 = new i3.Color();
          t3.readMessage(r3, i3.Color.deserializeBinaryFromReader), e3.setColor1(r3);
          break;
        case 7:
          r3 = new i3.Color();
          t3.readMessage(r3, i3.Color.deserializeBinaryFromReader), e3.setColor2(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.RenderAnnotation.GradientLine.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.RenderAnnotation.GradientLine.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.RenderAnnotation.GradientLine.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeDouble(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeDouble(2, o3), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeDouble(3, o3), null != (o3 = t2.Message.getField(e3, 4)) && r3.writeDouble(4, o3), null != (o3 = t2.Message.getField(e3, 5)) && r3.writeBool(5, o3), null != (o3 = e3.getColor1()) && r3.writeMessage(6, o3, i3.Color.serializeBinaryToWriter), null != (o3 = e3.getColor2()) && r3.writeMessage(7, o3, i3.Color.serializeBinaryToWriter);
  }, proto.mediapipe.RenderAnnotation.GradientLine.prototype.getXStart = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 1, 0);
  }, proto.mediapipe.RenderAnnotation.GradientLine.prototype.setXStart = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.RenderAnnotation.GradientLine.prototype.clearXStart = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.RenderAnnotation.GradientLine.prototype.hasXStart = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.RenderAnnotation.GradientLine.prototype.getYStart = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 2, 0);
  }, proto.mediapipe.RenderAnnotation.GradientLine.prototype.setYStart = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.RenderAnnotation.GradientLine.prototype.clearYStart = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.RenderAnnotation.GradientLine.prototype.hasYStart = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.RenderAnnotation.GradientLine.prototype.getXEnd = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 3, 0);
  }, proto.mediapipe.RenderAnnotation.GradientLine.prototype.setXEnd = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.RenderAnnotation.GradientLine.prototype.clearXEnd = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.RenderAnnotation.GradientLine.prototype.hasXEnd = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.RenderAnnotation.GradientLine.prototype.getYEnd = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 4, 0);
  }, proto.mediapipe.RenderAnnotation.GradientLine.prototype.setYEnd = function(e3) {
    return t2.Message.setField(this, 4, e3);
  }, proto.mediapipe.RenderAnnotation.GradientLine.prototype.clearYEnd = function() {
    return t2.Message.setField(this, 4, void 0);
  }, proto.mediapipe.RenderAnnotation.GradientLine.prototype.hasYEnd = function() {
    return null != t2.Message.getField(this, 4);
  }, proto.mediapipe.RenderAnnotation.GradientLine.prototype.getNormalized = function() {
    return t2.Message.getBooleanFieldWithDefault(this, 5, false);
  }, proto.mediapipe.RenderAnnotation.GradientLine.prototype.setNormalized = function(e3) {
    return t2.Message.setField(this, 5, e3);
  }, proto.mediapipe.RenderAnnotation.GradientLine.prototype.clearNormalized = function() {
    return t2.Message.setField(this, 5, void 0);
  }, proto.mediapipe.RenderAnnotation.GradientLine.prototype.hasNormalized = function() {
    return null != t2.Message.getField(this, 5);
  }, proto.mediapipe.RenderAnnotation.GradientLine.prototype.getColor1 = function() {
    return t2.Message.getWrapperField(this, i3.Color, 6);
  }, proto.mediapipe.RenderAnnotation.GradientLine.prototype.setColor1 = function(e3) {
    return t2.Message.setWrapperField(this, 6, e3);
  }, proto.mediapipe.RenderAnnotation.GradientLine.prototype.clearColor1 = function() {
    return this.setColor1(void 0);
  }, proto.mediapipe.RenderAnnotation.GradientLine.prototype.hasColor1 = function() {
    return null != t2.Message.getField(this, 6);
  }, proto.mediapipe.RenderAnnotation.GradientLine.prototype.getColor2 = function() {
    return t2.Message.getWrapperField(this, i3.Color, 7);
  }, proto.mediapipe.RenderAnnotation.GradientLine.prototype.setColor2 = function(e3) {
    return t2.Message.setWrapperField(this, 7, e3);
  }, proto.mediapipe.RenderAnnotation.GradientLine.prototype.clearColor2 = function() {
    return this.setColor2(void 0);
  }, proto.mediapipe.RenderAnnotation.GradientLine.prototype.hasColor2 = function() {
    return null != t2.Message.getField(this, 7);
  }, proto.mediapipe.RenderAnnotation.Scribble.repeatedFields_ = [1], t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.RenderAnnotation.Scribble.prototype.toObject = function(e3) {
    return proto.mediapipe.RenderAnnotation.Scribble.toObject(e3, this);
  }, proto.mediapipe.RenderAnnotation.Scribble.toObject = function(e3, r3) {
    var o3 = { pointList: t2.Message.toObjectList(r3.getPointList(), proto.mediapipe.RenderAnnotation.Point.toObject, e3) };
    return e3 && (o3.$jspbMessageInstance = r3), o3;
  }), proto.mediapipe.RenderAnnotation.Scribble.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.RenderAnnotation.Scribble();
    return proto.mediapipe.RenderAnnotation.Scribble.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.RenderAnnotation.Scribble.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      if (1 === t3.getFieldNumber()) {
        var r3 = new proto.mediapipe.RenderAnnotation.Point();
        t3.readMessage(r3, proto.mediapipe.RenderAnnotation.Point.deserializeBinaryFromReader), e3.addPoint(r3);
      } else
        t3.skipField();
    }
    return e3;
  }, proto.mediapipe.RenderAnnotation.Scribble.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.RenderAnnotation.Scribble.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.RenderAnnotation.Scribble.serializeBinaryToWriter = function(e3, t3) {
    var r3;
    (r3 = e3.getPointList()).length > 0 && t3.writeRepeatedMessage(1, r3, proto.mediapipe.RenderAnnotation.Point.serializeBinaryToWriter);
  }, proto.mediapipe.RenderAnnotation.Scribble.prototype.getPointList = function() {
    return t2.Message.getRepeatedWrapperField(this, proto.mediapipe.RenderAnnotation.Point, 1);
  }, proto.mediapipe.RenderAnnotation.Scribble.prototype.setPointList = function(e3) {
    return t2.Message.setRepeatedWrapperField(this, 1, e3);
  }, proto.mediapipe.RenderAnnotation.Scribble.prototype.addPoint = function(e3, r3) {
    return t2.Message.addToRepeatedWrapperField(this, 1, e3, proto.mediapipe.RenderAnnotation.Point, r3);
  }, proto.mediapipe.RenderAnnotation.Scribble.prototype.clearPointList = function() {
    return this.setPointList([]);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.RenderAnnotation.Arrow.prototype.toObject = function(e3) {
    return proto.mediapipe.RenderAnnotation.Arrow.toObject(e3, this);
  }, proto.mediapipe.RenderAnnotation.Arrow.toObject = function(e3, r3) {
    var o3, i4 = { xStart: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 1)) ? void 0 : o3, yStart: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 2)) ? void 0 : o3, xEnd: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 3)) ? void 0 : o3, yEnd: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 4)) ? void 0 : o3, normalized: t2.Message.getBooleanFieldWithDefault(r3, 5, false) };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.RenderAnnotation.Arrow.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.RenderAnnotation.Arrow();
    return proto.mediapipe.RenderAnnotation.Arrow.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.RenderAnnotation.Arrow.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readDouble();
          e3.setXStart(r3);
          break;
        case 2:
          r3 = t3.readDouble();
          e3.setYStart(r3);
          break;
        case 3:
          r3 = t3.readDouble();
          e3.setXEnd(r3);
          break;
        case 4:
          r3 = t3.readDouble();
          e3.setYEnd(r3);
          break;
        case 5:
          r3 = t3.readBool();
          e3.setNormalized(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.RenderAnnotation.Arrow.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.RenderAnnotation.Arrow.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.RenderAnnotation.Arrow.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeDouble(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeDouble(2, o3), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeDouble(3, o3), null != (o3 = t2.Message.getField(e3, 4)) && r3.writeDouble(4, o3), null != (o3 = t2.Message.getField(e3, 5)) && r3.writeBool(5, o3);
  }, proto.mediapipe.RenderAnnotation.Arrow.prototype.getXStart = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 1, 0);
  }, proto.mediapipe.RenderAnnotation.Arrow.prototype.setXStart = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.RenderAnnotation.Arrow.prototype.clearXStart = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.RenderAnnotation.Arrow.prototype.hasXStart = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.RenderAnnotation.Arrow.prototype.getYStart = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 2, 0);
  }, proto.mediapipe.RenderAnnotation.Arrow.prototype.setYStart = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.RenderAnnotation.Arrow.prototype.clearYStart = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.RenderAnnotation.Arrow.prototype.hasYStart = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.RenderAnnotation.Arrow.prototype.getXEnd = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 3, 0);
  }, proto.mediapipe.RenderAnnotation.Arrow.prototype.setXEnd = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.RenderAnnotation.Arrow.prototype.clearXEnd = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.RenderAnnotation.Arrow.prototype.hasXEnd = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.RenderAnnotation.Arrow.prototype.getYEnd = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 4, 0);
  }, proto.mediapipe.RenderAnnotation.Arrow.prototype.setYEnd = function(e3) {
    return t2.Message.setField(this, 4, e3);
  }, proto.mediapipe.RenderAnnotation.Arrow.prototype.clearYEnd = function() {
    return t2.Message.setField(this, 4, void 0);
  }, proto.mediapipe.RenderAnnotation.Arrow.prototype.hasYEnd = function() {
    return null != t2.Message.getField(this, 4);
  }, proto.mediapipe.RenderAnnotation.Arrow.prototype.getNormalized = function() {
    return t2.Message.getBooleanFieldWithDefault(this, 5, false);
  }, proto.mediapipe.RenderAnnotation.Arrow.prototype.setNormalized = function(e3) {
    return t2.Message.setField(this, 5, e3);
  }, proto.mediapipe.RenderAnnotation.Arrow.prototype.clearNormalized = function() {
    return t2.Message.setField(this, 5, void 0);
  }, proto.mediapipe.RenderAnnotation.Arrow.prototype.hasNormalized = function() {
    return null != t2.Message.getField(this, 5);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.RenderAnnotation.Text.prototype.toObject = function(e3) {
    return proto.mediapipe.RenderAnnotation.Text.toObject(e3, this);
  }, proto.mediapipe.RenderAnnotation.Text.toObject = function(e3, r3) {
    var o3, a3 = { displayText: null == (o3 = t2.Message.getField(r3, 1)) ? void 0 : o3, left: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 2)) ? void 0 : o3, baseline: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 3)) ? void 0 : o3, fontHeight: t2.Message.getFloatingPointFieldWithDefault(r3, 4, 8), normalized: t2.Message.getBooleanFieldWithDefault(r3, 5, false), fontFace: t2.Message.getFieldWithDefault(r3, 6, 0), centerHorizontally: t2.Message.getBooleanFieldWithDefault(r3, 7, false), centerVertically: t2.Message.getBooleanFieldWithDefault(r3, 8, false), outlineThickness: t2.Message.getFloatingPointFieldWithDefault(r3, 11, 0), outlineColor: (o3 = r3.getOutlineColor()) && i3.Color.toObject(e3, o3) };
    return e3 && (a3.$jspbMessageInstance = r3), a3;
  }), proto.mediapipe.RenderAnnotation.Text.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.RenderAnnotation.Text();
    return proto.mediapipe.RenderAnnotation.Text.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.RenderAnnotation.Text.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readString();
          e3.setDisplayText(r3);
          break;
        case 2:
          r3 = t3.readDouble();
          e3.setLeft(r3);
          break;
        case 3:
          r3 = t3.readDouble();
          e3.setBaseline(r3);
          break;
        case 4:
          r3 = t3.readDouble();
          e3.setFontHeight(r3);
          break;
        case 5:
          r3 = t3.readBool();
          e3.setNormalized(r3);
          break;
        case 6:
          r3 = t3.readInt32();
          e3.setFontFace(r3);
          break;
        case 7:
          r3 = t3.readBool();
          e3.setCenterHorizontally(r3);
          break;
        case 8:
          r3 = t3.readBool();
          e3.setCenterVertically(r3);
          break;
        case 11:
          r3 = t3.readDouble();
          e3.setOutlineThickness(r3);
          break;
        case 12:
          r3 = new i3.Color();
          t3.readMessage(r3, i3.Color.deserializeBinaryFromReader), e3.setOutlineColor(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.RenderAnnotation.Text.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.RenderAnnotation.Text.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.RenderAnnotation.Text.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeString(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeDouble(2, o3), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeDouble(3, o3), null != (o3 = t2.Message.getField(e3, 4)) && r3.writeDouble(4, o3), null != (o3 = t2.Message.getField(e3, 5)) && r3.writeBool(5, o3), null != (o3 = t2.Message.getField(e3, 6)) && r3.writeInt32(6, o3), null != (o3 = t2.Message.getField(e3, 7)) && r3.writeBool(7, o3), null != (o3 = t2.Message.getField(e3, 8)) && r3.writeBool(8, o3), null != (o3 = t2.Message.getField(e3, 11)) && r3.writeDouble(11, o3), null != (o3 = e3.getOutlineColor()) && r3.writeMessage(12, o3, i3.Color.serializeBinaryToWriter);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.getDisplayText = function() {
    return t2.Message.getFieldWithDefault(this, 1, "");
  }, proto.mediapipe.RenderAnnotation.Text.prototype.setDisplayText = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.clearDisplayText = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.hasDisplayText = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.getLeft = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 2, 0);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.setLeft = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.clearLeft = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.hasLeft = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.getBaseline = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 3, 0);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.setBaseline = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.clearBaseline = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.hasBaseline = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.getFontHeight = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 4, 8);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.setFontHeight = function(e3) {
    return t2.Message.setField(this, 4, e3);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.clearFontHeight = function() {
    return t2.Message.setField(this, 4, void 0);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.hasFontHeight = function() {
    return null != t2.Message.getField(this, 4);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.getNormalized = function() {
    return t2.Message.getBooleanFieldWithDefault(this, 5, false);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.setNormalized = function(e3) {
    return t2.Message.setField(this, 5, e3);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.clearNormalized = function() {
    return t2.Message.setField(this, 5, void 0);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.hasNormalized = function() {
    return null != t2.Message.getField(this, 5);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.getFontFace = function() {
    return t2.Message.getFieldWithDefault(this, 6, 0);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.setFontFace = function(e3) {
    return t2.Message.setField(this, 6, e3);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.clearFontFace = function() {
    return t2.Message.setField(this, 6, void 0);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.hasFontFace = function() {
    return null != t2.Message.getField(this, 6);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.getCenterHorizontally = function() {
    return t2.Message.getBooleanFieldWithDefault(this, 7, false);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.setCenterHorizontally = function(e3) {
    return t2.Message.setField(this, 7, e3);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.clearCenterHorizontally = function() {
    return t2.Message.setField(this, 7, void 0);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.hasCenterHorizontally = function() {
    return null != t2.Message.getField(this, 7);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.getCenterVertically = function() {
    return t2.Message.getBooleanFieldWithDefault(this, 8, false);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.setCenterVertically = function(e3) {
    return t2.Message.setField(this, 8, e3);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.clearCenterVertically = function() {
    return t2.Message.setField(this, 8, void 0);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.hasCenterVertically = function() {
    return null != t2.Message.getField(this, 8);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.getOutlineThickness = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 11, 0);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.setOutlineThickness = function(e3) {
    return t2.Message.setField(this, 11, e3);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.clearOutlineThickness = function() {
    return t2.Message.setField(this, 11, void 0);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.hasOutlineThickness = function() {
    return null != t2.Message.getField(this, 11);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.getOutlineColor = function() {
    return t2.Message.getWrapperField(this, i3.Color, 12);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.setOutlineColor = function(e3) {
    return t2.Message.setWrapperField(this, 12, e3);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.clearOutlineColor = function() {
    return this.setOutlineColor(void 0);
  }, proto.mediapipe.RenderAnnotation.Text.prototype.hasOutlineColor = function() {
    return null != t2.Message.getField(this, 12);
  }, proto.mediapipe.RenderAnnotation.prototype.getRectangle = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.RenderAnnotation.Rectangle, 1);
  }, proto.mediapipe.RenderAnnotation.prototype.setRectangle = function(e3) {
    return t2.Message.setOneofWrapperField(this, 1, proto.mediapipe.RenderAnnotation.oneofGroups_[0], e3);
  }, proto.mediapipe.RenderAnnotation.prototype.clearRectangle = function() {
    return this.setRectangle(void 0);
  }, proto.mediapipe.RenderAnnotation.prototype.hasRectangle = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.RenderAnnotation.prototype.getFilledRectangle = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.RenderAnnotation.FilledRectangle, 2);
  }, proto.mediapipe.RenderAnnotation.prototype.setFilledRectangle = function(e3) {
    return t2.Message.setOneofWrapperField(this, 2, proto.mediapipe.RenderAnnotation.oneofGroups_[0], e3);
  }, proto.mediapipe.RenderAnnotation.prototype.clearFilledRectangle = function() {
    return this.setFilledRectangle(void 0);
  }, proto.mediapipe.RenderAnnotation.prototype.hasFilledRectangle = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.RenderAnnotation.prototype.getOval = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.RenderAnnotation.Oval, 3);
  }, proto.mediapipe.RenderAnnotation.prototype.setOval = function(e3) {
    return t2.Message.setOneofWrapperField(this, 3, proto.mediapipe.RenderAnnotation.oneofGroups_[0], e3);
  }, proto.mediapipe.RenderAnnotation.prototype.clearOval = function() {
    return this.setOval(void 0);
  }, proto.mediapipe.RenderAnnotation.prototype.hasOval = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.RenderAnnotation.prototype.getFilledOval = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.RenderAnnotation.FilledOval, 4);
  }, proto.mediapipe.RenderAnnotation.prototype.setFilledOval = function(e3) {
    return t2.Message.setOneofWrapperField(this, 4, proto.mediapipe.RenderAnnotation.oneofGroups_[0], e3);
  }, proto.mediapipe.RenderAnnotation.prototype.clearFilledOval = function() {
    return this.setFilledOval(void 0);
  }, proto.mediapipe.RenderAnnotation.prototype.hasFilledOval = function() {
    return null != t2.Message.getField(this, 4);
  }, proto.mediapipe.RenderAnnotation.prototype.getPoint = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.RenderAnnotation.Point, 5);
  }, proto.mediapipe.RenderAnnotation.prototype.setPoint = function(e3) {
    return t2.Message.setOneofWrapperField(this, 5, proto.mediapipe.RenderAnnotation.oneofGroups_[0], e3);
  }, proto.mediapipe.RenderAnnotation.prototype.clearPoint = function() {
    return this.setPoint(void 0);
  }, proto.mediapipe.RenderAnnotation.prototype.hasPoint = function() {
    return null != t2.Message.getField(this, 5);
  }, proto.mediapipe.RenderAnnotation.prototype.getLine = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.RenderAnnotation.Line, 6);
  }, proto.mediapipe.RenderAnnotation.prototype.setLine = function(e3) {
    return t2.Message.setOneofWrapperField(this, 6, proto.mediapipe.RenderAnnotation.oneofGroups_[0], e3);
  }, proto.mediapipe.RenderAnnotation.prototype.clearLine = function() {
    return this.setLine(void 0);
  }, proto.mediapipe.RenderAnnotation.prototype.hasLine = function() {
    return null != t2.Message.getField(this, 6);
  }, proto.mediapipe.RenderAnnotation.prototype.getArrow = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.RenderAnnotation.Arrow, 7);
  }, proto.mediapipe.RenderAnnotation.prototype.setArrow = function(e3) {
    return t2.Message.setOneofWrapperField(this, 7, proto.mediapipe.RenderAnnotation.oneofGroups_[0], e3);
  }, proto.mediapipe.RenderAnnotation.prototype.clearArrow = function() {
    return this.setArrow(void 0);
  }, proto.mediapipe.RenderAnnotation.prototype.hasArrow = function() {
    return null != t2.Message.getField(this, 7);
  }, proto.mediapipe.RenderAnnotation.prototype.getText = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.RenderAnnotation.Text, 8);
  }, proto.mediapipe.RenderAnnotation.prototype.setText = function(e3) {
    return t2.Message.setOneofWrapperField(this, 8, proto.mediapipe.RenderAnnotation.oneofGroups_[0], e3);
  }, proto.mediapipe.RenderAnnotation.prototype.clearText = function() {
    return this.setText(void 0);
  }, proto.mediapipe.RenderAnnotation.prototype.hasText = function() {
    return null != t2.Message.getField(this, 8);
  }, proto.mediapipe.RenderAnnotation.prototype.getRoundedRectangle = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.RenderAnnotation.RoundedRectangle, 9);
  }, proto.mediapipe.RenderAnnotation.prototype.setRoundedRectangle = function(e3) {
    return t2.Message.setOneofWrapperField(this, 9, proto.mediapipe.RenderAnnotation.oneofGroups_[0], e3);
  }, proto.mediapipe.RenderAnnotation.prototype.clearRoundedRectangle = function() {
    return this.setRoundedRectangle(void 0);
  }, proto.mediapipe.RenderAnnotation.prototype.hasRoundedRectangle = function() {
    return null != t2.Message.getField(this, 9);
  }, proto.mediapipe.RenderAnnotation.prototype.getFilledRoundedRectangle = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.RenderAnnotation.FilledRoundedRectangle, 10);
  }, proto.mediapipe.RenderAnnotation.prototype.setFilledRoundedRectangle = function(e3) {
    return t2.Message.setOneofWrapperField(this, 10, proto.mediapipe.RenderAnnotation.oneofGroups_[0], e3);
  }, proto.mediapipe.RenderAnnotation.prototype.clearFilledRoundedRectangle = function() {
    return this.setFilledRoundedRectangle(void 0);
  }, proto.mediapipe.RenderAnnotation.prototype.hasFilledRoundedRectangle = function() {
    return null != t2.Message.getField(this, 10);
  }, proto.mediapipe.RenderAnnotation.prototype.getGradientLine = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.RenderAnnotation.GradientLine, 14);
  }, proto.mediapipe.RenderAnnotation.prototype.setGradientLine = function(e3) {
    return t2.Message.setOneofWrapperField(this, 14, proto.mediapipe.RenderAnnotation.oneofGroups_[0], e3);
  }, proto.mediapipe.RenderAnnotation.prototype.clearGradientLine = function() {
    return this.setGradientLine(void 0);
  }, proto.mediapipe.RenderAnnotation.prototype.hasGradientLine = function() {
    return null != t2.Message.getField(this, 14);
  }, proto.mediapipe.RenderAnnotation.prototype.getScribble = function() {
    return t2.Message.getWrapperField(this, proto.mediapipe.RenderAnnotation.Scribble, 15);
  }, proto.mediapipe.RenderAnnotation.prototype.setScribble = function(e3) {
    return t2.Message.setOneofWrapperField(this, 15, proto.mediapipe.RenderAnnotation.oneofGroups_[0], e3);
  }, proto.mediapipe.RenderAnnotation.prototype.clearScribble = function() {
    return this.setScribble(void 0);
  }, proto.mediapipe.RenderAnnotation.prototype.hasScribble = function() {
    return null != t2.Message.getField(this, 15);
  }, proto.mediapipe.RenderAnnotation.prototype.getThickness = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 11, 1);
  }, proto.mediapipe.RenderAnnotation.prototype.setThickness = function(e3) {
    return t2.Message.setField(this, 11, e3);
  }, proto.mediapipe.RenderAnnotation.prototype.clearThickness = function() {
    return t2.Message.setField(this, 11, void 0);
  }, proto.mediapipe.RenderAnnotation.prototype.hasThickness = function() {
    return null != t2.Message.getField(this, 11);
  }, proto.mediapipe.RenderAnnotation.prototype.getColor = function() {
    return t2.Message.getWrapperField(this, i3.Color, 12);
  }, proto.mediapipe.RenderAnnotation.prototype.setColor = function(e3) {
    return t2.Message.setWrapperField(this, 12, e3);
  }, proto.mediapipe.RenderAnnotation.prototype.clearColor = function() {
    return this.setColor(void 0);
  }, proto.mediapipe.RenderAnnotation.prototype.hasColor = function() {
    return null != t2.Message.getField(this, 12);
  }, proto.mediapipe.RenderAnnotation.prototype.getSceneTag = function() {
    return t2.Message.getFieldWithDefault(this, 13, "");
  }, proto.mediapipe.RenderAnnotation.prototype.setSceneTag = function(e3) {
    return t2.Message.setField(this, 13, e3);
  }, proto.mediapipe.RenderAnnotation.prototype.clearSceneTag = function() {
    return t2.Message.setField(this, 13, void 0);
  }, proto.mediapipe.RenderAnnotation.prototype.hasSceneTag = function() {
    return null != t2.Message.getField(this, 13);
  }, t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.RenderViewport.prototype.toObject = function(e3) {
    return proto.mediapipe.RenderViewport.toObject(e3, this);
  }, proto.mediapipe.RenderViewport.toObject = function(e3, r3) {
    var o3, i4 = { id: null == (o3 = t2.Message.getField(r3, 1)) ? void 0 : o3, widthPx: null == (o3 = t2.Message.getField(r3, 2)) ? void 0 : o3, heightPx: null == (o3 = t2.Message.getField(r3, 3)) ? void 0 : o3, composeOnVideo: null == (o3 = t2.Message.getBooleanField(r3, 4)) ? void 0 : o3 };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.RenderViewport.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.RenderViewport();
    return proto.mediapipe.RenderViewport.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.RenderViewport.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = t3.readString();
          e3.setId(r3);
          break;
        case 2:
          r3 = t3.readInt32();
          e3.setWidthPx(r3);
          break;
        case 3:
          r3 = t3.readInt32();
          e3.setHeightPx(r3);
          break;
        case 4:
          r3 = t3.readBool();
          e3.setComposeOnVideo(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.RenderViewport.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.RenderViewport.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.RenderViewport.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = t2.Message.getField(e3, 1)) && r3.writeString(1, o3), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeInt32(2, o3), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeInt32(3, o3), null != (o3 = t2.Message.getField(e3, 4)) && r3.writeBool(4, o3);
  }, proto.mediapipe.RenderViewport.prototype.getId = function() {
    return t2.Message.getFieldWithDefault(this, 1, "");
  }, proto.mediapipe.RenderViewport.prototype.setId = function(e3) {
    return t2.Message.setField(this, 1, e3);
  }, proto.mediapipe.RenderViewport.prototype.clearId = function() {
    return t2.Message.setField(this, 1, void 0);
  }, proto.mediapipe.RenderViewport.prototype.hasId = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.RenderViewport.prototype.getWidthPx = function() {
    return t2.Message.getFieldWithDefault(this, 2, 0);
  }, proto.mediapipe.RenderViewport.prototype.setWidthPx = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.RenderViewport.prototype.clearWidthPx = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.RenderViewport.prototype.hasWidthPx = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.RenderViewport.prototype.getHeightPx = function() {
    return t2.Message.getFieldWithDefault(this, 3, 0);
  }, proto.mediapipe.RenderViewport.prototype.setHeightPx = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.RenderViewport.prototype.clearHeightPx = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.RenderViewport.prototype.hasHeightPx = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.RenderViewport.prototype.getComposeOnVideo = function() {
    return t2.Message.getBooleanFieldWithDefault(this, 4, false);
  }, proto.mediapipe.RenderViewport.prototype.setComposeOnVideo = function(e3) {
    return t2.Message.setField(this, 4, e3);
  }, proto.mediapipe.RenderViewport.prototype.clearComposeOnVideo = function() {
    return t2.Message.setField(this, 4, void 0);
  }, proto.mediapipe.RenderViewport.prototype.hasComposeOnVideo = function() {
    return null != t2.Message.getField(this, 4);
  }, r2.object.extend(e2, proto.mediapipe);
}(render_data_pb);
var interactive_segmenter_result = {};
Object.defineProperty(interactive_segmenter_result, "__esModule", { value: true }), interactive_segmenter_result.InteractiveSegmenterResult = void 0;
var InteractiveSegmenterResult = class {
  constructor(e2, t2, r2) {
    this.confidenceMasks = e2, this.categoryMask = t2, this.qualityScores = r2;
  }
  close() {
    var e2, t2;
    null === (e2 = this.confidenceMasks) || void 0 === e2 || e2.forEach((e3) => {
      e3.close();
    }), null === (t2 = this.categoryMask) || void 0 === t2 || t2.close();
  }
};
interactive_segmenter_result.InteractiveSegmenterResult = InteractiveSegmenterResult;
var interactive_segmenter_options = {};
Object.defineProperty(interactive_segmenter_options, "__esModule", { value: true }), function(e2) {
  var t2 = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function(e3, t3, r3, o3) {
    void 0 === o3 && (o3 = r3);
    var i4 = Object.getOwnPropertyDescriptor(t3, r3);
    i4 && !("get" in i4 ? !t3.__esModule : i4.writable || i4.configurable) || (i4 = { enumerable: true, get: function() {
      return t3[r3];
    } }), Object.defineProperty(e3, o3, i4);
  } : function(e3, t3, r3, o3) {
    void 0 === o3 && (o3 = r3), e3[o3] = t3[r3];
  }), r2 = commonjsGlobal && commonjsGlobal.__exportStar || function(e3, r3) {
    for (var o3 in e3)
      "default" === o3 || Object.prototype.hasOwnProperty.call(r3, o3) || t2(r3, e3, o3);
  };
  Object.defineProperty(e2, "__esModule", { value: true }), e2.InteractiveSegmenter = void 0;
  const o2 = calculator_pb, i3 = calculator_options_pb, a3 = base_options_pb, n2 = image_segmenter_graph_options_pb, s2 = segmenter_options_pb, p2 = vision_task_runner, d2 = color_pb, l2 = render_data_pb, g2 = interactive_segmenter_result;
  r2(interactive_segmenter_options, e2), r2(interactive_segmenter_result, e2);
  const c2 = "image_in", u2 = "norm_rect_in", m2 = "roi_in", f3 = "confidence_masks", h2 = "category_mask", y2 = "quality_scores";
  class b2 extends p2.VisionTaskRunner {
    static createFromOptions(e3, t3) {
      return p2.VisionTaskRunner.createVisionInstance(b2, e3, t3);
    }
    static createFromModelBuffer(e3, t3) {
      return p2.VisionTaskRunner.createVisionInstance(b2, e3, { baseOptions: { modelAssetBuffer: t3 } });
    }
    static createFromModelPath(e3, t3) {
      return p2.VisionTaskRunner.createVisionInstance(b2, e3, { baseOptions: { modelAssetPath: t3 } });
    }
    constructor(e3, t3) {
      super(new p2.VisionGraphRunner(e3, t3), c2, u2, false), this.outputCategoryMask = false, this.outputConfidenceMasks = true, this.options = new n2.ImageSegmenterGraphOptions(), this.segmenterOptions = new s2.SegmenterOptions(), this.options.setSegmenterOptions(this.segmenterOptions), this.options.setBaseOptions(new a3.BaseOptions());
    }
    get baseOptions() {
      return this.options.getBaseOptions();
    }
    set baseOptions(e3) {
      this.options.setBaseOptions(e3);
    }
    setOptions(e3) {
      var t3, r3;
      return "outputCategoryMask" in e3 && (this.outputCategoryMask = null !== (t3 = e3.outputCategoryMask) && void 0 !== t3 && t3), "outputConfidenceMasks" in e3 && (this.outputConfidenceMasks = null === (r3 = e3.outputConfidenceMasks) || void 0 === r3 || r3), super.applyOptions(e3);
    }
    segment(e3, t3, r3, o3) {
      const i4 = "function" != typeof r3 ? r3 : {};
      return this.userCallback = "function" == typeof r3 ? r3 : o3, this.reset(), this.processRenderData(t3, this.getSynctheticTimestamp()), this.processImageData(e3, i4), this.processResults();
    }
    reset() {
      this.confidenceMasks = void 0, this.categoryMask = void 0, this.qualityScores = void 0;
    }
    processResults() {
      try {
        const e3 = new g2.InteractiveSegmenterResult(this.confidenceMasks, this.categoryMask, this.qualityScores);
        if (!this.userCallback)
          return e3;
        this.userCallback(e3);
      } finally {
        this.freeKeepaliveStreams();
      }
    }
    refreshGraph() {
      const e3 = new o2.CalculatorGraphConfig();
      e3.addInputStream(c2), e3.addInputStream(m2), e3.addInputStream(u2);
      const t3 = new i3.CalculatorOptions();
      t3.setExtension(n2.ImageSegmenterGraphOptions.ext, this.options);
      const r3 = new o2.CalculatorGraphConfig.Node();
      r3.setCalculator("mediapipe.tasks.vision.interactive_segmenter.InteractiveSegmenterGraph"), r3.addInputStream("IMAGE:" + c2), r3.addInputStream("ROI:" + m2), r3.addInputStream("NORM_RECT:" + u2), r3.setOptions(t3), e3.addNode(r3), this.addKeepaliveNode(e3), this.outputConfidenceMasks && (e3.addOutputStream(f3), r3.addOutputStream("CONFIDENCE_MASKS:" + f3), this.keepStreamAlive(f3), this.graphRunner.attachImageVectorListener(f3, (e4, t4) => {
        this.confidenceMasks = e4.map((e5) => this.convertToMPMask(e5, !this.userCallback)), this.setLatestOutputTimestamp(t4);
      }), this.graphRunner.attachEmptyPacketListener(f3, (e4) => {
        this.confidenceMasks = [], this.setLatestOutputTimestamp(e4);
      })), this.outputCategoryMask && (e3.addOutputStream(h2), r3.addOutputStream("CATEGORY_MASK:" + h2), this.keepStreamAlive(h2), this.graphRunner.attachImageListener(h2, (e4, t4) => {
        this.categoryMask = this.convertToMPMask(e4, !this.userCallback), this.setLatestOutputTimestamp(t4);
      }), this.graphRunner.attachEmptyPacketListener(h2, (e4) => {
        this.categoryMask = void 0, this.setLatestOutputTimestamp(e4);
      })), e3.addOutputStream(y2), r3.addOutputStream("QUALITY_SCORES:" + y2), this.graphRunner.attachFloatVectorListener(y2, (e4, t4) => {
        this.qualityScores = e4, this.setLatestOutputTimestamp(t4);
      }), this.graphRunner.attachEmptyPacketListener(y2, (e4) => {
        this.categoryMask = void 0, this.setLatestOutputTimestamp(e4);
      });
      const a4 = e3.serializeBinary();
      this.setGraph(new Uint8Array(a4), true);
    }
    processRenderData(e3, t3) {
      const r3 = new l2.RenderData(), o3 = new l2.RenderAnnotation(), i4 = new d2.Color();
      if (i4.setR(255), o3.setColor(i4), e3.keypoint && e3.scribble)
        throw new Error("Cannot provide both keypoint and scribble.");
      if (e3.keypoint) {
        const t4 = new l2.RenderAnnotation.Point();
        t4.setNormalized(true), t4.setX(e3.keypoint.x), t4.setY(e3.keypoint.y), o3.setPoint(t4);
      } else {
        if (!e3.scribble)
          throw new Error("Must provide either a keypoint or a scribble.");
        {
          const t4 = new l2.RenderAnnotation.Scribble();
          for (const r4 of e3.scribble) {
            const e4 = new l2.RenderAnnotation.Point();
            e4.setNormalized(true), e4.setX(r4.x), e4.setY(r4.y), t4.addPoint(e4);
          }
          o3.setScribble(t4);
        }
      }
      r3.addRenderAnnotations(o3), this.graphRunner.addProtoToStream(r3.serializeBinary(), "mediapipe.RenderData", m2, t3);
    }
  }
  e2.InteractiveSegmenter = b2;
}(interactive_segmenter);
var object_detector = {};
var object_detector_options_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = calculator_pb;
  r2.object.extend(proto, i3);
  var a3 = calculator_options_pb;
  r2.object.extend(proto, a3);
  var n2 = base_options_pb;
  r2.object.extend(proto, n2), r2.exportSymbol("proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions", null, o2), proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.repeatedFields_, null);
  }, r2.inherits(proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.displayName = "proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions"), proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.repeatedFields_ = [5, 6], t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.toObject(e3, this);
  }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.toObject = function(e3, r3) {
    var o3, i4 = { baseOptions: (o3 = r3.getBaseOptions()) && n2.BaseOptions.toObject(e3, o3), displayNamesLocale: t2.Message.getFieldWithDefault(r3, 2, "en"), maxResults: t2.Message.getFieldWithDefault(r3, 3, -1), scoreThreshold: null == (o3 = t2.Message.getOptionalFloatingPointField(r3, 4)) ? void 0 : o3, categoryAllowlistList: null == (o3 = t2.Message.getRepeatedField(r3, 5)) ? void 0 : o3, categoryDenylistList: null == (o3 = t2.Message.getRepeatedField(r3, 6)) ? void 0 : o3 };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions();
    return proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new n2.BaseOptions();
          t3.readMessage(r3, n2.BaseOptions.deserializeBinaryFromReader), e3.setBaseOptions(r3);
          break;
        case 2:
          r3 = t3.readString();
          e3.setDisplayNamesLocale(r3);
          break;
        case 3:
          r3 = t3.readInt32();
          e3.setMaxResults(r3);
          break;
        case 4:
          r3 = t3.readFloat();
          e3.setScoreThreshold(r3);
          break;
        case 5:
          r3 = t3.readString();
          e3.addCategoryAllowlist(r3);
          break;
        case 6:
          r3 = t3.readString();
          e3.addCategoryDenylist(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = e3.getBaseOptions()) && r3.writeMessage(1, o3, n2.BaseOptions.serializeBinaryToWriter), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeString(2, o3), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeInt32(3, o3), null != (o3 = t2.Message.getField(e3, 4)) && r3.writeFloat(4, o3), (o3 = e3.getCategoryAllowlistList()).length > 0 && r3.writeRepeatedString(5, o3), (o3 = e3.getCategoryDenylistList()).length > 0 && r3.writeRepeatedString(6, o3);
  }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.ext = new t2.ExtensionFieldInfo(443442058, { ext: 0 }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[443442058] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[443442058] = proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.ext, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.prototype.getBaseOptions = function() {
    return t2.Message.getWrapperField(this, n2.BaseOptions, 1);
  }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.prototype.setBaseOptions = function(e3) {
    return t2.Message.setWrapperField(this, 1, e3);
  }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.prototype.clearBaseOptions = function() {
    return this.setBaseOptions(void 0);
  }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.prototype.hasBaseOptions = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.prototype.getDisplayNamesLocale = function() {
    return t2.Message.getFieldWithDefault(this, 2, "en");
  }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.prototype.setDisplayNamesLocale = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.prototype.clearDisplayNamesLocale = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.prototype.hasDisplayNamesLocale = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.prototype.getMaxResults = function() {
    return t2.Message.getFieldWithDefault(this, 3, -1);
  }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.prototype.setMaxResults = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.prototype.clearMaxResults = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.prototype.hasMaxResults = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.prototype.getScoreThreshold = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 4, 0);
  }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.prototype.setScoreThreshold = function(e3) {
    return t2.Message.setField(this, 4, e3);
  }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.prototype.clearScoreThreshold = function() {
    return t2.Message.setField(this, 4, void 0);
  }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.prototype.hasScoreThreshold = function() {
    return null != t2.Message.getField(this, 4);
  }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.prototype.getCategoryAllowlistList = function() {
    return t2.Message.getRepeatedField(this, 5);
  }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.prototype.setCategoryAllowlistList = function(e3) {
    return t2.Message.setField(this, 5, e3 || []);
  }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.prototype.addCategoryAllowlist = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 5, e3, r3);
  }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.prototype.clearCategoryAllowlistList = function() {
    return this.setCategoryAllowlistList([]);
  }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.prototype.getCategoryDenylistList = function() {
    return t2.Message.getRepeatedField(this, 6);
  }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.prototype.setCategoryDenylistList = function(e3) {
    return t2.Message.setField(this, 6, e3 || []);
  }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.prototype.addCategoryDenylist = function(e3, r3) {
    return t2.Message.addToRepeatedField(this, 6, e3, r3);
  }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.prototype.clearCategoryDenylistList = function() {
    return this.setCategoryDenylistList([]);
  }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.ext = new t2.ExtensionFieldInfo(443442058, { ext: 0 }, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[443442058] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[443442058] = proto.mediapipe.tasks.vision.object_detector.proto.ObjectDetectorOptions.ext, r2.object.extend(e2, proto.mediapipe.tasks.vision.object_detector.proto);
}(object_detector_options_pb);
var object_detector_options = {};
Object.defineProperty(object_detector_options, "__esModule", { value: true });
var object_detector_result = {};
Object.defineProperty(object_detector_result, "__esModule", { value: true }), function(e2) {
  var t2 = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function(e3, t3, r3, o3) {
    void 0 === o3 && (o3 = r3);
    var i4 = Object.getOwnPropertyDescriptor(t3, r3);
    i4 && !("get" in i4 ? !t3.__esModule : i4.writable || i4.configurable) || (i4 = { enumerable: true, get: function() {
      return t3[r3];
    } }), Object.defineProperty(e3, o3, i4);
  } : function(e3, t3, r3, o3) {
    void 0 === o3 && (o3 = r3), e3[o3] = t3[r3];
  }), r2 = commonjsGlobal && commonjsGlobal.__exportStar || function(e3, r3) {
    for (var o3 in e3)
      "default" === o3 || Object.prototype.hasOwnProperty.call(r3, o3) || t2(r3, e3, o3);
  };
  Object.defineProperty(e2, "__esModule", { value: true }), e2.ObjectDetector = void 0;
  const o2 = calculator_pb, i3 = calculator_options_pb, a3 = detection_pb, n2 = base_options_pb, s2 = object_detector_options_pb, p2 = detection_result, d2 = vision_task_runner, l2 = "input_frame_gpu", g2 = "norm_rect", c2 = "detections";
  r2(object_detector_options, e2), r2(object_detector_result, e2);
  class u2 extends d2.VisionTaskRunner {
    static createFromOptions(e3, t3) {
      return d2.VisionTaskRunner.createVisionInstance(u2, e3, t3);
    }
    static createFromModelBuffer(e3, t3) {
      return d2.VisionTaskRunner.createVisionInstance(u2, e3, { baseOptions: { modelAssetBuffer: t3 } });
    }
    static async createFromModelPath(e3, t3) {
      return d2.VisionTaskRunner.createVisionInstance(u2, e3, { baseOptions: { modelAssetPath: t3 } });
    }
    constructor(e3, t3) {
      super(new d2.VisionGraphRunner(e3, t3), l2, g2, false), this.result = { detections: [] }, this.options = new s2.ObjectDetectorOptions(), this.options.setBaseOptions(new n2.BaseOptions());
    }
    get baseOptions() {
      return this.options.getBaseOptions();
    }
    set baseOptions(e3) {
      this.options.setBaseOptions(e3);
    }
    setOptions(e3) {
      return void 0 !== e3.displayNamesLocale ? this.options.setDisplayNamesLocale(e3.displayNamesLocale) : "displayNamesLocale" in e3 && this.options.clearDisplayNamesLocale(), void 0 !== e3.maxResults ? this.options.setMaxResults(e3.maxResults) : "maxResults" in e3 && this.options.clearMaxResults(), void 0 !== e3.scoreThreshold ? this.options.setScoreThreshold(e3.scoreThreshold) : "scoreThreshold" in e3 && this.options.clearScoreThreshold(), void 0 !== e3.categoryAllowlist ? this.options.setCategoryAllowlistList(e3.categoryAllowlist) : "categoryAllowlist" in e3 && this.options.clearCategoryAllowlistList(), void 0 !== e3.categoryDenylist ? this.options.setCategoryDenylistList(e3.categoryDenylist) : "categoryDenylist" in e3 && this.options.clearCategoryDenylistList(), this.applyOptions(e3);
    }
    detect(e3, t3) {
      return this.result = { detections: [] }, this.processImageData(e3, t3), this.result;
    }
    detectForVideo(e3, t3, r3) {
      return this.result = { detections: [] }, this.processVideoData(e3, r3, t3), this.result;
    }
    addJsObjectDetections(e3) {
      for (const t3 of e3) {
        const e4 = a3.Detection.deserializeBinary(t3);
        this.result.detections.push((0, p2.convertFromDetectionProto)(e4));
      }
    }
    refreshGraph() {
      const e3 = new o2.CalculatorGraphConfig();
      e3.addInputStream(l2), e3.addInputStream(g2), e3.addOutputStream(c2);
      const t3 = new i3.CalculatorOptions();
      t3.setExtension(s2.ObjectDetectorOptions.ext, this.options);
      const r3 = new o2.CalculatorGraphConfig.Node();
      r3.setCalculator("mediapipe.tasks.vision.ObjectDetectorGraph"), r3.addInputStream("IMAGE:" + l2), r3.addInputStream("NORM_RECT:" + g2), r3.addOutputStream("DETECTIONS:" + c2), r3.setOptions(t3), e3.addNode(r3), this.graphRunner.attachProtoVectorListener(c2, (e4, t4) => {
        this.addJsObjectDetections(e4), this.setLatestOutputTimestamp(t4);
      }), this.graphRunner.attachEmptyPacketListener(c2, (e4) => {
        this.setLatestOutputTimestamp(e4);
      });
      const a4 = e3.serializeBinary();
      this.setGraph(new Uint8Array(a4), true);
    }
  }
  e2.ObjectDetector = u2;
}(object_detector);
var pose_landmarker = {};
var pose_detector_graph_options_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = calculator_pb;
  r2.object.extend(proto, i3);
  var a3 = calculator_options_pb;
  r2.object.extend(proto, a3);
  var n2 = base_options_pb;
  r2.object.extend(proto, n2), r2.exportSymbol("proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions", null, o2), proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.displayName = "proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.toObject(e3, this);
  }, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.toObject = function(e3, r3) {
    var o3, i4 = { baseOptions: (o3 = r3.getBaseOptions()) && n2.BaseOptions.toObject(e3, o3), minDetectionConfidence: t2.Message.getFloatingPointFieldWithDefault(r3, 2, 0.5), minSuppressionThreshold: t2.Message.getFloatingPointFieldWithDefault(r3, 3, 0.5), numPoses: null == (o3 = t2.Message.getField(r3, 4)) ? void 0 : o3 };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions();
    return proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new n2.BaseOptions();
          t3.readMessage(r3, n2.BaseOptions.deserializeBinaryFromReader), e3.setBaseOptions(r3);
          break;
        case 2:
          r3 = t3.readFloat();
          e3.setMinDetectionConfidence(r3);
          break;
        case 3:
          r3 = t3.readFloat();
          e3.setMinSuppressionThreshold(r3);
          break;
        case 4:
          r3 = t3.readInt32();
          e3.setNumPoses(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = e3.getBaseOptions()) && r3.writeMessage(1, o3, n2.BaseOptions.serializeBinaryToWriter), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeFloat(2, o3), null != (o3 = t2.Message.getField(e3, 3)) && r3.writeFloat(3, o3), null != (o3 = t2.Message.getField(e3, 4)) && r3.writeInt32(4, o3);
  }, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.ext = new t2.ExtensionFieldInfo(514774813, { ext: 0 }, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[514774813] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[514774813] = proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.ext, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.prototype.getBaseOptions = function() {
    return t2.Message.getWrapperField(this, n2.BaseOptions, 1);
  }, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.prototype.setBaseOptions = function(e3) {
    return t2.Message.setWrapperField(this, 1, e3);
  }, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.prototype.clearBaseOptions = function() {
    return this.setBaseOptions(void 0);
  }, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.prototype.hasBaseOptions = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.prototype.getMinDetectionConfidence = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 2, 0.5);
  }, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.prototype.setMinDetectionConfidence = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.prototype.clearMinDetectionConfidence = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.prototype.hasMinDetectionConfidence = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.prototype.getMinSuppressionThreshold = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 3, 0.5);
  }, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.prototype.setMinSuppressionThreshold = function(e3) {
    return t2.Message.setField(this, 3, e3);
  }, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.prototype.clearMinSuppressionThreshold = function() {
    return t2.Message.setField(this, 3, void 0);
  }, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.prototype.hasMinSuppressionThreshold = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.prototype.getNumPoses = function() {
    return t2.Message.getFieldWithDefault(this, 4, 0);
  }, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.prototype.setNumPoses = function(e3) {
    return t2.Message.setField(this, 4, e3);
  }, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.prototype.clearNumPoses = function() {
    return t2.Message.setField(this, 4, void 0);
  }, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.prototype.hasNumPoses = function() {
    return null != t2.Message.getField(this, 4);
  }, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.ext = new t2.ExtensionFieldInfo(514774813, { ext: 0 }, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[514774813] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[514774813] = proto.mediapipe.tasks.vision.pose_detector.proto.PoseDetectorGraphOptions.ext, r2.object.extend(e2, proto.mediapipe.tasks.vision.pose_detector.proto);
}(pose_detector_graph_options_pb);
var pose_landmarker_graph_options_pb = {};
var pose_landmarks_detector_graph_options_pb = {};
!function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = calculator_pb;
  r2.object.extend(proto, i3);
  var a3 = calculator_options_pb;
  r2.object.extend(proto, a3);
  var n2 = base_options_pb;
  r2.object.extend(proto, n2), r2.exportSymbol("proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions", null, o2), proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.displayName = "proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.toObject(e3, this);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.toObject = function(e3, r3) {
    var o3, i4 = { baseOptions: (o3 = r3.getBaseOptions()) && n2.BaseOptions.toObject(e3, o3), minDetectionConfidence: t2.Message.getFloatingPointFieldWithDefault(r3, 2, 0.5) };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions();
    return proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new n2.BaseOptions();
          t3.readMessage(r3, n2.BaseOptions.deserializeBinaryFromReader), e3.setBaseOptions(r3);
          break;
        case 2:
          r3 = t3.readFloat();
          e3.setMinDetectionConfidence(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = e3.getBaseOptions()) && r3.writeMessage(1, o3, n2.BaseOptions.serializeBinaryToWriter), null != (o3 = t2.Message.getField(e3, 2)) && r3.writeFloat(2, o3);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.ext = new t2.ExtensionFieldInfo(518928384, { ext: 0 }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[518928384] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[518928384] = proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.ext, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.prototype.getBaseOptions = function() {
    return t2.Message.getWrapperField(this, n2.BaseOptions, 1);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.prototype.setBaseOptions = function(e3) {
    return t2.Message.setWrapperField(this, 1, e3);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.prototype.clearBaseOptions = function() {
    return this.setBaseOptions(void 0);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.prototype.hasBaseOptions = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.prototype.getMinDetectionConfidence = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 2, 0.5);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.prototype.setMinDetectionConfidence = function(e3) {
    return t2.Message.setField(this, 2, e3);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.prototype.clearMinDetectionConfidence = function() {
    return t2.Message.setField(this, 2, void 0);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.prototype.hasMinDetectionConfidence = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.ext = new t2.ExtensionFieldInfo(518928384, { ext: 0 }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[518928384] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[518928384] = proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarksDetectorGraphOptions.ext, r2.object.extend(e2, proto.mediapipe.tasks.vision.pose_landmarker.proto);
}(pose_landmarks_detector_graph_options_pb), function(e2) {
  var t2 = googleProtobuf, r2 = t2, o2 = "undefined" != typeof globalThis && globalThis || "undefined" != typeof window && window || void 0 !== o2 && o2 || "undefined" != typeof self && self || function() {
    return this;
  }.call(null) || Function("return this")(), i3 = calculator_pb;
  r2.object.extend(proto, i3);
  var a3 = calculator_options_pb;
  r2.object.extend(proto, a3);
  var n2 = base_options_pb;
  r2.object.extend(proto, n2);
  var s2 = pose_detector_graph_options_pb;
  r2.object.extend(proto, s2);
  var p2 = pose_landmarks_detector_graph_options_pb;
  r2.object.extend(proto, p2), r2.exportSymbol("proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions", null, o2), proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions = function(e3) {
    t2.Message.initialize(this, e3, 0, -1, null, null);
  }, r2.inherits(proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions, t2.Message), r2.DEBUG && !COMPILED && (proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.displayName = "proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions"), t2.Message.GENERATE_TO_OBJECT && (proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.prototype.toObject = function(e3) {
    return proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.toObject(e3, this);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.toObject = function(e3, r3) {
    var o3, i4 = { baseOptions: (o3 = r3.getBaseOptions()) && n2.BaseOptions.toObject(e3, o3), poseDetectorGraphOptions: (o3 = r3.getPoseDetectorGraphOptions()) && s2.PoseDetectorGraphOptions.toObject(e3, o3), poseLandmarksDetectorGraphOptions: (o3 = r3.getPoseLandmarksDetectorGraphOptions()) && p2.PoseLandmarksDetectorGraphOptions.toObject(e3, o3), minTrackingConfidence: t2.Message.getFloatingPointFieldWithDefault(r3, 4, 0.5) };
    return e3 && (i4.$jspbMessageInstance = r3), i4;
  }), proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.deserializeBinary = function(e3) {
    var r3 = new t2.BinaryReader(e3), o3 = new proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions();
    return proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.deserializeBinaryFromReader(o3, r3);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.deserializeBinaryFromReader = function(e3, t3) {
    for (; t3.nextField() && !t3.isEndGroup(); ) {
      switch (t3.getFieldNumber()) {
        case 1:
          var r3 = new n2.BaseOptions();
          t3.readMessage(r3, n2.BaseOptions.deserializeBinaryFromReader), e3.setBaseOptions(r3);
          break;
        case 2:
          r3 = new s2.PoseDetectorGraphOptions();
          t3.readMessage(r3, s2.PoseDetectorGraphOptions.deserializeBinaryFromReader), e3.setPoseDetectorGraphOptions(r3);
          break;
        case 3:
          r3 = new p2.PoseLandmarksDetectorGraphOptions();
          t3.readMessage(r3, p2.PoseLandmarksDetectorGraphOptions.deserializeBinaryFromReader), e3.setPoseLandmarksDetectorGraphOptions(r3);
          break;
        case 4:
          r3 = t3.readFloat();
          e3.setMinTrackingConfidence(r3);
          break;
        default:
          t3.skipField();
      }
    }
    return e3;
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.prototype.serializeBinary = function() {
    var e3 = new t2.BinaryWriter();
    return proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.serializeBinaryToWriter(this, e3), e3.getResultBuffer();
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.serializeBinaryToWriter = function(e3, r3) {
    var o3 = void 0;
    null != (o3 = e3.getBaseOptions()) && r3.writeMessage(1, o3, n2.BaseOptions.serializeBinaryToWriter), null != (o3 = e3.getPoseDetectorGraphOptions()) && r3.writeMessage(2, o3, s2.PoseDetectorGraphOptions.serializeBinaryToWriter), null != (o3 = e3.getPoseLandmarksDetectorGraphOptions()) && r3.writeMessage(3, o3, p2.PoseLandmarksDetectorGraphOptions.serializeBinaryToWriter), null != (o3 = t2.Message.getField(e3, 4)) && r3.writeFloat(4, o3);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.ext = new t2.ExtensionFieldInfo(516587230, { ext: 0 }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[516587230] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[516587230] = proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.ext, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.prototype.getBaseOptions = function() {
    return t2.Message.getWrapperField(this, n2.BaseOptions, 1);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.prototype.setBaseOptions = function(e3) {
    return t2.Message.setWrapperField(this, 1, e3);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.prototype.clearBaseOptions = function() {
    return this.setBaseOptions(void 0);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.prototype.hasBaseOptions = function() {
    return null != t2.Message.getField(this, 1);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.prototype.getPoseDetectorGraphOptions = function() {
    return t2.Message.getWrapperField(this, s2.PoseDetectorGraphOptions, 2);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.prototype.setPoseDetectorGraphOptions = function(e3) {
    return t2.Message.setWrapperField(this, 2, e3);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.prototype.clearPoseDetectorGraphOptions = function() {
    return this.setPoseDetectorGraphOptions(void 0);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.prototype.hasPoseDetectorGraphOptions = function() {
    return null != t2.Message.getField(this, 2);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.prototype.getPoseLandmarksDetectorGraphOptions = function() {
    return t2.Message.getWrapperField(this, p2.PoseLandmarksDetectorGraphOptions, 3);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.prototype.setPoseLandmarksDetectorGraphOptions = function(e3) {
    return t2.Message.setWrapperField(this, 3, e3);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.prototype.clearPoseLandmarksDetectorGraphOptions = function() {
    return this.setPoseLandmarksDetectorGraphOptions(void 0);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.prototype.hasPoseLandmarksDetectorGraphOptions = function() {
    return null != t2.Message.getField(this, 3);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.prototype.getMinTrackingConfidence = function() {
    return t2.Message.getFloatingPointFieldWithDefault(this, 4, 0.5);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.prototype.setMinTrackingConfidence = function(e3) {
    return t2.Message.setField(this, 4, e3);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.prototype.clearMinTrackingConfidence = function() {
    return t2.Message.setField(this, 4, void 0);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.prototype.hasMinTrackingConfidence = function() {
    return null != t2.Message.getField(this, 4);
  }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.ext = new t2.ExtensionFieldInfo(516587230, { ext: 0 }, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.toObject, 0), a3.CalculatorOptions.extensionsBinary[516587230] = new t2.ExtensionFieldBinaryInfo(proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.ext, t2.BinaryReader.prototype.readMessage, t2.BinaryWriter.prototype.writeMessage, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.serializeBinaryToWriter, proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.deserializeBinaryFromReader, false), a3.CalculatorOptions.extensions[516587230] = proto.mediapipe.tasks.vision.pose_landmarker.proto.PoseLandmarkerGraphOptions.ext, r2.object.extend(e2, proto.mediapipe.tasks.vision.pose_landmarker.proto);
}(pose_landmarker_graph_options_pb);
var pose_landmarker_result = {};
Object.defineProperty(pose_landmarker_result, "__esModule", { value: true }), pose_landmarker_result.PoseLandmarkerResult = void 0;
var PoseLandmarkerResult = class {
  constructor(e2, t2, r2) {
    this.landmarks = e2, this.worldLandmarks = t2, this.segmentationMasks = r2;
  }
  close() {
    var e2;
    null === (e2 = this.segmentationMasks) || void 0 === e2 || e2.forEach((e3) => {
      e3.close();
    });
  }
};
pose_landmarker_result.PoseLandmarkerResult = PoseLandmarkerResult;
var pose_landmarker_options = {};
Object.defineProperty(pose_landmarker_options, "__esModule", { value: true }), function(e2) {
  var t2 = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function(e3, t3, r3, o3) {
    void 0 === o3 && (o3 = r3);
    var i4 = Object.getOwnPropertyDescriptor(t3, r3);
    i4 && !("get" in i4 ? !t3.__esModule : i4.writable || i4.configurable) || (i4 = { enumerable: true, get: function() {
      return t3[r3];
    } }), Object.defineProperty(e3, o3, i4);
  } : function(e3, t3, r3, o3) {
    void 0 === o3 && (o3 = r3), e3[o3] = t3[r3];
  }), r2 = commonjsGlobal && commonjsGlobal.__exportStar || function(e3, r3) {
    for (var o3 in e3)
      "default" === o3 || Object.prototype.hasOwnProperty.call(r3, o3) || t2(r3, e3, o3);
  };
  Object.defineProperty(e2, "__esModule", { value: true }), e2.PoseLandmarker = void 0;
  const o2 = calculator_pb, i3 = calculator_options_pb, a3 = landmark_pb, n2 = base_options_pb, s2 = pose_detector_graph_options_pb, p2 = pose_landmarker_graph_options_pb, d2 = pose_landmarks_detector_graph_options_pb, l2 = landmark_result, g2 = vision_task_runner, c2 = pose_landmarker_result;
  r2(pose_landmarker_options, e2), r2(pose_landmarker_result, e2);
  const u2 = "image_in", m2 = "norm_rect", f3 = "normalized_landmarks", h2 = "world_landmarks", y2 = "segmentation_masks", b2 = 0.5;
  class _ extends g2.VisionTaskRunner {
    static createFromOptions(e3, t3) {
      return g2.VisionTaskRunner.createVisionInstance(_, e3, t3);
    }
    static createFromModelBuffer(e3, t3) {
      return g2.VisionTaskRunner.createVisionInstance(_, e3, { baseOptions: { modelAssetBuffer: t3 } });
    }
    static createFromModelPath(e3, t3) {
      return g2.VisionTaskRunner.createVisionInstance(_, e3, { baseOptions: { modelAssetPath: t3 } });
    }
    constructor(e3, t3) {
      super(new g2.VisionGraphRunner(e3, t3), u2, m2, false), this.landmarks = [], this.worldLandmarks = [], this.outputSegmentationMasks = false, this.options = new p2.PoseLandmarkerGraphOptions(), this.options.setBaseOptions(new n2.BaseOptions()), this.poseLandmarksDetectorGraphOptions = new d2.PoseLandmarksDetectorGraphOptions(), this.options.setPoseLandmarksDetectorGraphOptions(this.poseLandmarksDetectorGraphOptions), this.poseDetectorGraphOptions = new s2.PoseDetectorGraphOptions(), this.options.setPoseDetectorGraphOptions(this.poseDetectorGraphOptions), this.initDefaults();
    }
    get baseOptions() {
      return this.options.getBaseOptions();
    }
    set baseOptions(e3) {
      this.options.setBaseOptions(e3);
    }
    setOptions(e3) {
      var t3, r3, o3, i4, a4;
      return "numPoses" in e3 && this.poseDetectorGraphOptions.setNumPoses(null !== (t3 = e3.numPoses) && void 0 !== t3 ? t3 : 1), "minPoseDetectionConfidence" in e3 && this.poseDetectorGraphOptions.setMinDetectionConfidence(null !== (r3 = e3.minPoseDetectionConfidence) && void 0 !== r3 ? r3 : b2), "minTrackingConfidence" in e3 && this.options.setMinTrackingConfidence(null !== (o3 = e3.minTrackingConfidence) && void 0 !== o3 ? o3 : b2), "minPosePresenceConfidence" in e3 && this.poseLandmarksDetectorGraphOptions.setMinDetectionConfidence(null !== (i4 = e3.minPosePresenceConfidence) && void 0 !== i4 ? i4 : b2), "outputSegmentationMasks" in e3 && (this.outputSegmentationMasks = null !== (a4 = e3.outputSegmentationMasks) && void 0 !== a4 && a4), this.applyOptions(e3);
    }
    detect(e3, t3, r3) {
      const o3 = "function" != typeof t3 ? t3 : {};
      return this.userCallback = "function" == typeof t3 ? t3 : r3, this.resetResults(), this.processImageData(e3, o3), this.processResults();
    }
    detectForVideo(e3, t3, r3, o3) {
      const i4 = "function" != typeof r3 ? r3 : {};
      return this.userCallback = "function" == typeof r3 ? r3 : o3, this.resetResults(), this.processVideoData(e3, i4, t3), this.processResults();
    }
    resetResults() {
      this.landmarks = [], this.worldLandmarks = [], this.segmentationMasks = void 0;
    }
    processResults() {
      try {
        const e3 = new c2.PoseLandmarkerResult(this.landmarks, this.worldLandmarks, this.segmentationMasks);
        if (!this.userCallback)
          return e3;
        this.userCallback(e3);
      } finally {
        this.freeKeepaliveStreams();
      }
    }
    initDefaults() {
      this.poseDetectorGraphOptions.setNumPoses(1), this.poseDetectorGraphOptions.setMinDetectionConfidence(b2), this.poseLandmarksDetectorGraphOptions.setMinDetectionConfidence(b2), this.options.setMinTrackingConfidence(b2);
    }
    addJsLandmarks(e3) {
      this.landmarks = [];
      for (const t3 of e3) {
        const e4 = a3.NormalizedLandmarkList.deserializeBinary(t3);
        this.landmarks.push((0, l2.convertToLandmarks)(e4));
      }
    }
    adddJsWorldLandmarks(e3) {
      this.worldLandmarks = [];
      for (const t3 of e3) {
        const e4 = a3.LandmarkList.deserializeBinary(t3);
        this.worldLandmarks.push((0, l2.convertToWorldLandmarks)(e4));
      }
    }
    refreshGraph() {
      const e3 = new o2.CalculatorGraphConfig();
      e3.addInputStream(u2), e3.addInputStream(m2), e3.addOutputStream(f3), e3.addOutputStream(h2), e3.addOutputStream(y2);
      const t3 = new i3.CalculatorOptions();
      t3.setExtension(p2.PoseLandmarkerGraphOptions.ext, this.options);
      const r3 = new o2.CalculatorGraphConfig.Node();
      r3.setCalculator("mediapipe.tasks.vision.pose_landmarker.PoseLandmarkerGraph"), r3.addInputStream("IMAGE:" + u2), r3.addInputStream("NORM_RECT:" + m2), r3.addOutputStream("NORM_LANDMARKS:" + f3), r3.addOutputStream("WORLD_LANDMARKS:" + h2), r3.setOptions(t3), e3.addNode(r3), this.addKeepaliveNode(e3), this.graphRunner.attachProtoVectorListener(f3, (e4, t4) => {
        this.addJsLandmarks(e4), this.setLatestOutputTimestamp(t4);
      }), this.graphRunner.attachEmptyPacketListener(f3, (e4) => {
        this.landmarks = [], this.setLatestOutputTimestamp(e4);
      }), this.graphRunner.attachProtoVectorListener(h2, (e4, t4) => {
        this.adddJsWorldLandmarks(e4), this.setLatestOutputTimestamp(t4);
      }), this.graphRunner.attachEmptyPacketListener(h2, (e4) => {
        this.worldLandmarks = [], this.setLatestOutputTimestamp(e4);
      }), this.outputSegmentationMasks && (r3.addOutputStream("SEGMENTATION_MASK:" + y2), this.keepStreamAlive(y2), this.graphRunner.attachImageVectorListener(y2, (e4, t4) => {
        this.segmentationMasks = e4.map((e5) => this.convertToMPMask(e5, !this.userCallback)), this.setLatestOutputTimestamp(t4);
      }), this.graphRunner.attachEmptyPacketListener(y2, (e4) => {
        this.segmentationMasks = [], this.setLatestOutputTimestamp(e4);
      }));
      const a4 = e3.serializeBinary();
      this.setGraph(new Uint8Array(a4), true);
    }
  }
  e2.PoseLandmarker = _, _.POSE_CONNECTIONS = [{ start: 0, end: 1 }, { start: 1, end: 2 }, { start: 2, end: 3 }, { start: 3, end: 7 }, { start: 0, end: 4 }, { start: 4, end: 5 }, { start: 5, end: 6 }, { start: 6, end: 8 }, { start: 9, end: 10 }, { start: 11, end: 12 }, { start: 11, end: 13 }, { start: 13, end: 15 }, { start: 15, end: 17 }, { start: 15, end: 19 }, { start: 15, end: 21 }, { start: 17, end: 19 }, { start: 12, end: 14 }, { start: 14, end: 16 }, { start: 16, end: 18 }, { start: 16, end: 20 }, { start: 16, end: 22 }, { start: 18, end: 20 }, { start: 11, end: 23 }, { start: 12, end: 24 }, { start: 23, end: 24 }, { start: 23, end: 25 }, { start: 24, end: 26 }, { start: 25, end: 27 }, { start: 26, end: 28 }, { start: 27, end: 29 }, { start: 28, end: 30 }, { start: 29, end: 31 }, { start: 30, end: 32 }, { start: 27, end: 31 }, { start: 28, end: 32 }];
}(pose_landmarker), Object.defineProperty(vision, "__esModule", { value: true });
var PoseLandmarker_1 = vision.PoseLandmarker = ObjectDetector_1 = vision.ObjectDetector = InteractiveSegmenter_1 = vision.InteractiveSegmenter = ImageSegmenter_1 = vision.ImageSegmenter = ImageEmbedder_1 = vision.ImageEmbedder = ImageClassifier_1 = vision.ImageClassifier = HandLandmarker_1 = vision.HandLandmarker = GestureRecognizer_1 = vision.GestureRecognizer = FaceStylizer_1 = vision.FaceStylizer = FaceLandmarker_1 = vision.FaceLandmarker = FaceDetector_1 = vision.FaceDetector = MPMask_1 = vision.MPMask = MPImage_1 = vision.MPImage = FilesetResolver_1 = vision.FilesetResolver = DrawingUtils_1 = vision.DrawingUtils = void 0;
var fileset_resolver_1 = fileset_resolver;
var drawing_utils_1 = drawing_utils;
var image_1 = image;
var mask_1 = mask;
var face_detector_1 = face_detector;
var face_landmarker_1 = face_landmarker;
var face_stylizer_1 = face_stylizer;
var gesture_recognizer_1 = gesture_recognizer;
var hand_landmarker_1 = hand_landmarker;
var image_classifier_1 = image_classifier;
var image_embedder_1 = image_embedder;
var image_segmenter_1 = image_segmenter;
var interactive_segmenter_1 = interactive_segmenter;
var object_detector_1 = object_detector;
var pose_landmarker_1 = pose_landmarker;
var DrawingUtils = drawing_utils_1.DrawingUtils;
var DrawingUtils_1 = vision.DrawingUtils = DrawingUtils;
var FilesetResolver = fileset_resolver_1.FilesetResolver;
var FilesetResolver_1 = vision.FilesetResolver = FilesetResolver;
var MPImage = image_1.MPImage;
var MPImage_1 = vision.MPImage = MPImage;
var MPMask = mask_1.MPMask;
var MPMask_1 = vision.MPMask = MPMask;
var FaceDetector = face_detector_1.FaceDetector;
var FaceDetector_1 = vision.FaceDetector = FaceDetector;
var FaceLandmarker = face_landmarker_1.FaceLandmarker;
var FaceLandmarker_1 = vision.FaceLandmarker = FaceLandmarker;
var FaceStylizer = face_stylizer_1.FaceStylizer;
var FaceStylizer_1 = vision.FaceStylizer = FaceStylizer;
var GestureRecognizer = gesture_recognizer_1.GestureRecognizer;
var GestureRecognizer_1 = vision.GestureRecognizer = GestureRecognizer;
var HandLandmarker = hand_landmarker_1.HandLandmarker;
var HandLandmarker_1 = vision.HandLandmarker = HandLandmarker;
var ImageClassifier = image_classifier_1.ImageClassifier;
var ImageClassifier_1 = vision.ImageClassifier = ImageClassifier;
var ImageEmbedder = image_embedder_1.ImageEmbedder;
var ImageEmbedder_1 = vision.ImageEmbedder = ImageEmbedder;
var ImageSegmenter = image_segmenter_1.ImageSegmenter;
var ImageSegmenter_1 = vision.ImageSegmenter = ImageSegmenter;
var InteractiveSegmenter = interactive_segmenter_1.InteractiveSegmenter;
var InteractiveSegmenter_1 = vision.InteractiveSegmenter = InteractiveSegmenter;
var ObjectDetector = object_detector_1.ObjectDetector;
var ObjectDetector_1 = vision.ObjectDetector = ObjectDetector;
var PoseLandmarker = pose_landmarker_1.PoseLandmarker;
PoseLandmarker_1 = vision.PoseLandmarker = PoseLandmarker;

// node_modules/r3f-perf/node_modules/@react-three/drei/core/FaceLandmarker.js
var FaceLandmarkerContext = (0, import_react17.createContext)({});
function useFaceLandmarker() {
  return (0, import_react17.useContext)(FaceLandmarkerContext);
}

// node_modules/r3f-perf/node_modules/@react-three/drei/core/FaceControls.js
function mean2(v12, v22) {
  return v12.clone().add(v22).multiplyScalar(0.5);
}
function localToLocal(objSrc, v5, objDst) {
  const v_world = objSrc.localToWorld(v5);
  return objDst.worldToLocal(v_world);
}
var FaceControlsContext = (0, import_react18.createContext)({});
var FaceControls = (0, import_react18.forwardRef)(({
  camera,
  autostart = true,
  webcam = true,
  webcamVideoTextureSrc,
  manualUpdate = false,
  manualDetect = false,
  onVideoFrame,
  smoothTime = 0.25,
  offset = true,
  offsetScalar = 80,
  eyes = false,
  eyesAsOrigin = true,
  depth = 0.15,
  debug = false,
  facemesh,
  makeDefault
}, fref) => {
  var _faces$facialTransfor, _faces$faceBlendshape;
  const scene = useThree((state) => state.scene);
  const defaultCamera = useThree((state) => state.camera);
  const set = useThree((state) => state.set);
  const get = useThree((state) => state.get);
  const explCamera = camera || defaultCamera;
  const webcamApiRef = (0, import_react18.useRef)(null);
  const facemeshApiRef = (0, import_react18.useRef)(null);
  const [target2] = (0, import_react18.useState)(() => new Object3D());
  const [irisRightDirPos] = (0, import_react18.useState)(() => new Vector3());
  const [irisLeftDirPos] = (0, import_react18.useState)(() => new Vector3());
  const [irisRightLookAt] = (0, import_react18.useState)(() => new Vector3());
  const [irisLeftLookAt] = (0, import_react18.useState)(() => new Vector3());
  const computeTarget = (0, import_react18.useCallback)(() => {
    target2.parent = explCamera.parent;
    const facemeshApi = facemeshApiRef.current;
    if (facemeshApi) {
      const {
        outerRef,
        eyeRightRef,
        eyeLeftRef
      } = facemeshApi;
      if (eyeRightRef.current && eyeLeftRef.current) {
        const {
          irisDirRef: irisRightDirRef
        } = eyeRightRef.current;
        const {
          irisDirRef: irisLeftDirRef
        } = eyeLeftRef.current;
        if (irisRightDirRef.current && irisLeftDirRef.current && outerRef.current) {
          irisRightDirPos.copy(localToLocal(irisRightDirRef.current, new Vector3(0, 0, 0), outerRef.current));
          irisLeftDirPos.copy(localToLocal(irisLeftDirRef.current, new Vector3(0, 0, 0), outerRef.current));
          target2.position.copy(localToLocal(outerRef.current, mean2(irisRightDirPos, irisLeftDirPos), explCamera.parent || scene));
          irisRightLookAt.copy(localToLocal(irisRightDirRef.current, new Vector3(0, 0, 1), outerRef.current));
          irisLeftLookAt.copy(localToLocal(irisLeftDirRef.current, new Vector3(0, 0, 1), outerRef.current));
          target2.lookAt(outerRef.current.localToWorld(mean2(irisRightLookAt, irisLeftLookAt)));
        }
      } else {
        if (outerRef.current) {
          target2.position.copy(localToLocal(outerRef.current, new Vector3(0, 0, 0), explCamera.parent || scene));
          target2.lookAt(outerRef.current.localToWorld(new Vector3(0, 0, 1)));
        }
      }
    }
    return target2;
  }, [explCamera, irisLeftDirPos, irisLeftLookAt, irisRightDirPos, irisRightLookAt, scene, target2]);
  const [current] = (0, import_react18.useState)(() => new Object3D());
  const update = (0, import_react18.useCallback)(function(delta, target3) {
    if (explCamera) {
      var _target;
      (_target = target3) !== null && _target !== void 0 ? _target : target3 = computeTarget();
      if (smoothTime > 0) {
        const eps2 = 1e-9;
        easing.damp3(current.position, target3.position, smoothTime, delta, void 0, void 0, eps2);
        easing.dampE(current.rotation, target3.rotation, smoothTime, delta, void 0, void 0, eps2);
      } else {
        current.position.copy(target3.position);
        current.rotation.copy(target3.rotation);
      }
      explCamera.position.copy(current.position);
      explCamera.rotation.copy(current.rotation);
    }
  }, [explCamera, computeTarget, smoothTime, current.position, current.rotation]);
  const [faces, setFaces] = (0, import_react18.useState)();
  const faceLandmarker = useFaceLandmarker();
  const detect = (0, import_react18.useCallback)((video, time) => {
    const faces2 = faceLandmarker == null ? void 0 : faceLandmarker.detectForVideo(video, time);
    setFaces(faces2);
  }, [faceLandmarker]);
  useFrame((_, delta) => {
    if (!manualUpdate) {
      update(delta);
    }
  });
  const api = (0, import_react18.useMemo)(() => Object.assign(Object.create(EventDispatcher.prototype), {
    detect,
    computeTarget,
    update,
    facemeshApiRef,
    webcamApiRef,
    // shorthands
    play: () => {
      var _webcamApiRef$current, _webcamApiRef$current2;
      (_webcamApiRef$current = webcamApiRef.current) == null ? void 0 : (_webcamApiRef$current2 = _webcamApiRef$current.videoTextureApiRef.current) == null ? void 0 : _webcamApiRef$current2.texture.source.data.play();
    },
    pause: () => {
      var _webcamApiRef$current3, _webcamApiRef$current4;
      (_webcamApiRef$current3 = webcamApiRef.current) == null ? void 0 : (_webcamApiRef$current4 = _webcamApiRef$current3.videoTextureApiRef.current) == null ? void 0 : _webcamApiRef$current4.texture.source.data.pause();
    }
  }), [detect, computeTarget, update]);
  (0, import_react18.useImperativeHandle)(fref, () => api, [api]);
  (0, import_react18.useEffect)(() => {
    const onVideoFrameCb = (e2) => {
      if (!manualDetect)
        detect(e2.texture.source.data, e2.time);
      if (onVideoFrame)
        onVideoFrame(e2);
    };
    api.addEventListener("videoFrame", onVideoFrameCb);
    return () => {
      api.removeEventListener("videoFrame", onVideoFrameCb);
    };
  }, [api, detect, faceLandmarker, manualDetect, onVideoFrame]);
  (0, import_react18.useEffect)(() => {
    if (makeDefault) {
      const old = get().controls;
      set({
        controls: api
      });
      return () => set({
        controls: old
      });
    }
  }, [makeDefault, api, get, set]);
  const points = faces == null ? void 0 : faces.faceLandmarks[0];
  const facialTransformationMatrix = faces == null ? void 0 : (_faces$facialTransfor = faces.facialTransformationMatrixes) == null ? void 0 : _faces$facialTransfor[0];
  const faceBlendshapes = faces == null ? void 0 : (_faces$faceBlendshape = faces.faceBlendshapes) == null ? void 0 : _faces$faceBlendshape[0];
  return React48.createElement(FaceControlsContext.Provider, {
    value: api
  }, webcam && React48.createElement(import_react18.Suspense, {
    fallback: null
  }, React48.createElement(Webcam, {
    ref: webcamApiRef,
    autostart,
    videoTextureSrc: webcamVideoTextureSrc
  })), React48.createElement(Facemesh, _extends({
    ref: facemeshApiRef
  }, facemesh, {
    points,
    depth,
    facialTransformationMatrix,
    faceBlendshapes,
    eyes,
    eyesAsOrigin,
    offset,
    offsetScalar,
    debug,
    "rotation-z": Math.PI,
    visible: debug
  }), React48.createElement("meshBasicMaterial", {
    side: DoubleSide
  })));
});
var useFaceControls = () => (0, import_react18.useContext)(FaceControlsContext);
var Webcam = (0, import_react18.forwardRef)(({
  videoTextureSrc,
  autostart = true
}, fref) => {
  const videoTextureApiRef = (0, import_react18.useRef)(null);
  const faceControls = useFaceControls();
  const stream = suspend(async () => {
    return !videoTextureSrc ? await navigator.mediaDevices.getUserMedia({
      audio: false,
      video: {
        facingMode: "user"
      }
    }) : Promise.resolve(null);
  }, [videoTextureSrc]);
  (0, import_react18.useEffect)(() => {
    faceControls.dispatchEvent({
      type: "stream",
      stream
    });
    return () => {
      stream == null ? void 0 : stream.getTracks().forEach((track) => track.stop());
      clear([videoTextureSrc]);
    };
  }, [stream, faceControls, videoTextureSrc]);
  const api = (0, import_react18.useMemo)(() => ({
    videoTextureApiRef
  }), []);
  (0, import_react18.useImperativeHandle)(fref, () => api, [api]);
  return React48.createElement(import_react18.Suspense, {
    fallback: null
  }, React48.createElement(VideoTexture2, {
    ref: videoTextureApiRef,
    src: videoTextureSrc || stream,
    start: autostart
  }));
});
var VideoTexture2 = (0, import_react18.forwardRef)(({
  src,
  start
}, fref) => {
  const texture = useVideoTexture(src, {
    start
  });
  const video = texture.source.data;
  const faceControls = useFaceControls();
  const onVideoFrame = (0, import_react18.useCallback)((time) => {
    faceControls.dispatchEvent({
      type: "videoFrame",
      texture,
      time
    });
  }, [texture, faceControls]);
  useVideoFrame(video, onVideoFrame);
  const api = (0, import_react18.useMemo)(() => ({
    texture
  }), [texture]);
  (0, import_react18.useImperativeHandle)(fref, () => api, [api]);
  return React48.createElement(React48.Fragment, null);
});
var useVideoFrame = (video, f3) => {
  (0, import_react18.useEffect)(() => {
    if (!video || !video.requestVideoFrameCallback)
      return;
    let handle;
    function callback(...args) {
      f3(...args);
      handle = video.requestVideoFrameCallback(callback);
    }
    video.requestVideoFrameCallback(callback);
    return () => video.cancelVideoFrameCallback(handle);
  }, [video, f3]);
};

// node_modules/r3f-perf/node_modules/@react-three/drei/core/GizmoHelper.js
var React50 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Hud.js
var React49 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/GizmoHelper.js
var Context = React50.createContext({});
var turnRate = 2 * Math.PI;
var dummy = new Object3D();
var matrix = new Matrix4();
var [q1, q2] = [new Quaternion(), new Quaternion()];
var target = new Vector3();
var targetPosition = new Vector3();

// node_modules/r3f-perf/node_modules/@react-three/drei/core/GizmoViewcube.js
var React51 = __toESM(require_react());
var makePositionVector = (xyz) => new Vector3(...xyz).multiplyScalar(0.38);
var corners = [[1, 1, 1], [1, 1, -1], [1, -1, 1], [1, -1, -1], [-1, 1, 1], [-1, 1, -1], [-1, -1, 1], [-1, -1, -1]].map(makePositionVector);
var edges = [[1, 1, 0], [1, 0, 1], [1, 0, -1], [1, -1, 0], [0, 1, 1], [0, 1, -1], [0, -1, 1], [0, -1, -1], [-1, 1, 0], [-1, 0, 1], [-1, 0, -1], [-1, -1, 0]].map(makePositionVector);
var edgeDimensions = edges.map((edge) => edge.toArray().map((axis) => axis == 0 ? 0.5 : 0.25));

// node_modules/r3f-perf/node_modules/@react-three/drei/core/GizmoViewport.js
var React52 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Grid.js
var React53 = __toESM(require_react());
var GridMaterial = shaderMaterial(
  {
    cellSize: 0.5,
    sectionSize: 1,
    fadeDistance: 100,
    fadeStrength: 1,
    cellThickness: 0.5,
    sectionThickness: 1,
    cellColor: new Color(),
    sectionColor: new Color(),
    infiniteGrid: false,
    followCamera: false,
    worldCamProjPosition: new Vector3(),
    worldPlanePosition: new Vector3()
  },
  /* glsl */
  `
    varying vec3 localPosition;
    varying vec4 worldPosition;

    uniform vec3 worldCamProjPosition;
    uniform vec3 worldPlanePosition;
    uniform float fadeDistance;
    uniform bool infiniteGrid;
    uniform bool followCamera;

    void main() {
      localPosition = position.xzy;
      if (infiniteGrid) localPosition *= 1.0 + fadeDistance;
      
      worldPosition = modelMatrix * vec4(localPosition, 1.0);
      if (followCamera) {
        worldPosition.xyz += (worldCamProjPosition - worldPlanePosition);
        localPosition = (inverse(modelMatrix) * worldPosition).xyz;
      }

      gl_Position = projectionMatrix * viewMatrix * worldPosition;
    }
  `,
  /* glsl */
  `
    varying vec3 localPosition;
    varying vec4 worldPosition;

    uniform vec3 worldCamProjPosition;
    uniform float cellSize;
    uniform float sectionSize;
    uniform vec3 cellColor;
    uniform vec3 sectionColor;
    uniform float fadeDistance;
    uniform float fadeStrength;
    uniform float cellThickness;
    uniform float sectionThickness;

    float getGrid(float size, float thickness) {
      vec2 r = localPosition.xz / size;
      vec2 grid = abs(fract(r - 0.5) - 0.5) / fwidth(r);
      float line = min(grid.x, grid.y) + 1.0 - thickness;
      return 1.0 - min(line, 1.0);
    }

    void main() {
      float g1 = getGrid(cellSize, cellThickness);
      float g2 = getGrid(sectionSize, sectionThickness);

      float dist = distance(worldCamProjPosition, worldPosition.xyz);
      float d = 1.0 - min(dist / fadeDistance, 1.0);
      vec3 color = mix(cellColor, sectionColor, min(1.0, sectionThickness * g2));

      gl_FragColor = vec4(color, (g1 + g2) * pow(d, fadeStrength));
      gl_FragColor.a = mix(0.75 * gl_FragColor.a, gl_FragColor.a, g2);
      if (gl_FragColor.a <= 0.0) discard;

      #include <tonemapping_fragment>
      #include <encodings_fragment>
    }
  `
);
var Grid = React53.forwardRef(({
  args,
  cellColor = "#000000",
  sectionColor = "#2080ff",
  cellSize = 0.5,
  sectionSize = 1,
  followCamera = false,
  infiniteGrid = false,
  fadeDistance = 100,
  fadeStrength = 1,
  cellThickness = 0.5,
  sectionThickness = 1,
  side = BackSide,
  ...props
}, fRef) => {
  extend({
    GridMaterial
  });
  const ref = React53.useRef(null);
  useFrame((state) => {
    const plane = new Plane().setFromNormalAndCoplanarPoint(new Vector3(0, 1, 0), new Vector3(0, 0, 0)).applyMatrix4(ref.current.matrixWorld);
    const gridMaterial = ref.current.material;
    const worldCamProjPosition = gridMaterial.uniforms.worldCamProjPosition;
    const worldPlanePosition = gridMaterial.uniforms.worldPlanePosition;
    plane.projectPoint(state.camera.position, worldCamProjPosition.value);
    worldPlanePosition.value.set(0, 0, 0).applyMatrix4(ref.current.matrixWorld);
  });
  const uniforms1 = {
    cellSize,
    sectionSize,
    cellColor,
    sectionColor,
    cellThickness,
    sectionThickness
  };
  const uniforms2 = {
    fadeDistance,
    fadeStrength,
    infiniteGrid,
    followCamera
  };
  return React53.createElement("mesh", _extends({
    ref: react_merge_refs_esm_default([ref, fRef]),
    frustumCulled: false
  }, props), React53.createElement("gridMaterial", _extends({
    transparent: true,
    "extensions-derivatives": true,
    side
  }, uniforms1, uniforms2)), React53.createElement("planeGeometry", {
    args
  }));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/useCubeTexture.js
function useCubeTexture(files, {
  path
}) {
  const [cubeTexture] = useLoader(
    // @ts-ignore
    CubeTextureLoader,
    [files],
    (loader2) => loader2.setPath(path)
  );
  return cubeTexture;
}
useCubeTexture.preload = (files, {
  path
}) => useLoader.preload(
  // @ts-ignore
  CubeTextureLoader,
  [files],
  (loader2) => loader2.setPath(path)
);

// node_modules/r3f-perf/node_modules/@react-three/drei/core/useFBX.js
function useFBX(path) {
  return useLoader(FBXLoader, path);
}
useFBX.preload = (path) => useLoader.preload(FBXLoader, path);
useFBX.clear = (input) => useLoader.clear(FBXLoader, input);

// node_modules/r3f-perf/node_modules/@react-three/drei/core/useKTX2.js
var import_react19 = __toESM(require_react());
var cdn = "https://cdn.jsdelivr.net/gh/pmndrs/drei-assets@master";
function useKTX2(input, basisPath = `${cdn}/basis/`) {
  const gl = useThree((state) => state.gl);
  const textures = useLoader(KTX2Loader, IsObject(input) ? Object.values(input) : input, (loader2) => {
    loader2.detectSupport(gl);
    loader2.setTranscoderPath(basisPath);
  });
  (0, import_react19.useEffect)(() => {
    const array = Array.isArray(textures) ? textures : [textures];
    array.forEach(gl.initTexture);
  }, [gl, textures]);
  if (IsObject(input)) {
    const keys = Object.keys(input);
    const keyed = {};
    keys.forEach((key) => Object.assign(keyed, {
      [key]: textures[keys.indexOf(key)]
    }));
    return keyed;
  } else {
    return textures;
  }
}
useKTX2.preload = (url, basisPath = `${cdn}/basis/`) => useLoader.preload(KTX2Loader, url, (loader2) => {
  loader2.setTranscoderPath(basisPath);
});
useKTX2.clear = (input) => useLoader.clear(KTX2Loader, input);

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Stats.js
var React55 = __toESM(require_react());
var import_stats = __toESM(require_stats_min());

// node_modules/r3f-perf/node_modules/@react-three/drei/helpers/useEffectfulState.js
var React54 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/useDepthBuffer.js
var React56 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/useCamera.js
var React57 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/useHelper.js
var React58 = __toESM(require_react());
function useHelper(object3D, helperConstructor, ...args) {
  const helper = React58.useRef();
  const scene = useThree((state) => state.scene);
  React58.useLayoutEffect(() => {
    let currentHelper = void 0;
    if (object3D && object3D != null && object3D.current && helperConstructor) {
      helper.current = currentHelper = new helperConstructor(object3D.current, ...args);
    }
    if (currentHelper) {
      currentHelper.traverse((child) => child.raycast = () => null);
      scene.add(currentHelper);
      return () => {
        helper.current = void 0;
        scene.remove(currentHelper);
        currentHelper.dispose == null ? void 0 : currentHelper.dispose();
      };
    }
  }, [scene, helperConstructor, object3D, ...args]);
  useFrame(() => {
    var _helper$current;
    return void ((_helper$current = helper.current) == null ? void 0 : _helper$current.update == null ? void 0 : _helper$current.update());
  });
  return helper;
}

// node_modules/r3f-perf/node_modules/@react-three/drei/core/useBVH.js
var React59 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/three-mesh-bvh/src/core/Constants.js
var CENTER = 0;
var AVERAGE = 1;
var SAH = 2;
var CONTAINED = 2;
var TRIANGLE_INTERSECT_COST = 1.25;
var TRAVERSAL_COST = 1;
var BYTES_PER_NODE = 6 * 4 + 4 + 4;
var IS_LEAFNODE_FLAG = 65535;
var FLOAT32_EPSILON = Math.pow(2, -24);

// node_modules/r3f-perf/node_modules/three-mesh-bvh/src/core/MeshBVHNode.js
var MeshBVHNode = class {
  constructor() {
  }
};

// node_modules/r3f-perf/node_modules/three-mesh-bvh/src/utils/ArrayBoxUtilities.js
function arrayToBox(nodeIndex32, array, target2) {
  target2.min.x = array[nodeIndex32];
  target2.min.y = array[nodeIndex32 + 1];
  target2.min.z = array[nodeIndex32 + 2];
  target2.max.x = array[nodeIndex32 + 3];
  target2.max.y = array[nodeIndex32 + 4];
  target2.max.z = array[nodeIndex32 + 5];
  return target2;
}
function getLongestEdgeIndex(bounds) {
  let splitDimIdx = -1;
  let splitDist = -Infinity;
  for (let i3 = 0; i3 < 3; i3++) {
    const dist = bounds[i3 + 3] - bounds[i3];
    if (dist > splitDist) {
      splitDist = dist;
      splitDimIdx = i3;
    }
  }
  return splitDimIdx;
}
function copyBounds(source, target2) {
  target2.set(source);
}
function unionBounds(a3, b2, target2) {
  let aVal, bVal;
  for (let d2 = 0; d2 < 3; d2++) {
    const d3 = d2 + 3;
    aVal = a3[d2];
    bVal = b2[d2];
    target2[d2] = aVal < bVal ? aVal : bVal;
    aVal = a3[d3];
    bVal = b2[d3];
    target2[d3] = aVal > bVal ? aVal : bVal;
  }
}
function expandByTriangleBounds(startIndex, triangleBounds, bounds) {
  for (let d2 = 0; d2 < 3; d2++) {
    const tCenter = triangleBounds[startIndex + 2 * d2];
    const tHalf = triangleBounds[startIndex + 2 * d2 + 1];
    const tMin = tCenter - tHalf;
    const tMax = tCenter + tHalf;
    if (tMin < bounds[d2]) {
      bounds[d2] = tMin;
    }
    if (tMax > bounds[d2 + 3]) {
      bounds[d2 + 3] = tMax;
    }
  }
}
function computeSurfaceArea(bounds) {
  const d0 = bounds[3] - bounds[0];
  const d1 = bounds[4] - bounds[1];
  const d2 = bounds[5] - bounds[2];
  return 2 * (d0 * d1 + d1 * d2 + d2 * d0);
}

// node_modules/r3f-perf/node_modules/three-mesh-bvh/src/core/buildFunctions.js
function ensureIndex(geo, options) {
  if (!geo.index) {
    const vertexCount = geo.attributes.position.count;
    const BufferConstructor = options.useSharedArrayBuffer ? SharedArrayBuffer : ArrayBuffer;
    let index;
    if (vertexCount > 65535) {
      index = new Uint32Array(new BufferConstructor(4 * vertexCount));
    } else {
      index = new Uint16Array(new BufferConstructor(2 * vertexCount));
    }
    geo.setIndex(new BufferAttribute(index, 1));
    for (let i3 = 0; i3 < vertexCount; i3++) {
      index[i3] = i3;
    }
  }
}
function getRootIndexRanges(geo) {
  if (!geo.groups || !geo.groups.length) {
    return [{ offset: 0, count: geo.index.count / 3 }];
  }
  const ranges = [];
  const rangeBoundaries = /* @__PURE__ */ new Set();
  for (const group of geo.groups) {
    rangeBoundaries.add(group.start);
    rangeBoundaries.add(group.start + group.count);
  }
  const sortedBoundaries = Array.from(rangeBoundaries.values()).sort((a3, b2) => a3 - b2);
  for (let i3 = 0; i3 < sortedBoundaries.length - 1; i3++) {
    const start = sortedBoundaries[i3], end = sortedBoundaries[i3 + 1];
    ranges.push({ offset: start / 3, count: (end - start) / 3 });
  }
  return ranges;
}
function getBounds(triangleBounds, offset, count, target2, centroidTarget = null) {
  let minx = Infinity;
  let miny = Infinity;
  let minz = Infinity;
  let maxx = -Infinity;
  let maxy = -Infinity;
  let maxz = -Infinity;
  let cminx = Infinity;
  let cminy = Infinity;
  let cminz = Infinity;
  let cmaxx = -Infinity;
  let cmaxy = -Infinity;
  let cmaxz = -Infinity;
  const includeCentroid = centroidTarget !== null;
  for (let i3 = offset * 6, end = (offset + count) * 6; i3 < end; i3 += 6) {
    const cx = triangleBounds[i3 + 0];
    const hx = triangleBounds[i3 + 1];
    const lx = cx - hx;
    const rx = cx + hx;
    if (lx < minx)
      minx = lx;
    if (rx > maxx)
      maxx = rx;
    if (includeCentroid && cx < cminx)
      cminx = cx;
    if (includeCentroid && cx > cmaxx)
      cmaxx = cx;
    const cy = triangleBounds[i3 + 2];
    const hy = triangleBounds[i3 + 3];
    const ly = cy - hy;
    const ry = cy + hy;
    if (ly < miny)
      miny = ly;
    if (ry > maxy)
      maxy = ry;
    if (includeCentroid && cy < cminy)
      cminy = cy;
    if (includeCentroid && cy > cmaxy)
      cmaxy = cy;
    const cz = triangleBounds[i3 + 4];
    const hz = triangleBounds[i3 + 5];
    const lz = cz - hz;
    const rz = cz + hz;
    if (lz < minz)
      minz = lz;
    if (rz > maxz)
      maxz = rz;
    if (includeCentroid && cz < cminz)
      cminz = cz;
    if (includeCentroid && cz > cmaxz)
      cmaxz = cz;
  }
  target2[0] = minx;
  target2[1] = miny;
  target2[2] = minz;
  target2[3] = maxx;
  target2[4] = maxy;
  target2[5] = maxz;
  if (includeCentroid) {
    centroidTarget[0] = cminx;
    centroidTarget[1] = cminy;
    centroidTarget[2] = cminz;
    centroidTarget[3] = cmaxx;
    centroidTarget[4] = cmaxy;
    centroidTarget[5] = cmaxz;
  }
}
function getCentroidBounds(triangleBounds, offset, count, centroidTarget) {
  let cminx = Infinity;
  let cminy = Infinity;
  let cminz = Infinity;
  let cmaxx = -Infinity;
  let cmaxy = -Infinity;
  let cmaxz = -Infinity;
  for (let i3 = offset * 6, end = (offset + count) * 6; i3 < end; i3 += 6) {
    const cx = triangleBounds[i3 + 0];
    if (cx < cminx)
      cminx = cx;
    if (cx > cmaxx)
      cmaxx = cx;
    const cy = triangleBounds[i3 + 2];
    if (cy < cminy)
      cminy = cy;
    if (cy > cmaxy)
      cmaxy = cy;
    const cz = triangleBounds[i3 + 4];
    if (cz < cminz)
      cminz = cz;
    if (cz > cmaxz)
      cmaxz = cz;
  }
  centroidTarget[0] = cminx;
  centroidTarget[1] = cminy;
  centroidTarget[2] = cminz;
  centroidTarget[3] = cmaxx;
  centroidTarget[4] = cmaxy;
  centroidTarget[5] = cmaxz;
}
function partition(index, triangleBounds, offset, count, split) {
  let left = offset;
  let right = offset + count - 1;
  const pos = split.pos;
  const axisOffset = split.axis * 2;
  while (true) {
    while (left <= right && triangleBounds[left * 6 + axisOffset] < pos) {
      left++;
    }
    while (left <= right && triangleBounds[right * 6 + axisOffset] >= pos) {
      right--;
    }
    if (left < right) {
      for (let i3 = 0; i3 < 3; i3++) {
        let t0 = index[left * 3 + i3];
        index[left * 3 + i3] = index[right * 3 + i3];
        index[right * 3 + i3] = t0;
        let t1 = triangleBounds[left * 6 + i3 * 2 + 0];
        triangleBounds[left * 6 + i3 * 2 + 0] = triangleBounds[right * 6 + i3 * 2 + 0];
        triangleBounds[right * 6 + i3 * 2 + 0] = t1;
        let t2 = triangleBounds[left * 6 + i3 * 2 + 1];
        triangleBounds[left * 6 + i3 * 2 + 1] = triangleBounds[right * 6 + i3 * 2 + 1];
        triangleBounds[right * 6 + i3 * 2 + 1] = t2;
      }
      left++;
      right--;
    } else {
      return left;
    }
  }
}
var BIN_COUNT = 32;
var binsSort = (a3, b2) => a3.candidate - b2.candidate;
var sahBins = new Array(BIN_COUNT).fill().map(() => {
  return {
    count: 0,
    bounds: new Float32Array(6),
    rightCacheBounds: new Float32Array(6),
    leftCacheBounds: new Float32Array(6),
    candidate: 0
  };
});
var leftBounds = new Float32Array(6);
function getOptimalSplit(nodeBoundingData, centroidBoundingData, triangleBounds, offset, count, strategy) {
  let axis = -1;
  let pos = 0;
  if (strategy === CENTER) {
    axis = getLongestEdgeIndex(centroidBoundingData);
    if (axis !== -1) {
      pos = (centroidBoundingData[axis] + centroidBoundingData[axis + 3]) / 2;
    }
  } else if (strategy === AVERAGE) {
    axis = getLongestEdgeIndex(nodeBoundingData);
    if (axis !== -1) {
      pos = getAverage(triangleBounds, offset, count, axis);
    }
  } else if (strategy === SAH) {
    const rootSurfaceArea = computeSurfaceArea(nodeBoundingData);
    let bestCost = TRIANGLE_INTERSECT_COST * count;
    const cStart = offset * 6;
    const cEnd = (offset + count) * 6;
    for (let a3 = 0; a3 < 3; a3++) {
      const axisLeft = centroidBoundingData[a3];
      const axisRight = centroidBoundingData[a3 + 3];
      const axisLength = axisRight - axisLeft;
      const binWidth = axisLength / BIN_COUNT;
      if (count < BIN_COUNT / 4) {
        const truncatedBins = [...sahBins];
        truncatedBins.length = count;
        let b2 = 0;
        for (let c2 = cStart; c2 < cEnd; c2 += 6, b2++) {
          const bin = truncatedBins[b2];
          bin.candidate = triangleBounds[c2 + 2 * a3];
          bin.count = 0;
          const {
            bounds,
            leftCacheBounds,
            rightCacheBounds
          } = bin;
          for (let d2 = 0; d2 < 3; d2++) {
            rightCacheBounds[d2] = Infinity;
            rightCacheBounds[d2 + 3] = -Infinity;
            leftCacheBounds[d2] = Infinity;
            leftCacheBounds[d2 + 3] = -Infinity;
            bounds[d2] = Infinity;
            bounds[d2 + 3] = -Infinity;
          }
          expandByTriangleBounds(c2, triangleBounds, bounds);
        }
        truncatedBins.sort(binsSort);
        let splitCount = count;
        for (let bi = 0; bi < splitCount; bi++) {
          const bin = truncatedBins[bi];
          while (bi + 1 < splitCount && truncatedBins[bi + 1].candidate === bin.candidate) {
            truncatedBins.splice(bi + 1, 1);
            splitCount--;
          }
        }
        for (let c2 = cStart; c2 < cEnd; c2 += 6) {
          const center = triangleBounds[c2 + 2 * a3];
          for (let bi = 0; bi < splitCount; bi++) {
            const bin = truncatedBins[bi];
            if (center >= bin.candidate) {
              expandByTriangleBounds(c2, triangleBounds, bin.rightCacheBounds);
            } else {
              expandByTriangleBounds(c2, triangleBounds, bin.leftCacheBounds);
              bin.count++;
            }
          }
        }
        for (let bi = 0; bi < splitCount; bi++) {
          const bin = truncatedBins[bi];
          const leftCount = bin.count;
          const rightCount = count - bin.count;
          const leftBounds2 = bin.leftCacheBounds;
          const rightBounds = bin.rightCacheBounds;
          let leftProb = 0;
          if (leftCount !== 0) {
            leftProb = computeSurfaceArea(leftBounds2) / rootSurfaceArea;
          }
          let rightProb = 0;
          if (rightCount !== 0) {
            rightProb = computeSurfaceArea(rightBounds) / rootSurfaceArea;
          }
          const cost = TRAVERSAL_COST + TRIANGLE_INTERSECT_COST * (leftProb * leftCount + rightProb * rightCount);
          if (cost < bestCost) {
            axis = a3;
            bestCost = cost;
            pos = bin.candidate;
          }
        }
      } else {
        for (let i3 = 0; i3 < BIN_COUNT; i3++) {
          const bin = sahBins[i3];
          bin.count = 0;
          bin.candidate = axisLeft + binWidth + i3 * binWidth;
          const bounds = bin.bounds;
          for (let d2 = 0; d2 < 3; d2++) {
            bounds[d2] = Infinity;
            bounds[d2 + 3] = -Infinity;
          }
        }
        for (let c2 = cStart; c2 < cEnd; c2 += 6) {
          const triCenter = triangleBounds[c2 + 2 * a3];
          const relativeCenter = triCenter - axisLeft;
          let binIndex = ~~(relativeCenter / binWidth);
          if (binIndex >= BIN_COUNT)
            binIndex = BIN_COUNT - 1;
          const bin = sahBins[binIndex];
          bin.count++;
          expandByTriangleBounds(c2, triangleBounds, bin.bounds);
        }
        const lastBin = sahBins[BIN_COUNT - 1];
        copyBounds(lastBin.bounds, lastBin.rightCacheBounds);
        for (let i3 = BIN_COUNT - 2; i3 >= 0; i3--) {
          const bin = sahBins[i3];
          const nextBin = sahBins[i3 + 1];
          unionBounds(bin.bounds, nextBin.rightCacheBounds, bin.rightCacheBounds);
        }
        let leftCount = 0;
        for (let i3 = 0; i3 < BIN_COUNT - 1; i3++) {
          const bin = sahBins[i3];
          const binCount = bin.count;
          const bounds = bin.bounds;
          const nextBin = sahBins[i3 + 1];
          const rightBounds = nextBin.rightCacheBounds;
          if (binCount !== 0) {
            if (leftCount === 0) {
              copyBounds(bounds, leftBounds);
            } else {
              unionBounds(bounds, leftBounds, leftBounds);
            }
          }
          leftCount += binCount;
          let leftProb = 0;
          let rightProb = 0;
          if (leftCount !== 0) {
            leftProb = computeSurfaceArea(leftBounds) / rootSurfaceArea;
          }
          const rightCount = count - leftCount;
          if (rightCount !== 0) {
            rightProb = computeSurfaceArea(rightBounds) / rootSurfaceArea;
          }
          const cost = TRAVERSAL_COST + TRIANGLE_INTERSECT_COST * (leftProb * leftCount + rightProb * rightCount);
          if (cost < bestCost) {
            axis = a3;
            bestCost = cost;
            pos = bin.candidate;
          }
        }
      }
    }
  } else {
    console.warn(`MeshBVH: Invalid build strategy value ${strategy} used.`);
  }
  return { axis, pos };
}
function getAverage(triangleBounds, offset, count, axis) {
  let avg = 0;
  for (let i3 = offset, end = offset + count; i3 < end; i3++) {
    avg += triangleBounds[i3 * 6 + axis * 2];
  }
  return avg / count;
}
function computeTriangleBounds(geo, fullBounds) {
  const posAttr = geo.attributes.position;
  const index = geo.index.array;
  const triCount = index.length / 3;
  const triangleBounds = new Float32Array(triCount * 6);
  const normalized = posAttr.normalized;
  const posArr = posAttr.array;
  const bufferOffset = posAttr.offset || 0;
  let stride = 3;
  if (posAttr.isInterleavedBufferAttribute) {
    stride = posAttr.data.stride;
  }
  const getters = ["getX", "getY", "getZ"];
  for (let tri = 0; tri < triCount; tri++) {
    const tri3 = tri * 3;
    const tri6 = tri * 6;
    let ai, bi, ci;
    if (normalized) {
      ai = index[tri3 + 0];
      bi = index[tri3 + 1];
      ci = index[tri3 + 2];
    } else {
      ai = index[tri3 + 0] * stride + bufferOffset;
      bi = index[tri3 + 1] * stride + bufferOffset;
      ci = index[tri3 + 2] * stride + bufferOffset;
    }
    for (let el = 0; el < 3; el++) {
      let a3, b2, c2;
      if (normalized) {
        a3 = posAttr[getters[el]](ai);
        b2 = posAttr[getters[el]](bi);
        c2 = posAttr[getters[el]](ci);
      } else {
        a3 = posArr[ai + el];
        b2 = posArr[bi + el];
        c2 = posArr[ci + el];
      }
      let min = a3;
      if (b2 < min)
        min = b2;
      if (c2 < min)
        min = c2;
      let max = a3;
      if (b2 > max)
        max = b2;
      if (c2 > max)
        max = c2;
      const halfExtents = (max - min) / 2;
      const el2 = el * 2;
      triangleBounds[tri6 + el2 + 0] = min + halfExtents;
      triangleBounds[tri6 + el2 + 1] = halfExtents + (Math.abs(min) + halfExtents) * FLOAT32_EPSILON;
      if (min < fullBounds[el])
        fullBounds[el] = min;
      if (max > fullBounds[el + 3])
        fullBounds[el + 3] = max;
    }
  }
  return triangleBounds;
}
function buildTree(geo, options) {
  function triggerProgress(trianglesProcessed) {
    if (onProgress) {
      onProgress(trianglesProcessed / totalTriangles);
    }
  }
  function splitNode(node, offset, count, centroidBoundingData = null, depth = 0) {
    if (!reachedMaxDepth && depth >= maxDepth) {
      reachedMaxDepth = true;
      if (verbose) {
        console.warn(`MeshBVH: Max depth of ${maxDepth} reached when generating BVH. Consider increasing maxDepth.`);
        console.warn(geo);
      }
    }
    if (count <= maxLeafTris || depth >= maxDepth) {
      triggerProgress(offset + count);
      node.offset = offset;
      node.count = count;
      return node;
    }
    const split = getOptimalSplit(node.boundingData, centroidBoundingData, triangleBounds, offset, count, strategy);
    if (split.axis === -1) {
      triggerProgress(offset + count);
      node.offset = offset;
      node.count = count;
      return node;
    }
    const splitOffset = partition(indexArray, triangleBounds, offset, count, split);
    if (splitOffset === offset || splitOffset === offset + count) {
      triggerProgress(offset + count);
      node.offset = offset;
      node.count = count;
    } else {
      node.splitAxis = split.axis;
      const left = new MeshBVHNode();
      const lstart = offset;
      const lcount = splitOffset - offset;
      node.left = left;
      left.boundingData = new Float32Array(6);
      getBounds(triangleBounds, lstart, lcount, left.boundingData, cacheCentroidBoundingData);
      splitNode(left, lstart, lcount, cacheCentroidBoundingData, depth + 1);
      const right = new MeshBVHNode();
      const rstart = splitOffset;
      const rcount = count - lcount;
      node.right = right;
      right.boundingData = new Float32Array(6);
      getBounds(triangleBounds, rstart, rcount, right.boundingData, cacheCentroidBoundingData);
      splitNode(right, rstart, rcount, cacheCentroidBoundingData, depth + 1);
    }
    return node;
  }
  ensureIndex(geo, options);
  const fullBounds = new Float32Array(6);
  const cacheCentroidBoundingData = new Float32Array(6);
  const triangleBounds = computeTriangleBounds(geo, fullBounds);
  const indexArray = geo.index.array;
  const maxDepth = options.maxDepth;
  const verbose = options.verbose;
  const maxLeafTris = options.maxLeafTris;
  const strategy = options.strategy;
  const onProgress = options.onProgress;
  const totalTriangles = geo.index.count / 3;
  let reachedMaxDepth = false;
  const roots = [];
  const ranges = getRootIndexRanges(geo);
  if (ranges.length === 1) {
    const range = ranges[0];
    const root = new MeshBVHNode();
    root.boundingData = fullBounds;
    getCentroidBounds(triangleBounds, range.offset, range.count, cacheCentroidBoundingData);
    splitNode(root, range.offset, range.count, cacheCentroidBoundingData);
    roots.push(root);
  } else {
    for (let range of ranges) {
      const root = new MeshBVHNode();
      root.boundingData = new Float32Array(6);
      getBounds(triangleBounds, range.offset, range.count, root.boundingData, cacheCentroidBoundingData);
      splitNode(root, range.offset, range.count, cacheCentroidBoundingData);
      roots.push(root);
    }
  }
  return roots;
}
function buildPackedTree(geo, options) {
  const roots = buildTree(geo, options);
  let float32Array;
  let uint32Array;
  let uint16Array;
  const packedRoots = [];
  const BufferConstructor = options.useSharedArrayBuffer ? SharedArrayBuffer : ArrayBuffer;
  for (let i3 = 0; i3 < roots.length; i3++) {
    const root = roots[i3];
    let nodeCount = countNodes(root);
    const buffer = new BufferConstructor(BYTES_PER_NODE * nodeCount);
    float32Array = new Float32Array(buffer);
    uint32Array = new Uint32Array(buffer);
    uint16Array = new Uint16Array(buffer);
    populateBuffer(0, root);
    packedRoots.push(buffer);
  }
  return packedRoots;
  function countNodes(node) {
    if (node.count) {
      return 1;
    } else {
      return 1 + countNodes(node.left) + countNodes(node.right);
    }
  }
  function populateBuffer(byteOffset, node) {
    const stride4Offset = byteOffset / 4;
    const stride2Offset = byteOffset / 2;
    const isLeaf = !!node.count;
    const boundingData = node.boundingData;
    for (let i3 = 0; i3 < 6; i3++) {
      float32Array[stride4Offset + i3] = boundingData[i3];
    }
    if (isLeaf) {
      const offset = node.offset;
      const count = node.count;
      uint32Array[stride4Offset + 6] = offset;
      uint16Array[stride2Offset + 14] = count;
      uint16Array[stride2Offset + 15] = IS_LEAFNODE_FLAG;
      return byteOffset + BYTES_PER_NODE;
    } else {
      const left = node.left;
      const right = node.right;
      const splitAxis = node.splitAxis;
      let nextUnusedPointer;
      nextUnusedPointer = populateBuffer(byteOffset + BYTES_PER_NODE, left);
      if (nextUnusedPointer / 4 > Math.pow(2, 32)) {
        throw new Error("MeshBVH: Cannot store child pointer greater than 32 bits.");
      }
      uint32Array[stride4Offset + 6] = nextUnusedPointer / 4;
      nextUnusedPointer = populateBuffer(nextUnusedPointer, right);
      uint32Array[stride4Offset + 7] = splitAxis;
      return nextUnusedPointer;
    }
  }
}

// node_modules/r3f-perf/node_modules/three-mesh-bvh/src/math/SeparatingAxisBounds.js
var SeparatingAxisBounds = class {
  constructor() {
    this.min = Infinity;
    this.max = -Infinity;
  }
  setFromPointsField(points, field) {
    let min = Infinity;
    let max = -Infinity;
    for (let i3 = 0, l2 = points.length; i3 < l2; i3++) {
      const p2 = points[i3];
      const val = p2[field];
      min = val < min ? val : min;
      max = val > max ? val : max;
    }
    this.min = min;
    this.max = max;
  }
  setFromPoints(axis, points) {
    let min = Infinity;
    let max = -Infinity;
    for (let i3 = 0, l2 = points.length; i3 < l2; i3++) {
      const p2 = points[i3];
      const val = axis.dot(p2);
      min = val < min ? val : min;
      max = val > max ? val : max;
    }
    this.min = min;
    this.max = max;
  }
  isSeparated(other) {
    return this.min > other.max || other.min > this.max;
  }
};
SeparatingAxisBounds.prototype.setFromBox = function() {
  const p2 = new Vector3();
  return function setFromBox(axis, box) {
    const boxMin = box.min;
    const boxMax = box.max;
    let min = Infinity;
    let max = -Infinity;
    for (let x2 = 0; x2 <= 1; x2++) {
      for (let y2 = 0; y2 <= 1; y2++) {
        for (let z2 = 0; z2 <= 1; z2++) {
          p2.x = boxMin.x * x2 + boxMax.x * (1 - x2);
          p2.y = boxMin.y * y2 + boxMax.y * (1 - y2);
          p2.z = boxMin.z * z2 + boxMax.z * (1 - z2);
          const val = axis.dot(p2);
          min = Math.min(val, min);
          max = Math.max(val, max);
        }
      }
    }
    this.min = min;
    this.max = max;
  };
}();
var areIntersecting = function() {
  const cacheSatBounds = new SeparatingAxisBounds();
  return function areIntersecting2(shape1, shape2) {
    const points1 = shape1.points;
    const satAxes1 = shape1.satAxes;
    const satBounds1 = shape1.satBounds;
    const points2 = shape2.points;
    const satAxes2 = shape2.satAxes;
    const satBounds2 = shape2.satBounds;
    for (let i3 = 0; i3 < 3; i3++) {
      const sb = satBounds1[i3];
      const sa = satAxes1[i3];
      cacheSatBounds.setFromPoints(sa, points2);
      if (sb.isSeparated(cacheSatBounds))
        return false;
    }
    for (let i3 = 0; i3 < 3; i3++) {
      const sb = satBounds2[i3];
      const sa = satAxes2[i3];
      cacheSatBounds.setFromPoints(sa, points1);
      if (sb.isSeparated(cacheSatBounds))
        return false;
    }
  };
}();

// node_modules/r3f-perf/node_modules/three-mesh-bvh/src/math/MathUtilities.js
var closestPointLineToLine = function() {
  const dir1 = new Vector3();
  const dir2 = new Vector3();
  const v02 = new Vector3();
  return function closestPointLineToLine2(l1, l2, result) {
    const v0 = l1.start;
    const v10 = dir1;
    const v22 = l2.start;
    const v32 = dir2;
    v02.subVectors(v0, v22);
    dir1.subVectors(l1.end, l1.start);
    dir2.subVectors(l2.end, l2.start);
    const d0232 = v02.dot(v32);
    const d3210 = v32.dot(v10);
    const d3232 = v32.dot(v32);
    const d0210 = v02.dot(v10);
    const d1010 = v10.dot(v10);
    const denom = d1010 * d3232 - d3210 * d3210;
    let d2, d22;
    if (denom !== 0) {
      d2 = (d0232 * d3210 - d0210 * d3232) / denom;
    } else {
      d2 = 0;
    }
    d22 = (d0232 + d2 * d3210) / d3232;
    result.x = d2;
    result.y = d22;
  };
}();
var closestPointsSegmentToSegment = function() {
  const paramResult = new Vector2();
  const temp12 = new Vector3();
  const temp22 = new Vector3();
  return function closestPointsSegmentToSegment2(l1, l2, target1, target2) {
    closestPointLineToLine(l1, l2, paramResult);
    let d2 = paramResult.x;
    let d22 = paramResult.y;
    if (d2 >= 0 && d2 <= 1 && d22 >= 0 && d22 <= 1) {
      l1.at(d2, target1);
      l2.at(d22, target2);
      return;
    } else if (d2 >= 0 && d2 <= 1) {
      if (d22 < 0) {
        l2.at(0, target2);
      } else {
        l2.at(1, target2);
      }
      l1.closestPointToPoint(target2, true, target1);
      return;
    } else if (d22 >= 0 && d22 <= 1) {
      if (d2 < 0) {
        l1.at(0, target1);
      } else {
        l1.at(1, target1);
      }
      l2.closestPointToPoint(target1, true, target2);
      return;
    } else {
      let p2;
      if (d2 < 0) {
        p2 = l1.start;
      } else {
        p2 = l1.end;
      }
      let p22;
      if (d22 < 0) {
        p22 = l2.start;
      } else {
        p22 = l2.end;
      }
      const closestPoint = temp12;
      const closestPoint2 = temp22;
      l1.closestPointToPoint(p22, true, temp12);
      l2.closestPointToPoint(p2, true, temp22);
      if (closestPoint.distanceToSquared(p22) <= closestPoint2.distanceToSquared(p2)) {
        target1.copy(closestPoint);
        target2.copy(p22);
        return;
      } else {
        target1.copy(p2);
        target2.copy(closestPoint2);
        return;
      }
    }
  };
}();
var sphereIntersectTriangle = function() {
  const closestPointTemp = new Vector3();
  const projectedPointTemp = new Vector3();
  const planeTemp = new Plane();
  const lineTemp = new Line3();
  return function sphereIntersectTriangle2(sphere, triangle) {
    const { radius, center } = sphere;
    const { a: a3, b: b2, c: c2 } = triangle;
    lineTemp.start = a3;
    lineTemp.end = b2;
    const closestPoint1 = lineTemp.closestPointToPoint(center, true, closestPointTemp);
    if (closestPoint1.distanceTo(center) <= radius)
      return true;
    lineTemp.start = a3;
    lineTemp.end = c2;
    const closestPoint2 = lineTemp.closestPointToPoint(center, true, closestPointTemp);
    if (closestPoint2.distanceTo(center) <= radius)
      return true;
    lineTemp.start = b2;
    lineTemp.end = c2;
    const closestPoint3 = lineTemp.closestPointToPoint(center, true, closestPointTemp);
    if (closestPoint3.distanceTo(center) <= radius)
      return true;
    const plane = triangle.getPlane(planeTemp);
    const dp = Math.abs(plane.distanceToPoint(center));
    if (dp <= radius) {
      const pp = plane.projectPoint(center, projectedPointTemp);
      const cp = triangle.containsPoint(pp);
      if (cp)
        return true;
    }
    return false;
  };
}();

// node_modules/r3f-perf/node_modules/three-mesh-bvh/src/math/ExtendedTriangle.js
var DIST_EPSILON = 1e-15;
function isNearZero(value) {
  return Math.abs(value) < DIST_EPSILON;
}
var ExtendedTriangle = class extends Triangle {
  constructor(...args) {
    super(...args);
    this.isExtendedTriangle = true;
    this.satAxes = new Array(4).fill().map(() => new Vector3());
    this.satBounds = new Array(4).fill().map(() => new SeparatingAxisBounds());
    this.points = [this.a, this.b, this.c];
    this.sphere = new Sphere();
    this.plane = new Plane();
    this.needsUpdate = true;
  }
  intersectsSphere(sphere) {
    return sphereIntersectTriangle(sphere, this);
  }
  update() {
    const a3 = this.a;
    const b2 = this.b;
    const c2 = this.c;
    const points = this.points;
    const satAxes = this.satAxes;
    const satBounds = this.satBounds;
    const axis0 = satAxes[0];
    const sab0 = satBounds[0];
    this.getNormal(axis0);
    sab0.setFromPoints(axis0, points);
    const axis1 = satAxes[1];
    const sab1 = satBounds[1];
    axis1.subVectors(a3, b2);
    sab1.setFromPoints(axis1, points);
    const axis2 = satAxes[2];
    const sab2 = satBounds[2];
    axis2.subVectors(b2, c2);
    sab2.setFromPoints(axis2, points);
    const axis3 = satAxes[3];
    const sab3 = satBounds[3];
    axis3.subVectors(c2, a3);
    sab3.setFromPoints(axis3, points);
    this.sphere.setFromPoints(this.points);
    this.plane.setFromNormalAndCoplanarPoint(axis0, a3);
    this.needsUpdate = false;
  }
};
ExtendedTriangle.prototype.closestPointToSegment = function() {
  const point1 = new Vector3();
  const point2 = new Vector3();
  const edge = new Line3();
  return function distanceToSegment(segment, target1 = null, target2 = null) {
    const { start, end } = segment;
    const points = this.points;
    let distSq;
    let closestDistanceSq = Infinity;
    for (let i3 = 0; i3 < 3; i3++) {
      const nexti = (i3 + 1) % 3;
      edge.start.copy(points[i3]);
      edge.end.copy(points[nexti]);
      closestPointsSegmentToSegment(edge, segment, point1, point2);
      distSq = point1.distanceToSquared(point2);
      if (distSq < closestDistanceSq) {
        closestDistanceSq = distSq;
        if (target1)
          target1.copy(point1);
        if (target2)
          target2.copy(point2);
      }
    }
    this.closestPointToPoint(start, point1);
    distSq = start.distanceToSquared(point1);
    if (distSq < closestDistanceSq) {
      closestDistanceSq = distSq;
      if (target1)
        target1.copy(point1);
      if (target2)
        target2.copy(start);
    }
    this.closestPointToPoint(end, point1);
    distSq = end.distanceToSquared(point1);
    if (distSq < closestDistanceSq) {
      closestDistanceSq = distSq;
      if (target1)
        target1.copy(point1);
      if (target2)
        target2.copy(end);
    }
    return Math.sqrt(closestDistanceSq);
  };
}();
ExtendedTriangle.prototype.intersectsTriangle = function() {
  const saTri2 = new ExtendedTriangle();
  const arr1 = new Array(3);
  const arr2 = new Array(3);
  const cachedSatBounds = new SeparatingAxisBounds();
  const cachedSatBounds2 = new SeparatingAxisBounds();
  const cachedAxis = new Vector3();
  const dir1 = new Vector3();
  const dir2 = new Vector3();
  const tempDir = new Vector3();
  const edge = new Line3();
  const edge1 = new Line3();
  const edge2 = new Line3();
  return function intersectsTriangle(other, target2 = null, suppressLog = false) {
    if (this.needsUpdate) {
      this.update();
    }
    if (!other.isExtendedTriangle) {
      saTri2.copy(other);
      saTri2.update();
      other = saTri2;
    } else if (other.needsUpdate) {
      other.update();
    }
    const plane1 = this.plane;
    const plane2 = other.plane;
    if (Math.abs(plane1.normal.dot(plane2.normal)) > 1 - 1e-10) {
      const satBounds1 = this.satBounds;
      const satAxes1 = this.satAxes;
      arr2[0] = other.a;
      arr2[1] = other.b;
      arr2[2] = other.c;
      for (let i3 = 0; i3 < 4; i3++) {
        const sb = satBounds1[i3];
        const sa = satAxes1[i3];
        cachedSatBounds.setFromPoints(sa, arr2);
        if (sb.isSeparated(cachedSatBounds))
          return false;
      }
      const satBounds2 = other.satBounds;
      const satAxes2 = other.satAxes;
      arr1[0] = this.a;
      arr1[1] = this.b;
      arr1[2] = this.c;
      for (let i3 = 0; i3 < 4; i3++) {
        const sb = satBounds2[i3];
        const sa = satAxes2[i3];
        cachedSatBounds.setFromPoints(sa, arr1);
        if (sb.isSeparated(cachedSatBounds))
          return false;
      }
      for (let i3 = 0; i3 < 4; i3++) {
        const sa1 = satAxes1[i3];
        for (let i22 = 0; i22 < 4; i22++) {
          const sa2 = satAxes2[i22];
          cachedAxis.crossVectors(sa1, sa2);
          cachedSatBounds.setFromPoints(cachedAxis, arr1);
          cachedSatBounds2.setFromPoints(cachedAxis, arr2);
          if (cachedSatBounds.isSeparated(cachedSatBounds2))
            return false;
        }
      }
      if (target2) {
        if (!suppressLog) {
          console.warn("ExtendedTriangle.intersectsTriangle: Triangles are coplanar which does not support an output edge. Setting edge to 0, 0, 0.");
        }
        target2.start.set(0, 0, 0);
        target2.end.set(0, 0, 0);
      }
      return true;
    } else {
      const points1 = this.points;
      let found1 = false;
      let count1 = 0;
      for (let i3 = 0; i3 < 3; i3++) {
        const p2 = points1[i3];
        const pNext = points1[(i3 + 1) % 3];
        edge.start.copy(p2);
        edge.end.copy(pNext);
        edge.delta(dir1);
        const targetPoint = found1 ? edge1.start : edge1.end;
        const startIntersects = isNearZero(plane2.distanceToPoint(p2));
        if (isNearZero(plane2.normal.dot(dir1)) && startIntersects) {
          edge1.copy(edge);
          count1 = 2;
          break;
        }
        const doesIntersect = plane2.intersectLine(edge, targetPoint) || startIntersects;
        if (doesIntersect && !isNearZero(targetPoint.distanceTo(pNext))) {
          count1++;
          if (found1) {
            break;
          }
          found1 = true;
        }
      }
      if (count1 === 1 && other.containsPoint(edge1.end)) {
        if (target2) {
          target2.start.copy(edge1.end);
          target2.end.copy(edge1.end);
        }
        return true;
      } else if (count1 !== 2) {
        return false;
      }
      const points2 = other.points;
      let found2 = false;
      let count2 = 0;
      for (let i3 = 0; i3 < 3; i3++) {
        const p2 = points2[i3];
        const pNext = points2[(i3 + 1) % 3];
        edge.start.copy(p2);
        edge.end.copy(pNext);
        edge.delta(dir2);
        const targetPoint = found2 ? edge2.start : edge2.end;
        const startIntersects = isNearZero(plane1.distanceToPoint(p2));
        if (isNearZero(plane1.normal.dot(dir2)) && startIntersects) {
          edge2.copy(edge);
          count2 = 2;
          break;
        }
        const doesIntersect = plane1.intersectLine(edge, targetPoint) || startIntersects;
        if (doesIntersect && !isNearZero(targetPoint.distanceTo(pNext))) {
          count2++;
          if (found2) {
            break;
          }
          found2 = true;
        }
      }
      if (count2 === 1 && this.containsPoint(edge2.end)) {
        if (target2) {
          target2.start.copy(edge2.end);
          target2.end.copy(edge2.end);
        }
        return true;
      } else if (count2 !== 2) {
        return false;
      }
      edge1.delta(dir1);
      edge2.delta(dir2);
      if (dir1.dot(dir2) < 0) {
        let tmp = edge2.start;
        edge2.start = edge2.end;
        edge2.end = tmp;
      }
      const s1 = edge1.start.dot(dir1);
      const e1 = edge1.end.dot(dir1);
      const s2 = edge2.start.dot(dir1);
      const e2 = edge2.end.dot(dir1);
      const separated1 = e1 < s2;
      const separated2 = s1 < e2;
      if (s1 !== e2 && s2 !== e1 && separated1 === separated2) {
        return false;
      }
      if (target2) {
        tempDir.subVectors(edge1.start, edge2.start);
        if (tempDir.dot(dir1) > 0) {
          target2.start.copy(edge1.start);
        } else {
          target2.start.copy(edge2.start);
        }
        tempDir.subVectors(edge1.end, edge2.end);
        if (tempDir.dot(dir1) < 0) {
          target2.end.copy(edge1.end);
        } else {
          target2.end.copy(edge2.end);
        }
      }
      return true;
    }
  };
}();
ExtendedTriangle.prototype.distanceToPoint = function() {
  const target2 = new Vector3();
  return function distanceToPoint(point) {
    this.closestPointToPoint(point, target2);
    return point.distanceTo(target2);
  };
}();
ExtendedTriangle.prototype.distanceToTriangle = function() {
  const point = new Vector3();
  const point2 = new Vector3();
  const cornerFields = ["a", "b", "c"];
  const line1 = new Line3();
  const line2 = new Line3();
  return function distanceToTriangle(other, target1 = null, target2 = null) {
    const lineTarget = target1 || target2 ? line1 : null;
    if (this.intersectsTriangle(other, lineTarget)) {
      if (target1 || target2) {
        if (target1)
          lineTarget.getCenter(target1);
        if (target2)
          lineTarget.getCenter(target2);
      }
      return 0;
    }
    let closestDistanceSq = Infinity;
    for (let i3 = 0; i3 < 3; i3++) {
      let dist;
      const field = cornerFields[i3];
      const otherVec = other[field];
      this.closestPointToPoint(otherVec, point);
      dist = otherVec.distanceToSquared(point);
      if (dist < closestDistanceSq) {
        closestDistanceSq = dist;
        if (target1)
          target1.copy(point);
        if (target2)
          target2.copy(otherVec);
      }
      const thisVec = this[field];
      other.closestPointToPoint(thisVec, point);
      dist = thisVec.distanceToSquared(point);
      if (dist < closestDistanceSq) {
        closestDistanceSq = dist;
        if (target1)
          target1.copy(thisVec);
        if (target2)
          target2.copy(point);
      }
    }
    for (let i3 = 0; i3 < 3; i3++) {
      const f11 = cornerFields[i3];
      const f12 = cornerFields[(i3 + 1) % 3];
      line1.set(this[f11], this[f12]);
      for (let i22 = 0; i22 < 3; i22++) {
        const f21 = cornerFields[i22];
        const f22 = cornerFields[(i22 + 1) % 3];
        line2.set(other[f21], other[f22]);
        closestPointsSegmentToSegment(line1, line2, point, point2);
        const dist = point.distanceToSquared(point2);
        if (dist < closestDistanceSq) {
          closestDistanceSq = dist;
          if (target1)
            target1.copy(point);
          if (target2)
            target2.copy(point2);
        }
      }
    }
    return Math.sqrt(closestDistanceSq);
  };
}();

// node_modules/r3f-perf/node_modules/three-mesh-bvh/src/math/OrientedBox.js
var OrientedBox = class {
  constructor(min, max, matrix2) {
    this.isOrientedBox = true;
    this.min = new Vector3();
    this.max = new Vector3();
    this.matrix = new Matrix4();
    this.invMatrix = new Matrix4();
    this.points = new Array(8).fill().map(() => new Vector3());
    this.satAxes = new Array(3).fill().map(() => new Vector3());
    this.satBounds = new Array(3).fill().map(() => new SeparatingAxisBounds());
    this.alignedSatBounds = new Array(3).fill().map(() => new SeparatingAxisBounds());
    this.needsUpdate = false;
    if (min)
      this.min.copy(min);
    if (max)
      this.max.copy(max);
    if (matrix2)
      this.matrix.copy(matrix2);
  }
  set(min, max, matrix2) {
    this.min.copy(min);
    this.max.copy(max);
    this.matrix.copy(matrix2);
    this.needsUpdate = true;
  }
  copy(other) {
    this.min.copy(other.min);
    this.max.copy(other.max);
    this.matrix.copy(other.matrix);
    this.needsUpdate = true;
  }
};
OrientedBox.prototype.update = function() {
  return function update() {
    const matrix2 = this.matrix;
    const min = this.min;
    const max = this.max;
    const points = this.points;
    for (let x2 = 0; x2 <= 1; x2++) {
      for (let y2 = 0; y2 <= 1; y2++) {
        for (let z2 = 0; z2 <= 1; z2++) {
          const i3 = (1 << 0) * x2 | (1 << 1) * y2 | (1 << 2) * z2;
          const v5 = points[i3];
          v5.x = x2 ? max.x : min.x;
          v5.y = y2 ? max.y : min.y;
          v5.z = z2 ? max.z : min.z;
          v5.applyMatrix4(matrix2);
        }
      }
    }
    const satBounds = this.satBounds;
    const satAxes = this.satAxes;
    const minVec = points[0];
    for (let i3 = 0; i3 < 3; i3++) {
      const axis = satAxes[i3];
      const sb = satBounds[i3];
      const index = 1 << i3;
      const pi = points[index];
      axis.subVectors(minVec, pi);
      sb.setFromPoints(axis, points);
    }
    const alignedSatBounds = this.alignedSatBounds;
    alignedSatBounds[0].setFromPointsField(points, "x");
    alignedSatBounds[1].setFromPointsField(points, "y");
    alignedSatBounds[2].setFromPointsField(points, "z");
    this.invMatrix.copy(this.matrix).invert();
    this.needsUpdate = false;
  };
}();
OrientedBox.prototype.intersectsBox = function() {
  const aabbBounds = new SeparatingAxisBounds();
  return function intersectsBox(box) {
    if (this.needsUpdate) {
      this.update();
    }
    const min = box.min;
    const max = box.max;
    const satBounds = this.satBounds;
    const satAxes = this.satAxes;
    const alignedSatBounds = this.alignedSatBounds;
    aabbBounds.min = min.x;
    aabbBounds.max = max.x;
    if (alignedSatBounds[0].isSeparated(aabbBounds))
      return false;
    aabbBounds.min = min.y;
    aabbBounds.max = max.y;
    if (alignedSatBounds[1].isSeparated(aabbBounds))
      return false;
    aabbBounds.min = min.z;
    aabbBounds.max = max.z;
    if (alignedSatBounds[2].isSeparated(aabbBounds))
      return false;
    for (let i3 = 0; i3 < 3; i3++) {
      const axis = satAxes[i3];
      const sb = satBounds[i3];
      aabbBounds.setFromBox(axis, box);
      if (sb.isSeparated(aabbBounds))
        return false;
    }
    return true;
  };
}();
OrientedBox.prototype.intersectsTriangle = function() {
  const saTri = new ExtendedTriangle();
  const pointsArr = new Array(3);
  const cachedSatBounds = new SeparatingAxisBounds();
  const cachedSatBounds2 = new SeparatingAxisBounds();
  const cachedAxis = new Vector3();
  return function intersectsTriangle(triangle) {
    if (this.needsUpdate) {
      this.update();
    }
    if (!triangle.isExtendedTriangle) {
      saTri.copy(triangle);
      saTri.update();
      triangle = saTri;
    } else if (triangle.needsUpdate) {
      triangle.update();
    }
    const satBounds = this.satBounds;
    const satAxes = this.satAxes;
    pointsArr[0] = triangle.a;
    pointsArr[1] = triangle.b;
    pointsArr[2] = triangle.c;
    for (let i3 = 0; i3 < 3; i3++) {
      const sb = satBounds[i3];
      const sa = satAxes[i3];
      cachedSatBounds.setFromPoints(sa, pointsArr);
      if (sb.isSeparated(cachedSatBounds))
        return false;
    }
    const triSatBounds = triangle.satBounds;
    const triSatAxes = triangle.satAxes;
    const points = this.points;
    for (let i3 = 0; i3 < 3; i3++) {
      const sb = triSatBounds[i3];
      const sa = triSatAxes[i3];
      cachedSatBounds.setFromPoints(sa, points);
      if (sb.isSeparated(cachedSatBounds))
        return false;
    }
    for (let i3 = 0; i3 < 3; i3++) {
      const sa1 = satAxes[i3];
      for (let i22 = 0; i22 < 4; i22++) {
        const sa2 = triSatAxes[i22];
        cachedAxis.crossVectors(sa1, sa2);
        cachedSatBounds.setFromPoints(cachedAxis, pointsArr);
        cachedSatBounds2.setFromPoints(cachedAxis, points);
        if (cachedSatBounds.isSeparated(cachedSatBounds2))
          return false;
      }
    }
    return true;
  };
}();
OrientedBox.prototype.closestPointToPoint = function() {
  return function closestPointToPoint(point, target1) {
    if (this.needsUpdate) {
      this.update();
    }
    target1.copy(point).applyMatrix4(this.invMatrix).clamp(this.min, this.max).applyMatrix4(this.matrix);
    return target1;
  };
}();
OrientedBox.prototype.distanceToPoint = function() {
  const target2 = new Vector3();
  return function distanceToPoint(point) {
    this.closestPointToPoint(point, target2);
    return point.distanceTo(target2);
  };
}();
OrientedBox.prototype.distanceToBox = function() {
  const xyzFields2 = ["x", "y", "z"];
  const segments1 = new Array(12).fill().map(() => new Line3());
  const segments2 = new Array(12).fill().map(() => new Line3());
  const point1 = new Vector3();
  const point2 = new Vector3();
  return function distanceToBox(box, threshold = 0, target1 = null, target2 = null) {
    if (this.needsUpdate) {
      this.update();
    }
    if (this.intersectsBox(box)) {
      if (target1 || target2) {
        box.getCenter(point2);
        this.closestPointToPoint(point2, point1);
        box.closestPointToPoint(point1, point2);
        if (target1)
          target1.copy(point1);
        if (target2)
          target2.copy(point2);
      }
      return 0;
    }
    const threshold2 = threshold * threshold;
    const min = box.min;
    const max = box.max;
    const points = this.points;
    let closestDistanceSq = Infinity;
    for (let i3 = 0; i3 < 8; i3++) {
      const p2 = points[i3];
      point2.copy(p2).clamp(min, max);
      const dist = p2.distanceToSquared(point2);
      if (dist < closestDistanceSq) {
        closestDistanceSq = dist;
        if (target1)
          target1.copy(p2);
        if (target2)
          target2.copy(point2);
        if (dist < threshold2)
          return Math.sqrt(dist);
      }
    }
    let count = 0;
    for (let i3 = 0; i3 < 3; i3++) {
      for (let i1 = 0; i1 <= 1; i1++) {
        for (let i22 = 0; i22 <= 1; i22++) {
          const nextIndex = (i3 + 1) % 3;
          const nextIndex2 = (i3 + 2) % 3;
          const index = i1 << nextIndex | i22 << nextIndex2;
          const index2 = 1 << i3 | i1 << nextIndex | i22 << nextIndex2;
          const p1 = points[index];
          const p2 = points[index2];
          const line1 = segments1[count];
          line1.set(p1, p2);
          const f1 = xyzFields2[i3];
          const f22 = xyzFields2[nextIndex];
          const f3 = xyzFields2[nextIndex2];
          const line2 = segments2[count];
          const start = line2.start;
          const end = line2.end;
          start[f1] = min[f1];
          start[f22] = i1 ? min[f22] : max[f22];
          start[f3] = i22 ? min[f3] : max[f22];
          end[f1] = max[f1];
          end[f22] = i1 ? min[f22] : max[f22];
          end[f3] = i22 ? min[f3] : max[f22];
          count++;
        }
      }
    }
    for (let x2 = 0; x2 <= 1; x2++) {
      for (let y2 = 0; y2 <= 1; y2++) {
        for (let z2 = 0; z2 <= 1; z2++) {
          point2.x = x2 ? max.x : min.x;
          point2.y = y2 ? max.y : min.y;
          point2.z = z2 ? max.z : min.z;
          this.closestPointToPoint(point2, point1);
          const dist = point2.distanceToSquared(point1);
          if (dist < closestDistanceSq) {
            closestDistanceSq = dist;
            if (target1)
              target1.copy(point1);
            if (target2)
              target2.copy(point2);
            if (dist < threshold2)
              return Math.sqrt(dist);
          }
        }
      }
    }
    for (let i3 = 0; i3 < 12; i3++) {
      const l1 = segments1[i3];
      for (let i22 = 0; i22 < 12; i22++) {
        const l2 = segments2[i22];
        closestPointsSegmentToSegment(l1, l2, point1, point2);
        const dist = point1.distanceToSquared(point2);
        if (dist < closestDistanceSq) {
          closestDistanceSq = dist;
          if (target1)
            target1.copy(point1);
          if (target2)
            target2.copy(point2);
          if (dist < threshold2)
            return Math.sqrt(dist);
        }
      }
    }
    return Math.sqrt(closestDistanceSq);
  };
}();

// node_modules/r3f-perf/node_modules/three-mesh-bvh/src/utils/ThreeRayIntersectUtilities.js
var _vA = new Vector3();
var _vB = new Vector3();
var _vC = new Vector3();
var _uvA = new Vector2();
var _uvB = new Vector2();
var _uvC = new Vector2();
var _normalA = new Vector3();
var _normalB = new Vector3();
var _normalC = new Vector3();
var _intersectionPoint = new Vector3();
function checkIntersection(ray4, pA, pB, pC, point, side) {
  let intersect;
  if (side === BackSide) {
    intersect = ray4.intersectTriangle(pC, pB, pA, true, point);
  } else {
    intersect = ray4.intersectTriangle(pA, pB, pC, side !== DoubleSide, point);
  }
  if (intersect === null)
    return null;
  const distance = ray4.origin.distanceTo(point);
  return {
    distance,
    point: point.clone()
  };
}
function checkBufferGeometryIntersection(ray4, position2, normal2, uv, uv1, a3, b2, c2, side) {
  _vA.fromBufferAttribute(position2, a3);
  _vB.fromBufferAttribute(position2, b2);
  _vC.fromBufferAttribute(position2, c2);
  const intersection3 = checkIntersection(ray4, _vA, _vB, _vC, _intersectionPoint, side);
  if (intersection3) {
    if (uv) {
      _uvA.fromBufferAttribute(uv, a3);
      _uvB.fromBufferAttribute(uv, b2);
      _uvC.fromBufferAttribute(uv, c2);
      intersection3.uv = Triangle.getInterpolation(_intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2());
    }
    if (uv1) {
      _uvA.fromBufferAttribute(uv1, a3);
      _uvB.fromBufferAttribute(uv1, b2);
      _uvC.fromBufferAttribute(uv1, c2);
      intersection3.uv1 = Triangle.getInterpolation(_intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2());
    }
    if (normal2) {
      _normalA.fromBufferAttribute(normal2, a3);
      _normalB.fromBufferAttribute(normal2, b2);
      _normalC.fromBufferAttribute(normal2, c2);
      intersection3.normal = Triangle.getInterpolation(_intersectionPoint, _vA, _vB, _vC, _normalA, _normalB, _normalC, new Vector3());
      if (intersection3.normal.dot(ray4.direction) > 0) {
        intersection3.normal.multiplyScalar(-1);
      }
    }
    const face = {
      a: a3,
      b: b2,
      c: c2,
      normal: new Vector3(),
      materialIndex: 0
    };
    Triangle.getNormal(_vA, _vB, _vC, face.normal);
    intersection3.face = face;
    intersection3.faceIndex = a3;
  }
  return intersection3;
}
function intersectTri(geo, side, ray4, tri, intersections) {
  const triOffset = tri * 3;
  const a3 = geo.index.getX(triOffset);
  const b2 = geo.index.getX(triOffset + 1);
  const c2 = geo.index.getX(triOffset + 2);
  const { position: position2, normal: normal2, uv, uv1 } = geo.attributes;
  const intersection3 = checkBufferGeometryIntersection(ray4, position2, normal2, uv, uv1, a3, b2, c2, side);
  if (intersection3) {
    intersection3.faceIndex = tri;
    if (intersections)
      intersections.push(intersection3);
    return intersection3;
  }
  return null;
}

// node_modules/r3f-perf/node_modules/three-mesh-bvh/src/utils/GeometryRayIntersectUtilities.js
function intersectTris(geo, side, ray4, offset, count, intersections) {
  for (let i3 = offset, end = offset + count; i3 < end; i3++) {
    intersectTri(geo, side, ray4, i3, intersections);
  }
}
function intersectClosestTri(geo, side, ray4, offset, count) {
  let dist = Infinity;
  let res = null;
  for (let i3 = offset, end = offset + count; i3 < end; i3++) {
    const intersection3 = intersectTri(geo, side, ray4, i3);
    if (intersection3 && intersection3.distance < dist) {
      res = intersection3;
      dist = intersection3.distance;
    }
  }
  return res;
}
function convertRaycastIntersect(hit, object, raycaster) {
  if (hit === null) {
    return null;
  }
  hit.point.applyMatrix4(object.matrixWorld);
  hit.distance = hit.point.distanceTo(raycaster.ray.origin);
  hit.object = object;
  if (hit.distance < raycaster.near || hit.distance > raycaster.far) {
    return null;
  } else {
    return hit;
  }
}

// node_modules/r3f-perf/node_modules/three-mesh-bvh/src/utils/TriangleUtilities.js
function setTriangle(tri, i3, index, pos) {
  const ta = tri.a;
  const tb = tri.b;
  const tc = tri.c;
  let i0 = i3;
  let i1 = i3 + 1;
  let i22 = i3 + 2;
  if (index) {
    i0 = index.getX(i3);
    i1 = index.getX(i3 + 1);
    i22 = index.getX(i3 + 2);
  }
  ta.x = pos.getX(i0);
  ta.y = pos.getY(i0);
  ta.z = pos.getZ(i0);
  tb.x = pos.getX(i1);
  tb.y = pos.getY(i1);
  tb.z = pos.getZ(i1);
  tc.x = pos.getX(i22);
  tc.y = pos.getY(i22);
  tc.z = pos.getZ(i22);
}
function iterateOverTriangles(offset, count, geometry, intersectsTriangleFunc, contained, depth, triangle) {
  const index = geometry.index;
  const pos = geometry.attributes.position;
  for (let i3 = offset, l2 = count + offset; i3 < l2; i3++) {
    setTriangle(triangle, i3 * 3, index, pos);
    triangle.needsUpdate = true;
    if (intersectsTriangleFunc(triangle, i3, contained, depth)) {
      return true;
    }
  }
  return false;
}
var tempV1 = new Vector3();
var tempV2 = new Vector3();
var tempV3 = new Vector3();
var tempUV1 = new Vector2();
var tempUV2 = new Vector2();
var tempUV3 = new Vector2();

// node_modules/r3f-perf/node_modules/three-mesh-bvh/src/utils/PrimitivePool.js
var PrimitivePool = class {
  constructor(getNewPrimitive) {
    this._getNewPrimitive = getNewPrimitive;
    this._primitives = [];
  }
  getPrimitive() {
    const primitives = this._primitives;
    if (primitives.length === 0) {
      return this._getNewPrimitive();
    } else {
      return primitives.pop();
    }
  }
  releasePrimitive(primitive) {
    this._primitives.push(primitive);
  }
};

// node_modules/r3f-perf/node_modules/three-mesh-bvh/src/core/nodeBufferFunctions.js
function IS_LEAF(n16, uint16Array) {
  return uint16Array[n16 + 15] === 65535;
}
function OFFSET(n32, uint32Array) {
  return uint32Array[n32 + 6];
}
function COUNT(n16, uint16Array) {
  return uint16Array[n16 + 14];
}
function LEFT_NODE(n32) {
  return n32 + 8;
}
function RIGHT_NODE(n32, uint32Array) {
  return uint32Array[n32 + 6];
}
function SPLIT_AXIS(n32, uint32Array) {
  return uint32Array[n32 + 7];
}
function BOUNDING_DATA_INDEX(n32) {
  return n32;
}

// node_modules/r3f-perf/node_modules/three-mesh-bvh/src/core/castFunctions.js
var boundingBox = new Box3();
var boxIntersection = new Vector3();
var xyzFields = ["x", "y", "z"];
function raycast(nodeIndex32, geometry, side, ray4, intersects) {
  let nodeIndex16 = nodeIndex32 * 2, float32Array = _float32Array, uint16Array = _uint16Array, uint32Array = _uint32Array;
  const isLeaf = IS_LEAF(nodeIndex16, uint16Array);
  if (isLeaf) {
    const offset = OFFSET(nodeIndex32, uint32Array);
    const count = COUNT(nodeIndex16, uint16Array);
    intersectTris(geometry, side, ray4, offset, count, intersects);
  } else {
    const leftIndex = LEFT_NODE(nodeIndex32);
    if (intersectRay(leftIndex, float32Array, ray4, boxIntersection)) {
      raycast(leftIndex, geometry, side, ray4, intersects);
    }
    const rightIndex = RIGHT_NODE(nodeIndex32, uint32Array);
    if (intersectRay(rightIndex, float32Array, ray4, boxIntersection)) {
      raycast(rightIndex, geometry, side, ray4, intersects);
    }
  }
}
function raycastFirst(nodeIndex32, geometry, side, ray4) {
  let nodeIndex16 = nodeIndex32 * 2, float32Array = _float32Array, uint16Array = _uint16Array, uint32Array = _uint32Array;
  const isLeaf = IS_LEAF(nodeIndex16, uint16Array);
  if (isLeaf) {
    const offset = OFFSET(nodeIndex32, uint32Array);
    const count = COUNT(nodeIndex16, uint16Array);
    return intersectClosestTri(geometry, side, ray4, offset, count);
  } else {
    const splitAxis = SPLIT_AXIS(nodeIndex32, uint32Array);
    const xyzAxis = xyzFields[splitAxis];
    const rayDir = ray4.direction[xyzAxis];
    const leftToRight = rayDir >= 0;
    let c1, c2;
    if (leftToRight) {
      c1 = LEFT_NODE(nodeIndex32);
      c2 = RIGHT_NODE(nodeIndex32, uint32Array);
    } else {
      c1 = RIGHT_NODE(nodeIndex32, uint32Array);
      c2 = LEFT_NODE(nodeIndex32);
    }
    const c1Intersection = intersectRay(c1, float32Array, ray4, boxIntersection);
    const c1Result = c1Intersection ? raycastFirst(c1, geometry, side, ray4) : null;
    if (c1Result) {
      const point = c1Result.point[xyzAxis];
      const isOutside = leftToRight ? point <= float32Array[c2 + splitAxis] : (
        // min bounding data
        point >= float32Array[c2 + splitAxis + 3]
      );
      if (isOutside) {
        return c1Result;
      }
    }
    const c2Intersection = intersectRay(c2, float32Array, ray4, boxIntersection);
    const c2Result = c2Intersection ? raycastFirst(c2, geometry, side, ray4) : null;
    if (c1Result && c2Result) {
      return c1Result.distance <= c2Result.distance ? c1Result : c2Result;
    } else {
      return c1Result || c2Result || null;
    }
  }
}
var shapecast = function() {
  let _box12, _box22;
  const boxStack = [];
  const boxPool = new PrimitivePool(() => new Box3());
  return function shapecast2(...args) {
    _box12 = boxPool.getPrimitive();
    _box22 = boxPool.getPrimitive();
    boxStack.push(_box12, _box22);
    const result = shapecastTraverse(...args);
    boxPool.releasePrimitive(_box12);
    boxPool.releasePrimitive(_box22);
    boxStack.pop();
    boxStack.pop();
    const length = boxStack.length;
    if (length > 0) {
      _box22 = boxStack[length - 1];
      _box12 = boxStack[length - 2];
    }
    return result;
  };
  function shapecastTraverse(nodeIndex32, geometry, intersectsBoundsFunc, intersectsRangeFunc, nodeScoreFunc = null, nodeIndexByteOffset = 0, depth = 0) {
    function getLeftOffset(nodeIndex322) {
      let nodeIndex162 = nodeIndex322 * 2, uint16Array2 = _uint16Array, uint32Array2 = _uint32Array;
      while (!IS_LEAF(nodeIndex162, uint16Array2)) {
        nodeIndex322 = LEFT_NODE(nodeIndex322);
        nodeIndex162 = nodeIndex322 * 2;
      }
      return OFFSET(nodeIndex322, uint32Array2);
    }
    function getRightEndOffset(nodeIndex322) {
      let nodeIndex162 = nodeIndex322 * 2, uint16Array2 = _uint16Array, uint32Array2 = _uint32Array;
      while (!IS_LEAF(nodeIndex162, uint16Array2)) {
        nodeIndex322 = RIGHT_NODE(nodeIndex322, uint32Array2);
        nodeIndex162 = nodeIndex322 * 2;
      }
      return OFFSET(nodeIndex322, uint32Array2) + COUNT(nodeIndex162, uint16Array2);
    }
    let nodeIndex16 = nodeIndex32 * 2, float32Array = _float32Array, uint16Array = _uint16Array, uint32Array = _uint32Array;
    const isLeaf = IS_LEAF(nodeIndex16, uint16Array);
    if (isLeaf) {
      const offset = OFFSET(nodeIndex32, uint32Array);
      const count = COUNT(nodeIndex16, uint16Array);
      arrayToBox(BOUNDING_DATA_INDEX(nodeIndex32), float32Array, _box12);
      return intersectsRangeFunc(offset, count, false, depth, nodeIndexByteOffset + nodeIndex32, _box12);
    } else {
      const left = LEFT_NODE(nodeIndex32);
      const right = RIGHT_NODE(nodeIndex32, uint32Array);
      let c1 = left;
      let c2 = right;
      let score1, score2;
      let box1, box2;
      if (nodeScoreFunc) {
        box1 = _box12;
        box2 = _box22;
        arrayToBox(BOUNDING_DATA_INDEX(c1), float32Array, box1);
        arrayToBox(BOUNDING_DATA_INDEX(c2), float32Array, box2);
        score1 = nodeScoreFunc(box1);
        score2 = nodeScoreFunc(box2);
        if (score2 < score1) {
          c1 = right;
          c2 = left;
          const temp5 = score1;
          score1 = score2;
          score2 = temp5;
          box1 = box2;
        }
      }
      if (!box1) {
        box1 = _box12;
        arrayToBox(BOUNDING_DATA_INDEX(c1), float32Array, box1);
      }
      const isC1Leaf = IS_LEAF(c1 * 2, uint16Array);
      const c1Intersection = intersectsBoundsFunc(box1, isC1Leaf, score1, depth + 1, nodeIndexByteOffset + c1);
      let c1StopTraversal;
      if (c1Intersection === CONTAINED) {
        const offset = getLeftOffset(c1);
        const end = getRightEndOffset(c1);
        const count = end - offset;
        c1StopTraversal = intersectsRangeFunc(offset, count, true, depth + 1, nodeIndexByteOffset + c1, box1);
      } else {
        c1StopTraversal = c1Intersection && shapecastTraverse(
          c1,
          geometry,
          intersectsBoundsFunc,
          intersectsRangeFunc,
          nodeScoreFunc,
          nodeIndexByteOffset,
          depth + 1
        );
      }
      if (c1StopTraversal)
        return true;
      box2 = _box22;
      arrayToBox(BOUNDING_DATA_INDEX(c2), float32Array, box2);
      const isC2Leaf = IS_LEAF(c2 * 2, uint16Array);
      const c2Intersection = intersectsBoundsFunc(box2, isC2Leaf, score2, depth + 1, nodeIndexByteOffset + c2);
      let c2StopTraversal;
      if (c2Intersection === CONTAINED) {
        const offset = getLeftOffset(c2);
        const end = getRightEndOffset(c2);
        const count = end - offset;
        c2StopTraversal = intersectsRangeFunc(offset, count, true, depth + 1, nodeIndexByteOffset + c2, box2);
      } else {
        c2StopTraversal = c2Intersection && shapecastTraverse(
          c2,
          geometry,
          intersectsBoundsFunc,
          intersectsRangeFunc,
          nodeScoreFunc,
          nodeIndexByteOffset,
          depth + 1
        );
      }
      if (c2StopTraversal)
        return true;
      return false;
    }
  }
}();
var intersectsGeometry = function() {
  const triangle = new ExtendedTriangle();
  const triangle2 = new ExtendedTriangle();
  const invertedMat = new Matrix4();
  const obb3 = new OrientedBox();
  const obb22 = new OrientedBox();
  return function intersectsGeometry2(nodeIndex32, geometry, otherGeometry, geometryToBvh, cachedObb = null) {
    let nodeIndex16 = nodeIndex32 * 2, float32Array = _float32Array, uint16Array = _uint16Array, uint32Array = _uint32Array;
    if (cachedObb === null) {
      if (!otherGeometry.boundingBox) {
        otherGeometry.computeBoundingBox();
      }
      obb3.set(otherGeometry.boundingBox.min, otherGeometry.boundingBox.max, geometryToBvh);
      cachedObb = obb3;
    }
    const isLeaf = IS_LEAF(nodeIndex16, uint16Array);
    if (isLeaf) {
      const thisGeometry = geometry;
      const thisIndex = thisGeometry.index;
      const thisPos = thisGeometry.attributes.position;
      const index = otherGeometry.index;
      const pos = otherGeometry.attributes.position;
      const offset = OFFSET(nodeIndex32, uint32Array);
      const count = COUNT(nodeIndex16, uint16Array);
      invertedMat.copy(geometryToBvh).invert();
      if (otherGeometry.boundsTree) {
        arrayToBox(BOUNDING_DATA_INDEX(nodeIndex32), float32Array, obb22);
        obb22.matrix.copy(invertedMat);
        obb22.needsUpdate = true;
        const res = otherGeometry.boundsTree.shapecast({
          intersectsBounds: (box) => obb22.intersectsBox(box),
          intersectsTriangle: (tri) => {
            tri.a.applyMatrix4(geometryToBvh);
            tri.b.applyMatrix4(geometryToBvh);
            tri.c.applyMatrix4(geometryToBvh);
            tri.needsUpdate = true;
            for (let i3 = offset * 3, l2 = (count + offset) * 3; i3 < l2; i3 += 3) {
              setTriangle(triangle2, i3, thisIndex, thisPos);
              triangle2.needsUpdate = true;
              if (tri.intersectsTriangle(triangle2)) {
                return true;
              }
            }
            return false;
          }
        });
        return res;
      } else {
        for (let i3 = offset * 3, l2 = count + offset * 3; i3 < l2; i3 += 3) {
          setTriangle(triangle, i3, thisIndex, thisPos);
          triangle.a.applyMatrix4(invertedMat);
          triangle.b.applyMatrix4(invertedMat);
          triangle.c.applyMatrix4(invertedMat);
          triangle.needsUpdate = true;
          for (let i22 = 0, l22 = index.count; i22 < l22; i22 += 3) {
            setTriangle(triangle2, i22, index, pos);
            triangle2.needsUpdate = true;
            if (triangle.intersectsTriangle(triangle2)) {
              return true;
            }
          }
        }
      }
    } else {
      const left = nodeIndex32 + 8;
      const right = uint32Array[nodeIndex32 + 6];
      arrayToBox(BOUNDING_DATA_INDEX(left), float32Array, boundingBox);
      const leftIntersection = cachedObb.intersectsBox(boundingBox) && intersectsGeometry2(left, geometry, otherGeometry, geometryToBvh, cachedObb);
      if (leftIntersection)
        return true;
      arrayToBox(BOUNDING_DATA_INDEX(right), float32Array, boundingBox);
      const rightIntersection = cachedObb.intersectsBox(boundingBox) && intersectsGeometry2(right, geometry, otherGeometry, geometryToBvh, cachedObb);
      if (rightIntersection)
        return true;
      return false;
    }
  };
}();
function intersectRay(nodeIndex32, array, ray4, target2) {
  arrayToBox(nodeIndex32, array, boundingBox);
  return ray4.intersectBox(boundingBox, target2);
}
var bufferStack = [];
var _prevBuffer;
var _float32Array;
var _uint16Array;
var _uint32Array;
function setBuffer(buffer) {
  if (_prevBuffer) {
    bufferStack.push(_prevBuffer);
  }
  _prevBuffer = buffer;
  _float32Array = new Float32Array(buffer);
  _uint16Array = new Uint16Array(buffer);
  _uint32Array = new Uint32Array(buffer);
}
function clearBuffer() {
  _prevBuffer = null;
  _float32Array = null;
  _uint16Array = null;
  _uint32Array = null;
  if (bufferStack.length) {
    setBuffer(bufferStack.pop());
  }
}

// node_modules/r3f-perf/node_modules/three-mesh-bvh/src/core/MeshBVH.js
var SKIP_GENERATION = Symbol("skip tree generation");
var aabb = new Box3();
var aabb2 = new Box3();
var tempMatrix = new Matrix4();
var obb = new OrientedBox();
var obb2 = new OrientedBox();
var temp = new Vector3();
var temp1 = new Vector3();
var temp2 = new Vector3();
var temp3 = new Vector3();
var temp4 = new Vector3();
var tempBox = new Box3();
var trianglePool = new PrimitivePool(() => new ExtendedTriangle());
var MeshBVH = class {
  static serialize(bvh, options = {}) {
    if (options.isBufferGeometry) {
      console.warn("MeshBVH.serialize: The arguments for the function have changed. See documentation for new signature.");
      return MeshBVH.serialize(
        arguments[0],
        {
          cloneBuffers: arguments[2] === void 0 ? true : arguments[2]
        }
      );
    }
    options = {
      cloneBuffers: true,
      ...options
    };
    const geometry = bvh.geometry;
    const rootData = bvh._roots;
    const indexAttribute = geometry.getIndex();
    let result;
    if (options.cloneBuffers) {
      result = {
        roots: rootData.map((root) => root.slice()),
        index: indexAttribute.array.slice()
      };
    } else {
      result = {
        roots: rootData,
        index: indexAttribute.array
      };
    }
    return result;
  }
  static deserialize(data, geometry, options = {}) {
    if (typeof options === "boolean") {
      console.warn("MeshBVH.deserialize: The arguments for the function have changed. See documentation for new signature.");
      return MeshBVH.deserialize(
        arguments[0],
        arguments[1],
        {
          setIndex: arguments[2] === void 0 ? true : arguments[2]
        }
      );
    }
    options = {
      setIndex: true,
      ...options
    };
    const { index, roots } = data;
    const bvh = new MeshBVH(geometry, { ...options, [SKIP_GENERATION]: true });
    bvh._roots = roots;
    if (options.setIndex) {
      const indexAttribute = geometry.getIndex();
      if (indexAttribute === null) {
        const newIndex = new BufferAttribute(data.index, 1, false);
        geometry.setIndex(newIndex);
      } else if (indexAttribute.array !== index) {
        indexAttribute.array.set(index);
        indexAttribute.needsUpdate = true;
      }
    }
    return bvh;
  }
  constructor(geometry, options = {}) {
    if (!geometry.isBufferGeometry) {
      throw new Error("MeshBVH: Only BufferGeometries are supported.");
    } else if (geometry.index && geometry.index.isInterleavedBufferAttribute) {
      throw new Error("MeshBVH: InterleavedBufferAttribute is not supported for the index attribute.");
    }
    options = Object.assign({
      strategy: CENTER,
      maxDepth: 40,
      maxLeafTris: 10,
      verbose: true,
      useSharedArrayBuffer: false,
      setBoundingBox: true,
      onProgress: null,
      // undocumented options
      // Whether to skip generating the tree. Used for deserialization.
      [SKIP_GENERATION]: false
    }, options);
    if (options.useSharedArrayBuffer && typeof SharedArrayBuffer === "undefined") {
      throw new Error("MeshBVH: SharedArrayBuffer is not available.");
    }
    this._roots = null;
    if (!options[SKIP_GENERATION]) {
      this._roots = buildPackedTree(geometry, options);
      if (!geometry.boundingBox && options.setBoundingBox) {
        geometry.boundingBox = this.getBoundingBox(new Box3());
      }
    }
    this.geometry = geometry;
  }
  refit(nodeIndices = null) {
    if (nodeIndices && Array.isArray(nodeIndices)) {
      nodeIndices = new Set(nodeIndices);
    }
    const geometry = this.geometry;
    const indexArr = geometry.index.array;
    const posAttr = geometry.attributes.position;
    let buffer, uint32Array, uint16Array, float32Array;
    let byteOffset = 0;
    const roots = this._roots;
    for (let i3 = 0, l2 = roots.length; i3 < l2; i3++) {
      buffer = roots[i3];
      uint32Array = new Uint32Array(buffer);
      uint16Array = new Uint16Array(buffer);
      float32Array = new Float32Array(buffer);
      _traverse(0, byteOffset);
      byteOffset += buffer.byteLength;
    }
    function _traverse(node32Index, byteOffset2, force = false) {
      const node16Index = node32Index * 2;
      const isLeaf = uint16Array[node16Index + 15] === IS_LEAFNODE_FLAG;
      if (isLeaf) {
        const offset = uint32Array[node32Index + 6];
        const count = uint16Array[node16Index + 14];
        let minx = Infinity;
        let miny = Infinity;
        let minz = Infinity;
        let maxx = -Infinity;
        let maxy = -Infinity;
        let maxz = -Infinity;
        for (let i3 = 3 * offset, l2 = 3 * (offset + count); i3 < l2; i3++) {
          const index = indexArr[i3];
          const x2 = posAttr.getX(index);
          const y2 = posAttr.getY(index);
          const z2 = posAttr.getZ(index);
          if (x2 < minx)
            minx = x2;
          if (x2 > maxx)
            maxx = x2;
          if (y2 < miny)
            miny = y2;
          if (y2 > maxy)
            maxy = y2;
          if (z2 < minz)
            minz = z2;
          if (z2 > maxz)
            maxz = z2;
        }
        if (float32Array[node32Index + 0] !== minx || float32Array[node32Index + 1] !== miny || float32Array[node32Index + 2] !== minz || float32Array[node32Index + 3] !== maxx || float32Array[node32Index + 4] !== maxy || float32Array[node32Index + 5] !== maxz) {
          float32Array[node32Index + 0] = minx;
          float32Array[node32Index + 1] = miny;
          float32Array[node32Index + 2] = minz;
          float32Array[node32Index + 3] = maxx;
          float32Array[node32Index + 4] = maxy;
          float32Array[node32Index + 5] = maxz;
          return true;
        } else {
          return false;
        }
      } else {
        const left = node32Index + 8;
        const right = uint32Array[node32Index + 6];
        const offsetLeft = left + byteOffset2;
        const offsetRight = right + byteOffset2;
        let forceChildren = force;
        let includesLeft = false;
        let includesRight = false;
        if (nodeIndices) {
          if (!forceChildren) {
            includesLeft = nodeIndices.has(offsetLeft);
            includesRight = nodeIndices.has(offsetRight);
            forceChildren = !includesLeft && !includesRight;
          }
        } else {
          includesLeft = true;
          includesRight = true;
        }
        const traverseLeft = forceChildren || includesLeft;
        const traverseRight = forceChildren || includesRight;
        let leftChange = false;
        if (traverseLeft) {
          leftChange = _traverse(left, byteOffset2, forceChildren);
        }
        let rightChange = false;
        if (traverseRight) {
          rightChange = _traverse(right, byteOffset2, forceChildren);
        }
        const didChange = leftChange || rightChange;
        if (didChange) {
          for (let i3 = 0; i3 < 3; i3++) {
            const lefti = left + i3;
            const righti = right + i3;
            const minLeftValue = float32Array[lefti];
            const maxLeftValue = float32Array[lefti + 3];
            const minRightValue = float32Array[righti];
            const maxRightValue = float32Array[righti + 3];
            float32Array[node32Index + i3] = minLeftValue < minRightValue ? minLeftValue : minRightValue;
            float32Array[node32Index + i3 + 3] = maxLeftValue > maxRightValue ? maxLeftValue : maxRightValue;
          }
        }
        return didChange;
      }
    }
  }
  traverse(callback, rootIndex = 0) {
    const buffer = this._roots[rootIndex];
    const uint32Array = new Uint32Array(buffer);
    const uint16Array = new Uint16Array(buffer);
    _traverse(0);
    function _traverse(node32Index, depth = 0) {
      const node16Index = node32Index * 2;
      const isLeaf = uint16Array[node16Index + 15] === IS_LEAFNODE_FLAG;
      if (isLeaf) {
        const offset = uint32Array[node32Index + 6];
        const count = uint16Array[node16Index + 14];
        callback(depth, isLeaf, new Float32Array(buffer, node32Index * 4, 6), offset, count);
      } else {
        const left = node32Index + BYTES_PER_NODE / 4;
        const right = uint32Array[node32Index + 6];
        const splitAxis = uint32Array[node32Index + 7];
        const stopTraversal = callback(depth, isLeaf, new Float32Array(buffer, node32Index * 4, 6), splitAxis);
        if (!stopTraversal) {
          _traverse(left, depth + 1);
          _traverse(right, depth + 1);
        }
      }
    }
  }
  /* Core Cast Functions */
  raycast(ray4, materialOrSide = FrontSide) {
    const roots = this._roots;
    const geometry = this.geometry;
    const intersects = [];
    const isMaterial = materialOrSide.isMaterial;
    const isArrayMaterial = Array.isArray(materialOrSide);
    const groups = geometry.groups;
    const side = isMaterial ? materialOrSide.side : materialOrSide;
    for (let i3 = 0, l2 = roots.length; i3 < l2; i3++) {
      const materialSide = isArrayMaterial ? materialOrSide[groups[i3].materialIndex].side : side;
      const startCount = intersects.length;
      setBuffer(roots[i3]);
      raycast(0, geometry, materialSide, ray4, intersects);
      clearBuffer();
      if (isArrayMaterial) {
        const materialIndex = groups[i3].materialIndex;
        for (let j2 = startCount, jl = intersects.length; j2 < jl; j2++) {
          intersects[j2].face.materialIndex = materialIndex;
        }
      }
    }
    return intersects;
  }
  raycastFirst(ray4, materialOrSide = FrontSide) {
    const roots = this._roots;
    const geometry = this.geometry;
    const isMaterial = materialOrSide.isMaterial;
    const isArrayMaterial = Array.isArray(materialOrSide);
    let closestResult = null;
    const groups = geometry.groups;
    const side = isMaterial ? materialOrSide.side : materialOrSide;
    for (let i3 = 0, l2 = roots.length; i3 < l2; i3++) {
      const materialSide = isArrayMaterial ? materialOrSide[groups[i3].materialIndex].side : side;
      setBuffer(roots[i3]);
      const result = raycastFirst(0, geometry, materialSide, ray4);
      clearBuffer();
      if (result != null && (closestResult == null || result.distance < closestResult.distance)) {
        closestResult = result;
        if (isArrayMaterial) {
          result.face.materialIndex = groups[i3].materialIndex;
        }
      }
    }
    return closestResult;
  }
  intersectsGeometry(otherGeometry, geomToMesh) {
    const geometry = this.geometry;
    let result = false;
    for (const root of this._roots) {
      setBuffer(root);
      result = intersectsGeometry(0, geometry, otherGeometry, geomToMesh);
      clearBuffer();
      if (result) {
        break;
      }
    }
    return result;
  }
  shapecast(callbacks, _intersectsTriangleFunc, _orderNodesFunc) {
    const geometry = this.geometry;
    if (callbacks instanceof Function) {
      if (_intersectsTriangleFunc) {
        const originalTriangleFunc = _intersectsTriangleFunc;
        _intersectsTriangleFunc = (tri, index, contained, depth) => {
          const i3 = index * 3;
          return originalTriangleFunc(tri, i3, i3 + 1, i3 + 2, contained, depth);
        };
      }
      callbacks = {
        boundsTraverseOrder: _orderNodesFunc,
        intersectsBounds: callbacks,
        intersectsTriangle: _intersectsTriangleFunc,
        intersectsRange: null
      };
      console.warn("MeshBVH: Shapecast function signature has changed and now takes an object of callbacks as a second argument. See docs for new signature.");
    }
    const triangle = trianglePool.getPrimitive();
    let {
      boundsTraverseOrder,
      intersectsBounds,
      intersectsRange,
      intersectsTriangle
    } = callbacks;
    if (intersectsRange && intersectsTriangle) {
      const originalIntersectsRange = intersectsRange;
      intersectsRange = (offset, count, contained, depth, nodeIndex) => {
        if (!originalIntersectsRange(offset, count, contained, depth, nodeIndex)) {
          return iterateOverTriangles(offset, count, geometry, intersectsTriangle, contained, depth, triangle);
        }
        return true;
      };
    } else if (!intersectsRange) {
      if (intersectsTriangle) {
        intersectsRange = (offset, count, contained, depth) => {
          return iterateOverTriangles(offset, count, geometry, intersectsTriangle, contained, depth, triangle);
        };
      } else {
        intersectsRange = (offset, count, contained) => {
          return contained;
        };
      }
    }
    let result = false;
    let byteOffset = 0;
    for (const root of this._roots) {
      setBuffer(root);
      result = shapecast(0, geometry, intersectsBounds, intersectsRange, boundsTraverseOrder, byteOffset);
      clearBuffer();
      if (result) {
        break;
      }
      byteOffset += root.byteLength;
    }
    trianglePool.releasePrimitive(triangle);
    return result;
  }
  bvhcast(otherBvh, matrixToLocal, callbacks) {
    let {
      intersectsRanges,
      intersectsTriangles
    } = callbacks;
    const indexAttr = this.geometry.index;
    const positionAttr = this.geometry.attributes.position;
    const otherIndexAttr = otherBvh.geometry.index;
    const otherPositionAttr = otherBvh.geometry.attributes.position;
    tempMatrix.copy(matrixToLocal).invert();
    const triangle = trianglePool.getPrimitive();
    const triangle2 = trianglePool.getPrimitive();
    if (intersectsTriangles) {
      let iterateOverDoubleTriangles = function(offset1, count1, offset2, count2, depth1, index1, depth2, index2) {
        for (let i22 = offset2, l2 = offset2 + count2; i22 < l2; i22++) {
          setTriangle(triangle2, i22 * 3, otherIndexAttr, otherPositionAttr);
          triangle2.a.applyMatrix4(matrixToLocal);
          triangle2.b.applyMatrix4(matrixToLocal);
          triangle2.c.applyMatrix4(matrixToLocal);
          triangle2.needsUpdate = true;
          for (let i1 = offset1, l1 = offset1 + count1; i1 < l1; i1++) {
            setTriangle(triangle, i1 * 3, indexAttr, positionAttr);
            triangle.needsUpdate = true;
            if (intersectsTriangles(triangle, triangle2, i1, i22, depth1, index1, depth2, index2)) {
              return true;
            }
          }
        }
        return false;
      };
      if (intersectsRanges) {
        const originalIntersectsRanges = intersectsRanges;
        intersectsRanges = function(offset1, count1, offset2, count2, depth1, index1, depth2, index2) {
          if (!originalIntersectsRanges(offset1, count1, offset2, count2, depth1, index1, depth2, index2)) {
            return iterateOverDoubleTriangles(offset1, count1, offset2, count2, depth1, index1, depth2, index2);
          }
          return true;
        };
      } else {
        intersectsRanges = iterateOverDoubleTriangles;
      }
    }
    otherBvh.getBoundingBox(aabb2);
    aabb2.applyMatrix4(matrixToLocal);
    const result = this.shapecast({
      intersectsBounds: (box) => aabb2.intersectsBox(box),
      intersectsRange: (offset1, count1, contained, depth1, nodeIndex1, box) => {
        aabb.copy(box);
        aabb.applyMatrix4(tempMatrix);
        return otherBvh.shapecast({
          intersectsBounds: (box2) => aabb.intersectsBox(box2),
          intersectsRange: (offset2, count2, contained2, depth2, nodeIndex2) => {
            return intersectsRanges(offset1, count1, offset2, count2, depth1, nodeIndex1, depth2, nodeIndex2);
          }
        });
      }
    });
    trianglePool.releasePrimitive(triangle);
    trianglePool.releasePrimitive(triangle2);
    return result;
  }
  /* Derived Cast Functions */
  intersectsBox(box, boxToMesh) {
    obb.set(box.min, box.max, boxToMesh);
    obb.needsUpdate = true;
    return this.shapecast(
      {
        intersectsBounds: (box2) => obb.intersectsBox(box2),
        intersectsTriangle: (tri) => obb.intersectsTriangle(tri)
      }
    );
  }
  intersectsSphere(sphere) {
    return this.shapecast(
      {
        intersectsBounds: (box) => sphere.intersectsBox(box),
        intersectsTriangle: (tri) => tri.intersectsSphere(sphere)
      }
    );
  }
  closestPointToGeometry(otherGeometry, geometryToBvh, target1 = {}, target2 = {}, minThreshold = 0, maxThreshold = Infinity) {
    if (!otherGeometry.boundingBox) {
      otherGeometry.computeBoundingBox();
    }
    obb.set(otherGeometry.boundingBox.min, otherGeometry.boundingBox.max, geometryToBvh);
    obb.needsUpdate = true;
    const geometry = this.geometry;
    const pos = geometry.attributes.position;
    const index = geometry.index;
    const otherPos = otherGeometry.attributes.position;
    const otherIndex = otherGeometry.index;
    const triangle = trianglePool.getPrimitive();
    const triangle2 = trianglePool.getPrimitive();
    let tempTarget1 = temp1;
    let tempTargetDest1 = temp2;
    let tempTarget2 = null;
    let tempTargetDest2 = null;
    if (target2) {
      tempTarget2 = temp3;
      tempTargetDest2 = temp4;
    }
    let closestDistance = Infinity;
    let closestDistanceTriIndex = null;
    let closestDistanceOtherTriIndex = null;
    tempMatrix.copy(geometryToBvh).invert();
    obb2.matrix.copy(tempMatrix);
    this.shapecast(
      {
        boundsTraverseOrder: (box) => {
          return obb.distanceToBox(box);
        },
        intersectsBounds: (box, isLeaf, score) => {
          if (score < closestDistance && score < maxThreshold) {
            if (isLeaf) {
              obb2.min.copy(box.min);
              obb2.max.copy(box.max);
              obb2.needsUpdate = true;
            }
            return true;
          }
          return false;
        },
        intersectsRange: (offset, count) => {
          if (otherGeometry.boundsTree) {
            return otherGeometry.boundsTree.shapecast({
              boundsTraverseOrder: (box) => {
                return obb2.distanceToBox(box);
              },
              intersectsBounds: (box, isLeaf, score) => {
                return score < closestDistance && score < maxThreshold;
              },
              intersectsRange: (otherOffset, otherCount) => {
                for (let i22 = otherOffset * 3, l2 = (otherOffset + otherCount) * 3; i22 < l2; i22 += 3) {
                  setTriangle(triangle2, i22, otherIndex, otherPos);
                  triangle2.a.applyMatrix4(geometryToBvh);
                  triangle2.b.applyMatrix4(geometryToBvh);
                  triangle2.c.applyMatrix4(geometryToBvh);
                  triangle2.needsUpdate = true;
                  for (let i3 = offset * 3, l3 = (offset + count) * 3; i3 < l3; i3 += 3) {
                    setTriangle(triangle, i3, index, pos);
                    triangle.needsUpdate = true;
                    const dist = triangle.distanceToTriangle(triangle2, tempTarget1, tempTarget2);
                    if (dist < closestDistance) {
                      tempTargetDest1.copy(tempTarget1);
                      if (tempTargetDest2) {
                        tempTargetDest2.copy(tempTarget2);
                      }
                      closestDistance = dist;
                      closestDistanceTriIndex = i3 / 3;
                      closestDistanceOtherTriIndex = i22 / 3;
                    }
                    if (dist < minThreshold) {
                      return true;
                    }
                  }
                }
              }
            });
          } else {
            const triCount = otherIndex ? otherIndex.count : otherPos.count;
            for (let i22 = 0, l2 = triCount; i22 < l2; i22 += 3) {
              setTriangle(triangle2, i22, otherIndex, otherPos);
              triangle2.a.applyMatrix4(geometryToBvh);
              triangle2.b.applyMatrix4(geometryToBvh);
              triangle2.c.applyMatrix4(geometryToBvh);
              triangle2.needsUpdate = true;
              for (let i3 = offset * 3, l3 = (offset + count) * 3; i3 < l3; i3 += 3) {
                setTriangle(triangle, i3, index, pos);
                triangle.needsUpdate = true;
                const dist = triangle.distanceToTriangle(triangle2, tempTarget1, tempTarget2);
                if (dist < closestDistance) {
                  tempTargetDest1.copy(tempTarget1);
                  if (tempTargetDest2) {
                    tempTargetDest2.copy(tempTarget2);
                  }
                  closestDistance = dist;
                  closestDistanceTriIndex = i3 / 3;
                  closestDistanceOtherTriIndex = i22 / 3;
                }
                if (dist < minThreshold) {
                  return true;
                }
              }
            }
          }
        }
      }
    );
    trianglePool.releasePrimitive(triangle);
    trianglePool.releasePrimitive(triangle2);
    if (closestDistance === Infinity)
      return null;
    if (!target1.point)
      target1.point = tempTargetDest1.clone();
    else
      target1.point.copy(tempTargetDest1);
    target1.distance = closestDistance, target1.faceIndex = closestDistanceTriIndex;
    if (target2) {
      if (!target2.point)
        target2.point = tempTargetDest2.clone();
      else
        target2.point.copy(tempTargetDest2);
      target2.point.applyMatrix4(tempMatrix);
      tempTargetDest1.applyMatrix4(tempMatrix);
      target2.distance = tempTargetDest1.sub(target2.point).length();
      target2.faceIndex = closestDistanceOtherTriIndex;
    }
    return target1;
  }
  closestPointToPoint(point, target2 = {}, minThreshold = 0, maxThreshold = Infinity) {
    const minThresholdSq = minThreshold * minThreshold;
    const maxThresholdSq = maxThreshold * maxThreshold;
    let closestDistanceSq = Infinity;
    let closestDistanceTriIndex = null;
    this.shapecast(
      {
        boundsTraverseOrder: (box) => {
          temp.copy(point).clamp(box.min, box.max);
          return temp.distanceToSquared(point);
        },
        intersectsBounds: (box, isLeaf, score) => {
          return score < closestDistanceSq && score < maxThresholdSq;
        },
        intersectsTriangle: (tri, triIndex) => {
          tri.closestPointToPoint(point, temp);
          const distSq = point.distanceToSquared(temp);
          if (distSq < closestDistanceSq) {
            temp1.copy(temp);
            closestDistanceSq = distSq;
            closestDistanceTriIndex = triIndex;
          }
          if (distSq < minThresholdSq) {
            return true;
          } else {
            return false;
          }
        }
      }
    );
    if (closestDistanceSq === Infinity)
      return null;
    const closestDistance = Math.sqrt(closestDistanceSq);
    if (!target2.point)
      target2.point = temp1.clone();
    else
      target2.point.copy(temp1);
    target2.distance = closestDistance, target2.faceIndex = closestDistanceTriIndex;
    return target2;
  }
  getBoundingBox(target2) {
    target2.makeEmpty();
    const roots = this._roots;
    roots.forEach((buffer) => {
      arrayToBox(0, new Float32Array(buffer), tempBox);
      target2.union(tempBox);
    });
    return target2;
  }
};

// node_modules/r3f-perf/node_modules/three-mesh-bvh/src/objects/MeshBVHVisualizer.js
var boundingBox2 = new Box3();

// node_modules/r3f-perf/node_modules/three-mesh-bvh/src/debug/Debug.js
var _box1 = new Box3();
var _box2 = new Box3();
var _vec = new Vector3();

// node_modules/r3f-perf/node_modules/three-mesh-bvh/src/utils/ExtensionUtilities.js
var ray = new Ray();
var tmpInverseMatrix = new Matrix4();
var origMeshRaycastFunc = Mesh.prototype.raycast;
function acceleratedRaycast(raycaster, intersects) {
  if (this.geometry.boundsTree) {
    if (this.material === void 0)
      return;
    tmpInverseMatrix.copy(this.matrixWorld).invert();
    ray.copy(raycaster.ray).applyMatrix4(tmpInverseMatrix);
    const bvh = this.geometry.boundsTree;
    if (raycaster.firstHitOnly === true) {
      const hit = convertRaycastIntersect(bvh.raycastFirst(ray, this.material), this, raycaster);
      if (hit) {
        intersects.push(hit);
      }
    } else {
      const hits = bvh.raycast(ray, this.material);
      for (let i3 = 0, l2 = hits.length; i3 < l2; i3++) {
        const hit = convertRaycastIntersect(hits[i3], this, raycaster);
        if (hit) {
          intersects.push(hit);
        }
      }
    }
  } else {
    origMeshRaycastFunc.call(this, raycaster, intersects);
  }
}
function computeBoundsTree(options) {
  this.boundsTree = new MeshBVH(this, options);
  return this.boundsTree;
}
function disposeBoundsTree() {
  this.boundsTree = null;
}

// node_modules/r3f-perf/node_modules/three-mesh-bvh/src/gpu/VertexAttributeTexture.js
function countToStringFormat(count) {
  switch (count) {
    case 1:
      return "R";
    case 2:
      return "RG";
    case 3:
      return "RGBA";
    case 4:
      return "RGBA";
  }
  throw new Error();
}
function countToFormat(count) {
  switch (count) {
    case 1:
      return RedFormat;
    case 2:
      return RGFormat;
    case 3:
      return RGBAFormat;
    case 4:
      return RGBAFormat;
  }
}
function countToIntFormat(count) {
  switch (count) {
    case 1:
      return RedIntegerFormat;
    case 2:
      return RGIntegerFormat;
    case 3:
      return RGBAIntegerFormat;
    case 4:
      return RGBAIntegerFormat;
  }
}
var VertexAttributeTexture = class extends DataTexture {
  constructor() {
    super();
    this.minFilter = NearestFilter;
    this.magFilter = NearestFilter;
    this.generateMipmaps = false;
    this.overrideItemSize = null;
    this._forcedType = null;
  }
  updateFrom(attr) {
    const overrideItemSize = this.overrideItemSize;
    const originalItemSize = attr.itemSize;
    const originalCount = attr.count;
    if (overrideItemSize !== null) {
      if (originalItemSize * originalCount % overrideItemSize !== 0) {
        throw new Error("VertexAttributeTexture: overrideItemSize must divide evenly into buffer length.");
      }
      attr.itemSize = overrideItemSize;
      attr.count = originalCount * originalItemSize / overrideItemSize;
    }
    const itemSize = attr.itemSize;
    const count = attr.count;
    const normalized = attr.normalized;
    const originalBufferCons = attr.array.constructor;
    const byteCount = originalBufferCons.BYTES_PER_ELEMENT;
    let targetType = this._forcedType;
    let finalStride = itemSize;
    if (targetType === null) {
      switch (originalBufferCons) {
        case Float32Array:
          targetType = FloatType;
          break;
        case Uint8Array:
        case Uint16Array:
        case Uint32Array:
          targetType = UnsignedIntType;
          break;
        case Int8Array:
        case Int16Array:
        case Int32Array:
          targetType = IntType;
          break;
      }
    }
    let type, format, normalizeValue, targetBufferCons;
    let internalFormat = countToStringFormat(itemSize);
    switch (targetType) {
      case FloatType:
        normalizeValue = 1;
        format = countToFormat(itemSize);
        if (normalized && byteCount === 1) {
          targetBufferCons = originalBufferCons;
          internalFormat += "8";
          if (originalBufferCons === Uint8Array) {
            type = UnsignedByteType;
          } else {
            type = ByteType;
            internalFormat += "_SNORM";
          }
        } else {
          targetBufferCons = Float32Array;
          internalFormat += "32F";
          type = FloatType;
        }
        break;
      case IntType:
        internalFormat += byteCount * 8 + "I";
        normalizeValue = normalized ? Math.pow(2, originalBufferCons.BYTES_PER_ELEMENT * 8 - 1) : 1;
        format = countToIntFormat(itemSize);
        if (byteCount === 1) {
          targetBufferCons = Int8Array;
          type = ByteType;
        } else if (byteCount === 2) {
          targetBufferCons = Int16Array;
          type = ShortType;
        } else {
          targetBufferCons = Int32Array;
          type = IntType;
        }
        break;
      case UnsignedIntType:
        internalFormat += byteCount * 8 + "UI";
        normalizeValue = normalized ? Math.pow(2, originalBufferCons.BYTES_PER_ELEMENT * 8 - 1) : 1;
        format = countToIntFormat(itemSize);
        if (byteCount === 1) {
          targetBufferCons = Uint8Array;
          type = UnsignedByteType;
        } else if (byteCount === 2) {
          targetBufferCons = Uint16Array;
          type = UnsignedShortType;
        } else {
          targetBufferCons = Uint32Array;
          type = UnsignedIntType;
        }
        break;
    }
    if (finalStride === 3 && (format === RGBAFormat || format === RGBAIntegerFormat)) {
      finalStride = 4;
    }
    const dimension = Math.ceil(Math.sqrt(count));
    const length = finalStride * dimension * dimension;
    const dataArray = new targetBufferCons(length);
    const originalNormalized = attr.normalized;
    attr.normalized = false;
    for (let i3 = 0; i3 < count; i3++) {
      const ii = finalStride * i3;
      dataArray[ii] = attr.getX(i3) / normalizeValue;
      if (itemSize >= 2) {
        dataArray[ii + 1] = attr.getY(i3) / normalizeValue;
      }
      if (itemSize >= 3) {
        dataArray[ii + 2] = attr.getZ(i3) / normalizeValue;
        if (finalStride === 4) {
          dataArray[ii + 3] = 1;
        }
      }
      if (itemSize >= 4) {
        dataArray[ii + 3] = attr.getW(i3) / normalizeValue;
      }
    }
    attr.normalized = originalNormalized;
    this.internalFormat = internalFormat;
    this.format = format;
    this.type = type;
    this.image.width = dimension;
    this.image.height = dimension;
    this.image.data = dataArray;
    this.needsUpdate = true;
    this.dispose();
    attr.itemSize = originalItemSize;
    attr.count = originalCount;
  }
};
var UIntVertexAttributeTexture = class extends VertexAttributeTexture {
  constructor() {
    super();
    this._forcedType = UnsignedIntType;
  }
};
var FloatVertexAttributeTexture = class extends VertexAttributeTexture {
  constructor() {
    super();
    this._forcedType = FloatType;
  }
};

// node_modules/r3f-perf/node_modules/three-mesh-bvh/src/gpu/MeshBVHUniformStruct.js
function bvhToTextures(bvh, boundsTexture, contentsTexture) {
  const roots = bvh._roots;
  if (roots.length !== 1) {
    throw new Error("MeshBVHUniformStruct: Multi-root BVHs not supported.");
  }
  const root = roots[0];
  const uint16Array = new Uint16Array(root);
  const uint32Array = new Uint32Array(root);
  const float32Array = new Float32Array(root);
  const nodeCount = root.byteLength / BYTES_PER_NODE;
  const boundsDimension = 2 * Math.ceil(Math.sqrt(nodeCount / 2));
  const boundsArray = new Float32Array(4 * boundsDimension * boundsDimension);
  const contentsDimension = Math.ceil(Math.sqrt(nodeCount));
  const contentsArray = new Uint32Array(2 * contentsDimension * contentsDimension);
  for (let i3 = 0; i3 < nodeCount; i3++) {
    const nodeIndex32 = i3 * BYTES_PER_NODE / 4;
    const nodeIndex16 = nodeIndex32 * 2;
    const boundsIndex = BOUNDING_DATA_INDEX(nodeIndex32);
    for (let b2 = 0; b2 < 3; b2++) {
      boundsArray[8 * i3 + 0 + b2] = float32Array[boundsIndex + 0 + b2];
      boundsArray[8 * i3 + 4 + b2] = float32Array[boundsIndex + 3 + b2];
    }
    if (IS_LEAF(nodeIndex16, uint16Array)) {
      const count = COUNT(nodeIndex16, uint16Array);
      const offset = OFFSET(nodeIndex32, uint32Array);
      const mergedLeafCount = 4294901760 | count;
      contentsArray[i3 * 2 + 0] = mergedLeafCount;
      contentsArray[i3 * 2 + 1] = offset;
    } else {
      const rightIndex = 4 * RIGHT_NODE(nodeIndex32, uint32Array) / BYTES_PER_NODE;
      const splitAxis = SPLIT_AXIS(nodeIndex32, uint32Array);
      contentsArray[i3 * 2 + 0] = splitAxis;
      contentsArray[i3 * 2 + 1] = rightIndex;
    }
  }
  boundsTexture.image.data = boundsArray;
  boundsTexture.image.width = boundsDimension;
  boundsTexture.image.height = boundsDimension;
  boundsTexture.format = RGBAFormat;
  boundsTexture.type = FloatType;
  boundsTexture.internalFormat = "RGBA32F";
  boundsTexture.minFilter = NearestFilter;
  boundsTexture.magFilter = NearestFilter;
  boundsTexture.generateMipmaps = false;
  boundsTexture.needsUpdate = true;
  boundsTexture.dispose();
  contentsTexture.image.data = contentsArray;
  contentsTexture.image.width = contentsDimension;
  contentsTexture.image.height = contentsDimension;
  contentsTexture.format = RGIntegerFormat;
  contentsTexture.type = UnsignedIntType;
  contentsTexture.internalFormat = "RG32UI";
  contentsTexture.minFilter = NearestFilter;
  contentsTexture.magFilter = NearestFilter;
  contentsTexture.generateMipmaps = false;
  contentsTexture.needsUpdate = true;
  contentsTexture.dispose();
}
var MeshBVHUniformStruct = class {
  constructor() {
    this.autoDispose = true;
    this.index = new UIntVertexAttributeTexture();
    this.position = new FloatVertexAttributeTexture();
    this.bvhBounds = new DataTexture();
    this.bvhContents = new DataTexture();
    this.index.overrideItemSize = 3;
  }
  updateFrom(bvh) {
    const { geometry } = bvh;
    bvhToTextures(bvh, this.bvhBounds, this.bvhContents);
    this.index.updateFrom(geometry.index);
    this.position.updateFrom(geometry.attributes.position);
  }
  dispose() {
    const { index, position: position2, bvhBounds, bvhContents } = this;
    if (index)
      index.dispose();
    if (position2)
      position2.dispose();
    if (bvhBounds)
      bvhBounds.dispose();
    if (bvhContents)
      bvhContents.dispose();
  }
};

// node_modules/r3f-perf/node_modules/three-mesh-bvh/src/gpu/shaderFunctions.js
var shaderStructs = (
  /* glsl */
  `
#ifndef TRI_INTERSECT_EPSILON
#define TRI_INTERSECT_EPSILON 1e-5
#endif

#ifndef INFINITY
#define INFINITY 1e20
#endif

struct BVH {

	usampler2D index;
	sampler2D position;

	sampler2D bvhBounds;
	usampler2D bvhContents;

};
`
);
var shaderIntersectFunction = (
  /* glsl */
  `

// Utilities
uvec4 uTexelFetch1D( usampler2D tex, uint index ) {

	uint width = uint( textureSize( tex, 0 ).x );
	uvec2 uv;
	uv.x = index % width;
	uv.y = index / width;

	return texelFetch( tex, ivec2( uv ), 0 );

}

ivec4 iTexelFetch1D( isampler2D tex, uint index ) {

	uint width = uint( textureSize( tex, 0 ).x );
	uvec2 uv;
	uv.x = index % width;
	uv.y = index / width;

	return texelFetch( tex, ivec2( uv ), 0 );

}

vec4 texelFetch1D( sampler2D tex, uint index ) {

	uint width = uint( textureSize( tex, 0 ).x );
	uvec2 uv;
	uv.x = index % width;
	uv.y = index / width;

	return texelFetch( tex, ivec2( uv ), 0 );

}

vec4 textureSampleBarycoord( sampler2D tex, vec3 barycoord, uvec3 faceIndices ) {

	return
		barycoord.x * texelFetch1D( tex, faceIndices.x ) +
		barycoord.y * texelFetch1D( tex, faceIndices.y ) +
		barycoord.z * texelFetch1D( tex, faceIndices.z );

}

void ndcToCameraRay(
	vec2 coord, mat4 cameraWorld, mat4 invProjectionMatrix,
	out vec3 rayOrigin, out vec3 rayDirection
) {

	// get camera look direction and near plane for camera clipping
	vec4 lookDirection = cameraWorld * vec4( 0.0, 0.0, - 1.0, 0.0 );
	vec4 nearVector = invProjectionMatrix * vec4( 0.0, 0.0, - 1.0, 1.0 );
	float near = abs( nearVector.z / nearVector.w );

	// get the camera direction and position from camera matrices
	vec4 origin = cameraWorld * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec4 direction = invProjectionMatrix * vec4( coord, 0.5, 1.0 );
	direction /= direction.w;
	direction = cameraWorld * direction - origin;

	// slide the origin along the ray until it sits at the near clip plane position
	origin.xyz += direction.xyz * near / dot( direction, lookDirection );

	rayOrigin = origin.xyz;
	rayDirection = direction.xyz;

}

// Raycasting
float intersectsBounds( vec3 rayOrigin, vec3 rayDirection, vec3 boundsMin, vec3 boundsMax ) {

	// https://www.reddit.com/r/opengl/comments/8ntzz5/fast_glsl_ray_box_intersection/
	// https://tavianator.com/2011/ray_box.html
	vec3 invDir = 1.0 / rayDirection;

	// find intersection distances for each plane
	vec3 tMinPlane = invDir * ( boundsMin - rayOrigin );
	vec3 tMaxPlane = invDir * ( boundsMax - rayOrigin );

	// get the min and max distances from each intersection
	vec3 tMinHit = min( tMaxPlane, tMinPlane );
	vec3 tMaxHit = max( tMaxPlane, tMinPlane );

	// get the furthest hit distance
	vec2 t = max( tMinHit.xx, tMinHit.yz );
	float t0 = max( t.x, t.y );

	// get the minimum hit distance
	t = min( tMaxHit.xx, tMaxHit.yz );
	float t1 = min( t.x, t.y );

	// set distance to 0.0 if the ray starts inside the box
	float dist = max( t0, 0.0 );

	return t1 >= dist ? dist : INFINITY;

}

bool intersectsTriangle(
	vec3 rayOrigin, vec3 rayDirection, vec3 a, vec3 b, vec3 c,
	out vec3 barycoord, out vec3 norm, out float dist, out float side
) {

	// https://stackoverflow.com/questions/42740765/intersection-between-line-and-triangle-in-3d
	vec3 edge1 = b - a;
	vec3 edge2 = c - a;
	norm = cross( edge1, edge2 );

	float det = - dot( rayDirection, norm );
	float invdet = 1.0 / det;

	vec3 AO = rayOrigin - a;
	vec3 DAO = cross( AO, rayDirection );

	vec4 uvt;
	uvt.x = dot( edge2, DAO ) * invdet;
	uvt.y = - dot( edge1, DAO ) * invdet;
	uvt.z = dot( AO, norm ) * invdet;
	uvt.w = 1.0 - uvt.x - uvt.y;

	// set the hit information
	barycoord = uvt.wxy; // arranged in A, B, C order
	dist = uvt.z;
	side = sign( det );
	norm = side * normalize( norm );

	// add an epsilon to avoid misses between triangles
	uvt += vec4( TRI_INTERSECT_EPSILON );

	return all( greaterThanEqual( uvt, vec4( 0.0 ) ) );

}

bool intersectTriangles(
	BVH bvh, vec3 rayOrigin, vec3 rayDirection, uint offset, uint count,
	inout float minDistance,

	// output variables
	out uvec4 faceIndices, out vec3 faceNormal, out vec3 barycoord,
	out float side, out float dist
) {

	bool found = false;
	vec3 localBarycoord, localNormal;
	float localDist, localSide;
	for ( uint i = offset, l = offset + count; i < l; i ++ ) {

		uvec3 indices = uTexelFetch1D( bvh.index, i ).xyz;
		vec3 a = texelFetch1D( bvh.position, indices.x ).rgb;
		vec3 b = texelFetch1D( bvh.position, indices.y ).rgb;
		vec3 c = texelFetch1D( bvh.position, indices.z ).rgb;

		if (
			intersectsTriangle( rayOrigin, rayDirection, a, b, c, localBarycoord, localNormal, localDist, localSide )
			&& localDist < minDistance
		) {

			found = true;
			minDistance = localDist;

			faceIndices = uvec4( indices.xyz, i );
			faceNormal = localNormal;

			side = localSide;
			barycoord = localBarycoord;
			dist = localDist;

		}

	}

	return found;

}

float intersectsBVHNodeBounds( vec3 rayOrigin, vec3 rayDirection, BVH bvh, uint currNodeIndex ) {

	vec3 boundsMin = texelFetch1D( bvh.bvhBounds, currNodeIndex * 2u + 0u ).xyz;
	vec3 boundsMax = texelFetch1D( bvh.bvhBounds, currNodeIndex * 2u + 1u ).xyz;
	return intersectsBounds( rayOrigin, rayDirection, boundsMin, boundsMax );

}

bool bvhIntersectFirstHit(
	BVH bvh, vec3 rayOrigin, vec3 rayDirection,

	// output variables
	out uvec4 faceIndices, out vec3 faceNormal, out vec3 barycoord,
	out float side, out float dist
) {

	// stack needs to be twice as long as the deepest tree we expect because
	// we push both the left and right child onto the stack every traversal
	int ptr = 0;
	uint stack[ 60 ];
	stack[ 0 ] = 0u;

	float triangleDistance = 1e20;
	bool found = false;
	while ( ptr > - 1 && ptr < 60 ) {

		uint currNodeIndex = stack[ ptr ];
		ptr --;

		// check if we intersect the current bounds
		float boundsHitDistance = intersectsBVHNodeBounds( rayOrigin, rayDirection, bvh, currNodeIndex );
		if ( boundsHitDistance == INFINITY || boundsHitDistance > triangleDistance ) {

			continue;

		}

		uvec2 boundsInfo = uTexelFetch1D( bvh.bvhContents, currNodeIndex ).xy;
		bool isLeaf = bool( boundsInfo.x & 0xffff0000u );

		if ( isLeaf ) {

			uint count = boundsInfo.x & 0x0000ffffu;
			uint offset = boundsInfo.y;

			found = intersectTriangles(
				bvh, rayOrigin, rayDirection, offset, count, triangleDistance,
				faceIndices, faceNormal, barycoord, side, dist
			) || found;

		} else {

			uint leftIndex = currNodeIndex + 1u;
			uint splitAxis = boundsInfo.x & 0x0000ffffu;
			uint rightIndex = boundsInfo.y;

			bool leftToRight = rayDirection[ splitAxis ] >= 0.0;
			uint c1 = leftToRight ? leftIndex : rightIndex;
			uint c2 = leftToRight ? rightIndex : leftIndex;

			// set c2 in the stack so we traverse it later. We need to keep track of a pointer in
			// the stack while we traverse. The second pointer added is the one that will be
			// traversed first
			ptr ++;
			stack[ ptr ] = c2;

			ptr ++;
			stack[ ptr ] = c1;

		}

	}

	return found;

}
`
);

// node_modules/r3f-perf/node_modules/three-mesh-bvh/src/utils/StaticGeometryGenerator.js
var _positionVector = new Vector3();
var _normalVector = new Vector3();
var _tangentVector = new Vector3();
var _tangentVector4 = new Vector4();
var _morphVector = new Vector3();
var _temp = new Vector3();
var _skinIndex = new Vector4();
var _skinWeight = new Vector4();
var _matrix = new Matrix4();
var _boneMatrix = new Matrix4();

// node_modules/r3f-perf/node_modules/@react-three/drei/core/useBVH.js
var isMesh = (child) => child.isMesh;
var Bvh = React59.forwardRef(({
  enabled = true,
  firstHitOnly = false,
  children,
  strategy = SAH,
  verbose = false,
  setBoundingBox = true,
  maxDepth = 40,
  maxLeafTris = 10,
  ...props
}, fref) => {
  const ref = React59.useRef(null);
  const raycaster = useThree((state) => state.raycaster);
  React59.useImperativeHandle(fref, () => ref.current, []);
  React59.useEffect(() => {
    if (enabled) {
      const options = {
        strategy,
        verbose,
        setBoundingBox,
        maxDepth,
        maxLeafTris
      };
      const group = ref.current;
      raycaster.firstHitOnly = firstHitOnly;
      group.traverse((child) => {
        if (isMesh(child) && !child.geometry.boundsTree && child.raycast === Mesh.prototype.raycast) {
          child.raycast = acceleratedRaycast;
          child.geometry.computeBoundsTree = computeBoundsTree;
          child.geometry.disposeBoundsTree = disposeBoundsTree;
          child.geometry.computeBoundsTree(options);
        }
      });
      return () => {
        delete raycaster.firstHitOnly;
        group.traverse((child) => {
          if (isMesh(child) && child.geometry.boundsTree) {
            child.geometry.disposeBoundsTree();
            child.raycast = Mesh.prototype.raycast;
          }
        });
      };
    }
  });
  return React59.createElement("group", _extends({
    ref
  }, props), children);
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/useContextBridge.js
var React60 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/useAnimations.js
var React61 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/useIntersect.js
var React62 = __toESM(require_react());
function useIntersect(onChange) {
  const ref = React62.useRef(null);
  const check = React62.useRef(false);
  const temp5 = React62.useRef(false);
  const callback = React62.useRef(onChange);
  React62.useLayoutEffect(() => void (callback.current = onChange), [onChange]);
  React62.useEffect(() => {
    const obj = ref.current;
    if (obj) {
      const unsub1 = addEffect(() => {
        check.current = false;
        return true;
      });
      const oldOnRender = obj.onBeforeRender;
      obj.onBeforeRender = () => check.current = true;
      const unsub2 = addAfterEffect(() => {
        if (check.current !== temp5.current)
          callback.current == null ? void 0 : callback.current(temp5.current = check.current);
        return true;
      });
      return () => {
        obj.onBeforeRender = oldOnRender;
        unsub1();
        unsub2();
      };
    }
  }, []);
  return ref;
}

// node_modules/r3f-perf/node_modules/@react-three/drei/core/useBoxProjectedEnv.js
var React63 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/BBAnchor.js
var React64 = __toESM(require_react());
var boundingBox3 = new Box3();
var boundingBoxSize = new Vector3();

// node_modules/r3f-perf/node_modules/@react-three/drei/core/useTrailTexture.js
var import_react20 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Example.js
var React66 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Center.js
var React65 = __toESM(require_react());
var Center = React65.forwardRef(function Center2({
  children,
  disable,
  disableX,
  disableY,
  disableZ,
  left,
  right,
  top,
  bottom,
  front,
  back,
  onCentered,
  precise = true,
  cacheKey = 0,
  ...props
}, fRef) {
  const ref = React65.useRef(null);
  const outer = React65.useRef(null);
  const inner = React65.useRef(null);
  React65.useLayoutEffect(() => {
    outer.current.matrixWorld.identity();
    const box3 = new Box3().setFromObject(inner.current, precise);
    const center = new Vector3();
    const sphere = new Sphere();
    const width = box3.max.x - box3.min.x;
    const height = box3.max.y - box3.min.y;
    const depth = box3.max.z - box3.min.z;
    box3.getCenter(center);
    box3.getBoundingSphere(sphere);
    const vAlign = top ? height / 2 : bottom ? -height / 2 : 0;
    const hAlign = left ? -width / 2 : right ? width / 2 : 0;
    const dAlign = front ? depth / 2 : back ? -depth / 2 : 0;
    outer.current.position.set(disable || disableX ? 0 : -center.x + hAlign, disable || disableY ? 0 : -center.y + vAlign, disable || disableZ ? 0 : -center.z + dAlign);
    if (typeof onCentered !== "undefined") {
      onCentered({
        parent: ref.current.parent,
        container: ref.current,
        width,
        height,
        depth,
        boundingBox: box3,
        boundingSphere: sphere,
        center,
        verticalAlignment: vAlign,
        horizontalAlignment: hAlign,
        depthAlignment: dAlign
      });
    }
  }, [cacheKey, onCentered, top, left, front, disable, disableX, disableY, disableZ, precise, right, bottom, back]);
  React65.useImperativeHandle(fRef, () => ref.current, []);
  return React65.createElement("group", _extends({
    ref
  }, props), React65.createElement("group", {
    ref: outer
  }, React65.createElement("group", {
    ref: inner
  }, children)));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Example.js
var Example = React66.forwardRef(({
  font,
  color = "#cbcbcb",
  bevelSize = 0.04,
  debug = false,
  children,
  ...props
}, fref) => {
  const [counter, setCounter] = React66.useState(0);
  const incr = React66.useCallback((x2 = 1) => setCounter(counter + x2), [counter]);
  const decr = React66.useCallback((x2 = 1) => setCounter(counter - x2), [counter]);
  const api = React66.useMemo(() => ({
    incr,
    decr
  }), [incr, decr]);
  React66.useImperativeHandle(fref, () => api, [api]);
  return React66.createElement("group", props, React66.createElement(React66.Suspense, {
    fallback: null
  }, React66.createElement(Center, {
    top: true,
    cacheKey: JSON.stringify({
      counter,
      font
    })
  }, React66.createElement(Text3D, {
    bevelEnabled: true,
    bevelSize,
    font
  }, debug ? React66.createElement("meshNormalMaterial", {
    wireframe: true
  }) : React66.createElement("meshStandardMaterial", {
    color
  }), counter))), children);
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/SpriteAnimator.js
var React67 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/CurveModifier.js
var React68 = __toESM(require_react());
var CurveModifier = React68.forwardRef(({
  children,
  curve
}, ref) => {
  const [scene] = React68.useState(() => new Scene());
  const [obj, set] = React68.useState();
  const modifier = React68.useRef();
  React68.useEffect(() => {
    modifier.current = new Flow(scene.children[0]);
    set(modifier.current.object3D);
  }, [children]);
  React68.useEffect(() => {
    var _modifier$current;
    if (curve)
      (_modifier$current = modifier.current) == null ? void 0 : _modifier$current.updateCurve(0, curve);
  }, [curve]);
  React68.useImperativeHandle(ref, () => ({
    moveAlongCurve: (val) => {
      var _modifier$current2;
      (_modifier$current2 = modifier.current) == null ? void 0 : _modifier$current2.moveAlongCurve(val);
    }
  }));
  return React68.createElement(React68.Fragment, null, createPortal(children, scene), obj && React68.createElement("primitive", {
    object: obj
  }));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/MeshDistortMaterial.js
var React69 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/helpers/glsl/distort.vert.glsl.js
var distort = "#define GLSLIFY 1\nvec3 mod289(vec3 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 mod289(vec4 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 permute(vec4 x){return mod289(((x*34.0)+1.0)*x);}vec4 taylorInvSqrt(vec4 r){return 1.79284291400159-0.85373472095314*r;}float snoise(vec3 v){const vec2 C=vec2(1.0/6.0,1.0/3.0);const vec4 D=vec4(0.0,0.5,1.0,2.0);vec3 i=floor(v+dot(v,C.yyy));vec3 x0=v-i+dot(i,C.xxx);vec3 g=step(x0.yzx,x0.xyz);vec3 l=1.0-g;vec3 i1=min(g.xyz,l.zxy);vec3 i2=max(g.xyz,l.zxy);vec3 x1=x0-i1+C.xxx;vec3 x2=x0-i2+C.yyy;vec3 x3=x0-D.yyy;i=mod289(i);vec4 p=permute(permute(permute(i.z+vec4(0.0,i1.z,i2.z,1.0))+i.y+vec4(0.0,i1.y,i2.y,1.0))+i.x+vec4(0.0,i1.x,i2.x,1.0));float n_=0.142857142857;vec3 ns=n_*D.wyz-D.xzx;vec4 j=p-49.0*floor(p*ns.z*ns.z);vec4 x_=floor(j*ns.z);vec4 y_=floor(j-7.0*x_);vec4 x=x_*ns.x+ns.yyyy;vec4 y=y_*ns.x+ns.yyyy;vec4 h=1.0-abs(x)-abs(y);vec4 b0=vec4(x.xy,y.xy);vec4 b1=vec4(x.zw,y.zw);vec4 s0=floor(b0)*2.0+1.0;vec4 s1=floor(b1)*2.0+1.0;vec4 sh=-step(h,vec4(0.0));vec4 a0=b0.xzyw+s0.xzyw*sh.xxyy;vec4 a1=b1.xzyw+s1.xzyw*sh.zzww;vec3 p0=vec3(a0.xy,h.x);vec3 p1=vec3(a0.zw,h.y);vec3 p2=vec3(a1.xy,h.z);vec3 p3=vec3(a1.zw,h.w);vec4 norm=taylorInvSqrt(vec4(dot(p0,p0),dot(p1,p1),dot(p2,p2),dot(p3,p3)));p0*=norm.x;p1*=norm.y;p2*=norm.z;p3*=norm.w;vec4 m=max(0.6-vec4(dot(x0,x0),dot(x1,x1),dot(x2,x2),dot(x3,x3)),0.0);m=m*m;return 42.0*dot(m*m,vec4(dot(p0,x0),dot(p1,x1),dot(p2,x2),dot(p3,x3)));}";

// node_modules/r3f-perf/node_modules/@react-three/drei/core/MeshDistortMaterial.js
var DistortMaterialImpl = class extends MeshPhysicalMaterial {
  constructor(parameters = {}) {
    super(parameters);
    this.setValues(parameters);
    this._time = {
      value: 0
    };
    this._distort = {
      value: 0.4
    };
    this._radius = {
      value: 1
    };
  }
  onBeforeCompile(shader) {
    shader.uniforms.time = this._time;
    shader.uniforms.radius = this._radius;
    shader.uniforms.distort = this._distort;
    shader.vertexShader = `
      uniform float time;
      uniform float radius;
      uniform float distort;
      ${distort}
      ${shader.vertexShader}
    `;
    shader.vertexShader = shader.vertexShader.replace("#include <begin_vertex>", `
        float updateTime = time / 50.0;
        float noise = snoise(vec3(position / 2.0 + updateTime * 5.0));
        vec3 transformed = vec3(position * (noise * pow(distort, 2.0) + radius));
        `);
  }
  get time() {
    return this._time.value;
  }
  set time(v5) {
    this._time.value = v5;
  }
  get distort() {
    return this._distort.value;
  }
  set distort(v5) {
    this._distort.value = v5;
  }
  get radius() {
    return this._radius.value;
  }
  set radius(v5) {
    this._radius.value = v5;
  }
};
var MeshDistortMaterial = React69.forwardRef(({
  speed = 1,
  ...props
}, ref) => {
  const [material] = React69.useState(() => new DistortMaterialImpl());
  useFrame((state) => material && (material.time = state.clock.getElapsedTime() * speed));
  return React69.createElement("primitive", _extends({
    object: material,
    ref,
    attach: "material"
  }, props));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/MeshWobbleMaterial.js
var React70 = __toESM(require_react());
var WobbleMaterialImpl = class extends MeshStandardMaterial {
  constructor(parameters = {}) {
    super(parameters);
    this.setValues(parameters);
    this._time = {
      value: 0
    };
    this._factor = {
      value: 1
    };
  }
  onBeforeCompile(shader) {
    shader.uniforms.time = this._time;
    shader.uniforms.factor = this._factor;
    shader.vertexShader = `
      uniform float time;
      uniform float factor;
      ${shader.vertexShader}
    `;
    shader.vertexShader = shader.vertexShader.replace("#include <begin_vertex>", `float theta = sin( time + position.y ) / 2.0 * factor;
        float c = cos( theta );
        float s = sin( theta );
        mat3 m = mat3( c, 0, s, 0, 1, 0, -s, 0, c );
        vec3 transformed = vec3( position ) * m;
        vNormal = vNormal * m;`);
  }
  get time() {
    return this._time.value;
  }
  set time(v5) {
    this._time.value = v5;
  }
  get factor() {
    return this._factor.value;
  }
  set factor(v5) {
    this._factor.value = v5;
  }
};
var MeshWobbleMaterial = React70.forwardRef(({
  speed = 1,
  ...props
}, ref) => {
  const [material] = React70.useState(() => new WobbleMaterialImpl());
  useFrame((state) => material && (material.time = state.clock.getElapsedTime() * speed));
  return React70.createElement("primitive", _extends({
    object: material,
    ref,
    attach: "material"
  }, props));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/MeshReflectorMaterial.js
var React71 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/materials/ConvolutionMaterial.js
var ConvolutionMaterial = class extends ShaderMaterial {
  constructor(texelSize = new Vector2()) {
    super({
      uniforms: {
        inputBuffer: new Uniform(null),
        depthBuffer: new Uniform(null),
        resolution: new Uniform(new Vector2()),
        texelSize: new Uniform(new Vector2()),
        halfTexelSize: new Uniform(new Vector2()),
        kernel: new Uniform(0),
        scale: new Uniform(1),
        cameraNear: new Uniform(0),
        cameraFar: new Uniform(1),
        minDepthThreshold: new Uniform(0),
        maxDepthThreshold: new Uniform(1),
        depthScale: new Uniform(0),
        depthToBlurRatioBias: new Uniform(0.25)
      },
      fragmentShader: `#include <common>
        #include <dithering_pars_fragment>      
        uniform sampler2D inputBuffer;
        uniform sampler2D depthBuffer;
        uniform float cameraNear;
        uniform float cameraFar;
        uniform float minDepthThreshold;
        uniform float maxDepthThreshold;
        uniform float depthScale;
        uniform float depthToBlurRatioBias;
        varying vec2 vUv;
        varying vec2 vUv0;
        varying vec2 vUv1;
        varying vec2 vUv2;
        varying vec2 vUv3;

        void main() {
          float depthFactor = 0.0;
          
          #ifdef USE_DEPTH
            vec4 depth = texture2D(depthBuffer, vUv);
            depthFactor = smoothstep(minDepthThreshold, maxDepthThreshold, 1.0-(depth.r * depth.a));
            depthFactor *= depthScale;
            depthFactor = max(0.0, min(1.0, depthFactor + 0.25));
          #endif
          
          vec4 sum = texture2D(inputBuffer, mix(vUv0, vUv, depthFactor));
          sum += texture2D(inputBuffer, mix(vUv1, vUv, depthFactor));
          sum += texture2D(inputBuffer, mix(vUv2, vUv, depthFactor));
          sum += texture2D(inputBuffer, mix(vUv3, vUv, depthFactor));
          gl_FragColor = sum * 0.25 ;

          #include <dithering_fragment>
          #include <tonemapping_fragment>
          #include <encodings_fragment>
        }`,
      vertexShader: `uniform vec2 texelSize;
        uniform vec2 halfTexelSize;
        uniform float kernel;
        uniform float scale;
        varying vec2 vUv;
        varying vec2 vUv0;
        varying vec2 vUv1;
        varying vec2 vUv2;
        varying vec2 vUv3;

        void main() {
          vec2 uv = position.xy * 0.5 + 0.5;
          vUv = uv;

          vec2 dUv = (texelSize * vec2(kernel) + halfTexelSize) * scale;
          vUv0 = vec2(uv.x - dUv.x, uv.y + dUv.y);
          vUv1 = vec2(uv.x + dUv.x, uv.y + dUv.y);
          vUv2 = vec2(uv.x + dUv.x, uv.y - dUv.y);
          vUv3 = vec2(uv.x - dUv.x, uv.y - dUv.y);

          gl_Position = vec4(position.xy, 1.0, 1.0);
        }`,
      blending: NoBlending,
      depthWrite: false,
      depthTest: false
    });
    this.toneMapped = false;
    this.setTexelSize(texelSize.x, texelSize.y);
    this.kernel = new Float32Array([0, 1, 2, 2, 3]);
  }
  setTexelSize(x2, y2) {
    this.uniforms.texelSize.value.set(x2, y2);
    this.uniforms.halfTexelSize.value.set(x2, y2).multiplyScalar(0.5);
  }
  setResolution(resolution) {
    this.uniforms.resolution.value.copy(resolution);
  }
};

// node_modules/r3f-perf/node_modules/@react-three/drei/materials/BlurPass.js
var BlurPass = class {
  constructor({
    gl,
    resolution,
    width = 500,
    height = 500,
    minDepthThreshold = 0,
    maxDepthThreshold = 1,
    depthScale = 0,
    depthToBlurRatioBias = 0.25
  }) {
    this.renderToScreen = false;
    this.renderTargetA = new WebGLRenderTarget(resolution, resolution, {
      minFilter: LinearFilter,
      magFilter: LinearFilter,
      stencilBuffer: false,
      depthBuffer: false,
      type: HalfFloatType
    });
    this.renderTargetB = this.renderTargetA.clone();
    this.convolutionMaterial = new ConvolutionMaterial();
    this.convolutionMaterial.setTexelSize(1 / width, 1 / height);
    this.convolutionMaterial.setResolution(new Vector2(width, height));
    this.scene = new Scene();
    this.camera = new Camera();
    this.convolutionMaterial.uniforms.minDepthThreshold.value = minDepthThreshold;
    this.convolutionMaterial.uniforms.maxDepthThreshold.value = maxDepthThreshold;
    this.convolutionMaterial.uniforms.depthScale.value = depthScale;
    this.convolutionMaterial.uniforms.depthToBlurRatioBias.value = depthToBlurRatioBias;
    this.convolutionMaterial.defines.USE_DEPTH = depthScale > 0;
    const vertices = new Float32Array([-1, -1, 0, 3, -1, 0, -1, 3, 0]);
    const uvs = new Float32Array([0, 0, 2, 0, 0, 2]);
    const geometry = new BufferGeometry();
    geometry.setAttribute("position", new BufferAttribute(vertices, 3));
    geometry.setAttribute("uv", new BufferAttribute(uvs, 2));
    this.screen = new Mesh(geometry, this.convolutionMaterial);
    this.screen.frustumCulled = false;
    this.scene.add(this.screen);
  }
  render(renderer, inputBuffer, outputBuffer) {
    const scene = this.scene;
    const camera = this.camera;
    const renderTargetA = this.renderTargetA;
    const renderTargetB = this.renderTargetB;
    let material = this.convolutionMaterial;
    let uniforms = material.uniforms;
    uniforms.depthBuffer.value = inputBuffer.depthTexture;
    const kernel = material.kernel;
    let lastRT = inputBuffer;
    let destRT;
    let i3, l2;
    for (i3 = 0, l2 = kernel.length - 1; i3 < l2; ++i3) {
      destRT = (i3 & 1) === 0 ? renderTargetA : renderTargetB;
      uniforms.kernel.value = kernel[i3];
      uniforms.inputBuffer.value = lastRT.texture;
      renderer.setRenderTarget(destRT);
      renderer.render(scene, camera);
      lastRT = destRT;
    }
    uniforms.kernel.value = kernel[i3];
    uniforms.inputBuffer.value = lastRT.texture;
    renderer.setRenderTarget(this.renderToScreen ? null : outputBuffer);
    renderer.render(scene, camera);
  }
};

// node_modules/r3f-perf/node_modules/@react-three/drei/materials/MeshReflectorMaterial.js
var MeshReflectorMaterial = class extends MeshStandardMaterial {
  constructor(parameters = {}) {
    super(parameters);
    this._tDepth = {
      value: null
    };
    this._distortionMap = {
      value: null
    };
    this._tDiffuse = {
      value: null
    };
    this._tDiffuseBlur = {
      value: null
    };
    this._textureMatrix = {
      value: null
    };
    this._hasBlur = {
      value: false
    };
    this._mirror = {
      value: 0
    };
    this._mixBlur = {
      value: 0
    };
    this._blurStrength = {
      value: 0.5
    };
    this._minDepthThreshold = {
      value: 0.9
    };
    this._maxDepthThreshold = {
      value: 1
    };
    this._depthScale = {
      value: 0
    };
    this._depthToBlurRatioBias = {
      value: 0.25
    };
    this._distortion = {
      value: 1
    };
    this._mixContrast = {
      value: 1
    };
    this.setValues(parameters);
  }
  onBeforeCompile(shader) {
    var _shader$defines;
    if (!((_shader$defines = shader.defines) != null && _shader$defines.USE_UV)) {
      shader.defines.USE_UV = "";
    }
    shader.uniforms.hasBlur = this._hasBlur;
    shader.uniforms.tDiffuse = this._tDiffuse;
    shader.uniforms.tDepth = this._tDepth;
    shader.uniforms.distortionMap = this._distortionMap;
    shader.uniforms.tDiffuseBlur = this._tDiffuseBlur;
    shader.uniforms.textureMatrix = this._textureMatrix;
    shader.uniforms.mirror = this._mirror;
    shader.uniforms.mixBlur = this._mixBlur;
    shader.uniforms.mixStrength = this._blurStrength;
    shader.uniforms.minDepthThreshold = this._minDepthThreshold;
    shader.uniforms.maxDepthThreshold = this._maxDepthThreshold;
    shader.uniforms.depthScale = this._depthScale;
    shader.uniforms.depthToBlurRatioBias = this._depthToBlurRatioBias;
    shader.uniforms.distortion = this._distortion;
    shader.uniforms.mixContrast = this._mixContrast;
    shader.vertexShader = `
        uniform mat4 textureMatrix;
        varying vec4 my_vUv;
      ${shader.vertexShader}`;
    shader.vertexShader = shader.vertexShader.replace("#include <project_vertex>", `#include <project_vertex>
        my_vUv = textureMatrix * vec4( position, 1.0 );
        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );`);
    shader.fragmentShader = `
        uniform sampler2D tDiffuse;
        uniform sampler2D tDiffuseBlur;
        uniform sampler2D tDepth;
        uniform sampler2D distortionMap;
        uniform float distortion;
        uniform float cameraNear;
			  uniform float cameraFar;
        uniform bool hasBlur;
        uniform float mixBlur;
        uniform float mirror;
        uniform float mixStrength;
        uniform float minDepthThreshold;
        uniform float maxDepthThreshold;
        uniform float mixContrast;
        uniform float depthScale;
        uniform float depthToBlurRatioBias;
        varying vec4 my_vUv;
        ${shader.fragmentShader}`;
    shader.fragmentShader = shader.fragmentShader.replace("#include <emissivemap_fragment>", `#include <emissivemap_fragment>

      float distortionFactor = 0.0;
      #ifdef USE_DISTORTION
        distortionFactor = texture2D(distortionMap, vUv).r * distortion;
      #endif

      vec4 new_vUv = my_vUv;
      new_vUv.x += distortionFactor;
      new_vUv.y += distortionFactor;

      vec4 base = texture2DProj(tDiffuse, new_vUv);
      vec4 blur = texture2DProj(tDiffuseBlur, new_vUv);

      vec4 merge = base;

      #ifdef USE_NORMALMAP
        vec2 normal_uv = vec2(0.0);
        vec4 normalColor = texture2D(normalMap, vUv * normalScale);
        vec3 my_normal = normalize( vec3( normalColor.r * 2.0 - 1.0, normalColor.b,  normalColor.g * 2.0 - 1.0 ) );
        vec3 coord = new_vUv.xyz / new_vUv.w;
        normal_uv = coord.xy + coord.z * my_normal.xz * 0.05;
        vec4 base_normal = texture2D(tDiffuse, normal_uv);
        vec4 blur_normal = texture2D(tDiffuseBlur, normal_uv);
        merge = base_normal;
        blur = blur_normal;
      #endif

      float depthFactor = 0.0001;
      float blurFactor = 0.0;

      #ifdef USE_DEPTH
        vec4 depth = texture2DProj(tDepth, new_vUv);
        depthFactor = smoothstep(minDepthThreshold, maxDepthThreshold, 1.0-(depth.r * depth.a));
        depthFactor *= depthScale;
        depthFactor = max(0.0001, min(1.0, depthFactor));

        #ifdef USE_BLUR
          blur = blur * min(1.0, depthFactor + depthToBlurRatioBias);
          merge = merge * min(1.0, depthFactor + 0.5);
        #else
          merge = merge * depthFactor;
        #endif

      #endif

      float reflectorRoughnessFactor = roughness;
      #ifdef USE_ROUGHNESSMAP
        vec4 reflectorTexelRoughness = texture2D( roughnessMap, vUv );
        reflectorRoughnessFactor *= reflectorTexelRoughness.g;
      #endif

      #ifdef USE_BLUR
        blurFactor = min(1.0, mixBlur * reflectorRoughnessFactor);
        merge = mix(merge, blur, blurFactor);
      #endif

      vec4 newMerge = vec4(0.0, 0.0, 0.0, 1.0);
      newMerge.r = (merge.r - 0.5) * mixContrast + 0.5;
      newMerge.g = (merge.g - 0.5) * mixContrast + 0.5;
      newMerge.b = (merge.b - 0.5) * mixContrast + 0.5;

      diffuseColor.rgb = diffuseColor.rgb * ((1.0 - min(1.0, mirror)) + newMerge.rgb * mixStrength);
      `);
  }
  get tDiffuse() {
    return this._tDiffuse.value;
  }
  set tDiffuse(v5) {
    this._tDiffuse.value = v5;
  }
  get tDepth() {
    return this._tDepth.value;
  }
  set tDepth(v5) {
    this._tDepth.value = v5;
  }
  get distortionMap() {
    return this._distortionMap.value;
  }
  set distortionMap(v5) {
    this._distortionMap.value = v5;
  }
  get tDiffuseBlur() {
    return this._tDiffuseBlur.value;
  }
  set tDiffuseBlur(v5) {
    this._tDiffuseBlur.value = v5;
  }
  get textureMatrix() {
    return this._textureMatrix.value;
  }
  set textureMatrix(v5) {
    this._textureMatrix.value = v5;
  }
  get hasBlur() {
    return this._hasBlur.value;
  }
  set hasBlur(v5) {
    this._hasBlur.value = v5;
  }
  get mirror() {
    return this._mirror.value;
  }
  set mirror(v5) {
    this._mirror.value = v5;
  }
  get mixBlur() {
    return this._mixBlur.value;
  }
  set mixBlur(v5) {
    this._mixBlur.value = v5;
  }
  get mixStrength() {
    return this._blurStrength.value;
  }
  set mixStrength(v5) {
    this._blurStrength.value = v5;
  }
  get minDepthThreshold() {
    return this._minDepthThreshold.value;
  }
  set minDepthThreshold(v5) {
    this._minDepthThreshold.value = v5;
  }
  get maxDepthThreshold() {
    return this._maxDepthThreshold.value;
  }
  set maxDepthThreshold(v5) {
    this._maxDepthThreshold.value = v5;
  }
  get depthScale() {
    return this._depthScale.value;
  }
  set depthScale(v5) {
    this._depthScale.value = v5;
  }
  get depthToBlurRatioBias() {
    return this._depthToBlurRatioBias.value;
  }
  set depthToBlurRatioBias(v5) {
    this._depthToBlurRatioBias.value = v5;
  }
  get distortion() {
    return this._distortion.value;
  }
  set distortion(v5) {
    this._distortion.value = v5;
  }
  get mixContrast() {
    return this._mixContrast.value;
  }
  set mixContrast(v5) {
    this._mixContrast.value = v5;
  }
};

// node_modules/r3f-perf/node_modules/@react-three/drei/core/MeshReflectorMaterial.js
extend({
  MeshReflectorMaterialImpl: MeshReflectorMaterial
});
var MeshReflectorMaterial2 = React71.forwardRef(({
  mixBlur = 0,
  mixStrength = 1,
  resolution = 256,
  blur = [0, 0],
  minDepthThreshold = 0.9,
  maxDepthThreshold = 1,
  depthScale = 0,
  depthToBlurRatioBias = 0.25,
  mirror = 0,
  distortion = 1,
  mixContrast = 1,
  distortionMap,
  reflectorOffset = 0,
  ...props
}, ref) => {
  const gl = useThree(({
    gl: gl2
  }) => gl2);
  const camera = useThree(({
    camera: camera2
  }) => camera2);
  const scene = useThree(({
    scene: scene2
  }) => scene2);
  blur = Array.isArray(blur) ? blur : [blur, blur];
  const hasBlur = blur[0] + blur[1] > 0;
  const materialRef = React71.useRef(null);
  const [reflectorPlane] = React71.useState(() => new Plane());
  const [normal2] = React71.useState(() => new Vector3());
  const [reflectorWorldPosition] = React71.useState(() => new Vector3());
  const [cameraWorldPosition] = React71.useState(() => new Vector3());
  const [rotationMatrix] = React71.useState(() => new Matrix4());
  const [lookAtPosition] = React71.useState(() => new Vector3(0, 0, -1));
  const [clipPlane] = React71.useState(() => new Vector4());
  const [view] = React71.useState(() => new Vector3());
  const [target2] = React71.useState(() => new Vector3());
  const [q3] = React71.useState(() => new Vector4());
  const [textureMatrix] = React71.useState(() => new Matrix4());
  const [virtualCamera] = React71.useState(() => new PerspectiveCamera());
  const beforeRender = React71.useCallback(() => {
    var _materialRef$current;
    const parent = materialRef.current.parent || ((_materialRef$current = materialRef.current) == null ? void 0 : _materialRef$current.__r3f.parent);
    if (!parent)
      return;
    reflectorWorldPosition.setFromMatrixPosition(parent.matrixWorld);
    cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);
    rotationMatrix.extractRotation(parent.matrixWorld);
    normal2.set(0, 0, 1);
    normal2.applyMatrix4(rotationMatrix);
    reflectorWorldPosition.addScaledVector(normal2, reflectorOffset);
    view.subVectors(reflectorWorldPosition, cameraWorldPosition);
    if (view.dot(normal2) > 0)
      return;
    view.reflect(normal2).negate();
    view.add(reflectorWorldPosition);
    rotationMatrix.extractRotation(camera.matrixWorld);
    lookAtPosition.set(0, 0, -1);
    lookAtPosition.applyMatrix4(rotationMatrix);
    lookAtPosition.add(cameraWorldPosition);
    target2.subVectors(reflectorWorldPosition, lookAtPosition);
    target2.reflect(normal2).negate();
    target2.add(reflectorWorldPosition);
    virtualCamera.position.copy(view);
    virtualCamera.up.set(0, 1, 0);
    virtualCamera.up.applyMatrix4(rotationMatrix);
    virtualCamera.up.reflect(normal2);
    virtualCamera.lookAt(target2);
    virtualCamera.far = camera.far;
    virtualCamera.updateMatrixWorld();
    virtualCamera.projectionMatrix.copy(camera.projectionMatrix);
    textureMatrix.set(0.5, 0, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0, 1);
    textureMatrix.multiply(virtualCamera.projectionMatrix);
    textureMatrix.multiply(virtualCamera.matrixWorldInverse);
    textureMatrix.multiply(parent.matrixWorld);
    reflectorPlane.setFromNormalAndCoplanarPoint(normal2, reflectorWorldPosition);
    reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse);
    clipPlane.set(reflectorPlane.normal.x, reflectorPlane.normal.y, reflectorPlane.normal.z, reflectorPlane.constant);
    const projectionMatrix = virtualCamera.projectionMatrix;
    q3.x = (Math.sign(clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];
    q3.y = (Math.sign(clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];
    q3.z = -1;
    q3.w = (1 + projectionMatrix.elements[10]) / projectionMatrix.elements[14];
    clipPlane.multiplyScalar(2 / clipPlane.dot(q3));
    projectionMatrix.elements[2] = clipPlane.x;
    projectionMatrix.elements[6] = clipPlane.y;
    projectionMatrix.elements[10] = clipPlane.z + 1;
    projectionMatrix.elements[14] = clipPlane.w;
  }, [camera, reflectorOffset]);
  const [fbo1, fbo2, blurpass, reflectorProps] = React71.useMemo(() => {
    const parameters = {
      minFilter: LinearFilter,
      magFilter: LinearFilter,
      type: HalfFloatType
    };
    const fbo12 = new WebGLRenderTarget(resolution, resolution, parameters);
    fbo12.depthBuffer = true;
    fbo12.depthTexture = new DepthTexture(resolution, resolution);
    fbo12.depthTexture.format = DepthFormat;
    fbo12.depthTexture.type = UnsignedShortType;
    const fbo22 = new WebGLRenderTarget(resolution, resolution, parameters);
    const blurpass2 = new BlurPass({
      gl,
      resolution,
      width: blur[0],
      height: blur[1],
      minDepthThreshold,
      maxDepthThreshold,
      depthScale,
      depthToBlurRatioBias
    });
    const reflectorProps2 = {
      mirror,
      textureMatrix,
      mixBlur,
      tDiffuse: fbo12.texture,
      tDepth: fbo12.depthTexture,
      tDiffuseBlur: fbo22.texture,
      hasBlur,
      mixStrength,
      minDepthThreshold,
      maxDepthThreshold,
      depthScale,
      depthToBlurRatioBias,
      distortion,
      distortionMap,
      mixContrast,
      "defines-USE_BLUR": hasBlur ? "" : void 0,
      "defines-USE_DEPTH": depthScale > 0 ? "" : void 0,
      "defines-USE_DISTORTION": distortionMap ? "" : void 0
    };
    return [fbo12, fbo22, blurpass2, reflectorProps2];
  }, [gl, blur, textureMatrix, resolution, mirror, hasBlur, mixBlur, mixStrength, minDepthThreshold, maxDepthThreshold, depthScale, depthToBlurRatioBias, distortion, distortionMap, mixContrast]);
  useFrame(() => {
    var _materialRef$current2;
    const parent = materialRef.current.parent || ((_materialRef$current2 = materialRef.current) == null ? void 0 : _materialRef$current2.__r3f.parent);
    if (!parent)
      return;
    parent.visible = false;
    const currentXrEnabled = gl.xr.enabled;
    const currentShadowAutoUpdate = gl.shadowMap.autoUpdate;
    beforeRender();
    gl.xr.enabled = false;
    gl.shadowMap.autoUpdate = false;
    gl.setRenderTarget(fbo1);
    gl.state.buffers.depth.setMask(true);
    if (!gl.autoClear)
      gl.clear();
    gl.render(scene, virtualCamera);
    if (hasBlur)
      blurpass.render(gl, fbo1, fbo2);
    gl.xr.enabled = currentXrEnabled;
    gl.shadowMap.autoUpdate = currentShadowAutoUpdate;
    parent.visible = true;
    gl.setRenderTarget(null);
  });
  return React71.createElement("meshReflectorMaterialImpl", _extends({
    attach: "material",
    key: "key" + reflectorProps["defines-USE_BLUR"] + reflectorProps["defines-USE_DEPTH"] + reflectorProps["defines-USE_DISTORTION"],
    ref: react_merge_refs_esm_default([materialRef, ref])
  }, reflectorProps, props));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/MeshRefractionMaterial.js
var React72 = __toESM(require_react());
var import_react21 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/materials/MeshRefractionMaterial.js
var MeshRefractionMaterial = shaderMaterial(
  {
    envMap: null,
    bounces: 3,
    ior: 2.4,
    correctMips: true,
    aberrationStrength: 0.01,
    fresnel: 0,
    bvh: new MeshBVHUniformStruct(),
    color: new Color("white"),
    resolution: new Vector2(),
    viewMatrixInverse: new Matrix4(),
    projectionMatrixInverse: new Matrix4()
  },
  /*glsl*/
  `
  uniform mat4 viewMatrixInverse;

  varying vec3 vWorldPosition;  
  varying vec3 vNormal;
  varying mat4 vModelMatrixInverse;

  #ifdef USE_INSTANCING_COLOR
    varying vec3 vInstanceColor;
  #endif

  void main() {        
    vec4 transformedNormal = vec4(normal, 0.0);
    vec4 transformedPosition = vec4(position, 1.0);
    #ifdef USE_INSTANCING
      transformedNormal = instanceMatrix * transformedNormal;
      transformedPosition = instanceMatrix * transformedPosition;
    #endif

    #ifdef USE_INSTANCING
      vModelMatrixInverse = inverse(modelMatrix * instanceMatrix);
    #else
      vModelMatrixInverse = inverse(modelMatrix);
    #endif

    #ifdef USE_INSTANCING_COLOR
      vInstanceColor = instanceColor.rgb;
    #endif

    vWorldPosition = (modelMatrix * transformedPosition).xyz;
    vNormal = normalize((viewMatrixInverse * vec4(normalMatrix * transformedNormal.xyz, 0.0)).xyz);
    gl_Position = projectionMatrix * viewMatrix * modelMatrix * transformedPosition;
  }`,
  /*glsl*/
  `
  #define ENVMAP_TYPE_CUBE_UV
  precision highp isampler2D;
  precision highp usampler2D;
  varying vec3 vWorldPosition;
  varying vec3 vNormal;
  varying mat4 vModelMatrixInverse;

  #ifdef USE_INSTANCING_COLOR
    varying vec3 vInstanceColor;
  #endif
    
  #ifdef ENVMAP_TYPE_CUBEM
    uniform samplerCube envMap;
  #else
    uniform sampler2D envMap;
  #endif
    
  uniform float bounces;
  ${shaderStructs}
  ${shaderIntersectFunction}
  uniform BVH bvh;
  uniform float ior;
  uniform bool correctMips;
  uniform vec2 resolution;
  uniform float fresnel;
  uniform mat4 modelMatrix;
  uniform mat4 projectionMatrixInverse;
  uniform mat4 viewMatrixInverse;
  uniform float aberrationStrength;
  uniform vec3 color;
  
  float fresnelFunc(vec3 viewDirection, vec3 worldNormal) {
    return pow( 1.0 + dot( viewDirection, worldNormal), 10.0 );
  }
    
  vec3 totalInternalReflection(vec3 ro, vec3 rd, vec3 normal, float ior, mat4 modelMatrixInverse) {
    vec3 rayOrigin = ro;
    vec3 rayDirection = rd;
    rayDirection = refract(rayDirection, normal, 1.0 / ior);
    rayOrigin = vWorldPosition + rayDirection * 0.001;
    rayOrigin = (modelMatrixInverse * vec4(rayOrigin, 1.0)).xyz;
    rayDirection = normalize((modelMatrixInverse * vec4(rayDirection, 0.0)).xyz);
    for(float i = 0.0; i < bounces; i++) {
      uvec4 faceIndices = uvec4( 0u );
      vec3 faceNormal = vec3( 0.0, 0.0, 1.0 );
      vec3 barycoord = vec3( 0.0 );
      float side = 1.0;
      float dist = 0.0;
      bvhIntersectFirstHit( bvh, rayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist );
      vec3 hitPos = rayOrigin + rayDirection * max(dist - 0.001, 0.0);      
      vec3 tempDir = refract(rayDirection, faceNormal, ior);
      if (length(tempDir) != 0.0) {
        rayDirection = tempDir;
        break;
      }
      rayDirection = reflect(rayDirection, faceNormal);
      rayOrigin = hitPos + rayDirection * 0.01;
    }
    rayDirection = normalize((modelMatrix * vec4(rayDirection, 0.0)).xyz);
    return rayDirection;
  }
    
  #include <common>
  #include <cube_uv_reflection_fragment>
    
  #ifdef ENVMAP_TYPE_CUBEM
    vec4 textureGradient(samplerCube envMap, vec3 rayDirection, vec3 directionCamPerfect) {
      return textureGrad(envMap, rayDirection, dFdx(correctMips ? directionCamPerfect: rayDirection), dFdy(correctMips ? directionCamPerfect: rayDirection));
    }
  #else
    vec4 textureGradient(sampler2D envMap, vec3 rayDirection, vec3 directionCamPerfect) {
      vec2 uvv = equirectUv( rayDirection );
      vec2 smoothUv = equirectUv( directionCamPerfect );
      return textureGrad(envMap, uvv, dFdx(correctMips ? smoothUv : uvv), dFdy(correctMips ? smoothUv : uvv));
    }
  #endif
  
  void main() {
    vec2 uv = gl_FragCoord.xy / resolution;
    vec3 directionCamPerfect = (projectionMatrixInverse * vec4(uv * 2.0 - 1.0, 0.0, 1.0)).xyz;
    directionCamPerfect = (viewMatrixInverse * vec4(directionCamPerfect, 0.0)).xyz;
    directionCamPerfect = normalize(directionCamPerfect);
    vec3 normal = vNormal;
    vec3 rayOrigin = cameraPosition;
    vec3 rayDirection = normalize(vWorldPosition - cameraPosition);
    vec3 finalColor;
    #ifdef CHROMATIC_ABERRATIONS
      vec3 rayDirectionG = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior, 1.0), vModelMatrixInverse);
      #ifdef FAST_CHROMA 
        vec3 rayDirectionR = normalize(rayDirectionG + 1.0 * vec3(aberrationStrength / 2.0));
        vec3 rayDirectionB = normalize(rayDirectionG - 1.0 * vec3(aberrationStrength / 2.0));
      #else
        vec3 rayDirectionR = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior * (1.0 - aberrationStrength), 1.0), vModelMatrixInverse);
        vec3 rayDirectionB = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior * (1.0 + aberrationStrength), 1.0), vModelMatrixInverse);
      #endif
      float finalColorR = textureGradient(envMap, rayDirectionR, directionCamPerfect).r;
      float finalColorG = textureGradient(envMap, rayDirectionG, directionCamPerfect).g;
      float finalColorB = textureGradient(envMap, rayDirectionB, directionCamPerfect).b;
      finalColor = vec3(finalColorR, finalColorG, finalColorB);
    #else
      rayDirection = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior, 1.0), vModelMatrixInverse);
      finalColor = textureGradient(envMap, rayDirection, directionCamPerfect).rgb;    
    #endif

    finalColor *= color;
    #ifdef USE_INSTANCING_COLOR
      finalColor *= vInstanceColor;
    #endif

    vec3 viewDirection = normalize(vWorldPosition - cameraPosition);
    float nFresnel = fresnelFunc(viewDirection, normal) * fresnel;
    gl_FragColor = vec4(mix(finalColor, vec3(1.0), nFresnel), 1.0);      
    #include <tonemapping_fragment>
    #include <encodings_fragment>
  }`
);

// node_modules/r3f-perf/node_modules/@react-three/drei/core/MeshTransmissionMaterial.js
var React73 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/materials/DiscardMaterial.js
var DiscardMaterial = shaderMaterial({}, "void main() { }", "void main() { gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0); discard;  }");

// node_modules/r3f-perf/node_modules/@react-three/drei/core/MeshTransmissionMaterial.js
var MeshTransmissionMaterialImpl = class extends MeshPhysicalMaterial {
  constructor(samples = 6, transmissionSampler = false) {
    super();
    this.uniforms = {
      chromaticAberration: {
        value: 0.05
      },
      // Transmission must always be 0, unless transmissionSampler is being used
      transmission: {
        value: 0
      },
      // Instead a workaround is used, see below for reasons why
      _transmission: {
        value: 1
      },
      transmissionMap: {
        value: null
      },
      // Roughness is 1 in THREE.MeshPhysicalMaterial but it makes little sense in a transmission material
      roughness: {
        value: 0
      },
      thickness: {
        value: 0
      },
      thicknessMap: {
        value: null
      },
      attenuationDistance: {
        value: Infinity
      },
      attenuationColor: {
        value: new Color("white")
      },
      anisotropicBlur: {
        value: 0.1
      },
      time: {
        value: 0
      },
      distortion: {
        value: 0
      },
      distortionScale: {
        value: 0.5
      },
      temporalDistortion: {
        value: 0
      },
      buffer: {
        value: null
      }
    };
    this.onBeforeCompile = (shader) => {
      shader.uniforms = {
        ...shader.uniforms,
        ...this.uniforms
      };
      if (transmissionSampler)
        shader.defines.USE_SAMPLER = "";
      else
        shader.defines.USE_TRANSMISSION = "";
      shader.fragmentShader = /*glsl*/
      `
      uniform float chromaticAberration;         
      uniform float anisotropicBlur;      
      uniform float time;
      uniform float distortion;
      uniform float distortionScale;
      uniform float temporalDistortion;
      uniform sampler2D buffer;

      vec3 random3(vec3 c) {
        float j = 4096.0*sin(dot(c,vec3(17.0, 59.4, 15.0)));
        vec3 r;
        r.z = fract(512.0*j);
        j *= .125;
        r.x = fract(512.0*j);
        j *= .125;
        r.y = fract(512.0*j);
        return r-0.5;
      }

      float seed = 0.0;
      uint hash( uint x ) {
        x += ( x << 10u );
        x ^= ( x >>  6u );
        x += ( x <<  3u );
        x ^= ( x >> 11u );
        x += ( x << 15u );
        return x;
      }

      // Compound versions of the hashing algorithm I whipped together.
      uint hash( uvec2 v ) { return hash( v.x ^ hash(v.y)                         ); }
      uint hash( uvec3 v ) { return hash( v.x ^ hash(v.y) ^ hash(v.z)             ); }
      uint hash( uvec4 v ) { return hash( v.x ^ hash(v.y) ^ hash(v.z) ^ hash(v.w) ); }

      // Construct a float with half-open range [0:1] using low 23 bits.
      // All zeroes yields 0.0, all ones yields the next smallest representable value below 1.0.
      float floatConstruct( uint m ) {
        const uint ieeeMantissa = 0x007FFFFFu; // binary32 mantissa bitmask
        const uint ieeeOne      = 0x3F800000u; // 1.0 in IEEE binary32
        m &= ieeeMantissa;                     // Keep only mantissa bits (fractional part)
        m |= ieeeOne;                          // Add fractional part to 1.0
        float  f = uintBitsToFloat( m );       // Range [1:2]
        return f - 1.0;                        // Range [0:1]
      }

      // Pseudo-random value in half-open range [0:1].
      float random( float x ) { return floatConstruct(hash(floatBitsToUint(x))); }
      float random( vec2  v ) { return floatConstruct(hash(floatBitsToUint(v))); }
      float random( vec3  v ) { return floatConstruct(hash(floatBitsToUint(v))); }
      float random( vec4  v ) { return floatConstruct(hash(floatBitsToUint(v))); }

      float rand() {
        float result = random(vec3(gl_FragCoord.xy, seed));
        seed += 1.0;
        return result;
      }

      const float F3 =  0.3333333;
      const float G3 =  0.1666667;

      float snoise(vec3 p) {
        vec3 s = floor(p + dot(p, vec3(F3)));
        vec3 x = p - s + dot(s, vec3(G3));
        vec3 e = step(vec3(0.0), x - x.yzx);
        vec3 i1 = e*(1.0 - e.zxy);
        vec3 i2 = 1.0 - e.zxy*(1.0 - e);
        vec3 x1 = x - i1 + G3;
        vec3 x2 = x - i2 + 2.0*G3;
        vec3 x3 = x - 1.0 + 3.0*G3;
        vec4 w, d;
        w.x = dot(x, x);
        w.y = dot(x1, x1);
        w.z = dot(x2, x2);
        w.w = dot(x3, x3);
        w = max(0.6 - w, 0.0);
        d.x = dot(random3(s), x);
        d.y = dot(random3(s + i1), x1);
        d.z = dot(random3(s + i2), x2);
        d.w = dot(random3(s + 1.0), x3);
        w *= w;
        w *= w;
        d *= w;
        return dot(d, vec4(52.0));
      }

      float snoiseFractal(vec3 m) {
        return 0.5333333* snoise(m)
              +0.2666667* snoise(2.0*m)
              +0.1333333* snoise(4.0*m)
              +0.0666667* snoise(8.0*m);
      }
` + shader.fragmentShader;
      shader.fragmentShader = shader.fragmentShader.replace(
        "#include <transmission_pars_fragment>",
        /*glsl*/
        `
        #ifdef USE_TRANSMISSION
          // Transmission code is based on glTF-Sampler-Viewer
          // https://github.com/KhronosGroup/glTF-Sample-Viewer
          uniform float _transmission;
          uniform float thickness;
          uniform float attenuationDistance;
          uniform vec3 attenuationColor;
          #ifdef USE_TRANSMISSIONMAP
            uniform sampler2D transmissionMap;
          #endif
          #ifdef USE_THICKNESSMAP
            uniform sampler2D thicknessMap;
          #endif
          uniform vec2 transmissionSamplerSize;
          uniform sampler2D transmissionSamplerMap;
          uniform mat4 modelMatrix;
          uniform mat4 projectionMatrix;
          varying vec3 vWorldPosition;
          vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
            // Direction of refracted light.
            vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
            // Compute rotation-independant scaling of the model matrix.
            vec3 modelScale;
            modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
            modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
            modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
            // The thickness is specified in local space.
            return normalize( refractionVector ) * thickness * modelScale;
          }
          float applyIorToRoughness( const in float roughness, const in float ior ) {
            // Scale roughness with IOR so that an IOR of 1.0 results in no microfacet refraction and
            // an IOR of 1.5 results in the default amount of microfacet refraction.
            return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
          }
          vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
            float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );            
            #ifdef USE_SAMPLER
              #ifdef texture2DLodEXT
                return texture2DLodEXT(transmissionSamplerMap, fragCoord.xy, framebufferLod);
              #else
                return texture2D(transmissionSamplerMap, fragCoord.xy, framebufferLod);
              #endif
            #else
              return texture2D(buffer, fragCoord.xy);
            #endif
          }
          vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
            if ( isinf( attenuationDistance ) ) {
              // Attenuation distance is +∞, i.e. the transmitted color is not attenuated at all.
              return radiance;
            } else {
              // Compute light attenuation using Beer's law.
              vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
              vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance ); // Beer's law
              return transmittance * radiance;
            }
          }
          vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
            const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
            const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
            const in vec3 attenuationColor, const in float attenuationDistance ) {
            vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
            vec3 refractedRayExit = position + transmissionRay;
            // Project refracted vector on the framebuffer, while mapping to normalized device coordinates.
            vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
            vec2 refractionCoords = ndcPos.xy / ndcPos.w;
            refractionCoords += 1.0;
            refractionCoords /= 2.0;
            // Sample framebuffer to get pixel the refracted ray hits.
            vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
            vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
            // Get the specular component.
            vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
            return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
          }
        #endif
`
      );
      shader.fragmentShader = shader.fragmentShader.replace(
        "#include <transmission_fragment>",
        /*glsl*/
        `  
        // Improve the refraction to use the world pos
        material.transmission = _transmission;
        material.transmissionAlpha = 1.0;
        material.thickness = thickness;
        material.attenuationDistance = attenuationDistance;
        material.attenuationColor = attenuationColor;
        #ifdef USE_TRANSMISSIONMAP
          material.transmission *= texture2D( transmissionMap, vUv ).r;
        #endif
        #ifdef USE_THICKNESSMAP
          material.thickness *= texture2D( thicknessMap, vUv ).g;
        #endif
        
        vec3 pos = vWorldPosition;
        vec3 v = normalize( cameraPosition - pos );
        vec3 n = inverseTransformDirection( normal, viewMatrix );
        vec3 transmission = vec3(0.0);
        float transmissionR, transmissionB, transmissionG;
        float randomCoords = rand();
        float thickness_smear = thickness * max(pow(roughnessFactor, 0.33), anisotropicBlur);
        vec3 distortionNormal = vec3(0.0);
        vec3 temporalOffset = vec3(time, -time, -time) * temporalDistortion;
        if (distortion > 0.0) {
          distortionNormal = distortion * vec3(snoiseFractal(vec3((pos * distortionScale + temporalOffset))), snoiseFractal(vec3(pos.zxy * distortionScale - temporalOffset)), snoiseFractal(vec3(pos.yxz * distortionScale + temporalOffset)));
        }
        for (float i = 0.0; i < ${samples}.0; i ++) {
          vec3 sampleNorm = normalize(n + roughnessFactor * roughnessFactor * 2.0 * normalize(vec3(rand() - 0.5, rand() - 0.5, rand() - 0.5)) * pow(rand(), 0.33) + distortionNormal);
          transmissionR = getIBLVolumeRefraction(
            sampleNorm, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
            pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness  + thickness_smear * (i + randomCoords) / float(${samples}),
            material.attenuationColor, material.attenuationDistance
          ).r;
          transmissionG = getIBLVolumeRefraction(
            sampleNorm, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
            pos, modelMatrix, viewMatrix, projectionMatrix, material.ior  * (1.0 + chromaticAberration * (i + randomCoords) / float(${samples})) , material.thickness + thickness_smear * (i + randomCoords) / float(${samples}),
            material.attenuationColor, material.attenuationDistance
          ).g;
          transmissionB = getIBLVolumeRefraction(
            sampleNorm, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
            pos, modelMatrix, viewMatrix, projectionMatrix, material.ior * (1.0 + 2.0 * chromaticAberration * (i + randomCoords) / float(${samples})), material.thickness + thickness_smear * (i + randomCoords) / float(${samples}),
            material.attenuationColor, material.attenuationDistance
          ).b;
          transmission.r += transmissionR;
          transmission.g += transmissionG;
          transmission.b += transmissionB;
        }
        transmission /= ${samples}.0;
        totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
`
      );
    };
    Object.keys(this.uniforms).forEach((name) => Object.defineProperty(this, name, {
      get: () => this.uniforms[name].value,
      set: (v5) => this.uniforms[name].value = v5
    }));
  }
};
var MeshTransmissionMaterial = React73.forwardRef(({
  buffer,
  transmissionSampler = false,
  backside = false,
  side = FrontSide,
  transmission = 1,
  thickness = 0,
  backsideThickness = 0,
  samples = 10,
  resolution,
  backsideResolution,
  background,
  anisotropy,
  anisotropicBlur,
  ...props
}, fref) => {
  extend({
    MeshTransmissionMaterial: MeshTransmissionMaterialImpl
  });
  const ref = React73.useRef(null);
  const [discardMaterial] = React73.useState(() => new DiscardMaterial());
  const fboBack = useFBO(backsideResolution || resolution);
  const fboMain = useFBO(resolution);
  let oldBg;
  let oldTone;
  let parent;
  useFrame((state) => {
    ref.current.time = state.clock.getElapsedTime();
    if (ref.current.buffer === fboMain.texture && !transmissionSampler) {
      parent = ref.current.__r3f.parent;
      if (parent) {
        oldTone = state.gl.toneMapping;
        oldBg = state.scene.background;
        state.gl.toneMapping = NoToneMapping;
        if (background)
          state.scene.background = background;
        parent.material = discardMaterial;
        if (backside) {
          state.gl.setRenderTarget(fboBack);
          state.gl.render(state.scene, state.camera);
          parent.material = ref.current;
          parent.material.buffer = fboBack.texture;
          parent.material.thickness = backsideThickness;
          parent.material.side = BackSide;
        }
        state.gl.setRenderTarget(fboMain);
        state.gl.render(state.scene, state.camera);
        parent.material.thickness = thickness;
        parent.material.side = side;
        parent.material.buffer = fboMain.texture;
        state.scene.background = oldBg;
        state.gl.setRenderTarget(null);
        parent.material = ref.current;
        state.gl.toneMapping = oldTone;
      }
    }
  });
  React73.useImperativeHandle(fref, () => ref.current, []);
  return React73.createElement("meshTransmissionMaterial", _extends({
    // Samples must re-compile the shader so we memoize it
    args: [samples, transmissionSampler],
    ref
  }, props, {
    buffer: buffer || fboMain.texture,
    _transmission: transmission,
    anisotropicBlur: anisotropicBlur !== null && anisotropicBlur !== void 0 ? anisotropicBlur : anisotropy,
    transmission: transmissionSampler ? transmission : 0,
    thickness,
    side
  }));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/MeshDiscardMaterial.js
var React74 = __toESM(require_react());
var MeshDiscardMaterial = React74.forwardRef((props, fref) => {
  extend({
    DiscardMaterialImpl: DiscardMaterial
  });
  return React74.createElement("discardMaterialImpl", _extends({
    ref: fref
  }, props));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/PointMaterial.js
var React75 = __toESM(require_react());
var PointMaterialImpl = class extends PointsMaterial {
  constructor(props) {
    super(props);
    this.onBeforeCompile = (shader, renderer) => {
      const {
        isWebGL2
      } = renderer.capabilities;
      shader.fragmentShader = shader.fragmentShader.replace("#include <output_fragment>", `
        ${!isWebGL2 ? "#extension GL_OES_standard_derivatives : enable\n#include <output_fragment>" : "#include <output_fragment>"}
      vec2 cxy = 2.0 * gl_PointCoord - 1.0;
      float r = dot(cxy, cxy);
      float delta = fwidth(r);     
      float mask = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);
      gl_FragColor = vec4(gl_FragColor.rgb, mask * gl_FragColor.a );
      #include <tonemapping_fragment>
      #include <encodings_fragment>
      `);
    };
  }
};
var PointMaterial = React75.forwardRef((props, ref) => {
  const [material] = React75.useState(() => new PointMaterialImpl(null));
  return React75.createElement("primitive", _extends({}, props, {
    object: material,
    ref,
    attach: "material"
  }));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/softShadows.js
var React76 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/shapes.js
var React77 = __toESM(require_react());
function create5(type, effect) {
  const El = type + "Geometry";
  return React77.forwardRef(({
    args,
    children,
    ...props
  }, fref) => {
    const ref = React77.useRef(null);
    React77.useImperativeHandle(fref, () => ref.current);
    React77.useLayoutEffect(() => void (effect == null ? void 0 : effect(ref.current)));
    return React77.createElement("mesh", _extends({
      ref
    }, props), React77.createElement(El, {
      attach: "geometry",
      args
    }), children);
  });
}
var Box = create5("box");
var Circle = create5("circle");
var Cone = create5("cone");
var Cylinder = create5("cylinder");
var Sphere2 = create5("sphere");
var Plane2 = create5("plane");
var Tube = create5("tube");
var Torus = create5("torus");
var TorusKnot = create5("torusKnot");
var Tetrahedron = create5("tetrahedron");
var Ring = create5("ring");
var Polyhedron = create5("polyhedron");
var Icosahedron = create5("icosahedron");
var Octahedron = create5("octahedron");
var Dodecahedron = create5("dodecahedron");
var Extrude = create5("extrude");
var Lathe = create5("lathe");
var Capsule = create5("capsule");
var Shape2 = create5("shape", ({
  geometry
}) => {
  const pos = geometry.attributes.position;
  const b3 = new Box3().setFromBufferAttribute(pos);
  const b3size = new Vector3();
  b3.getSize(b3size);
  const uv = [];
  let x2 = 0, y2 = 0, u2 = 0, v5 = 0;
  for (let i3 = 0; i3 < pos.count; i3++) {
    x2 = pos.getX(i3);
    y2 = pos.getY(i3);
    u2 = (x2 - b3.min.x) / b3size.x;
    v5 = (y2 - b3.min.y) / b3size.y;
    uv.push(u2, v5);
  }
  geometry.setAttribute("uv", new Float32BufferAttribute(uv, 2));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/RoundedBox.js
var React78 = __toESM(require_react());
var eps = 1e-5;
function createShape(width, height, radius0) {
  const shape = new Shape();
  const radius = radius0 - eps;
  shape.absarc(eps, eps, eps, -Math.PI / 2, -Math.PI, true);
  shape.absarc(eps, height - radius * 2, eps, Math.PI, Math.PI / 2, true);
  shape.absarc(width - radius * 2, height - radius * 2, eps, Math.PI / 2, 0, true);
  shape.absarc(width - radius * 2, eps, eps, 0, -Math.PI / 2, true);
  return shape;
}
var RoundedBox = React78.forwardRef(function RoundedBox2({
  args: [width = 1, height = 1, depth = 1] = [],
  radius = 0.05,
  steps = 1,
  smoothness = 4,
  creaseAngle = 0.4,
  children,
  ...rest
}, ref) {
  const shape = React78.useMemo(() => createShape(width, height, radius), [width, height, radius]);
  const params = React78.useMemo(() => ({
    depth: depth - radius * 2,
    bevelEnabled: true,
    bevelSegments: smoothness * 2,
    steps,
    bevelSize: radius - eps,
    bevelThickness: radius,
    curveSegments: smoothness
  }), [depth, radius, smoothness]);
  const geomRef = React78.useRef();
  React78.useLayoutEffect(() => {
    if (geomRef.current) {
      geomRef.current.center();
      toCreasedNormals(geomRef.current, creaseAngle);
    }
  }, [shape, params]);
  return React78.createElement("mesh", _extends({
    ref
  }, rest), React78.createElement("extrudeGeometry", {
    ref: geomRef,
    args: [shape, params]
  }), children);
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/ScreenQuad.js
var React79 = __toESM(require_react());
function createScreenQuadGeometry() {
  const geometry = new BufferGeometry();
  const vertices = new Float32Array([-1, -1, 3, -1, -1, 3]);
  geometry.setAttribute("position", new BufferAttribute(vertices, 2));
  return geometry;
}
var ScreenQuad = React79.forwardRef(function ScreenQuad2({
  children,
  ...restProps
}, ref) {
  const geometry = React79.useMemo(createScreenQuadGeometry, []);
  return React79.createElement("mesh", _extends({
    ref,
    geometry,
    frustumCulled: false
  }, restProps), children);
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Resize.js
var React80 = __toESM(require_react());
var Resize = React80.forwardRef(({
  children,
  width,
  height,
  depth,
  box3,
  precise = true,
  ...props
}, fRef) => {
  const ref = React80.useRef(null);
  const outer = React80.useRef(null);
  const inner = React80.useRef(null);
  React80.useLayoutEffect(() => {
    outer.current.matrixWorld.identity();
    let box = box3 || new Box3().setFromObject(inner.current, precise);
    const w2 = box.max.x - box.min.x;
    const h2 = box.max.y - box.min.y;
    const d2 = box.max.z - box.min.z;
    let dimension = Math.max(w2, h2, d2);
    if (width)
      dimension = w2;
    if (height)
      dimension = h2;
    if (depth)
      dimension = d2;
    outer.current.scale.setScalar(1 / dimension);
  }, [width, height, depth, box3, precise]);
  React80.useImperativeHandle(fRef, () => ref.current, []);
  return React80.createElement("group", _extends({
    ref
  }, props), React80.createElement("group", {
    ref: outer
  }, React80.createElement("group", {
    ref: inner
  }, children)));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Bounds.js
var React81 = __toESM(require_react());
var context5 = React81.createContext(null);

// node_modules/r3f-perf/node_modules/@react-three/drei/core/CameraShake.js
var React82 = __toESM(require_react());
var CameraShake = React82.forwardRef(({
  intensity = 1,
  decay,
  decayRate = 0.65,
  maxYaw = 0.1,
  maxPitch = 0.1,
  maxRoll = 0.1,
  yawFrequency = 0.1,
  pitchFrequency = 0.1,
  rollFrequency = 0.1
}, ref) => {
  const camera = useThree((state) => state.camera);
  const defaultControls = useThree((state) => state.controls);
  const intensityRef = React82.useRef(intensity);
  const initialRotation = React82.useRef(camera.rotation.clone());
  const [yawNoise] = React82.useState(() => new SimplexNoise());
  const [pitchNoise] = React82.useState(() => new SimplexNoise());
  const [rollNoise] = React82.useState(() => new SimplexNoise());
  const constrainIntensity = () => {
    if (intensityRef.current < 0 || intensityRef.current > 1) {
      intensityRef.current = intensityRef.current < 0 ? 0 : 1;
    }
  };
  React82.useImperativeHandle(ref, () => ({
    getIntensity: () => intensityRef.current,
    setIntensity: (val) => {
      intensityRef.current = val;
      constrainIntensity();
    }
  }), []);
  React82.useEffect(() => {
    if (defaultControls) {
      const callback = () => void (initialRotation.current = camera.rotation.clone());
      defaultControls.addEventListener("change", callback);
      callback();
      return () => void defaultControls.removeEventListener("change", callback);
    }
  }, [camera, defaultControls]);
  useFrame((state, delta) => {
    const shake = Math.pow(intensityRef.current, 2);
    const yaw = maxYaw * shake * yawNoise.noise(state.clock.elapsedTime * yawFrequency, 1);
    const pitch = maxPitch * shake * pitchNoise.noise(state.clock.elapsedTime * pitchFrequency, 1);
    const roll = maxRoll * shake * rollNoise.noise(state.clock.elapsedTime * rollFrequency, 1);
    camera.rotation.set(initialRotation.current.x + pitch, initialRotation.current.y + yaw, initialRotation.current.z + roll);
    if (decay && intensityRef.current > 0) {
      intensityRef.current -= decayRate * delta;
      constrainIntensity();
    }
  });
  return null;
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Float.js
var React83 = __toESM(require_react());
var Float = React83.forwardRef(({
  children,
  enabled = true,
  speed = 1,
  rotationIntensity = 1,
  floatIntensity = 1,
  floatingRange = [-0.1, 0.1],
  ...props
}, forwardRef72) => {
  const ref = React83.useRef(null);
  const offset = React83.useRef(Math.random() * 1e4);
  useFrame((state) => {
    var _floatingRange$, _floatingRange$2;
    if (!enabled || speed === 0)
      return;
    const t2 = offset.current + state.clock.getElapsedTime();
    ref.current.rotation.x = Math.cos(t2 / 4 * speed) / 8 * rotationIntensity;
    ref.current.rotation.y = Math.sin(t2 / 4 * speed) / 8 * rotationIntensity;
    ref.current.rotation.z = Math.sin(t2 / 4 * speed) / 20 * rotationIntensity;
    let yPosition = Math.sin(t2 / 4 * speed) / 10;
    yPosition = MathUtils.mapLinear(yPosition, -0.1, 0.1, (_floatingRange$ = floatingRange == null ? void 0 : floatingRange[0]) !== null && _floatingRange$ !== void 0 ? _floatingRange$ : -0.1, (_floatingRange$2 = floatingRange == null ? void 0 : floatingRange[1]) !== null && _floatingRange$2 !== void 0 ? _floatingRange$2 : 0.1);
    ref.current.position.y = yPosition * floatIntensity;
    ref.current.updateMatrix();
  });
  return React83.createElement("group", props, React83.createElement("group", {
    ref: react_merge_refs_esm_default([ref, forwardRef72]),
    matrixAutoUpdate: false
  }, children));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Stage.js
var React87 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Environment.js
var React84 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/ContactShadows.js
var React85 = __toESM(require_react());
var ContactShadows = React85.forwardRef(({
  scale: scale2 = 10,
  frames = Infinity,
  opacity = 1,
  width = 1,
  height = 1,
  blur = 1,
  near = 0,
  far = 10,
  resolution = 512,
  smooth = true,
  color = "#000000",
  depthWrite = false,
  renderOrder,
  ...props
}, fref) => {
  const ref = React85.useRef(null);
  const scene = useThree((state) => state.scene);
  const gl = useThree((state) => state.gl);
  const shadowCamera = React85.useRef(null);
  width = width * (Array.isArray(scale2) ? scale2[0] : scale2 || 1);
  height = height * (Array.isArray(scale2) ? scale2[1] : scale2 || 1);
  const [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur] = React85.useMemo(() => {
    const renderTarget2 = new WebGLRenderTarget(resolution, resolution);
    const renderTargetBlur2 = new WebGLRenderTarget(resolution, resolution);
    renderTargetBlur2.texture.generateMipmaps = renderTarget2.texture.generateMipmaps = false;
    const planeGeometry2 = new PlaneGeometry(width, height).rotateX(Math.PI / 2);
    const blurPlane2 = new Mesh(planeGeometry2);
    const depthMaterial2 = new MeshDepthMaterial();
    depthMaterial2.depthTest = depthMaterial2.depthWrite = false;
    depthMaterial2.onBeforeCompile = (shader) => {
      shader.uniforms = {
        ...shader.uniforms,
        ucolor: {
          value: new Color(color)
        }
      };
      shader.fragmentShader = shader.fragmentShader.replace(
        `void main() {`,
        //
        `uniform vec3 ucolor;
           void main() {
          `
      );
      shader.fragmentShader = shader.fragmentShader.replace(
        "vec4( vec3( 1.0 - fragCoordZ ), opacity );",
        // Colorize the shadow, multiply by the falloff so that the center can remain darker
        "vec4( ucolor * fragCoordZ * 2.0, ( 1.0 - fragCoordZ ) * 1.0 );"
      );
    };
    const horizontalBlurMaterial2 = new ShaderMaterial(HorizontalBlurShader);
    const verticalBlurMaterial2 = new ShaderMaterial(VerticalBlurShader);
    verticalBlurMaterial2.depthTest = horizontalBlurMaterial2.depthTest = false;
    return [renderTarget2, planeGeometry2, depthMaterial2, blurPlane2, horizontalBlurMaterial2, verticalBlurMaterial2, renderTargetBlur2];
  }, [resolution, width, height, scale2, color]);
  const blurShadows = (blur2) => {
    blurPlane.visible = true;
    blurPlane.material = horizontalBlurMaterial;
    horizontalBlurMaterial.uniforms.tDiffuse.value = renderTarget.texture;
    horizontalBlurMaterial.uniforms.h.value = blur2 * 1 / 256;
    gl.setRenderTarget(renderTargetBlur);
    gl.render(blurPlane, shadowCamera.current);
    blurPlane.material = verticalBlurMaterial;
    verticalBlurMaterial.uniforms.tDiffuse.value = renderTargetBlur.texture;
    verticalBlurMaterial.uniforms.v.value = blur2 * 1 / 256;
    gl.setRenderTarget(renderTarget);
    gl.render(blurPlane, shadowCamera.current);
    blurPlane.visible = false;
  };
  let count = 0;
  let initialBackground;
  let initialOverrideMaterial;
  useFrame(() => {
    if (shadowCamera.current && (frames === Infinity || count < frames)) {
      count++;
      initialBackground = scene.background;
      initialOverrideMaterial = scene.overrideMaterial;
      ref.current.visible = false;
      scene.background = null;
      scene.overrideMaterial = depthMaterial;
      gl.setRenderTarget(renderTarget);
      gl.render(scene, shadowCamera.current);
      blurShadows(blur);
      if (smooth)
        blurShadows(blur * 0.4);
      gl.setRenderTarget(null);
      ref.current.visible = true;
      scene.overrideMaterial = initialOverrideMaterial;
      scene.background = initialBackground;
    }
  });
  React85.useImperativeHandle(fref, () => ref.current, []);
  return React85.createElement("group", _extends({
    "rotation-x": Math.PI / 2
  }, props, {
    ref
  }), React85.createElement("mesh", {
    renderOrder,
    geometry: planeGeometry,
    scale: [1, -1, 1],
    rotation: [-Math.PI / 2, 0, 0]
  }, React85.createElement("meshBasicMaterial", {
    transparent: true,
    map: renderTarget.texture,
    opacity,
    depthWrite
  })), React85.createElement("orthographicCamera", {
    ref: shadowCamera,
    args: [-width / 2, width / 2, height / 2, -height / 2, near, far]
  }));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/AccumulativeShadows.js
var React86 = __toESM(require_react());
function isLight(object) {
  return object.isLight;
}
function isGeometry(object) {
  return !!object.geometry;
}
var accumulativeContext = React86.createContext(null);
var SoftShadowMaterial = shaderMaterial({
  color: new Color(),
  blend: 2,
  alphaTest: 0.75,
  opacity: 0,
  map: null
}, `varying vec2 vUv;
   void main() {
     gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);
     vUv = uv;
   }`, `varying vec2 vUv;
   uniform sampler2D map;
   uniform vec3 color;
   uniform float opacity;
   uniform float alphaTest;
   uniform float blend;
   void main() {
     vec4 sampledDiffuseColor = texture2D(map, vUv);
     gl_FragColor = vec4(color * sampledDiffuseColor.r * blend, max(0.0, (1.0 - (sampledDiffuseColor.r + sampledDiffuseColor.g + sampledDiffuseColor.b) / alphaTest)) * opacity);
     #include <tonemapping_fragment>
     #include <encodings_fragment>
   }`);
var AccumulativeShadows = React86.forwardRef(({
  children,
  temporal,
  frames = 40,
  limit = Infinity,
  blend = 20,
  scale: scale2 = 10,
  opacity = 1,
  alphaTest = 0.75,
  color = "black",
  colorBlend = 2,
  resolution = 1024,
  toneMapped = true,
  ...props
}, forwardRef72) => {
  extend({
    SoftShadowMaterial
  });
  const gl = useThree((state) => state.gl);
  const scene = useThree((state) => state.scene);
  const camera = useThree((state) => state.camera);
  const invalidate = useThree((state) => state.invalidate);
  const gPlane = React86.useRef(null);
  const gLights = React86.useRef(null);
  const [plm] = React86.useState(() => new ProgressiveLightMap(gl, scene, resolution));
  React86.useLayoutEffect(() => {
    plm.configure(gPlane.current);
  }, []);
  const api = React86.useMemo(() => ({
    lights: /* @__PURE__ */ new Map(),
    temporal: !!temporal,
    frames: Math.max(2, frames),
    blend: Math.max(2, frames === Infinity ? blend : frames),
    count: 0,
    getMesh: () => gPlane.current,
    reset: () => {
      plm.clear();
      const material = gPlane.current.material;
      material.opacity = 0;
      material.alphaTest = 0;
      api.count = 0;
    },
    update: (frames2 = 1) => {
      const material = gPlane.current.material;
      if (!api.temporal) {
        material.opacity = opacity;
        material.alphaTest = alphaTest;
      } else {
        material.opacity = Math.min(opacity, material.opacity + opacity / api.blend);
        material.alphaTest = Math.min(alphaTest, material.alphaTest + alphaTest / api.blend);
      }
      gLights.current.visible = true;
      plm.prepare();
      for (let i3 = 0; i3 < frames2; i3++) {
        api.lights.forEach((light) => light.update());
        plm.update(camera, api.blend);
      }
      gLights.current.visible = false;
      plm.finish();
    }
  }), [plm, camera, scene, temporal, frames, blend, opacity, alphaTest]);
  React86.useLayoutEffect(() => {
    api.reset();
    if (!api.temporal && api.frames !== Infinity)
      api.update(api.blend);
  });
  React86.useImperativeHandle(forwardRef72, () => api, [api]);
  useFrame(() => {
    if ((api.temporal || api.frames === Infinity) && api.count < api.frames && api.count < limit) {
      invalidate();
      api.update();
      api.count++;
    }
  });
  return React86.createElement("group", props, React86.createElement("group", {
    traverse: () => null,
    ref: gLights
  }, React86.createElement(accumulativeContext.Provider, {
    value: api
  }, children)), React86.createElement("mesh", {
    receiveShadow: true,
    ref: gPlane,
    scale: scale2,
    rotation: [-Math.PI / 2, 0, 0]
  }, React86.createElement("planeGeometry", null), React86.createElement("softShadowMaterial", {
    transparent: true,
    depthWrite: false,
    toneMapped,
    color,
    blend: colorBlend,
    map: plm.progressiveLightMap2.texture
  })));
});
var RandomizedLight = React86.forwardRef(({
  castShadow = true,
  bias = 1e-3,
  mapSize = 512,
  size = 5,
  near = 0.5,
  far = 500,
  frames = 1,
  position: position2 = [0, 0, 0],
  radius = 1,
  amount = 8,
  intensity = 1,
  ambient = 0.5,
  ...props
}, forwardRef72) => {
  const gLights = React86.useRef(null);
  const length = new Vector3(...position2).length();
  const parent = React86.useContext(accumulativeContext);
  const update = React86.useCallback(() => {
    let light;
    if (gLights.current) {
      for (let l2 = 0; l2 < gLights.current.children.length; l2++) {
        light = gLights.current.children[l2];
        if (Math.random() > ambient) {
          light.position.set(position2[0] + MathUtils.randFloatSpread(radius), position2[1] + MathUtils.randFloatSpread(radius), position2[2] + MathUtils.randFloatSpread(radius));
        } else {
          let lambda = Math.acos(2 * Math.random() - 1) - Math.PI / 2;
          let phi = 2 * Math.PI * Math.random();
          light.position.set(Math.cos(lambda) * Math.cos(phi) * length, Math.abs(Math.cos(lambda) * Math.sin(phi) * length), Math.sin(lambda) * length);
        }
      }
    }
  }, [radius, ambient, length, ...position2]);
  const api = React86.useMemo(() => ({
    update
  }), [update]);
  React86.useImperativeHandle(forwardRef72, () => api, [api]);
  React86.useLayoutEffect(() => {
    const group = gLights.current;
    if (parent)
      parent.lights.set(group.uuid, api);
    return () => void parent.lights.delete(group.uuid);
  }, [parent, api]);
  return React86.createElement("group", _extends({
    ref: gLights
  }, props), Array.from({
    length: amount
  }, (_, index) => React86.createElement("directionalLight", {
    key: index,
    castShadow,
    "shadow-bias": bias,
    "shadow-mapSize": [mapSize, mapSize],
    intensity: intensity / amount
  }, React86.createElement("orthographicCamera", {
    attach: "shadow-camera",
    args: [-size, size, size, -size, near, far]
  }))));
});
var ProgressiveLightMap = class {
  constructor(renderer, scene, res = 1024) {
    this.renderer = renderer;
    this.res = res;
    this.scene = scene;
    this.buffer1Active = false;
    this.lights = [];
    this.meshes = [];
    this.object = null;
    this.clearColor = new Color();
    this.clearAlpha = 0;
    const format = /(Android|iPad|iPhone|iPod)/g.test(navigator.userAgent) ? HalfFloatType : FloatType;
    this.progressiveLightMap1 = new WebGLRenderTarget(this.res, this.res, {
      type: format
    });
    this.progressiveLightMap2 = new WebGLRenderTarget(this.res, this.res, {
      type: format
    });
    this.discardMat = new DiscardMaterial();
    this.targetMat = new MeshLambertMaterial({
      fog: false
    });
    this.previousShadowMap = {
      value: this.progressiveLightMap1.texture
    };
    this.averagingWindow = {
      value: 100
    };
    this.targetMat.onBeforeCompile = (shader) => {
      shader.vertexShader = "varying vec2 vUv;\n" + shader.vertexShader.slice(0, -1) + "vUv = uv; gl_Position = vec4((uv - 0.5) * 2.0, 1.0, 1.0); }";
      const bodyStart = shader.fragmentShader.indexOf("void main() {");
      shader.fragmentShader = "varying vec2 vUv;\n" + shader.fragmentShader.slice(0, bodyStart) + "uniform sampler2D previousShadowMap;\n	uniform float averagingWindow;\n" + shader.fragmentShader.slice(bodyStart - 1, -1) + `
vec3 texelOld = texture2D(previousShadowMap, vUv).rgb;
        gl_FragColor.rgb = mix(texelOld, gl_FragColor.rgb, 1.0/ averagingWindow);
      }`;
      shader.uniforms.previousShadowMap = this.previousShadowMap;
      shader.uniforms.averagingWindow = this.averagingWindow;
    };
  }
  clear() {
    this.renderer.getClearColor(this.clearColor);
    this.clearAlpha = this.renderer.getClearAlpha();
    this.renderer.setClearColor("black", 1);
    this.renderer.setRenderTarget(this.progressiveLightMap1);
    this.renderer.clear();
    this.renderer.setRenderTarget(this.progressiveLightMap2);
    this.renderer.clear();
    this.renderer.setRenderTarget(null);
    this.renderer.setClearColor(this.clearColor, this.clearAlpha);
    this.lights = [];
    this.meshes = [];
    this.scene.traverse((object) => {
      if (isGeometry(object)) {
        this.meshes.push({
          object,
          material: object.material
        });
      } else if (isLight(object)) {
        this.lights.push({
          object,
          intensity: object.intensity
        });
      }
    });
  }
  prepare() {
    this.lights.forEach((light) => light.object.intensity = 0);
    this.meshes.forEach((mesh) => mesh.object.material = this.discardMat);
  }
  finish() {
    this.lights.forEach((light) => light.object.intensity = light.intensity);
    this.meshes.forEach((mesh) => mesh.object.material = mesh.material);
  }
  configure(object) {
    this.object = object;
  }
  update(camera, blendWindow = 100) {
    if (!this.object)
      return;
    this.averagingWindow.value = blendWindow;
    this.object.material = this.targetMat;
    const activeMap = this.buffer1Active ? this.progressiveLightMap1 : this.progressiveLightMap2;
    const inactiveMap = this.buffer1Active ? this.progressiveLightMap2 : this.progressiveLightMap1;
    const oldBg = this.scene.background;
    this.scene.background = null;
    this.renderer.setRenderTarget(activeMap);
    this.previousShadowMap.value = inactiveMap.texture;
    this.buffer1Active = !this.buffer1Active;
    this.renderer.render(this.scene, camera);
    this.renderer.setRenderTarget(null);
    this.scene.background = oldBg;
  }
};

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Backdrop.js
var React88 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Shadow.js
var React89 = __toESM(require_react());
var Shadow = React89.forwardRef(({
  fog = false,
  renderOrder,
  depthWrite = false,
  colorStop = 0,
  color = "black",
  opacity = 0.5,
  ...props
}, ref) => {
  const canvas = React89.useMemo(() => {
    const canvas2 = document.createElement("canvas");
    canvas2.width = 128;
    canvas2.height = 128;
    const context10 = canvas2.getContext("2d");
    const gradient = context10.createRadialGradient(canvas2.width / 2, canvas2.height / 2, 0, canvas2.width / 2, canvas2.height / 2, canvas2.width / 2);
    gradient.addColorStop(colorStop, new Color(color).getStyle());
    gradient.addColorStop(1, "rgba(0,0,0,0)");
    context10.fillStyle = gradient;
    context10.fillRect(0, 0, canvas2.width, canvas2.height);
    return canvas2;
  }, [color, colorStop]);
  return React89.createElement("mesh", _extends({
    renderOrder,
    ref,
    "rotation-x": -Math.PI / 2
  }, props), React89.createElement("planeGeometry", null), React89.createElement("meshBasicMaterial", {
    transparent: true,
    opacity,
    fog,
    depthWrite,
    side: DoubleSide
  }, React89.createElement("canvasTexture", {
    attach: "map",
    args: [canvas]
  })));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Caustics.js
var React90 = __toESM(require_react());
function createNormalMaterial(side = FrontSide) {
  const viewMatrix = {
    value: new Matrix4()
  };
  return Object.assign(new MeshNormalMaterial({
    side
  }), {
    viewMatrix,
    onBeforeCompile: (shader) => {
      shader.uniforms.viewMatrix = viewMatrix;
      shader.fragmentShader = `vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
           return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
         }
` + shader.fragmentShader.replace("#include <normal_fragment_maps>", `#include <normal_fragment_maps>
           normal = inverseTransformDirection( normal, viewMatrix );
`);
    }
  });
}
var CausticsProjectionMaterial = shaderMaterial({
  causticsTexture: null,
  causticsTextureB: null,
  color: new Color(),
  lightProjMatrix: new Matrix4(),
  lightViewMatrix: new Matrix4()
}, `varying vec3 vWorldPosition;   
   void main() {
     gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);
     vec4 worldPosition = modelMatrix * vec4(position, 1.);
     vWorldPosition = worldPosition.xyz;
   }`, `varying vec3 vWorldPosition;
  uniform vec3 color;
  uniform sampler2D causticsTexture; 
  uniform sampler2D causticsTextureB; 
  uniform mat4 lightProjMatrix;
  uniform mat4 lightViewMatrix;
   void main() {
    // Apply caustics  
    vec4 lightSpacePos = lightProjMatrix * lightViewMatrix * vec4(vWorldPosition, 1.0);
    lightSpacePos.xyz /= lightSpacePos.w;
    lightSpacePos.xyz = lightSpacePos.xyz * 0.5 + 0.5; 
    vec3 front = texture2D(causticsTexture, lightSpacePos.xy).rgb;
    vec3 back = texture2D(causticsTextureB, lightSpacePos.xy).rgb;
    gl_FragColor = vec4((front + back) * color, 1.0);
    #include <tonemapping_fragment>
    #include <encodings_fragment>
   }`);
var CausticsMaterial = shaderMaterial(
  {
    cameraMatrixWorld: new Matrix4(),
    cameraProjectionMatrixInv: new Matrix4(),
    normalTexture: null,
    depthTexture: null,
    lightDir: new Vector3(0, 1, 0),
    lightPlaneNormal: new Vector3(0, 1, 0),
    lightPlaneConstant: 0,
    near: 0.1,
    far: 100,
    modelMatrix: new Matrix4(),
    worldRadius: 1 / 40,
    ior: 1.1,
    bounces: 0,
    resolution: 1024,
    size: 10,
    intensity: 0.5
  },
  /* glsl */
  `
  varying vec2 vUv;
  void main() {
      vUv = uv;
      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
  }`,
  /* glsl */
  `  
  uniform mat4 cameraMatrixWorld;
  uniform mat4 cameraProjectionMatrixInv;
  uniform vec3 lightDir;
  uniform vec3 lightPlaneNormal;
  uniform float lightPlaneConstant;
  uniform float near;
  uniform float far;
  uniform float time;
  uniform float worldRadius;
  uniform float resolution;
  uniform float size;
  uniform float intensity;
  uniform float ior;
  precision highp isampler2D;
  precision highp usampler2D;
  uniform sampler2D normalTexture;
  uniform sampler2D depthTexture;
  uniform float bounces;
  varying vec2 vUv;
  vec3 WorldPosFromDepth(float depth, vec2 coord) {
    float z = depth * 2.0 - 1.0;
    vec4 clipSpacePosition = vec4(coord * 2.0 - 1.0, z, 1.0);
    vec4 viewSpacePosition = cameraProjectionMatrixInv * clipSpacePosition;
    // Perspective division
    viewSpacePosition /= viewSpacePosition.w;
    vec4 worldSpacePosition = cameraMatrixWorld * viewSpacePosition;
    return worldSpacePosition.xyz;
  }                  
  float sdPlane( vec3 p, vec3 n, float h ) {
    // n must be normalized
    return dot(p,n) + h;
  }
  float planeIntersect( vec3 ro, vec3 rd, vec4 p ) {
    return -(dot(ro,p.xyz)+p.w)/dot(rd,p.xyz);
  }
  vec3 totalInternalReflection(vec3 ro, vec3 rd, vec3 pos, vec3 normal, float ior, out vec3 rayOrigin, out vec3 rayDirection) {
    rayOrigin = ro;
    rayDirection = rd;
    rayDirection = refract(rayDirection, normal, 1.0 / ior);
    rayOrigin = pos + rayDirection * 0.1;
    return rayDirection;
  }
  void main() {
    // Each sample consists of random offset in the x and y direction
    float caustic = 0.0;
    float causticTexelSize = (1.0 / resolution) * size * 2.0;
    float texelsNeeded = worldRadius / causticTexelSize;
    float sampleRadius = texelsNeeded / resolution;
    float sum = 0.0;
    if (texture2D(depthTexture, vUv).x == 1.0) {
      gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);
      return;
    }
    vec2 offset1 = vec2(-0.5, -0.5);//vec2(rand() - 0.5, rand() - 0.5);
    vec2 offset2 = vec2(-0.5, 0.5);//vec2(rand() - 0.5, rand() - 0.5);
    vec2 offset3 = vec2(0.5, 0.5);//vec2(rand() - 0.5, rand() - 0.5);
    vec2 offset4 = vec2(0.5, -0.5);//vec2(rand() - 0.5, rand() - 0.5);
    vec2 uv1 = vUv + offset1 * sampleRadius;
    vec2 uv2 = vUv + offset2 * sampleRadius;
    vec2 uv3 = vUv + offset3 * sampleRadius;
    vec2 uv4 = vUv + offset4 * sampleRadius;
    vec3 normal1 = texture2D(normalTexture, uv1, -10.0).rgb * 2.0 - 1.0;
    vec3 normal2 = texture2D(normalTexture, uv2, -10.0).rgb * 2.0 - 1.0;
    vec3 normal3 = texture2D(normalTexture, uv3, -10.0).rgb * 2.0 - 1.0;
    vec3 normal4 = texture2D(normalTexture, uv4, -10.0).rgb * 2.0 - 1.0;
    float depth1 = texture2D(depthTexture, uv1, -10.0).x;
    float depth2 = texture2D(depthTexture, uv2, -10.0).x;
    float depth3 = texture2D(depthTexture, uv3, -10.0).x;
    float depth4 = texture2D(depthTexture, uv4, -10.0).x;
    // Sanity check the depths
    if (depth1 == 1.0 || depth2 == 1.0 || depth3 == 1.0 || depth4 == 1.0) {
      gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);
      return;
    }
    vec3 pos1 = WorldPosFromDepth(depth1, uv1);
    vec3 pos2 = WorldPosFromDepth(depth2, uv2);
    vec3 pos3 = WorldPosFromDepth(depth3, uv3);
    vec3 pos4 = WorldPosFromDepth(depth4, uv4);
    vec3 originPos1 = WorldPosFromDepth(0.0, uv1);
    vec3 originPos2 = WorldPosFromDepth(0.0, uv2);
    vec3 originPos3 = WorldPosFromDepth(0.0, uv3);
    vec3 originPos4 = WorldPosFromDepth(0.0, uv4);
    vec3 endPos1, endPos2, endPos3, endPos4;
    vec3 endDir1, endDir2, endDir3, endDir4;
    totalInternalReflection(originPos1, lightDir, pos1, normal1, ior, endPos1, endDir1);
    totalInternalReflection(originPos2, lightDir, pos2, normal2, ior, endPos2, endDir2);
    totalInternalReflection(originPos3, lightDir, pos3, normal3, ior, endPos3, endDir3);
    totalInternalReflection(originPos4, lightDir, pos4, normal4, ior, endPos4, endDir4);
    float lightPosArea = length(cross(originPos2 - originPos1, originPos3 - originPos1)) + length(cross(originPos3 - originPos1, originPos4 - originPos1));
    float t1 = planeIntersect(endPos1, endDir1, vec4(lightPlaneNormal, lightPlaneConstant));
    float t2 = planeIntersect(endPos2, endDir2, vec4(lightPlaneNormal, lightPlaneConstant));
    float t3 = planeIntersect(endPos3, endDir3, vec4(lightPlaneNormal, lightPlaneConstant));
    float t4 = planeIntersect(endPos4, endDir4, vec4(lightPlaneNormal, lightPlaneConstant));
    vec3 finalPos1 = endPos1 + endDir1 * t1;
    vec3 finalPos2 = endPos2 + endDir2 * t2;
    vec3 finalPos3 = endPos3 + endDir3 * t3;
    vec3 finalPos4 = endPos4 + endDir4 * t4;
    float finalArea = length(cross(finalPos2 - finalPos1, finalPos3 - finalPos1)) + length(cross(finalPos3 - finalPos1, finalPos4 - finalPos1));
    caustic += intensity * (lightPosArea / finalArea);
    // Calculate the area of the triangle in light spaces
    gl_FragColor = vec4(vec3(max(caustic, 0.0)), 1.0);
  }`
);
var NORMALPROPS = {
  depth: true,
  minFilter: LinearFilter,
  magFilter: LinearFilter,
  type: UnsignedByteType
};
var CAUSTICPROPS = {
  minFilter: LinearMipmapLinearFilter,
  magFilter: LinearFilter,
  type: FloatType,
  generateMipmaps: true
};
var Caustics = React90.forwardRef(({
  debug,
  children,
  frames = 1,
  ior = 1.1,
  color = "white",
  causticsOnly = false,
  backside = false,
  backsideIOR = 1.1,
  worldRadius = 0.3125,
  intensity = 0.05,
  resolution = 2024,
  lightSource = [5, 5, 5],
  ...props
}, fref) => {
  extend({
    CausticsProjectionMaterial
  });
  const ref = React90.useRef(null);
  const camera = React90.useRef(null);
  const scene = React90.useRef(null);
  const plane = React90.useRef(null);
  const gl = useThree((state) => state.gl);
  const helper = useHelper(debug && camera, CameraHelper);
  const normalTarget = useFBO(resolution, resolution, NORMALPROPS);
  const normalTargetB = useFBO(resolution, resolution, NORMALPROPS);
  const causticsTarget = useFBO(resolution, resolution, CAUSTICPROPS);
  const causticsTargetB = useFBO(resolution, resolution, CAUSTICPROPS);
  const [normalMat] = React90.useState(() => createNormalMaterial());
  const [normalMatB] = React90.useState(() => createNormalMaterial(BackSide));
  const [causticsMaterial] = React90.useState(() => new CausticsMaterial());
  const [causticsQuad] = React90.useState(() => new FullScreenQuad(causticsMaterial));
  React90.useLayoutEffect(() => {
    ref.current.updateWorldMatrix(false, true);
  });
  let count = 0;
  const v5 = new Vector3();
  const lpF = new Frustum();
  const lpM = new Matrix4();
  const lpP = new Plane();
  const lightDir = new Vector3();
  const lightDirInv = new Vector3();
  const bounds = new Box3();
  const focusPos = new Vector3();
  const boundsVertices = [];
  const worldVerts = [];
  const projectedVerts = [];
  const lightDirs = [];
  const cameraPos = new Vector3();
  for (let i3 = 0; i3 < 8; i3++) {
    boundsVertices.push(new Vector3());
    worldVerts.push(new Vector3());
    projectedVerts.push(new Vector3());
    lightDirs.push(new Vector3());
  }
  useFrame(() => {
    if (frames === Infinity || count++ < frames) {
      var _scene$current$parent, _helper$current;
      if (Array.isArray(lightSource))
        lightDir.fromArray(lightSource).normalize();
      else
        lightDir.copy(ref.current.worldToLocal(lightSource.current.getWorldPosition(v5)).normalize());
      lightDirInv.copy(lightDir).multiplyScalar(-1);
      (_scene$current$parent = scene.current.parent) == null ? void 0 : _scene$current$parent.matrixWorld.identity();
      bounds.setFromObject(scene.current, true);
      boundsVertices[0].set(bounds.min.x, bounds.min.y, bounds.min.z);
      boundsVertices[1].set(bounds.min.x, bounds.min.y, bounds.max.z);
      boundsVertices[2].set(bounds.min.x, bounds.max.y, bounds.min.z);
      boundsVertices[3].set(bounds.min.x, bounds.max.y, bounds.max.z);
      boundsVertices[4].set(bounds.max.x, bounds.min.y, bounds.min.z);
      boundsVertices[5].set(bounds.max.x, bounds.min.y, bounds.max.z);
      boundsVertices[6].set(bounds.max.x, bounds.max.y, bounds.min.z);
      boundsVertices[7].set(bounds.max.x, bounds.max.y, bounds.max.z);
      for (let i3 = 0; i3 < 8; i3++) {
        worldVerts[i3].copy(boundsVertices[i3]);
      }
      bounds.getCenter(focusPos);
      boundsVertices.map((v6) => v6.sub(focusPos));
      const lightPlane = lpP.set(lightDirInv, 0);
      boundsVertices.map((v6, i3) => lightPlane.projectPoint(v6, projectedVerts[i3]));
      const centralVert = projectedVerts.reduce((a3, b2) => a3.add(b2), v5.set(0, 0, 0)).divideScalar(projectedVerts.length);
      const radius = projectedVerts.map((v6) => v6.distanceTo(centralVert)).reduce((a3, b2) => Math.max(a3, b2));
      const dirLength = boundsVertices.map((x2) => x2.dot(lightDir)).reduce((a3, b2) => Math.max(a3, b2));
      camera.current.position.copy(cameraPos.copy(lightDir).multiplyScalar(dirLength).add(focusPos));
      camera.current.lookAt(scene.current.localToWorld(focusPos));
      const dirMatrix = lpM.lookAt(camera.current.position, focusPos, v5.set(0, 1, 0));
      camera.current.left = -radius;
      camera.current.right = radius;
      camera.current.top = radius;
      camera.current.bottom = -radius;
      const yOffset = v5.set(0, radius, 0).applyMatrix4(dirMatrix);
      const yTime = (camera.current.position.y + yOffset.y) / lightDir.y;
      camera.current.near = 0.1;
      camera.current.far = yTime;
      camera.current.updateProjectionMatrix();
      camera.current.updateMatrixWorld();
      const groundProjectedCoords = worldVerts.map((v6, i3) => v6.add(lightDirs[i3].copy(lightDir).multiplyScalar(-v6.y / lightDir.y)));
      const centerPos = groundProjectedCoords.reduce((a3, b2) => a3.add(b2), v5.set(0, 0, 0)).divideScalar(groundProjectedCoords.length);
      const maxSize = 2 * groundProjectedCoords.map((v6) => Math.hypot(v6.x - centerPos.x, v6.z - centerPos.z)).reduce((a3, b2) => Math.max(a3, b2));
      plane.current.scale.setScalar(maxSize);
      plane.current.position.copy(centerPos);
      if (debug)
        (_helper$current = helper.current) == null ? void 0 : _helper$current.update();
      normalMatB.viewMatrix.value = normalMat.viewMatrix.value = camera.current.matrixWorldInverse;
      const dirLightNearPlane = lpF.setFromProjectionMatrix(lpM.multiplyMatrices(camera.current.projectionMatrix, camera.current.matrixWorldInverse)).planes[4];
      causticsMaterial.cameraMatrixWorld = camera.current.matrixWorld;
      causticsMaterial.cameraProjectionMatrixInv = camera.current.projectionMatrixInverse;
      causticsMaterial.lightDir = lightDirInv;
      causticsMaterial.lightPlaneNormal = dirLightNearPlane.normal;
      causticsMaterial.lightPlaneConstant = dirLightNearPlane.constant;
      causticsMaterial.near = camera.current.near;
      causticsMaterial.far = camera.current.far;
      causticsMaterial.resolution = resolution;
      causticsMaterial.size = radius;
      causticsMaterial.intensity = intensity;
      causticsMaterial.worldRadius = worldRadius;
      scene.current.visible = true;
      gl.setRenderTarget(normalTarget);
      gl.clear();
      scene.current.overrideMaterial = normalMat;
      gl.render(scene.current, camera.current);
      gl.setRenderTarget(normalTargetB);
      gl.clear();
      if (backside) {
        scene.current.overrideMaterial = normalMatB;
        gl.render(scene.current, camera.current);
      }
      scene.current.overrideMaterial = null;
      causticsMaterial.ior = ior;
      plane.current.material.lightProjMatrix = camera.current.projectionMatrix;
      plane.current.material.lightViewMatrix = camera.current.matrixWorldInverse;
      causticsMaterial.normalTexture = normalTarget.texture;
      causticsMaterial.depthTexture = normalTarget.depthTexture;
      gl.setRenderTarget(causticsTarget);
      gl.clear();
      causticsQuad.render(gl);
      causticsMaterial.ior = backsideIOR;
      causticsMaterial.normalTexture = normalTargetB.texture;
      causticsMaterial.depthTexture = normalTargetB.depthTexture;
      gl.setRenderTarget(causticsTargetB);
      gl.clear();
      if (backside)
        causticsQuad.render(gl);
      gl.setRenderTarget(null);
      if (causticsOnly)
        scene.current.visible = false;
    }
  });
  React90.useImperativeHandle(fref, () => ref.current, []);
  return React90.createElement("group", _extends({
    ref
  }, props), React90.createElement("scene", {
    ref: scene
  }, React90.createElement("orthographicCamera", {
    ref: camera,
    up: [0, 1, 0]
  }), children), React90.createElement("mesh", {
    renderOrder: 2,
    ref: plane,
    "rotation-x": -Math.PI / 2
  }, React90.createElement("planeGeometry", null), React90.createElement("causticsProjectionMaterial", {
    transparent: true,
    color,
    causticsTexture: causticsTarget.texture,
    causticsTextureB: causticsTargetB.texture,
    blending: CustomBlending,
    blendSrc: OneFactor,
    blendDst: SrcAlphaFactor,
    depthWrite: false
  }), debug && React90.createElement(Edges, null, React90.createElement("lineBasicMaterial", {
    color: "#ffff00",
    toneMapped: false
  }))));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Reflector.js
var React91 = __toESM(require_react());
extend({
  MeshReflectorMaterial
});
var Reflector = React91.forwardRef(({
  mixBlur = 0,
  mixStrength = 0.5,
  resolution = 256,
  blur = [0, 0],
  args = [1, 1],
  minDepthThreshold = 0.9,
  maxDepthThreshold = 1,
  depthScale = 0,
  depthToBlurRatioBias = 0.25,
  mirror = 0,
  children,
  debug = 0,
  distortion = 1,
  mixContrast = 1,
  distortionMap,
  ...props
}, ref) => {
  React91.useEffect(() => {
    console.warn("Reflector has been deprecated and will be removed next major. Replace it with <MeshReflectorMaterial />!");
  }, []);
  const gl = useThree(({
    gl: gl2
  }) => gl2);
  const camera = useThree(({
    camera: camera2
  }) => camera2);
  const scene = useThree(({
    scene: scene2
  }) => scene2);
  blur = Array.isArray(blur) ? blur : [blur, blur];
  const hasBlur = blur[0] + blur[1] > 0;
  const meshRef = React91.useRef(null);
  const [reflectorPlane] = React91.useState(() => new Plane());
  const [normal2] = React91.useState(() => new Vector3());
  const [reflectorWorldPosition] = React91.useState(() => new Vector3());
  const [cameraWorldPosition] = React91.useState(() => new Vector3());
  const [rotationMatrix] = React91.useState(() => new Matrix4());
  const [lookAtPosition] = React91.useState(() => new Vector3(0, 0, -1));
  const [clipPlane] = React91.useState(() => new Vector4());
  const [view] = React91.useState(() => new Vector3());
  const [target2] = React91.useState(() => new Vector3());
  const [q3] = React91.useState(() => new Vector4());
  const [textureMatrix] = React91.useState(() => new Matrix4());
  const [virtualCamera] = React91.useState(() => new PerspectiveCamera());
  const beforeRender = React91.useCallback(() => {
    reflectorWorldPosition.setFromMatrixPosition(meshRef.current.matrixWorld);
    cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);
    rotationMatrix.extractRotation(meshRef.current.matrixWorld);
    normal2.set(0, 0, 1);
    normal2.applyMatrix4(rotationMatrix);
    view.subVectors(reflectorWorldPosition, cameraWorldPosition);
    if (view.dot(normal2) > 0)
      return;
    view.reflect(normal2).negate();
    view.add(reflectorWorldPosition);
    rotationMatrix.extractRotation(camera.matrixWorld);
    lookAtPosition.set(0, 0, -1);
    lookAtPosition.applyMatrix4(rotationMatrix);
    lookAtPosition.add(cameraWorldPosition);
    target2.subVectors(reflectorWorldPosition, lookAtPosition);
    target2.reflect(normal2).negate();
    target2.add(reflectorWorldPosition);
    virtualCamera.position.copy(view);
    virtualCamera.up.set(0, 1, 0);
    virtualCamera.up.applyMatrix4(rotationMatrix);
    virtualCamera.up.reflect(normal2);
    virtualCamera.lookAt(target2);
    virtualCamera.far = camera.far;
    virtualCamera.updateMatrixWorld();
    virtualCamera.projectionMatrix.copy(camera.projectionMatrix);
    textureMatrix.set(0.5, 0, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0, 1);
    textureMatrix.multiply(virtualCamera.projectionMatrix);
    textureMatrix.multiply(virtualCamera.matrixWorldInverse);
    textureMatrix.multiply(meshRef.current.matrixWorld);
    reflectorPlane.setFromNormalAndCoplanarPoint(normal2, reflectorWorldPosition);
    reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse);
    clipPlane.set(reflectorPlane.normal.x, reflectorPlane.normal.y, reflectorPlane.normal.z, reflectorPlane.constant);
    const projectionMatrix = virtualCamera.projectionMatrix;
    q3.x = (Math.sign(clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];
    q3.y = (Math.sign(clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];
    q3.z = -1;
    q3.w = (1 + projectionMatrix.elements[10]) / projectionMatrix.elements[14];
    clipPlane.multiplyScalar(2 / clipPlane.dot(q3));
    projectionMatrix.elements[2] = clipPlane.x;
    projectionMatrix.elements[6] = clipPlane.y;
    projectionMatrix.elements[10] = clipPlane.z + 1;
    projectionMatrix.elements[14] = clipPlane.w;
  }, []);
  const [fbo1, fbo2, blurpass, reflectorProps] = React91.useMemo(() => {
    const parameters = {
      type: HalfFloatType,
      minFilter: LinearFilter,
      magFilter: LinearFilter
    };
    const fbo12 = new WebGLRenderTarget(resolution, resolution, parameters);
    fbo12.depthBuffer = true;
    fbo12.depthTexture = new DepthTexture(resolution, resolution);
    fbo12.depthTexture.format = DepthFormat;
    fbo12.depthTexture.type = UnsignedShortType;
    const fbo22 = new WebGLRenderTarget(resolution, resolution, parameters);
    const blurpass2 = new BlurPass({
      gl,
      resolution,
      width: blur[0],
      height: blur[1],
      minDepthThreshold,
      maxDepthThreshold,
      depthScale,
      depthToBlurRatioBias
    });
    const reflectorProps2 = {
      mirror,
      textureMatrix,
      mixBlur,
      tDiffuse: fbo12.texture,
      tDepth: fbo12.depthTexture,
      tDiffuseBlur: fbo22.texture,
      hasBlur,
      mixStrength,
      minDepthThreshold,
      maxDepthThreshold,
      depthScale,
      depthToBlurRatioBias,
      transparent: true,
      debug,
      distortion,
      distortionMap,
      mixContrast,
      "defines-USE_BLUR": hasBlur ? "" : void 0,
      "defines-USE_DEPTH": depthScale > 0 ? "" : void 0,
      "defines-USE_DISTORTION": distortionMap ? "" : void 0
    };
    return [fbo12, fbo22, blurpass2, reflectorProps2];
  }, [gl, blur, textureMatrix, resolution, mirror, hasBlur, mixBlur, mixStrength, minDepthThreshold, maxDepthThreshold, depthScale, depthToBlurRatioBias, debug, distortion, distortionMap, mixContrast]);
  useFrame(() => {
    if (!(meshRef != null && meshRef.current))
      return;
    meshRef.current.visible = false;
    const currentXrEnabled = gl.xr.enabled;
    const currentShadowAutoUpdate = gl.shadowMap.autoUpdate;
    beforeRender();
    gl.xr.enabled = false;
    gl.shadowMap.autoUpdate = false;
    gl.setRenderTarget(fbo1);
    gl.state.buffers.depth.setMask(true);
    if (!gl.autoClear)
      gl.clear();
    gl.render(scene, virtualCamera);
    if (hasBlur)
      blurpass.render(gl, fbo1, fbo2);
    gl.xr.enabled = currentXrEnabled;
    gl.shadowMap.autoUpdate = currentShadowAutoUpdate;
    meshRef.current.visible = true;
    gl.setRenderTarget(null);
  });
  return React91.createElement("mesh", _extends({
    ref: react_merge_refs_esm_default([meshRef, ref])
  }, props), React91.createElement("planeGeometry", {
    args
  }), children ? children("meshReflectorMaterial", reflectorProps) : React91.createElement("meshReflectorMaterial", reflectorProps));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/SpotLight.js
var React92 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/materials/SpotLightMaterial.js
var SpotLightMaterial = class extends ShaderMaterial {
  constructor() {
    super({
      uniforms: {
        depth: {
          value: null
        },
        opacity: {
          value: 1
        },
        attenuation: {
          value: 2.5
        },
        anglePower: {
          value: 12
        },
        spotPosition: {
          value: new Vector3(0, 0, 0)
        },
        lightColor: {
          value: new Color("white")
        },
        cameraNear: {
          value: 0
        },
        cameraFar: {
          value: 1
        },
        resolution: {
          value: new Vector2(0, 0)
        }
      },
      transparent: true,
      depthWrite: false,
      vertexShader: (
        /* glsl */
        `
      varying vec3 vNormal;
      varying vec3 vWorldPosition;
      varying float vViewZ;
      varying float vIntensity;
      uniform vec3 spotPosition;
      uniform float attenuation;      

      void main() {
        // compute intensity
        vNormal = normalize( normalMatrix * normal );
        vec4 worldPosition	= modelMatrix * vec4( position, 1.0 );
        vWorldPosition = worldPosition.xyz;
        vec4 viewPosition = viewMatrix * worldPosition;
        vViewZ = viewPosition.z;
        float intensity	= distance(worldPosition.xyz, spotPosition) / attenuation;
        intensity	= 1.0 - clamp(intensity, 0.0, 1.0);
        vIntensity = intensity;        
        // set gl_Position
        gl_Position	= projectionMatrix * viewPosition;

      }`
      ),
      fragmentShader: (
        /* glsl */
        `
      #include <packing>

      varying vec3 vNormal;
      varying vec3 vWorldPosition;
      uniform vec3 lightColor;
      uniform vec3 spotPosition;
      uniform float attenuation;
      uniform float anglePower;
      uniform sampler2D depth;
      uniform vec2 resolution;
      uniform float cameraNear;
      uniform float cameraFar;
      varying float vViewZ;
      varying float vIntensity;
      uniform float opacity;

      float readDepth( sampler2D depthSampler, vec2 coord ) {
        float fragCoordZ = texture2D( depthSampler, coord ).x;
        float viewZ = perspectiveDepthToViewZ(fragCoordZ, cameraNear, cameraFar);
        return viewZ;
      }

      void main() {
        float d = 1.0;
        bool isSoft = resolution[0] > 0.0 && resolution[1] > 0.0;
        if (isSoft) {
          vec2 sUv = gl_FragCoord.xy / resolution;
          d = readDepth(depth, sUv);
        }
        float intensity = vIntensity;
        vec3 normal	= vec3(vNormal.x, vNormal.y, abs(vNormal.z));
        float angleIntensity	= pow( dot(normal, vec3(0.0, 0.0, 1.0)), anglePower );
        intensity	*= angleIntensity;
        // fades when z is close to sampled depth, meaning the cone is intersecting existing geometry
        if (isSoft) {
          intensity	*= smoothstep(0., 1., vViewZ - d);
        }
        gl_FragColor = vec4(lightColor, intensity * opacity);

        #include <tonemapping_fragment>
	      #include <encodings_fragment>
      }`
      )
    });
  }
};

// node_modules/r3f-perf/node_modules/@react-three/drei/core/SpotLight.js
function VolumetricMesh({
  opacity = 1,
  radiusTop,
  radiusBottom,
  depthBuffer,
  color = "white",
  distance = 5,
  angle = 0.15,
  attenuation = 5,
  anglePower = 5
}) {
  const mesh = React92.useRef(null);
  const size = useThree((state) => state.size);
  const camera = useThree((state) => state.camera);
  const dpr = useThree((state) => state.viewport.dpr);
  const [material] = React92.useState(() => new SpotLightMaterial());
  const [vec] = React92.useState(() => new Vector3());
  radiusTop = radiusTop === void 0 ? 0.1 : radiusTop;
  radiusBottom = radiusBottom === void 0 ? angle * 7 : radiusBottom;
  useFrame(() => {
    material.uniforms.spotPosition.value.copy(mesh.current.getWorldPosition(vec));
    mesh.current.lookAt(mesh.current.parent.target.getWorldPosition(vec));
  });
  const geom = React92.useMemo(() => {
    const geometry = new CylinderGeometry(radiusTop, radiusBottom, distance, 128, 64, true);
    geometry.applyMatrix4(new Matrix4().makeTranslation(0, -distance / 2, 0));
    geometry.applyMatrix4(new Matrix4().makeRotationX(-Math.PI / 2));
    return geometry;
  }, [distance, radiusTop, radiusBottom]);
  return React92.createElement(React92.Fragment, null, React92.createElement("mesh", {
    ref: mesh,
    geometry: geom,
    raycast: () => null
  }, React92.createElement("primitive", {
    object: material,
    attach: "material",
    "uniforms-opacity-value": opacity,
    "uniforms-lightColor-value": color,
    "uniforms-attenuation-value": attenuation,
    "uniforms-anglePower-value": anglePower,
    "uniforms-depth-value": depthBuffer,
    "uniforms-cameraNear-value": camera.near,
    "uniforms-cameraFar-value": camera.far,
    "uniforms-resolution-value": depthBuffer ? [size.width * dpr, size.height * dpr] : [0, 0]
  })));
}
var SpotLight = React92.forwardRef(({
  // Volumetric
  opacity = 1,
  radiusTop,
  radiusBottom,
  depthBuffer,
  color = "white",
  distance = 5,
  angle = 0.15,
  attenuation = 5,
  anglePower = 5,
  volumetric = true,
  debug = false,
  children,
  ...props
}, ref) => {
  const spotlight = React92.useRef(null);
  return React92.createElement("group", null, debug && spotlight.current && React92.createElement("spotLightHelper", {
    args: [spotlight.current]
  }), React92.createElement("spotLight", _extends({
    ref: react_merge_refs_esm_default([ref, spotlight]),
    angle,
    color,
    distance,
    castShadow: true
  }, props), volumetric && React92.createElement(VolumetricMesh, {
    debug,
    opacity,
    radiusTop,
    radiusBottom,
    depthBuffer,
    color,
    distance,
    angle,
    attenuation,
    anglePower
  })), children && React92.cloneElement(children, {
    spotlightRef: spotlight,
    debug
  }));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Lightformer.js
var React93 = __toESM(require_react());
var Lightformer = React93.forwardRef(({
  args,
  map,
  toneMapped = false,
  color = "white",
  form: Form = "rect",
  intensity = 1,
  scale: scale2 = 1,
  target: target2,
  children,
  ...props
}, forwardRef72) => {
  const ref = React93.useRef(null);
  React93.useLayoutEffect(() => {
    if (!children && !props.material) {
      applyProps(ref.current.material, {
        color
      });
      ref.current.material.color.multiplyScalar(intensity);
    }
  }, [color, intensity, children, props.material]);
  React93.useLayoutEffect(() => {
    if (target2)
      ref.current.lookAt(Array.isArray(target2) ? new Vector3(...target2) : target2);
  }, [target2]);
  scale2 = Array.isArray(scale2) && scale2.length === 2 ? [scale2[0], scale2[1], 1] : scale2;
  return React93.createElement("mesh", _extends({
    ref: react_merge_refs_esm_default([ref, forwardRef72]),
    scale: scale2
  }, props), Form === "circle" ? React93.createElement("ringGeometry", {
    args: [0, 1, 64]
  }) : Form === "ring" ? React93.createElement("ringGeometry", {
    args: [0.5, 1, 64]
  }) : Form === "rect" ? React93.createElement("planeGeometry", null) : React93.createElement(Form, {
    args
  }), children ? children : !props.material ? React93.createElement("meshBasicMaterial", {
    toneMapped,
    map,
    side: DoubleSide
  }) : null);
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Sky.js
var React94 = __toESM(require_react());
function calcPosFromAngles(inclination, azimuth, vector = new Vector3()) {
  const theta = Math.PI * (inclination - 0.5);
  const phi = 2 * Math.PI * (azimuth - 0.5);
  vector.x = Math.cos(phi);
  vector.y = Math.sin(theta);
  vector.z = Math.sin(phi);
  return vector;
}
var Sky2 = React94.forwardRef(({
  inclination = 0.6,
  azimuth = 0.1,
  distance = 1e3,
  mieCoefficient = 5e-3,
  mieDirectionalG = 0.8,
  rayleigh = 0.5,
  turbidity = 10,
  sunPosition = calcPosFromAngles(inclination, azimuth),
  ...props
}, ref) => {
  const scale2 = React94.useMemo(() => new Vector3().setScalar(distance), [distance]);
  const [sky] = React94.useState(() => new Sky());
  return React94.createElement("primitive", _extends({
    object: sky,
    ref,
    "material-uniforms-mieCoefficient-value": mieCoefficient,
    "material-uniforms-mieDirectionalG-value": mieDirectionalG,
    "material-uniforms-rayleigh-value": rayleigh,
    "material-uniforms-sunPosition-value": sunPosition,
    "material-uniforms-turbidity-value": turbidity,
    scale: scale2
  }, props));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Stars.js
var React95 = __toESM(require_react());
var StarfieldMaterial = class extends ShaderMaterial {
  constructor() {
    super({
      uniforms: {
        time: {
          value: 0
        },
        fade: {
          value: 1
        }
      },
      vertexShader: (
        /* glsl */
        `
      uniform float time;
      attribute float size;
      varying vec3 vColor;
      void main() {
        vColor = color;
        vec4 mvPosition = modelViewMatrix * vec4(position, 0.5);
        gl_PointSize = size * (30.0 / -mvPosition.z) * (3.0 + sin(time + 100.0));
        gl_Position = projectionMatrix * mvPosition;
      }`
      ),
      fragmentShader: (
        /* glsl */
        `
      uniform sampler2D pointTexture;
      uniform float fade;
      varying vec3 vColor;
      void main() {
        float opacity = 1.0;
        if (fade == 1.0) {
          float d = distance(gl_PointCoord, vec2(0.5, 0.5));
          opacity = 1.0 / (1.0 + exp(16.0 * (d - 0.25)));
        }
        gl_FragColor = vec4(vColor, opacity);

        #include <tonemapping_fragment>
	      #include <encodings_fragment>
      }`
      )
    });
  }
};
var genStar = (r2) => {
  return new Vector3().setFromSpherical(new Spherical(r2, Math.acos(1 - Math.random() * 2), Math.random() * 2 * Math.PI));
};
var Stars = React95.forwardRef(({
  radius = 100,
  depth = 50,
  count = 5e3,
  saturation = 0,
  factor = 4,
  fade = false,
  speed = 1
}, ref) => {
  const material = React95.useRef();
  const [position2, color, size] = React95.useMemo(() => {
    const positions = [];
    const colors = [];
    const sizes = Array.from({
      length: count
    }, () => (0.5 + 0.5 * Math.random()) * factor);
    const color2 = new Color();
    let r2 = radius + depth;
    const increment = depth / count;
    for (let i3 = 0; i3 < count; i3++) {
      r2 -= increment * Math.random();
      positions.push(...genStar(r2).toArray());
      color2.setHSL(i3 / count, saturation, 0.9);
      colors.push(color2.r, color2.g, color2.b);
    }
    return [new Float32Array(positions), new Float32Array(colors), new Float32Array(sizes)];
  }, [count, depth, factor, radius, saturation]);
  useFrame((state) => material.current && (material.current.uniforms.time.value = state.clock.getElapsedTime() * speed));
  const [starfieldMaterial] = React95.useState(() => new StarfieldMaterial());
  return React95.createElement("points", {
    ref
  }, React95.createElement("bufferGeometry", null, React95.createElement("bufferAttribute", {
    attach: "attributes-position",
    args: [position2, 3]
  }), React95.createElement("bufferAttribute", {
    attach: "attributes-color",
    args: [color, 3]
  }), React95.createElement("bufferAttribute", {
    attach: "attributes-size",
    args: [size, 1]
  })), React95.createElement("primitive", {
    ref: material,
    object: starfieldMaterial,
    attach: "material",
    blending: AdditiveBlending,
    "uniforms-fade-value": fade,
    depthWrite: false,
    transparent: true,
    vertexColors: true
  }));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Cloud.js
var React96 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Sparkles.js
var React97 = __toESM(require_react());
var SparklesImplMaterial = shaderMaterial({
  time: 0,
  pixelRatio: 1
}, ` uniform float pixelRatio;
    uniform float time;
    attribute float size;  
    attribute float speed;  
    attribute float opacity;
    attribute vec3 noise;
    attribute vec3 color;
    varying vec3 vColor;
    varying float vOpacity;
    void main() {
      vec4 modelPosition = modelMatrix * vec4(position, 1.0);
      modelPosition.y += sin(time * speed + modelPosition.x * noise.x * 100.0) * 0.2;
      modelPosition.z += cos(time * speed + modelPosition.x * noise.y * 100.0) * 0.2;
      modelPosition.x += cos(time * speed + modelPosition.x * noise.z * 100.0) * 0.2;
      vec4 viewPosition = viewMatrix * modelPosition;
      vec4 projectionPostion = projectionMatrix * viewPosition;
      gl_Position = projectionPostion;
      gl_PointSize = size * 25. * pixelRatio;
      gl_PointSize *= (1.0 / - viewPosition.z);
      vColor = color;
      vOpacity = opacity;
    }`, ` varying vec3 vColor;
    varying float vOpacity;
    void main() {
      float distanceToCenter = distance(gl_PointCoord, vec2(0.5));
      float strength = 0.05 / distanceToCenter - 0.1;
      gl_FragColor = vec4(vColor, strength * vOpacity);
      #include <tonemapping_fragment>
      #include <encodings_fragment>
    }`);
var isFloat32Array = (def) => def && def.constructor === Float32Array;
var expandColor = (v5) => [v5.r, v5.g, v5.b];
var isVector = (v5) => v5 instanceof Vector2 || v5 instanceof Vector3 || v5 instanceof Vector4;
var normalizeVector = (v5) => {
  if (Array.isArray(v5))
    return v5;
  else if (isVector(v5))
    return v5.toArray();
  return [v5, v5, v5];
};
function usePropAsIsOrAsAttribute(count, prop, setDefault) {
  return React97.useMemo(() => {
    if (prop !== void 0) {
      if (isFloat32Array(prop)) {
        return prop;
      } else {
        if (prop instanceof Color) {
          const a3 = Array.from({
            length: count * 3
          }, () => expandColor(prop)).flat();
          return Float32Array.from(a3);
        } else if (isVector(prop) || Array.isArray(prop)) {
          const a3 = Array.from({
            length: count * 3
          }, () => normalizeVector(prop)).flat();
          return Float32Array.from(a3);
        }
        return Float32Array.from({
          length: count
        }, () => prop);
      }
    }
    return Float32Array.from({
      length: count
    }, setDefault);
  }, [prop]);
}
var Sparkles = React97.forwardRef(({
  noise = 1,
  count = 100,
  speed = 1,
  opacity = 1,
  scale: scale2 = 1,
  size,
  color,
  children,
  ...props
}, forwardRef72) => {
  React97.useMemo(() => extend({
    SparklesImplMaterial
  }), []);
  const ref = React97.useRef(null);
  const dpr = useThree((state) => state.viewport.dpr);
  const positions = React97.useMemo(() => Float32Array.from(Array.from({
    length: count
  }, () => normalizeVector(scale2).map(MathUtils.randFloatSpread)).flat()), [count, scale2]);
  const sizes = usePropAsIsOrAsAttribute(count, size, Math.random);
  const opacities = usePropAsIsOrAsAttribute(count, opacity);
  const speeds = usePropAsIsOrAsAttribute(count, speed);
  const noises = usePropAsIsOrAsAttribute(count * 3, noise);
  const colors = usePropAsIsOrAsAttribute(color === void 0 ? count * 3 : count, !isFloat32Array(color) ? new Color(color) : color, () => 1);
  useFrame((state) => {
    if (ref.current && ref.current.material)
      ref.current.material.time = state.clock.elapsedTime;
  });
  React97.useImperativeHandle(forwardRef72, () => ref.current, []);
  return React97.createElement("points", _extends({
    key: `particle-${count}-${JSON.stringify(scale2)}`
  }, props, {
    ref
  }), React97.createElement("bufferGeometry", null, React97.createElement("bufferAttribute", {
    attach: "attributes-position",
    args: [positions, 3]
  }), React97.createElement("bufferAttribute", {
    attach: "attributes-size",
    args: [sizes, 1]
  }), React97.createElement("bufferAttribute", {
    attach: "attributes-opacity",
    args: [opacities, 1]
  }), React97.createElement("bufferAttribute", {
    attach: "attributes-speed",
    args: [speeds, 1]
  }), React97.createElement("bufferAttribute", {
    attach: "attributes-color",
    args: [colors, 3]
  }), React97.createElement("bufferAttribute", {
    attach: "attributes-noise",
    args: [noises, 3]
  })), children ? children : React97.createElement("sparklesImplMaterial", {
    transparent: true,
    pixelRatio: dpr,
    depthWrite: false
  }));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/useMatcapTexture.js
var React98 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/useNormalTexture.js
var React99 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Wireframe.js
var React101 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/materials/WireframeMaterial.js
var React100 = __toESM(require_react());
var WireframeMaterialShaders = {
  uniforms: {
    strokeOpacity: 1,
    fillOpacity: 0.25,
    fillMix: 0,
    thickness: 0.05,
    colorBackfaces: false,
    dashInvert: true,
    dash: false,
    dashRepeats: 4,
    dashLength: 0.5,
    squeeze: false,
    squeezeMin: 0.2,
    squeezeMax: 1,
    stroke: new Color("#ff0000"),
    backfaceStroke: new Color("#0000ff"),
    fill: new Color("#00ff00")
  },
  vertex: (
    /* glsl */
    `
	  attribute vec3 barycentric;
	
		varying vec3 v_edges_Barycentric;
		varying vec3 v_edges_Position;

		void initWireframe() {
			v_edges_Barycentric = barycentric;
			v_edges_Position = position.xyz;
		}
	  `
  ),
  fragment: (
    /* glsl */
    `
		#ifndef PI
	  	#define PI 3.1415926535897932384626433832795
		#endif
  
	  varying vec3 v_edges_Barycentric;
	  varying vec3 v_edges_Position;
  
	  uniform float strokeOpacity;
	  uniform float fillOpacity;
	  uniform float fillMix;
	  uniform float thickness;
	  uniform bool colorBackfaces;
  
	  // Dash
	  uniform bool dashInvert;
	  uniform bool dash;
	  uniform bool dashOnly;
	  uniform float dashRepeats;
	  uniform float dashLength;
  
	  // Squeeze
	  uniform bool squeeze;
	  uniform float squeezeMin;
	  uniform float squeezeMax;
  
	  // Colors
	  uniform vec3 stroke;
	  uniform vec3 backfaceStroke;
	  uniform vec3 fill;
  
	  // This is like
	  float wireframe_aastep(float threshold, float dist) {
		  float afwidth = fwidth(dist) * 0.5;
		  return smoothstep(threshold - afwidth, threshold + afwidth, dist);
	  }
  
	  float wireframe_map(float value, float min1, float max1, float min2, float max2) {
		  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);
	  }
  
	  float getWireframe() {
			vec3 barycentric = v_edges_Barycentric;
		
			// Distance from center of each triangle to its edges.
			float d = min(min(barycentric.x, barycentric.y), barycentric.z);

			// for dashed rendering, we can use this to get the 0 .. 1 value of the line length
			float positionAlong = max(barycentric.x, barycentric.y);
			if (barycentric.y < barycentric.x && barycentric.y < barycentric.z) {
				positionAlong = 1.0 - positionAlong;
			}

			// the thickness of the stroke
			float computedThickness = wireframe_map(thickness, 0.0, 1.0, 0.0, 0.34);

			// if we want to shrink the thickness toward the center of the line segment
			if (squeeze) {
				computedThickness *= mix(squeezeMin, squeezeMax, (1.0 - sin(positionAlong * PI)));
			}

			// Create dash pattern
			if (dash) {
				// here we offset the stroke position depending on whether it
				// should overlap or not
				float offset = 1.0 / dashRepeats * dashLength / 2.0;
				if (!dashInvert) {
					offset += 1.0 / dashRepeats / 2.0;
				}

				// if we should animate the dash or not
				// if (dashAnimate) {
				// 	offset += time * 0.22;
				// }

				// create the repeating dash pattern
				float pattern = fract((positionAlong + offset) * dashRepeats);
				computedThickness *= 1.0 - wireframe_aastep(dashLength, pattern);
			}

			// compute the anti-aliased stroke edge  
			float edge = 1.0 - wireframe_aastep(computedThickness, d);

			return edge;
	  }
	  `
  )
};
var WireframeMaterial = shaderMaterial(WireframeMaterialShaders.uniforms, WireframeMaterialShaders.vertex + /* glsl */
`
  	void main() {
		initWireframe();
		gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
	}
  `, WireframeMaterialShaders.fragment + /* glsl */
`
  void main () {
		// Compute color

		float edge = getWireframe();
		vec4 colorStroke = vec4(stroke, edge);

		#ifdef FLIP_SIDED
			colorStroke.rgb = backfaceStroke;
		#endif
    
		vec4 colorFill = vec4(fill, fillOpacity);
		vec4 outColor = mix(colorFill, colorStroke, edge * strokeOpacity);

		gl_FragColor = outColor;
	}
  `);

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Wireframe.js
extend({
  MeshWireframeMaterial: WireframeMaterial
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Points.js
var React102 = __toESM(require_react());
var _inverseMatrix = new Matrix4();
var _ray = new Ray();
var _sphere2 = new Sphere();
var _position = new Vector3();
var PositionPoint = class extends Group {
  constructor() {
    super();
    this.size = 0;
    this.color = new Color("white");
    this.instance = {
      current: void 0
    };
    this.instanceKey = {
      current: void 0
    };
  }
  // This will allow the virtual instance have bounds
  get geometry() {
    var _this$instance$curren;
    return (_this$instance$curren = this.instance.current) == null ? void 0 : _this$instance$curren.geometry;
  }
  raycast(raycaster, intersects) {
    var _raycaster$params$Poi, _raycaster$params$Poi2;
    const parent = this.instance.current;
    if (!parent || !parent.geometry)
      return;
    const instanceId = parent.userData.instances.indexOf(this.instanceKey);
    if (instanceId === -1 || instanceId > parent.geometry.drawRange.count)
      return;
    const threshold = (_raycaster$params$Poi = (_raycaster$params$Poi2 = raycaster.params.Points) == null ? void 0 : _raycaster$params$Poi2.threshold) !== null && _raycaster$params$Poi !== void 0 ? _raycaster$params$Poi : 1;
    _sphere2.set(this.getWorldPosition(_position), threshold);
    if (raycaster.ray.intersectsSphere(_sphere2) === false)
      return;
    _inverseMatrix.copy(parent.matrixWorld).invert();
    _ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);
    const localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);
    const localThresholdSq = localThreshold * localThreshold;
    const rayPointDistanceSq = _ray.distanceSqToPoint(this.position);
    if (rayPointDistanceSq < localThresholdSq) {
      const intersectPoint = new Vector3();
      _ray.closestPointToPoint(this.position, intersectPoint);
      intersectPoint.applyMatrix4(this.matrixWorld);
      const distance = raycaster.ray.origin.distanceTo(intersectPoint);
      if (distance < raycaster.near || distance > raycaster.far)
        return;
      intersects.push({
        distance,
        distanceToRay: Math.sqrt(rayPointDistanceSq),
        point: intersectPoint,
        index: instanceId,
        face: null,
        object: this
      });
    }
  }
};
var i2;
var positionRef;
var context6 = React102.createContext(null);
var parentMatrix = new Matrix4();
var position = new Vector3();
var PointsInstances = React102.forwardRef(({
  children,
  range,
  limit = 1e3,
  ...props
}, ref) => {
  const parentRef = React102.useRef(null);
  const [refs, setRefs] = React102.useState([]);
  const [[positions, colors, sizes]] = React102.useState(() => [new Float32Array(limit * 3), Float32Array.from({
    length: limit * 3
  }, () => 1), Float32Array.from({
    length: limit
  }, () => 1)]);
  React102.useEffect(() => {
    parentRef.current.geometry.attributes.position.needsUpdate = true;
  });
  useFrame(() => {
    parentRef.current.updateMatrix();
    parentRef.current.updateMatrixWorld();
    parentMatrix.copy(parentRef.current.matrixWorld).invert();
    parentRef.current.geometry.drawRange.count = Math.min(limit, range !== void 0 ? range : limit, refs.length);
    for (i2 = 0; i2 < refs.length; i2++) {
      positionRef = refs[i2].current;
      positionRef.getWorldPosition(position).applyMatrix4(parentMatrix);
      position.toArray(positions, i2 * 3);
      parentRef.current.geometry.attributes.position.needsUpdate = true;
      positionRef.matrixWorldNeedsUpdate = true;
      positionRef.color.toArray(colors, i2 * 3);
      parentRef.current.geometry.attributes.color.needsUpdate = true;
      sizes.set([positionRef.size], i2);
      parentRef.current.geometry.attributes.size.needsUpdate = true;
    }
  });
  const api = React102.useMemo(() => ({
    getParent: () => parentRef,
    subscribe: (ref2) => {
      setRefs((refs2) => [...refs2, ref2]);
      return () => setRefs((refs2) => refs2.filter((item) => item.current !== ref2.current));
    }
  }), []);
  return React102.createElement("points", _extends({
    userData: {
      instances: refs
    },
    matrixAutoUpdate: false,
    ref: react_merge_refs_esm_default([ref, parentRef]),
    raycast: () => null
  }, props), React102.createElement("bufferGeometry", null, React102.createElement("bufferAttribute", {
    attach: "attributes-position",
    count: positions.length / 3,
    array: positions,
    itemSize: 3,
    usage: DynamicDrawUsage
  }), React102.createElement("bufferAttribute", {
    attach: "attributes-color",
    count: colors.length / 3,
    array: colors,
    itemSize: 3,
    usage: DynamicDrawUsage
  }), React102.createElement("bufferAttribute", {
    attach: "attributes-size",
    count: sizes.length,
    array: sizes,
    itemSize: 1,
    usage: DynamicDrawUsage
  })), React102.createElement(context6.Provider, {
    value: api
  }, children));
});
var Point = React102.forwardRef(({
  children,
  ...props
}, ref) => {
  React102.useMemo(() => extend({
    PositionPoint
  }), []);
  const group = React102.useRef();
  const {
    subscribe,
    getParent
  } = React102.useContext(context6);
  React102.useLayoutEffect(() => subscribe(group), []);
  return React102.createElement("positionPoint", _extends({
    instance: getParent(),
    instanceKey: group,
    ref: react_merge_refs_esm_default([ref, group])
  }, props), children);
});
var PointsBuffer = React102.forwardRef(({
  children,
  positions,
  colors,
  sizes,
  stride = 3,
  ...props
}, forwardedRef) => {
  const pointsRef = React102.useRef(null);
  useFrame(() => {
    const attr = pointsRef.current.geometry.attributes;
    attr.position.needsUpdate = true;
    if (colors)
      attr.color.needsUpdate = true;
    if (sizes)
      attr.size.needsUpdate = true;
  });
  return React102.createElement("points", _extends({
    ref: react_merge_refs_esm_default([forwardedRef, pointsRef])
  }, props), React102.createElement("bufferGeometry", null, React102.createElement("bufferAttribute", {
    attach: "attributes-position",
    count: positions.length / stride,
    array: positions,
    itemSize: stride,
    usage: DynamicDrawUsage
  }), colors && React102.createElement("bufferAttribute", {
    attach: "attributes-color",
    count: colors.length / stride,
    array: colors,
    itemSize: 3,
    usage: DynamicDrawUsage
  }), sizes && React102.createElement("bufferAttribute", {
    attach: "attributes-size",
    count: sizes.length / stride,
    array: sizes,
    itemSize: 1,
    usage: DynamicDrawUsage
  })), children);
});
var Points2 = React102.forwardRef((props, forwardedRef) => {
  if (props.positions instanceof Float32Array) {
    return React102.createElement(PointsBuffer, _extends({}, props, {
      ref: forwardedRef
    }));
  } else
    return React102.createElement(PointsInstances, _extends({}, props, {
      ref: forwardedRef
    }));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Instances.js
var React103 = __toESM(require_react());
var _instanceLocalMatrix = new Matrix4();
var _instanceWorldMatrix = new Matrix4();
var _instanceIntersects = [];
var _mesh = new Mesh();
var PositionMesh = class extends Group {
  constructor() {
    super();
    this.color = new Color("white");
    this.instance = {
      current: void 0
    };
    this.instanceKey = {
      current: void 0
    };
  }
  // This will allow the virtual instance have bounds
  get geometry() {
    var _this$instance$curren;
    return (_this$instance$curren = this.instance.current) == null ? void 0 : _this$instance$curren.geometry;
  }
  // And this will allow the virtual instance to receive events
  raycast(raycaster, intersects) {
    const parent = this.instance.current;
    if (!parent)
      return;
    if (!parent.geometry || !parent.material)
      return;
    _mesh.geometry = parent.geometry;
    const matrixWorld = parent.matrixWorld;
    const instanceId = parent.userData.instances.indexOf(this.instanceKey);
    if (instanceId === -1 || instanceId > parent.count)
      return;
    parent.getMatrixAt(instanceId, _instanceLocalMatrix);
    _instanceWorldMatrix.multiplyMatrices(matrixWorld, _instanceLocalMatrix);
    _mesh.matrixWorld = _instanceWorldMatrix;
    if (parent.material instanceof Material)
      _mesh.material.side = parent.material.side;
    else
      _mesh.material.side = parent.material[0].side;
    _mesh.raycast(raycaster, _instanceIntersects);
    for (let i3 = 0, l2 = _instanceIntersects.length; i3 < l2; i3++) {
      const intersect = _instanceIntersects[i3];
      intersect.instanceId = instanceId;
      intersect.object = this;
      intersects.push(intersect);
    }
    _instanceIntersects.length = 0;
  }
};
var globalContext2 = React103.createContext(null);
var parentMatrix2 = new Matrix4();
var instanceMatrix = new Matrix4();
var tempMatrix2 = new Matrix4();
var translation = new Vector3();
var rotation = new Quaternion();
var scale = new Vector3();
var Instance = React103.forwardRef(({
  context: context10,
  children,
  ...props
}, ref) => {
  React103.useMemo(() => extend({
    PositionMesh
  }), []);
  const group = React103.useRef();
  const {
    subscribe,
    getParent
  } = React103.useContext(context10 || globalContext2);
  React103.useLayoutEffect(() => subscribe(group), []);
  return React103.createElement("positionMesh", _extends({
    instance: getParent(),
    instanceKey: group,
    ref: react_merge_refs_esm_default([ref, group])
  }, props), children);
});
var Instances = React103.forwardRef(({
  children,
  range,
  limit = 1e3,
  frames = Infinity,
  ...props
}, ref) => {
  const [{
    context: context10,
    instance
  }] = React103.useState(() => {
    const context11 = React103.createContext(null);
    return {
      context: context11,
      instance: React103.forwardRef((props2, ref2) => React103.createElement(Instance, _extends({
        context: context11
      }, props2, {
        ref: ref2
      })))
    };
  });
  const parentRef = React103.useRef(null);
  const [instances, setInstances] = React103.useState([]);
  const [[matrices, colors]] = React103.useState(() => {
    const mArray = new Float32Array(limit * 16);
    for (let i3 = 0; i3 < limit; i3++)
      tempMatrix2.identity().toArray(mArray, i3 * 16);
    return [mArray, new Float32Array([...new Array(limit * 3)].map(() => 1))];
  });
  React103.useEffect(() => {
    parentRef.current.instanceMatrix.needsUpdate = true;
  });
  let count = 0;
  let updateRange = 0;
  useFrame(() => {
    if (frames === Infinity || count < frames) {
      parentRef.current.updateMatrix();
      parentRef.current.updateMatrixWorld();
      parentMatrix2.copy(parentRef.current.matrixWorld).invert();
      updateRange = Math.min(limit, range !== void 0 ? range : limit, instances.length);
      parentRef.current.count = updateRange;
      parentRef.current.instanceMatrix.updateRange.count = updateRange * 16;
      parentRef.current.instanceColor.updateRange.count = updateRange * 3;
      for (let i3 = 0; i3 < instances.length; i3++) {
        const instance2 = instances[i3].current;
        instance2.matrixWorld.decompose(translation, rotation, scale);
        instanceMatrix.compose(translation, rotation, scale).premultiply(parentMatrix2);
        instanceMatrix.toArray(matrices, i3 * 16);
        parentRef.current.instanceMatrix.needsUpdate = true;
        instance2.color.toArray(colors, i3 * 3);
        parentRef.current.instanceColor.needsUpdate = true;
      }
      count++;
    }
  });
  const api = React103.useMemo(() => ({
    getParent: () => parentRef,
    subscribe: (ref2) => {
      setInstances((instances2) => [...instances2, ref2]);
      return () => setInstances((instances2) => instances2.filter((item) => item.current !== ref2.current));
    }
  }), []);
  return React103.createElement("instancedMesh", _extends({
    userData: {
      instances
    },
    matrixAutoUpdate: false,
    ref: react_merge_refs_esm_default([ref, parentRef]),
    args: [null, null, 0],
    raycast: () => null
  }, props), React103.createElement("instancedBufferAttribute", {
    attach: "instanceMatrix",
    count: matrices.length / 16,
    array: matrices,
    itemSize: 16,
    usage: DynamicDrawUsage
  }), React103.createElement("instancedBufferAttribute", {
    attach: "instanceColor",
    count: colors.length / 3,
    array: colors,
    itemSize: 3,
    usage: DynamicDrawUsage
  }), typeof children === "function" ? React103.createElement(context10.Provider, {
    value: api
  }, children(instance)) : React103.createElement(globalContext2.Provider, {
    value: api
  }, children));
});
var Merged = React103.forwardRef(function Merged2({
  meshes,
  children,
  ...props
}, ref) {
  const isArray2 = Array.isArray(meshes);
  if (!isArray2) {
    for (const key of Object.keys(meshes))
      if (!meshes[key].isMesh)
        delete meshes[key];
  }
  return React103.createElement("group", {
    ref
  }, React103.createElement(Composer, {
    components: (isArray2 ? meshes : Object.values(meshes)).map(({
      geometry,
      material
    }) => React103.createElement(Instances, _extends({
      key: geometry.uuid,
      geometry,
      material
    }, props)))
  }, (args) => isArray2 ? children(...args) : children(Object.keys(meshes).filter((key) => meshes[key].isMesh).reduce((acc, key, i3) => ({
    ...acc,
    [key]: args[i3]
  }), {}))));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Segments.js
var React104 = __toESM(require_react());
var context7 = React104.createContext(null);
var Segments = React104.forwardRef((props, forwardedRef) => {
  React104.useMemo(() => extend({
    SegmentObject
  }), []);
  const {
    limit = 1e3,
    lineWidth = 1,
    children,
    ...rest
  } = props;
  const [segments, setSegments] = React104.useState([]);
  const [line] = React104.useState(() => new Line2());
  const [material] = React104.useState(() => new LineMaterial());
  const [geometry] = React104.useState(() => new LineSegmentsGeometry());
  const [resolution] = React104.useState(() => new Vector2(512, 512));
  const [positions] = React104.useState(() => Array(limit * 6).fill(0));
  const [colors] = React104.useState(() => Array(limit * 6).fill(0));
  const api = React104.useMemo(() => ({
    subscribe: (ref) => {
      setSegments((segments2) => [...segments2, ref]);
      return () => setSegments((segments2) => segments2.filter((item) => item.current !== ref.current));
    }
  }), []);
  useFrame(() => {
    for (let i3 = 0; i3 < limit; i3++) {
      var _segments$i;
      const segment = (_segments$i = segments[i3]) == null ? void 0 : _segments$i.current;
      if (segment) {
        positions[i3 * 6 + 0] = segment.start.x;
        positions[i3 * 6 + 1] = segment.start.y;
        positions[i3 * 6 + 2] = segment.start.z;
        positions[i3 * 6 + 3] = segment.end.x;
        positions[i3 * 6 + 4] = segment.end.y;
        positions[i3 * 6 + 5] = segment.end.z;
        colors[i3 * 6 + 0] = segment.color.r;
        colors[i3 * 6 + 1] = segment.color.g;
        colors[i3 * 6 + 2] = segment.color.b;
        colors[i3 * 6 + 3] = segment.color.r;
        colors[i3 * 6 + 4] = segment.color.g;
        colors[i3 * 6 + 5] = segment.color.b;
      }
    }
    geometry.setColors(colors);
    geometry.setPositions(positions);
    line.computeLineDistances();
  });
  return React104.createElement("primitive", {
    object: line,
    ref: forwardedRef
  }, React104.createElement("primitive", {
    object: geometry,
    attach: "geometry"
  }), React104.createElement("primitive", _extends({
    object: material,
    attach: "material",
    vertexColors: true,
    resolution,
    linewidth: lineWidth
  }, rest)), React104.createElement(context7.Provider, {
    value: api
  }, children));
});
var SegmentObject = class {
  constructor() {
    this.color = new Color("white");
    this.start = new Vector3(0, 0, 0);
    this.end = new Vector3(0, 0, 0);
  }
};
var normPos = (pos) => pos instanceof Vector3 ? pos : new Vector3(...typeof pos === "number" ? [pos, pos, pos] : pos);
var Segment = React104.forwardRef(({
  color,
  start,
  end
}, forwardedRef) => {
  const api = React104.useContext(context7);
  if (!api)
    throw "Segment must used inside Segments component.";
  const ref = React104.useRef(null);
  React104.useLayoutEffect(() => api.subscribe(ref), []);
  return React104.createElement("segmentObject", {
    ref: react_merge_refs_esm_default([ref, forwardedRef]),
    color,
    start: normPos(start),
    end: normPos(end)
  });
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Detailed.js
var React105 = __toESM(require_react());
var Detailed = React105.forwardRef(({
  children,
  hysteresis = 0,
  distances,
  ...props
}, ref) => {
  const lodRef = React105.useRef(null);
  React105.useLayoutEffect(() => {
    const {
      current: lod
    } = lodRef;
    lod.levels.length = 0;
    lod.children.forEach((object, index) => lod.levels.push({
      object,
      hysteresis,
      distance: distances[index]
    }));
  });
  useFrame((state) => {
    var _lodRef$current;
    return (_lodRef$current = lodRef.current) == null ? void 0 : _lodRef$current.update(state.camera);
  });
  return React105.createElement("lOD", _extends({
    ref: react_merge_refs_esm_default([lodRef, ref])
  }, props), children);
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Preload.js
var React106 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/BakeShadows.js
var import_react22 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/meshBounds.js
var _inverseMatrix2 = new Matrix4();
var _ray2 = new Ray();
var _sphere3 = new Sphere();
var _vA2 = new Vector3();

// node_modules/r3f-perf/node_modules/@react-three/drei/core/AdaptiveDpr.js
var React107 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/AdaptiveEvents.js
var React108 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/core/PerformanceMonitor.js
var React109 = __toESM(require_react());
var import_react23 = __toESM(require_react());
var context8 = (0, import_react23.createContext)(null);

// node_modules/r3f-perf/node_modules/@react-three/drei/core/RenderTexture.js
var React110 = __toESM(require_react());
var RenderTexture = React110.forwardRef(({
  children,
  compute: compute2,
  width,
  height,
  samples = 8,
  renderPriority = 0,
  eventPriority = 0,
  frames = Infinity,
  stencilBuffer = false,
  depthBuffer = true,
  generateMipmaps = false,
  ...props
}, forwardRef72) => {
  const {
    size,
    viewport
  } = useThree();
  const fbo = useFBO((width || size.width) * viewport.dpr, (height || size.height) * viewport.dpr, {
    samples,
    stencilBuffer,
    depthBuffer,
    generateMipmaps
  });
  const [vScene] = React110.useState(() => new Scene());
  const uvCompute = React110.useCallback((event, state, previous) => {
    var _fbo$texture, _previous$previousRoo;
    let parent = (_fbo$texture = fbo.texture) == null ? void 0 : _fbo$texture.__r3f.parent;
    while (parent && !(parent instanceof Object3D)) {
      parent = parent.__r3f.parent;
    }
    if (!parent)
      return false;
    if (!previous.raycaster.camera)
      previous.events.compute(event, previous, (_previous$previousRoo = previous.previousRoot) == null ? void 0 : _previous$previousRoo.getState());
    const [intersection3] = previous.raycaster.intersectObject(parent);
    if (!intersection3)
      return false;
    const uv = intersection3.uv;
    if (!uv)
      return false;
    state.raycaster.setFromCamera(state.pointer.set(uv.x * 2 - 1, uv.y * 2 - 1), state.camera);
  }, []);
  React110.useImperativeHandle(forwardRef72, () => fbo.texture, [fbo]);
  return React110.createElement(React110.Fragment, null, createPortal(React110.createElement(Container, {
    renderPriority,
    frames,
    fbo
  }, children, React110.createElement("group", {
    onPointerOver: () => null
  })), vScene, {
    events: {
      compute: compute2 || uvCompute,
      priority: eventPriority
    }
  }), React110.createElement("primitive", _extends({
    object: fbo.texture
  }, props)));
});
function Container({
  frames,
  renderPriority,
  children,
  fbo
}) {
  let count = 0;
  let oldAutoClear;
  useFrame((state) => {
    if (frames === Infinity || count < frames) {
      oldAutoClear = state.gl.autoClear;
      state.gl.autoClear = true;
      state.gl.setRenderTarget(fbo);
      state.gl.render(state.scene, state.camera);
      state.gl.setRenderTarget(null);
      state.gl.autoClear = oldAutoClear;
      count++;
    }
  }, renderPriority);
  return React110.createElement(React110.Fragment, null, children);
}

// node_modules/r3f-perf/node_modules/@react-three/drei/core/Mask.js
var React111 = __toESM(require_react());
var Mask = React111.forwardRef(({
  id = 1,
  colorWrite = false,
  depthWrite = false,
  ...props
}, fref) => {
  const ref = React111.useRef(null);
  const spread = React111.useMemo(() => ({
    colorWrite,
    depthWrite,
    stencilWrite: true,
    stencilRef: id,
    stencilFunc: AlwaysStencilFunc,
    stencilFail: ReplaceStencilOp,
    stencilZFail: ReplaceStencilOp,
    stencilZPass: ReplaceStencilOp
  }), [id, colorWrite, depthWrite]);
  React111.useLayoutEffect(() => {
    Object.assign(ref.current.material, spread);
  });
  React111.useImperativeHandle(fref, () => ref.current, []);
  return React111.createElement("mesh", _extends({
    ref,
    renderOrder: -id
  }, props));
});

// node_modules/r3f-perf/node_modules/@react-three/drei/core/MeshPortalMaterial.js
var React112 = __toESM(require_react());
var PortalMaterialImpl = shaderMaterial({
  blur: 0,
  map: null,
  sdf: null,
  blend: 0,
  size: 0,
  resolution: new Vector2()
}, `varying vec2 vUv;
   void main() {
     gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
     vUv = uv;
   }`, `uniform sampler2D sdf;
   uniform sampler2D map;
   uniform float blur;
   uniform float size;
   uniform float time;
   uniform vec2 resolution;
   varying vec2 vUv;
   #include <packing>
   void main() {
     vec2 uv = gl_FragCoord.xy / resolution.xy;
     vec4 t = texture2D(map, uv);
     float k = blur;
     float d = texture2D(sdf, vUv).r/size;
     float alpha = 1.0 - smoothstep(0.0, 1.0, clamp(d/k + 1.0, 0.0, 1.0));
     gl_FragColor = vec4(t.rgb, blur == 0.0 ? t.a : t.a * alpha);
     #include <tonemapping_fragment>
     #include <encodings_fragment>
   }`);
var MeshPortalMaterial = React112.forwardRef(({
  children,
  events = void 0,
  blur = 0,
  eventPriority = 0,
  renderPriority = 0,
  worldUnits = false,
  resolution = 512,
  ...props
}, fref) => {
  extend({
    PortalMaterialImpl
  });
  const ref = React112.useRef(null);
  const {
    scene,
    gl,
    size,
    viewport,
    setEvents
  } = useThree();
  const maskRenderTarget = useFBO(resolution, resolution);
  const [priority, setPriority] = React112.useState(0);
  useFrame(() => {
    const p2 = ref.current.blend > 0 ? Math.max(1, renderPriority) : 0;
    if (priority !== p2)
      setPriority(p2);
  });
  React112.useEffect(() => {
    if (events !== void 0)
      setEvents({
        enabled: !events
      });
  }, [events]);
  const [visible, setVisible] = React112.useState(true);
  const parent = useIntersect(setVisible);
  React112.useLayoutEffect(() => {
    var _ref$current;
    parent.current = (_ref$current = ref.current) == null ? void 0 : _ref$current.__r3f.parent;
  }, []);
  React112.useLayoutEffect(() => {
    if (!parent.current)
      return;
    if (blur && ref.current.sdf === null) {
      const tempMesh = new Mesh(parent.current.geometry, new MeshBasicMaterial());
      const boundingBox4 = new Box3().setFromBufferAttribute(tempMesh.geometry.attributes.position);
      const orthoCam = new OrthographicCamera(boundingBox4.min.x * (1 + 2 / resolution), boundingBox4.max.x * (1 + 2 / resolution), boundingBox4.max.y * (1 + 2 / resolution), boundingBox4.min.y * (1 + 2 / resolution), 0.1, 1e3);
      orthoCam.position.set(0, 0, 1);
      orthoCam.lookAt(0, 0, 0);
      gl.setRenderTarget(maskRenderTarget);
      gl.render(tempMesh, orthoCam);
      const sg = makeSDFGenerator(resolution, resolution, gl);
      const sdf = sg(maskRenderTarget.texture);
      const readSdf = new Float32Array(resolution * resolution);
      gl.readRenderTargetPixels(sdf, 0, 0, resolution, resolution, readSdf);
      let min = Infinity;
      for (let i3 = 0; i3 < readSdf.length; i3++) {
        if (readSdf[i3] < min)
          min = readSdf[i3];
      }
      min = -min;
      ref.current.size = min;
      ref.current.sdf = sdf.texture;
      gl.setRenderTarget(null);
    }
  }, [resolution, blur]);
  React112.useImperativeHandle(fref, () => ref.current);
  const compute2 = React112.useCallback((event, state, previous) => {
    var _ref$current2;
    if (!parent.current)
      return false;
    state.pointer.set(event.offsetX / state.size.width * 2 - 1, -(event.offsetY / state.size.height) * 2 + 1);
    state.raycaster.setFromCamera(state.pointer, state.camera);
    if (((_ref$current2 = ref.current) == null ? void 0 : _ref$current2.blend) === 0) {
      const [intersection3] = state.raycaster.intersectObject(parent.current);
      if (!intersection3) {
        state.raycaster.camera = void 0;
        return false;
      }
    }
  }, []);
  return React112.createElement("portalMaterialImpl", _extends({
    ref,
    blur,
    blend: 0,
    resolution: [size.width * viewport.dpr, size.height * viewport.dpr],
    toneMapped: false,
    attach: "material"
  }, props), React112.createElement(RenderTexture, {
    attach: "map",
    frames: visible ? Infinity : 0,
    eventPriority,
    renderPriority,
    compute: compute2
  }, children, React112.createElement(ManagePortalScene, {
    events,
    rootScene: scene,
    priority,
    material: ref,
    worldUnits
  })));
});
function ManagePortalScene({
  events = void 0,
  rootScene,
  material,
  priority,
  worldUnits
}) {
  const scene = useThree((state) => state.scene);
  const setEvents = useThree((state) => state.setEvents);
  const buffer1 = useFBO();
  const buffer2 = useFBO();
  React112.useLayoutEffect(() => {
    scene.matrixAutoUpdate = false;
  }, []);
  React112.useEffect(() => {
    if (events !== void 0)
      setEvents({
        enabled: events
      });
  }, [events]);
  const [quad, blend] = React112.useMemo(() => {
    const blend2 = {
      value: 0
    };
    const quad2 = new FullScreenQuad(new ShaderMaterial({
      uniforms: {
        a: {
          value: buffer1.texture
        },
        b: {
          value: buffer2.texture
        },
        blend: blend2
      },
      vertexShader: (
        /*glsl*/
        `
          varying vec2 vUv;
          void main() {
            vUv = uv;
            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
          }`
      ),
      fragmentShader: (
        /*glsl*/
        `
          uniform sampler2D a;
          uniform sampler2D b;
          uniform float blend;
          varying vec2 vUv;
          #include <packing>
          void main() {
            vec4 ta = texture2D(a, vUv);
            vec4 tb = texture2D(b, vUv);
            gl_FragColor = mix(tb, ta, blend);
            #include <encodings_fragment>
          }`
      )
    }));
    return [quad2, blend2];
  }, []);
  useFrame((state) => {
    var _material$current;
    let parent = material == null ? void 0 : (_material$current = material.current) == null ? void 0 : _material$current.__r3f.parent;
    if (parent) {
      if (!worldUnits) {
        var _material$current2;
        if (priority && ((_material$current2 = material.current) == null ? void 0 : _material$current2.blend) === 1)
          parent.updateWorldMatrix(true, false);
        scene.matrixWorld.copy(parent.matrixWorld);
      } else
        scene.matrixWorld.identity();
      if (priority) {
        var _material$current3, _material$current4, _material$current5;
        if (((_material$current3 = material.current) == null ? void 0 : _material$current3.blend) > 0 && ((_material$current4 = material.current) == null ? void 0 : _material$current4.blend) < 1) {
          blend.value = material.current.blend;
          state.gl.setRenderTarget(buffer1);
          state.gl.render(scene, state.camera);
          state.gl.setRenderTarget(buffer2);
          state.gl.render(rootScene, state.camera);
          state.gl.setRenderTarget(null);
          quad.render(state.gl);
        } else if (((_material$current5 = material.current) == null ? void 0 : _material$current5.blend) === 1) {
          state.gl.render(scene, state.camera);
        }
      }
    }
  }, priority);
  return React112.createElement(React112.Fragment, null);
}
var makeSDFGenerator = (clientWidth, clientHeight, renderer) => {
  let finalTarget = new WebGLRenderTarget(clientWidth, clientHeight, {
    minFilter: LinearMipmapLinearFilter,
    magFilter: LinearFilter,
    type: FloatType,
    format: RedFormat,
    generateMipmaps: true
  });
  let outsideRenderTarget = new WebGLRenderTarget(clientWidth, clientHeight, {
    minFilter: NearestFilter,
    magFilter: NearestFilter
  });
  let insideRenderTarget = new WebGLRenderTarget(clientWidth, clientHeight, {
    minFilter: NearestFilter,
    magFilter: NearestFilter
  });
  let outsideRenderTarget2 = new WebGLRenderTarget(clientWidth, clientHeight, {
    minFilter: NearestFilter,
    magFilter: NearestFilter
  });
  let insideRenderTarget2 = new WebGLRenderTarget(clientWidth, clientHeight, {
    minFilter: NearestFilter,
    magFilter: NearestFilter
  });
  let outsideRenderTargetFinal = new WebGLRenderTarget(clientWidth, clientHeight, {
    minFilter: NearestFilter,
    magFilter: NearestFilter,
    type: FloatType,
    format: RedFormat
  });
  let insideRenderTargetFinal = new WebGLRenderTarget(clientWidth, clientHeight, {
    minFilter: NearestFilter,
    magFilter: NearestFilter,
    type: FloatType,
    format: RedFormat
  });
  const uvRender = new FullScreenQuad(new ShaderMaterial({
    uniforms: {
      tex: {
        value: null
      }
    },
    vertexShader: (
      /*glsl*/
      `
        varying vec2 vUv;
        void main() {
          vUv = uv;
          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
        }`
    ),
    fragmentShader: (
      /*glsl*/
      `
        uniform sampler2D tex;
        varying vec2 vUv;
        #include <packing>
        void main() {
          gl_FragColor = pack2HalfToRGBA(vUv * (round(texture2D(tex, vUv).x)));
        }`
    )
  }));
  const uvRenderInside = new FullScreenQuad(new ShaderMaterial({
    uniforms: {
      tex: {
        value: null
      }
    },
    vertexShader: (
      /*glsl*/
      `
        varying vec2 vUv;
        void main() {
          vUv = uv;
          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
        }`
    ),
    fragmentShader: (
      /*glsl*/
      `
        uniform sampler2D tex;
        varying vec2 vUv;
        #include <packing>
        void main() {
          gl_FragColor = pack2HalfToRGBA(vUv * (1.0 - round(texture2D(tex, vUv).x)));
        }`
    )
  }));
  const jumpFloodRender = new FullScreenQuad(new ShaderMaterial({
    uniforms: {
      tex: {
        value: null
      },
      offset: {
        value: 0
      },
      level: {
        value: 0
      },
      maxSteps: {
        value: 0
      }
    },
    vertexShader: (
      /*glsl*/
      `
        varying vec2 vUv;
        void main() {
          vUv = uv;
          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
        }`
    ),
    fragmentShader: (
      /*glsl*/
      `
        varying vec2 vUv;
        uniform sampler2D tex;
        uniform float offset;
        uniform float level;
        uniform float maxSteps;
        #include <packing>
        void main() {
          float closestDist = 9999999.9;
          vec2 closestPos = vec2(0.0);
          for (float x = -1.0; x <= 1.0; x += 1.0) {
            for (float y = -1.0; y <= 1.0; y += 1.0) {
              vec2 voffset = vUv;
              voffset += vec2(x, y) * vec2(${1 / clientWidth}, ${1 / clientHeight}) * offset;
              vec2 pos = unpackRGBATo2Half(texture2D(tex, voffset));
              float dist = distance(pos.xy, vUv);
              if(pos.x != 0.0 && pos.y != 0.0 && dist < closestDist) {
                closestDist = dist;
                closestPos = pos;
              }
            }
          }
          gl_FragColor = pack2HalfToRGBA(closestPos);
        }`
    )
  }));
  const distanceFieldRender = new FullScreenQuad(new ShaderMaterial({
    uniforms: {
      tex: {
        value: null
      },
      size: {
        value: new Vector2(clientWidth, clientHeight)
      }
    },
    vertexShader: (
      /*glsl*/
      `
        varying vec2 vUv;
        void main() {
          vUv = uv;
          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
        }`
    ),
    fragmentShader: (
      /*glsl*/
      `
        varying vec2 vUv;
        uniform sampler2D tex;
        uniform vec2 size;
        #include <packing>
        void main() {
          gl_FragColor = vec4(distance(size * unpackRGBATo2Half(texture2D(tex, vUv)), size * vUv), 0.0, 0.0, 0.0);
        }`
    )
  }));
  const compositeRender = new FullScreenQuad(new ShaderMaterial({
    uniforms: {
      inside: {
        value: insideRenderTargetFinal.texture
      },
      outside: {
        value: outsideRenderTargetFinal.texture
      },
      tex: {
        value: null
      }
    },
    vertexShader: (
      /*glsl*/
      `
        varying vec2 vUv;
        void main() {
          vUv = uv;
          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
        }`
    ),
    fragmentShader: (
      /*glsl*/
      `
        varying vec2 vUv;
        uniform sampler2D inside;
        uniform sampler2D outside;
        uniform sampler2D tex;
        #include <packing>
        void main() {
          float i = texture2D(inside, vUv).x;
          float o =texture2D(outside, vUv).x;
          if (texture2D(tex, vUv).x == 0.0) {
            gl_FragColor = vec4(o, 0.0, 0.0, 0.0);
          } else {
            gl_FragColor = vec4(-i, 0.0, 0.0, 0.0);
          }
        }`
    )
  }));
  return (image2) => {
    let ft = finalTarget;
    image2.minFilter = NearestFilter;
    image2.magFilter = NearestFilter;
    uvRender.material.uniforms.tex.value = image2;
    renderer.setRenderTarget(outsideRenderTarget);
    uvRender.render(renderer);
    const passes = Math.ceil(Math.log(Math.max(clientWidth, clientHeight)) / Math.log(2));
    let lastTarget = outsideRenderTarget;
    let target2 = null;
    for (let i3 = 0; i3 < passes; i3++) {
      const offset = Math.pow(2, passes - i3 - 1);
      target2 = lastTarget === outsideRenderTarget ? outsideRenderTarget2 : outsideRenderTarget;
      jumpFloodRender.material.uniforms.level.value = i3;
      jumpFloodRender.material.uniforms.maxSteps.value = passes;
      jumpFloodRender.material.uniforms.offset.value = offset;
      jumpFloodRender.material.uniforms.tex.value = lastTarget.texture;
      renderer.setRenderTarget(target2);
      jumpFloodRender.render(renderer);
      lastTarget = target2;
    }
    renderer.setRenderTarget(outsideRenderTargetFinal);
    distanceFieldRender.material.uniforms.tex.value = target2.texture;
    distanceFieldRender.render(renderer);
    uvRenderInside.material.uniforms.tex.value = image2;
    renderer.setRenderTarget(insideRenderTarget);
    uvRenderInside.render(renderer);
    lastTarget = insideRenderTarget;
    for (let i3 = 0; i3 < passes; i3++) {
      const offset = Math.pow(2, passes - i3 - 1);
      target2 = lastTarget === insideRenderTarget ? insideRenderTarget2 : insideRenderTarget;
      jumpFloodRender.material.uniforms.level.value = i3;
      jumpFloodRender.material.uniforms.maxSteps.value = passes;
      jumpFloodRender.material.uniforms.offset.value = offset;
      jumpFloodRender.material.uniforms.tex.value = lastTarget.texture;
      renderer.setRenderTarget(target2);
      jumpFloodRender.render(renderer);
      lastTarget = target2;
    }
    renderer.setRenderTarget(insideRenderTargetFinal);
    distanceFieldRender.material.uniforms.tex.value = target2.texture;
    distanceFieldRender.render(renderer);
    renderer.setRenderTarget(ft);
    compositeRender.material.uniforms.tex.value = image2;
    compositeRender.render(renderer);
    renderer.setRenderTarget(null);
    return ft;
  };
};

// node_modules/r3f-perf/node_modules/@react-three/drei/web/View.js
var React113 = __toESM(require_react());
var col = new Color();

// node_modules/r3f-perf/node_modules/@react-three/drei/web/pivotControls/index.js
var React118 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/web/pivotControls/AxisArrow.js
var React115 = __toESM(require_react());

// node_modules/r3f-perf/node_modules/@react-three/drei/web/pivotControls/context.js
var React114 = __toESM(require_react());
var context9 = React114.createContext(null);

// node_modules/r3f-perf/node_modules/@react-three/drei/web/pivotControls/AxisArrow.js
var vec1 = new Vector3();
var vec2 = new Vector3();
var calculateOffset = (clickPoint, normal2, rayStart, rayDir) => {
  const e1 = normal2.dot(normal2);
  const e2 = normal2.dot(clickPoint) - normal2.dot(rayStart);
  const e3 = normal2.dot(rayDir);
  if (e3 === 0) {
    return -e2 / e1;
  }
  vec1.copy(rayDir).multiplyScalar(e1 / e3).sub(normal2);
  vec2.copy(rayDir).multiplyScalar(e2 / e3).add(rayStart).sub(clickPoint);
  const offset = -vec1.dot(vec2) / vec1.dot(vec1);
  return offset;
};
var upV = new Vector3(0, 1, 0);
var offsetMatrix = new Matrix4();
var AxisArrow = ({
  direction,
  axis
}) => {
  const {
    translation: translation2,
    translationLimits,
    annotations,
    annotationsClass,
    depthTest,
    scale: scale2,
    lineWidth,
    fixed,
    axisColors,
    hoveredColor,
    opacity,
    onDragStart,
    onDrag,
    onDragEnd,
    userData
  } = React115.useContext(context9);
  const camControls = useThree((state) => state.controls);
  const divRef = React115.useRef(null);
  const objRef = React115.useRef(null);
  const clickInfo = React115.useRef(null);
  const offset0 = React115.useRef(0);
  const [isHovered, setIsHovered] = React115.useState(false);
  const onPointerDown = React115.useCallback((e2) => {
    if (annotations) {
      divRef.current.innerText = `${translation2.current[axis].toFixed(2)}`;
      divRef.current.style.display = "block";
    }
    e2.stopPropagation();
    const rotation2 = new Matrix4().extractRotation(objRef.current.matrixWorld);
    const clickPoint = e2.point.clone();
    const origin = new Vector3().setFromMatrixPosition(objRef.current.matrixWorld);
    const dir = direction.clone().applyMatrix4(rotation2).normalize();
    clickInfo.current = {
      clickPoint,
      dir
    };
    offset0.current = translation2.current[axis];
    onDragStart({
      component: "Arrow",
      axis,
      origin,
      directions: [dir]
    });
    camControls && (camControls.enabled = false);
    e2.target.setPointerCapture(e2.pointerId);
  }, [annotations, direction, camControls, onDragStart, translation2, axis]);
  const onPointerMove = React115.useCallback((e2) => {
    e2.stopPropagation();
    if (!isHovered)
      setIsHovered(true);
    if (clickInfo.current) {
      const {
        clickPoint,
        dir
      } = clickInfo.current;
      const [min, max] = (translationLimits == null ? void 0 : translationLimits[axis]) || [void 0, void 0];
      let offset = calculateOffset(clickPoint, dir, e2.ray.origin, e2.ray.direction);
      if (min !== void 0) {
        offset = Math.max(offset, min - offset0.current);
      }
      if (max !== void 0) {
        offset = Math.min(offset, max - offset0.current);
      }
      translation2.current[axis] = offset0.current + offset;
      if (annotations) {
        divRef.current.innerText = `${translation2.current[axis].toFixed(2)}`;
      }
      offsetMatrix.makeTranslation(dir.x * offset, dir.y * offset, dir.z * offset);
      onDrag(offsetMatrix);
    }
  }, [annotations, onDrag, isHovered, translation2, translationLimits, axis]);
  const onPointerUp = React115.useCallback((e2) => {
    if (annotations) {
      divRef.current.style.display = "none";
    }
    e2.stopPropagation();
    clickInfo.current = null;
    onDragEnd();
    camControls && (camControls.enabled = true);
    e2.target.releasePointerCapture(e2.pointerId);
  }, [annotations, camControls, onDragEnd]);
  const onPointerOut = React115.useCallback((e2) => {
    e2.stopPropagation();
    setIsHovered(false);
  }, []);
  const {
    cylinderLength,
    coneWidth,
    coneLength,
    matrixL
  } = React115.useMemo(() => {
    const coneWidth2 = fixed ? lineWidth / scale2 * 1.6 : scale2 / 20;
    const coneLength2 = fixed ? 0.2 : scale2 / 5;
    const cylinderLength2 = fixed ? 1 - coneLength2 : scale2 - coneLength2;
    const quaternion = new Quaternion().setFromUnitVectors(upV, direction.clone().normalize());
    const matrixL2 = new Matrix4().makeRotationFromQuaternion(quaternion);
    return {
      cylinderLength: cylinderLength2,
      coneWidth: coneWidth2,
      coneLength: coneLength2,
      matrixL: matrixL2
    };
  }, [direction, scale2, lineWidth, fixed]);
  const color_ = isHovered ? hoveredColor : axisColors[axis];
  return React115.createElement("group", {
    ref: objRef
  }, React115.createElement("group", {
    matrix: matrixL,
    matrixAutoUpdate: false,
    onPointerDown,
    onPointerMove,
    onPointerUp,
    onPointerOut
  }, annotations && React115.createElement(Html, {
    position: [0, -coneLength, 0]
  }, React115.createElement("div", {
    style: {
      display: "none",
      background: "#151520",
      color: "white",
      padding: "6px 8px",
      borderRadius: 7,
      whiteSpace: "nowrap"
    },
    className: annotationsClass,
    ref: divRef
  })), React115.createElement("mesh", {
    visible: false,
    position: [0, (cylinderLength + coneLength) / 2, 0],
    userData
  }, React115.createElement("cylinderGeometry", {
    args: [coneWidth * 1.4, coneWidth * 1.4, cylinderLength + coneLength, 8, 1]
  })), React115.createElement(Line, {
    transparent: true,
    raycast: () => null,
    depthTest,
    points: [0, 0, 0, 0, cylinderLength, 0],
    lineWidth,
    color: color_,
    opacity,
    polygonOffset: true,
    renderOrder: 1,
    polygonOffsetFactor: -10,
    fog: false
  }), React115.createElement("mesh", {
    raycast: () => null,
    position: [0, cylinderLength + coneLength / 2, 0],
    renderOrder: 500
  }, React115.createElement("coneGeometry", {
    args: [coneWidth, coneLength, 24, 1]
  }), React115.createElement("meshBasicMaterial", {
    transparent: true,
    depthTest,
    color: color_,
    opacity,
    polygonOffset: true,
    polygonOffsetFactor: -10,
    fog: false
  }))));
};

// node_modules/r3f-perf/node_modules/@react-three/drei/web/pivotControls/PlaneSlider.js
var React116 = __toESM(require_react());
var decomposeIntoBasis = (e1, e2, offset) => {
  const i1 = Math.abs(e1.x) >= Math.abs(e1.y) && Math.abs(e1.x) >= Math.abs(e1.z) ? 0 : Math.abs(e1.y) >= Math.abs(e1.x) && Math.abs(e1.y) >= Math.abs(e1.z) ? 1 : 2;
  const e2DegrowthOrder = [0, 1, 2].sort((a3, b3) => Math.abs(e2.getComponent(b3)) - Math.abs(e2.getComponent(a3)));
  const i22 = i1 === e2DegrowthOrder[0] ? e2DegrowthOrder[1] : e2DegrowthOrder[0];
  const a1 = e1.getComponent(i1);
  const a22 = e1.getComponent(i22);
  const b1 = e2.getComponent(i1);
  const b2 = e2.getComponent(i22);
  const c1 = offset.getComponent(i1);
  const c2 = offset.getComponent(i22);
  const y2 = (c2 - c1 * (a22 / a1)) / (b2 - b1 * (a22 / a1));
  const x2 = (c1 - y2 * b1) / a1;
  return [x2, y2];
};
var ray2 = new Ray();
var intersection = new Vector3();
var offsetMatrix2 = new Matrix4();
var PlaneSlider = ({
  dir1,
  dir2,
  axis
}) => {
  const {
    translation: translation2,
    translationLimits,
    annotations,
    annotationsClass,
    depthTest,
    scale: scale2,
    lineWidth,
    fixed,
    axisColors,
    hoveredColor,
    opacity,
    onDragStart,
    onDrag,
    onDragEnd,
    userData
  } = React116.useContext(context9);
  const camControls = useThree((state) => state.controls);
  const divRef = React116.useRef(null);
  const objRef = React116.useRef(null);
  const clickInfo = React116.useRef(null);
  const offsetX0 = React116.useRef(0);
  const offsetY0 = React116.useRef(0);
  const [isHovered, setIsHovered] = React116.useState(false);
  const onPointerDown = React116.useCallback((e2) => {
    if (annotations) {
      divRef.current.innerText = `${translation2.current[(axis + 1) % 3].toFixed(2)}, ${translation2.current[(axis + 2) % 3].toFixed(2)}`;
      divRef.current.style.display = "block";
    }
    e2.stopPropagation();
    const clickPoint = e2.point.clone();
    const origin = new Vector3().setFromMatrixPosition(objRef.current.matrixWorld);
    const e1 = new Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 0).normalize();
    const e22 = new Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 1).normalize();
    const normal2 = new Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 2).normalize();
    const plane = new Plane().setFromNormalAndCoplanarPoint(normal2, origin);
    clickInfo.current = {
      clickPoint,
      e1,
      e2: e22,
      plane
    };
    offsetX0.current = translation2.current[(axis + 1) % 3];
    offsetY0.current = translation2.current[(axis + 2) % 3];
    onDragStart({
      component: "Slider",
      axis,
      origin,
      directions: [e1, e22, normal2]
    });
    camControls && (camControls.enabled = false);
    e2.target.setPointerCapture(e2.pointerId);
  }, [annotations, camControls, onDragStart, axis]);
  const onPointerMove = React116.useCallback((e2) => {
    e2.stopPropagation();
    if (!isHovered)
      setIsHovered(true);
    if (clickInfo.current) {
      const {
        clickPoint,
        e1,
        e2: e22,
        plane
      } = clickInfo.current;
      const [minX, maxX] = (translationLimits == null ? void 0 : translationLimits[(axis + 1) % 3]) || [void 0, void 0];
      const [minY, maxY] = (translationLimits == null ? void 0 : translationLimits[(axis + 2) % 3]) || [void 0, void 0];
      ray2.copy(e2.ray);
      ray2.intersectPlane(plane, intersection);
      ray2.direction.negate();
      ray2.intersectPlane(plane, intersection);
      intersection.sub(clickPoint);
      let [offsetX, offsetY] = decomposeIntoBasis(e1, e22, intersection);
      if (minX !== void 0) {
        offsetX = Math.max(offsetX, minX - offsetX0.current);
      }
      if (maxX !== void 0) {
        offsetX = Math.min(offsetX, maxX - offsetX0.current);
      }
      if (minY !== void 0) {
        offsetY = Math.max(offsetY, minY - offsetY0.current);
      }
      if (maxY !== void 0) {
        offsetY = Math.min(offsetY, maxY - offsetY0.current);
      }
      translation2.current[(axis + 1) % 3] = offsetX0.current + offsetX;
      translation2.current[(axis + 2) % 3] = offsetY0.current + offsetY;
      if (annotations) {
        divRef.current.innerText = `${translation2.current[(axis + 1) % 3].toFixed(2)}, ${translation2.current[(axis + 2) % 3].toFixed(2)}`;
      }
      offsetMatrix2.makeTranslation(offsetX * e1.x + offsetY * e22.x, offsetX * e1.y + offsetY * e22.y, offsetX * e1.z + offsetY * e22.z);
      onDrag(offsetMatrix2);
    }
  }, [annotations, onDrag, isHovered, translation2, translationLimits, axis]);
  const onPointerUp = React116.useCallback((e2) => {
    if (annotations) {
      divRef.current.style.display = "none";
    }
    e2.stopPropagation();
    clickInfo.current = null;
    onDragEnd();
    camControls && (camControls.enabled = true);
    e2.target.releasePointerCapture(e2.pointerId);
  }, [annotations, camControls, onDragEnd]);
  const onPointerOut = React116.useCallback((e2) => {
    e2.stopPropagation();
    setIsHovered(false);
  }, []);
  const matrixL = React116.useMemo(() => {
    const dir1N = dir1.clone().normalize();
    const dir2N = dir2.clone().normalize();
    return new Matrix4().makeBasis(dir1N, dir2N, dir1N.clone().cross(dir2N));
  }, [dir1, dir2]);
  const pos1 = fixed ? 1 / 7 : scale2 / 7;
  const length = fixed ? 0.225 : scale2 * 0.225;
  const color = isHovered ? hoveredColor : axisColors[axis];
  const points = React116.useMemo(() => [new Vector3(0, 0, 0), new Vector3(0, length, 0), new Vector3(length, length, 0), new Vector3(length, 0, 0), new Vector3(0, 0, 0)], [length]);
  return React116.createElement("group", {
    ref: objRef,
    matrix: matrixL,
    matrixAutoUpdate: false
  }, annotations && React116.createElement(Html, {
    position: [0, 0, 0]
  }, React116.createElement("div", {
    style: {
      display: "none",
      background: "#151520",
      color: "white",
      padding: "6px 8px",
      borderRadius: 7,
      whiteSpace: "nowrap"
    },
    className: annotationsClass,
    ref: divRef
  })), React116.createElement("group", {
    position: [pos1 * 1.7, pos1 * 1.7, 0]
  }, React116.createElement("mesh", {
    visible: true,
    onPointerDown,
    onPointerMove,
    onPointerUp,
    onPointerOut,
    scale: length,
    userData
  }, React116.createElement("planeGeometry", null), React116.createElement("meshBasicMaterial", {
    transparent: true,
    depthTest,
    color,
    polygonOffset: true,
    polygonOffsetFactor: -10,
    side: DoubleSide,
    fog: false
  })), React116.createElement(Line, {
    position: [-length / 2, -length / 2, 0],
    transparent: true,
    depthTest,
    points,
    lineWidth,
    color,
    opacity,
    polygonOffset: true,
    polygonOffsetFactor: -10,
    userData,
    fog: false
  })));
};

// node_modules/r3f-perf/node_modules/@react-three/drei/web/pivotControls/AxisRotator.js
var React117 = __toESM(require_react());
var import_lodash4 = __toESM(require_lodash3());
var clickDir = new Vector3();
var intersectionDir = new Vector3();
var toDegrees = (radians) => radians * 180 / Math.PI;
var toRadians = (degrees) => degrees * Math.PI / 180;
var calculateAngle = (clickPoint, intersectionPoint, origin, e1, e2) => {
  clickDir.copy(clickPoint).sub(origin);
  intersectionDir.copy(intersectionPoint).sub(origin);
  const dote1e1 = e1.dot(e1);
  const dote2e2 = e2.dot(e2);
  const uClick = clickDir.dot(e1) / dote1e1;
  const vClick = clickDir.dot(e2) / dote2e2;
  const uIntersection = intersectionDir.dot(e1) / dote1e1;
  const vIntersection = intersectionDir.dot(e2) / dote2e2;
  const angleClick = Math.atan2(vClick, uClick);
  const angleIntersection = Math.atan2(vIntersection, uIntersection);
  return angleIntersection - angleClick;
};
var fmod = (num, denom) => {
  let k2 = Math.floor(num / denom);
  k2 = k2 < 0 ? k2 + 1 : k2;
  return num - k2 * denom;
};
var minimizeAngle = (angle) => {
  let result = fmod(angle, 2 * Math.PI);
  if (Math.abs(result) < 1e-6) {
    return 0;
  }
  if (result < 0) {
    result += 2 * Math.PI;
  }
  return result;
};
var rotMatrix = new Matrix4();
var posNew = new Vector3();
var ray3 = new Ray();
var intersection2 = new Vector3();
var AxisRotator = ({
  dir1,
  dir2,
  axis
}) => {
  const {
    rotationLimits,
    annotations,
    annotationsClass,
    depthTest,
    scale: scale2,
    lineWidth,
    fixed,
    axisColors,
    hoveredColor,
    opacity,
    onDragStart,
    onDrag,
    onDragEnd,
    userData
  } = React117.useContext(context9);
  const camControls = useThree((state) => state.controls);
  const divRef = React117.useRef(null);
  const objRef = React117.useRef(null);
  const angle0 = React117.useRef(0);
  const angle = React117.useRef(0);
  const clickInfo = React117.useRef(null);
  const [isHovered, setIsHovered] = React117.useState(false);
  const onPointerDown = React117.useCallback((e2) => {
    if (annotations) {
      divRef.current.innerText = `${toDegrees(angle.current).toFixed(0)}º`;
      divRef.current.style.display = "block";
    }
    e2.stopPropagation();
    const clickPoint = e2.point.clone();
    const origin = new Vector3().setFromMatrixPosition(objRef.current.matrixWorld);
    const e1 = new Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 0).normalize();
    const e22 = new Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 1).normalize();
    const normal2 = new Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 2).normalize();
    const plane = new Plane().setFromNormalAndCoplanarPoint(normal2, origin);
    clickInfo.current = {
      clickPoint,
      origin,
      e1,
      e2: e22,
      normal: normal2,
      plane
    };
    onDragStart({
      component: "Rotator",
      axis,
      origin,
      directions: [e1, e22, normal2]
    });
    camControls && (camControls.enabled = false);
    e2.target.setPointerCapture(e2.pointerId);
  }, [annotations, camControls, onDragStart, axis]);
  const onPointerMove = React117.useCallback((e2) => {
    e2.stopPropagation();
    if (!isHovered)
      setIsHovered(true);
    if (clickInfo.current) {
      const {
        clickPoint,
        origin,
        e1,
        e2: e22,
        normal: normal2,
        plane
      } = clickInfo.current;
      const [min, max] = (rotationLimits == null ? void 0 : rotationLimits[axis]) || [void 0, void 0];
      ray3.copy(e2.ray);
      ray3.intersectPlane(plane, intersection2);
      ray3.direction.negate();
      ray3.intersectPlane(plane, intersection2);
      let deltaAngle = calculateAngle(clickPoint, intersection2, origin, e1, e22);
      let degrees = toDegrees(deltaAngle);
      if (e2.shiftKey) {
        degrees = Math.round(degrees / 10) * 10;
        deltaAngle = toRadians(degrees);
      }
      if (min !== void 0 && max !== void 0 && max - min < 2 * Math.PI) {
        deltaAngle = minimizeAngle(deltaAngle);
        deltaAngle = deltaAngle > Math.PI ? deltaAngle - 2 * Math.PI : deltaAngle;
        deltaAngle = (0, import_lodash4.default)(deltaAngle, min - angle0.current, max - angle0.current);
        angle.current = angle0.current + deltaAngle;
      } else {
        angle.current = minimizeAngle(angle0.current + deltaAngle);
        angle.current = angle.current > Math.PI ? angle.current - 2 * Math.PI : angle.current;
      }
      if (annotations) {
        degrees = toDegrees(angle.current);
        divRef.current.innerText = `${degrees.toFixed(0)}º`;
      }
      rotMatrix.makeRotationAxis(normal2, deltaAngle);
      posNew.copy(origin).applyMatrix4(rotMatrix).sub(origin).negate();
      rotMatrix.setPosition(posNew);
      onDrag(rotMatrix);
    }
  }, [annotations, onDrag, isHovered, rotationLimits, axis]);
  const onPointerUp = React117.useCallback((e2) => {
    if (annotations) {
      divRef.current.style.display = "none";
    }
    e2.stopPropagation();
    angle0.current = angle.current;
    clickInfo.current = null;
    onDragEnd();
    camControls && (camControls.enabled = true);
    e2.target.releasePointerCapture(e2.pointerId);
  }, [annotations, camControls, onDragEnd]);
  const onPointerOut = React117.useCallback((e2) => {
    e2.stopPropagation();
    setIsHovered(false);
  }, []);
  const matrixL = React117.useMemo(() => {
    const dir1N = dir1.clone().normalize();
    const dir2N = dir2.clone().normalize();
    return new Matrix4().makeBasis(dir1N, dir2N, dir1N.clone().cross(dir2N));
  }, [dir1, dir2]);
  const r2 = fixed ? 0.65 : scale2 * 0.65;
  const arc = React117.useMemo(() => {
    const segments = 32;
    const points = [];
    for (let j2 = 0; j2 <= segments; j2++) {
      const angle2 = j2 * (Math.PI / 2) / segments;
      points.push(new Vector3(Math.cos(angle2) * r2, Math.sin(angle2) * r2, 0));
    }
    return points;
  }, [r2]);
  return React117.createElement("group", {
    ref: objRef,
    onPointerDown,
    onPointerMove,
    onPointerUp,
    onPointerOut,
    matrix: matrixL,
    matrixAutoUpdate: false
  }, annotations && React117.createElement(Html, {
    position: [r2, r2, 0]
  }, React117.createElement("div", {
    style: {
      display: "none",
      background: "#151520",
      color: "white",
      padding: "6px 8px",
      borderRadius: 7,
      whiteSpace: "nowrap"
    },
    className: annotationsClass,
    ref: divRef
  })), React117.createElement(Line, {
    points: arc,
    lineWidth: lineWidth * 4,
    visible: false,
    userData
  }), React117.createElement(Line, {
    transparent: true,
    raycast: () => null,
    depthTest,
    points: arc,
    lineWidth,
    color: isHovered ? hoveredColor : axisColors[axis],
    opacity,
    polygonOffset: true,
    polygonOffsetFactor: -10,
    fog: false
  }));
};

// node_modules/r3f-perf/node_modules/@react-three/drei/web/pivotControls/index.js
var tV0 = new Vector3();
var tV1 = new Vector3();
var tV2 = new Vector3();
var getPoint2 = (point3, camera, size) => {
  const widthHalf = size.width / 2;
  const heightHalf = size.height / 2;
  camera.updateMatrixWorld(false);
  const vector = point3.project(camera);
  vector.x = vector.x * widthHalf + widthHalf;
  vector.y = -(vector.y * heightHalf) + heightHalf;
  return vector;
};
var getPoint3 = (point2, camera, size, zValue = 1) => {
  const vector = tV0.set(point2.x / size.width * 2 - 1, -(point2.y / size.height) * 2 + 1, zValue);
  vector.unproject(camera);
  return vector;
};
var calculateScaleFactor = (point3, radiusPx, camera, size) => {
  const point2 = getPoint2(tV2.copy(point3), camera, size);
  let scale2 = 0;
  for (let i3 = 0; i3 < 2; ++i3) {
    const point2off = tV1.copy(point2).setComponent(i3, point2.getComponent(i3) + radiusPx);
    const point3off = getPoint3(point2off, camera, size, point2off.z);
    scale2 = Math.max(scale2, point3.distanceTo(point3off));
  }
  return scale2;
};
var mL0 = new Matrix4();
var mW0 = new Matrix4();
var mP = new Matrix4();
var mPInv = new Matrix4();
var mW = new Matrix4();
var mL = new Matrix4();
var mL0Inv = new Matrix4();
var mdL = new Matrix4();
var bb = new Box3();
var bbObj = new Box3();
var vCenter = new Vector3();
var vSize = new Vector3();
var vAnchorOffset = new Vector3();
var vPosition = new Vector3();
var xDir = new Vector3(1, 0, 0);
var yDir = new Vector3(0, 1, 0);
var zDir = new Vector3(0, 0, 1);
var PivotControls = React118.forwardRef(({
  matrix: matrix2,
  onDragStart,
  onDrag,
  onDragEnd,
  autoTransform = true,
  anchor,
  disableAxes = false,
  disableSliders = false,
  disableRotations = false,
  activeAxes = [true, true, true],
  offset = [0, 0, 0],
  rotation: rotation2 = [0, 0, 0],
  scale: scale2 = 1,
  lineWidth = 4,
  fixed = false,
  translationLimits,
  rotationLimits,
  depthTest = true,
  axisColors = ["#ff2060", "#20df80", "#2080ff"],
  hoveredColor = "#ffff40",
  annotations = false,
  annotationsClass,
  opacity = 1,
  visible = true,
  userData,
  children,
  ...props
}, fRef) => {
  const invalidate = useThree((state) => state.invalidate);
  const parentRef = React118.useRef(null);
  const ref = React118.useRef(null);
  const gizmoRef = React118.useRef(null);
  const childrenRef = React118.useRef(null);
  const translation2 = React118.useRef([0, 0, 0]);
  React118.useLayoutEffect(() => {
    if (!anchor)
      return;
    childrenRef.current.updateWorldMatrix(true, true);
    mPInv.copy(childrenRef.current.matrixWorld).invert();
    bb.makeEmpty();
    childrenRef.current.traverse((obj) => {
      if (!obj.geometry)
        return;
      if (!obj.geometry.boundingBox)
        obj.geometry.computeBoundingBox();
      mL.copy(obj.matrixWorld).premultiply(mPInv);
      bbObj.copy(obj.geometry.boundingBox);
      bbObj.applyMatrix4(mL);
      bb.union(bbObj);
    });
    vCenter.copy(bb.max).add(bb.min).multiplyScalar(0.5);
    vSize.copy(bb.max).sub(bb.min).multiplyScalar(0.5);
    vAnchorOffset.copy(vSize).multiply(new Vector3(...anchor)).add(vCenter);
    vPosition.set(...offset).add(vAnchorOffset);
    gizmoRef.current.position.copy(vPosition);
    invalidate();
  });
  const config = React118.useMemo(() => ({
    onDragStart: (props2) => {
      mL0.copy(ref.current.matrix);
      mW0.copy(ref.current.matrixWorld);
      onDragStart && onDragStart(props2);
      invalidate();
    },
    onDrag: (mdW) => {
      mP.copy(parentRef.current.matrixWorld);
      mPInv.copy(mP).invert();
      mW.copy(mW0).premultiply(mdW);
      mL.copy(mW).premultiply(mPInv);
      mL0Inv.copy(mL0).invert();
      mdL.copy(mL).multiply(mL0Inv);
      if (autoTransform)
        ref.current.matrix.copy(mL);
      onDrag && onDrag(mL, mdL, mW, mdW);
      invalidate();
    },
    onDragEnd: () => {
      if (onDragEnd)
        onDragEnd();
      invalidate();
    },
    translation: translation2,
    translationLimits,
    rotationLimits,
    axisColors,
    hoveredColor,
    opacity,
    scale: scale2,
    lineWidth,
    fixed,
    depthTest,
    userData,
    annotations,
    annotationsClass
  }), [onDragStart, onDrag, onDragEnd, translation2, translationLimits, rotationLimits, depthTest, scale2, lineWidth, fixed, ...axisColors, hoveredColor, opacity, userData, autoTransform, annotations, annotationsClass]);
  const vec = new Vector3();
  useFrame((state) => {
    if (fixed) {
      const sf = calculateScaleFactor(gizmoRef.current.getWorldPosition(vec), scale2, state.camera, state.size);
      if (gizmoRef.current) {
        var _gizmoRef$current, _gizmoRef$current2, _gizmoRef$current3;
        if (((_gizmoRef$current = gizmoRef.current) == null ? void 0 : _gizmoRef$current.scale.x) !== sf || ((_gizmoRef$current2 = gizmoRef.current) == null ? void 0 : _gizmoRef$current2.scale.y) !== sf || ((_gizmoRef$current3 = gizmoRef.current) == null ? void 0 : _gizmoRef$current3.scale.z) !== sf) {
          gizmoRef.current.scale.setScalar(sf);
          state.invalidate();
        }
      }
    }
  });
  React118.useImperativeHandle(fRef, () => ref.current, []);
  React118.useLayoutEffect(() => {
    if (matrix2 && matrix2 instanceof Matrix4)
      ref.current.matrix = matrix2;
  }, [matrix2]);
  return React118.createElement(context9.Provider, {
    value: config
  }, React118.createElement("group", {
    ref: parentRef
  }, React118.createElement("group", _extends({
    ref,
    matrix: matrix2,
    matrixAutoUpdate: false
  }, props), React118.createElement("group", {
    visible,
    ref: gizmoRef,
    position: offset,
    rotation: rotation2
  }, !disableAxes && activeAxes[0] && React118.createElement(AxisArrow, {
    axis: 0,
    direction: xDir
  }), !disableAxes && activeAxes[1] && React118.createElement(AxisArrow, {
    axis: 1,
    direction: yDir
  }), !disableAxes && activeAxes[2] && React118.createElement(AxisArrow, {
    axis: 2,
    direction: zDir
  }), !disableSliders && activeAxes[0] && activeAxes[1] && React118.createElement(PlaneSlider, {
    axis: 2,
    dir1: xDir,
    dir2: yDir
  }), !disableSliders && activeAxes[0] && activeAxes[2] && React118.createElement(PlaneSlider, {
    axis: 1,
    dir1: zDir,
    dir2: xDir
  }), !disableSliders && activeAxes[2] && activeAxes[1] && React118.createElement(PlaneSlider, {
    axis: 0,
    dir1: yDir,
    dir2: zDir
  }), !disableRotations && activeAxes[0] && activeAxes[1] && React118.createElement(AxisRotator, {
    axis: 2,
    dir1: xDir,
    dir2: yDir
  }), !disableRotations && activeAxes[0] && activeAxes[2] && React118.createElement(AxisRotator, {
    axis: 1,
    dir1: zDir,
    dir2: xDir
  }), !disableRotations && activeAxes[2] && activeAxes[1] && React118.createElement(AxisRotator, {
    axis: 0,
    dir1: yDir,
    dir2: zDir
  })), React118.createElement("group", {
    ref: childrenRef
  }, children))));
});

// node_modules/r3f-perf/dist/components/TextsHighHZ.mjs
var TextHighHZ = (0, import_react24.memo)(
  ({
    isPerf,
    color,
    colorBlind,
    customData: customData2,
    isMemory,
    isShadersInfo,
    metric,
    fontSize,
    offsetY = 0,
    offsetX,
    round,
    hasInstance
  }) => {
    const { width: w2, height: h2 } = useThree((s2) => s2.viewport);
    const fpsRef = (0, import_react24.useRef)(null);
    const fpsInstanceRef = (0, import_react24.useRef)(null);
    useEvent("log", function updateR3FPerfText([log, gl]) {
      var _a;
      if (!log || !fpsRef.current)
        return;
      if (customData2) {
        fpsRef.current.text = (Math.round(getPerf().customData * Math.pow(10, round)) / Math.pow(10, round)).toFixed(
          round
        );
      }
      if (!metric)
        return;
      let info = log[metric];
      if (isShadersInfo) {
        info = (_a = gl.info.programs) == null ? void 0 : _a.length;
      } else if (metric === "matriceCount") {
        info = matriceCount.value;
      } else if (!isPerf && gl.info.render) {
        const infos = isMemory ? gl.info.memory : gl.info.render;
        info = infos[metric];
      }
      if (metric === "fps") {
        fpsRef.current.color = getPerf().overclockingFps ? colorsGraph(colorBlind).overClock.toString() : `rgb(${colorsGraph(colorBlind).fps.toString()})`;
      }
      fpsRef.current.text = (Math.round(info * Math.pow(10, round)) / Math.pow(10, round)).toFixed(round);
      if (hasInstance) {
        const infosInstance = gl.info.instance;
        if (typeof infosInstance === "undefined" && metric !== "matriceCount") {
          return;
        }
        let infoInstance;
        if (metric === "matriceCount") {
          infoInstance = matriceWorldCount.value;
        } else {
          infoInstance = infosInstance[metric];
        }
        if (infoInstance > 0) {
          fpsRef.current.fontSize = fontSize / 1.15;
          fpsInstanceRef.current.fontSize = info > 0 ? fontSize / 1.4 : fontSize;
          fpsRef.current.position.y = h2 / 2 - offsetY - fontSize / 1.9;
          fpsInstanceRef.current.text = " ±	" + (Math.round(infoInstance * Math.pow(10, round)) / Math.pow(10, round)).toFixed(round);
        } else {
          if (fpsInstanceRef.current.text)
            fpsInstanceRef.current.text = "";
          fpsRef.current.position.y = h2 / 2 - offsetY - fontSize;
          fpsRef.current.fontSize = fontSize;
        }
      }
      matriceCount.value -= 1;
      fpsRef.current.updateMatrix();
      fpsRef.current.matrixWorld.copy(fpsRef.current.matrix);
    });
    return (0, import_jsx_runtime.jsxs)(import_react24.Suspense, { fallback: null, children: [
      (0, import_jsx_runtime.jsxs)(
        Text2,
        {
          textAlign: "justify",
          matrixAutoUpdate: false,
          ref: fpsRef,
          fontSize,
          position: [-w2 / 2 + offsetX + fontSize, h2 / 2 - offsetY - fontSize, 0],
          color,
          characters: "0123456789",
          onUpdate: (self2) => {
            self2.updateMatrix();
            matriceCount.value -= 1;
            self2.matrixWorld.copy(self2.matrix);
          },
          children: [
            (0, import_jsx_runtime.jsx)("meshBasicMaterial", { blending: NormalBlending }),
            "0"
          ]
        }
      ),
      hasInstance && (0, import_jsx_runtime.jsx)(
        Text2,
        {
          textAlign: "justify",
          matrixAutoUpdate: false,
          ref: fpsInstanceRef,
          fontSize: 8,
          position: [-w2 / 2 + offsetX + fontSize, h2 / 2 - offsetY - fontSize * 1.15, 0],
          color: "lightgrey",
          characters: "0123456789",
          onUpdate: (self2) => {
            self2.updateMatrix();
            matriceCount.value -= 1;
            self2.matrixWorld.copy(self2.matrix);
          },
          children: (0, import_jsx_runtime.jsx)("meshBasicMaterial", { blending: NormalBlending })
        }
      )
    ] });
  }
);
var TextsHighHZ = ({ colorBlind, customData: customData2, minimal, matrixUpdate }) => {
  const fontSize = 14;
  return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
    (0, import_jsx_runtime.jsx)(
      TextHighHZ,
      {
        colorBlind,
        color: `rgb(${colorsGraph(colorBlind).fps.toString()})`,
        isPerf: true,
        metric: "fps",
        fontSize,
        offsetX: 140,
        round: 0
      }
    ),
    (0, import_jsx_runtime.jsx)(
      TextHighHZ,
      {
        color: `rgb(${colorsGraph(colorBlind).cpu.toString()})`,
        isPerf: true,
        metric: "cpu",
        fontSize,
        offsetX: 72,
        round: 3
      }
    ),
    (0, import_jsx_runtime.jsx)(
      TextHighHZ,
      {
        color: `rgb(${colorsGraph(colorBlind).gpu.toString()})`,
        isPerf: true,
        metric: "gpu",
        fontSize,
        offsetX: 10,
        round: 3
      }
    ),
    !minimal ? (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
      (0, import_jsx_runtime.jsx)(TextHighHZ, { metric: "calls", fontSize, offsetX: 200, round: 0, hasInstance: true }),
      (0, import_jsx_runtime.jsx)(TextHighHZ, { metric: "triangles", fontSize, offsetX: 260, round: 0, hasInstance: true }),
      (0, import_jsx_runtime.jsx)(TextHighHZ, { isMemory: true, metric: "geometries", fontSize, offsetY: 30, offsetX: 0, round: 0 }),
      (0, import_jsx_runtime.jsx)(TextHighHZ, { isMemory: true, metric: "textures", fontSize, offsetY: 30, offsetX: 80, round: 0 }),
      (0, import_jsx_runtime.jsx)(TextHighHZ, { isShadersInfo: true, metric: "programs", fontSize, offsetY: 30, offsetX: 140, round: 0 }),
      (0, import_jsx_runtime.jsx)(TextHighHZ, { metric: "lines", fontSize, offsetY: 30, offsetX: 200, round: 0, hasInstance: true }),
      (0, import_jsx_runtime.jsx)(TextHighHZ, { metric: "points", fontSize, offsetY: 30, offsetX: 260, round: 0, hasInstance: true }),
      matrixUpdate && (0, import_jsx_runtime.jsx)(
        TextHighHZ,
        {
          isPerf: true,
          metric: "matriceCount",
          fontSize,
          offsetY: 30,
          offsetX: 320,
          round: 0,
          hasInstance: true
        }
      )
    ] }) : null,
    customData2 && (0, import_jsx_runtime.jsx)(
      TextHighHZ,
      {
        color: `rgb(${colorsGraph(colorBlind).custom.toString()})`,
        customData: customData2,
        fontSize,
        offsetY: 0,
        offsetX: minimal ? 200 : 320,
        round: customData2.round || 2
      }
    )
  ] });
};

// node_modules/r3f-perf/dist/components/Graph.mjs
var ChartCurve = ({ colorBlind, minimal, chart = { length: 120, hz: 60 } }) => {
  const curves = (0, import_react25.useMemo)(() => {
    return {
      fps: new Float32Array(chart.length * 3),
      cpu: new Float32Array(chart.length * 3),
      // mem: new Float32Array(chart.length * 3),
      gpu: new Float32Array(chart.length * 3)
    };
  }, [chart]);
  const fpsRef = (0, import_react25.useRef)(null);
  const fpsMatRef = (0, import_react25.useRef)(null);
  const gpuRef = (0, import_react25.useRef)(null);
  const cpuRef = (0, import_react25.useRef)(null);
  const dummyVec3 = (0, import_react25.useMemo)(() => new Vector3(0, 0, 0), []);
  const updatePoints = (element, factor = 1, ref, viewport) => {
    let maxVal = 0;
    const { width: w2, height: h2 } = viewport;
    const chart2 = getPerf().chart.data[element];
    if (!chart2 || chart2.length === 0) {
      return;
    }
    const padding = minimal ? 2 : 6;
    const paddingTop = minimal ? 12 : 50;
    let len = chart2.length;
    for (let i3 = 0; i3 < len; i3++) {
      let id = (getPerf().chart.circularId + i3 + 1) % len;
      if (chart2[id] !== void 0) {
        if (chart2[id] > maxVal) {
          maxVal = chart2[id] * factor;
        }
        dummyVec3.set(padding + i3 / (len - 1) * (w2 - padding * 2) - w2 / 2, Math.min(100, chart2[id]) * factor / 100 * (h2 - padding * 2 - paddingTop) - h2 / 2, 0);
        dummyVec3.toArray(ref.attributes.position.array, i3 * 3);
      }
    }
    ref.attributes.position.needsUpdate = true;
  };
  useFrame(function updateChartCurve({ viewport }) {
    updatePoints("fps", 1, fpsRef.current, viewport);
    if (fpsMatRef.current) {
      fpsMatRef.current.color.set(getPerf().overclockingFps ? colorsGraph(colorBlind).overClock.toString() : `rgb(${colorsGraph(colorBlind).fps.toString()})`);
    }
    updatePoints("gpu", 5, gpuRef.current, viewport);
    updatePoints("cpu", 5, cpuRef.current, viewport);
  });
  return (0, import_jsx_runtime2.jsxs)(import_jsx_runtime2.Fragment, { children: [
    (0, import_jsx_runtime2.jsxs)("line", { onUpdate: (self2) => {
      self2.updateMatrix();
      matriceCount.value -= 1;
      self2.matrixWorld.copy(self2.matrix);
    }, children: [
      (0, import_jsx_runtime2.jsx)("bufferGeometry", { ref: fpsRef, children: (0, import_jsx_runtime2.jsx)(
        "bufferAttribute",
        {
          attach: "attributes-position",
          count: chart.length,
          array: curves.fps,
          itemSize: 3,
          usage: DynamicDrawUsage,
          needsUpdate: true
        }
      ) }),
      (0, import_jsx_runtime2.jsx)("lineBasicMaterial", { ref: fpsMatRef, color: `rgb(${colorsGraph(colorBlind).fps.toString()})`, transparent: true, opacity: 0.5 })
    ] }),
    (0, import_jsx_runtime2.jsxs)("line", { onUpdate: (self2) => {
      self2.updateMatrix();
      matriceCount.value -= 1;
      self2.matrixWorld.copy(self2.matrix);
    }, children: [
      (0, import_jsx_runtime2.jsx)("bufferGeometry", { ref: gpuRef, children: (0, import_jsx_runtime2.jsx)(
        "bufferAttribute",
        {
          attach: "attributes-position",
          count: chart.length,
          array: curves.gpu,
          itemSize: 3,
          usage: DynamicDrawUsage,
          needsUpdate: true
        }
      ) }),
      (0, import_jsx_runtime2.jsx)("lineBasicMaterial", { color: `rgb(${colorsGraph(colorBlind).gpu.toString()})`, transparent: true, opacity: 0.5 })
    ] }),
    (0, import_jsx_runtime2.jsxs)("line", { onUpdate: (self2) => {
      self2.updateMatrix();
      matriceCount.value -= 1;
      self2.matrixWorld.copy(self2.matrix);
    }, children: [
      (0, import_jsx_runtime2.jsx)("bufferGeometry", { ref: cpuRef, children: (0, import_jsx_runtime2.jsx)(
        "bufferAttribute",
        {
          attach: "attributes-position",
          count: chart.length,
          array: curves.cpu,
          itemSize: 3,
          usage: DynamicDrawUsage,
          needsUpdate: true
        }
      ) }),
      (0, import_jsx_runtime2.jsx)("lineBasicMaterial", { color: `rgb(${colorsGraph(colorBlind).cpu.toString()})`, transparent: true, opacity: 0.5 })
    ] })
  ] });
};
var ChartUI = ({
  colorBlind,
  chart,
  customData,
  matrixUpdate,
  showGraph = true,
  antialias = true,
  minimal
}) => {
  const canvas = (0, import_react25.useRef)(void 0);
  const paused = usePerf((state) => state.paused);
  return (0, import_jsx_runtime2.jsxs)(
    Graph,
    {
      style: {
        display: "flex",
        position: "absolute",
        height: `${minimal ? 37 : showGraph ? 100 : 60}px`,
        minWidth: `${minimal ? "100px" : customData ? "370px" : "310px"}`
      },
      children: [
        (0, import_jsx_runtime2.jsx)(
          Canvas,
          {
            ref: canvas,
            orthographic: true,
            dpr: antialias ? [1, 2] : 1,
            gl: {
              antialias: true,
              alpha: true,
              stencil: false,
              depth: false
            },
            onCreated: ({ scene }) => {
              scene.traverse((obj) => {
                obj.matrixWorldAutoUpdate = false;
                obj.matrixAutoUpdate = false;
              });
            },
            flat: true,
            style: {
              marginBottom: `-42px`,
              position: "relative",
              pointerEvents: "none",
              background: "transparent !important",
              height: `${minimal ? 37 : showGraph ? 100 : 60}px`
            },
            children: !paused ? (0, import_jsx_runtime2.jsxs)(import_jsx_runtime2.Fragment, { children: [
              (0, import_jsx_runtime2.jsx)(Renderer, {}),
              (0, import_jsx_runtime2.jsx)(TextsHighHZ, { customData, minimal, matrixUpdate }),
              showGraph && (0, import_jsx_runtime2.jsx)(
                ChartCurve,
                {
                  colorBlind,
                  minimal,
                  chart
                }
              )
            ] }) : null
          }
        ),
        paused && (0, import_jsx_runtime2.jsxs)(Graphpc, { children: [
          (0, import_jsx_runtime2.jsx)(PauseIcon, {}),
          " PAUSED"
        ] })
      ]
    }
  );
};
var Renderer = () => {
  useFrame(function updateR3FPerf({ gl, scene, camera }) {
    camera.updateMatrix();
    matriceCount.value -= 1;
    camera.matrixWorld.copy(camera.matrix);
    camera.matrixWorldInverse.copy(camera.matrixWorld).invert();
    gl.render(scene, camera);
    matriceWorldCount.value = 0;
    matriceCount.value = 0;
  }, Infinity);
  return null;
};

// node_modules/r3f-perf/dist/components/HtmlMinimal.mjs
var import_jsx_runtime3 = __toESM(require_jsx_runtime(), 1);
var import_react26 = __toESM(require_react(), 1);
var import_client = __toESM(require_client(), 1);
var HtmlMinimal = (0, import_react26.forwardRef)(({ portal, className, children, name, ...props }, ref) => {
  const gl = useThree((state) => state.gl);
  const group = (0, import_react26.useRef)(null);
  const rootRef = (0, import_react26.useRef)(null);
  const target2 = (portal == null ? void 0 : portal.current) != null ? portal.current : gl.domElement.parentNode;
  (0, import_react26.useLayoutEffect)(() => {
    if (!group.current || !target2)
      return;
    const el = document.createElement("div");
    const root = rootRef.current = (0, import_client.createRoot)(el);
    target2.appendChild(el);
    return () => {
      root.unmount();
      rootRef.current = null;
      target2.removeChild(el);
    };
  }, [target2]);
  (0, import_react26.useLayoutEffect)(() => {
    const root = rootRef.current;
    if (!root)
      return;
    root.render(
      (0, import_jsx_runtime3.jsx)("div", { ref, className, children })
    );
  });
  return (0, import_jsx_runtime3.jsx)("group", { name, ...props, ref: group });
});

// node_modules/r3f-perf/dist/components/Program.mjs
var import_jsx_runtime4 = __toESM(require_jsx_runtime(), 1);
var import_react27 = __toESM(require_react(), 1);

// node_modules/r3f-perf/dist/helpers/estimateBytesUsed.mjs
function estimateBytesUsed(geometry) {
  let mem = 0;
  for (let name in geometry.attributes) {
    const attr = geometry.getAttribute(name);
    mem += attr.count * attr.itemSize * attr.array.BYTES_PER_ELEMENT;
  }
  const indices = geometry.getIndex();
  mem += indices ? indices.count * indices.itemSize * indices.array.BYTES_PER_ELEMENT : 0;
  return mem;
}

// node_modules/r3f-perf/dist/components/Program.mjs
var addTextureUniforms = (id, texture) => {
  const repeatType = (wrap) => {
    switch (wrap) {
      case 1e3:
        return "RepeatWrapping";
      case 1001:
        return "ClampToEdgeWrapping";
      case 1002:
        return "MirroredRepeatWrapping";
      default:
        return "ClampToEdgeWrapping";
    }
  };
  const encodingType = (encoding) => {
    switch (encoding) {
      case 3e3:
        return "LinearEncoding";
      case 3001:
        return "sRGBEncoding";
      case 3002:
        return "RGBEEncoding";
      case 3003:
        return "LogLuvEncoding";
      case 3004:
        return "RGBM7Encoding";
      case 3005:
        return "RGBM16Encoding";
      case 3006:
        return "RGBDEncoding";
      case 3007:
        return "GammaEncoding";
      default:
        return "ClampToEdgeWrapping";
    }
  };
  return {
    name: id,
    url: texture.image.currentSrc,
    encoding: encodingType(texture.encoding),
    wrapT: repeatType(texture.wrapT),
    flipY: texture.flipY.toString()
  };
};
var UniformsGL = ({ program, material, setTexNumber }) => {
  const gl = usePerf((state) => state.gl);
  const [uniforms, set] = (0, import_react27.useState)(null);
  (0, import_react27.useEffect)(() => {
    if (gl) {
      const data = program == null ? void 0 : program.getUniforms();
      let TexCount = 0;
      const format = /* @__PURE__ */ new Map();
      data.seq.forEach((e2) => {
        if (!e2.id.includes("uTroika") && e2.id !== "isOrthographic" && e2.id !== "uvTransform" && e2.id !== "lightProbe" && e2.id !== "projectionMatrix" && e2.id !== "viewMatrix" && e2.id !== "normalMatrix" && e2.id !== "modelMatrix" && e2.id !== "modelViewMatrix") {
          let values = [];
          let data2 = {
            name: e2.id
          };
          if (e2.cache) {
            e2.cache.forEach((v5) => {
              if (typeof v5 !== "undefined") {
                values.push(v5.toString().substring(0, 4));
              }
            });
            data2.value = values.join();
            if (material[e2.id] && material[e2.id].image) {
              if (material[e2.id].image) {
                TexCount++;
                data2.value = addTextureUniforms(e2.id, material[e2.id]);
              }
            }
            if (!data2.value) {
              data2.value = "empty";
            }
            format.set(e2.id, data2);
          }
        }
      });
      if (material.uniforms) {
        Object.keys(material.uniforms).forEach((key) => {
          const uniform = material.uniforms[key];
          if (uniform.value) {
            const { value } = uniform;
            let data2 = {
              name: key
            };
            if (key.includes("uTroika")) {
              return;
            }
            if (value.isTexture) {
              TexCount++;
              data2.value = addTextureUniforms(key, value);
            } else {
              let sb = JSON.stringify(value);
              try {
                sb = JSON.stringify(value);
              } catch (_err) {
                sb = value.toString();
              }
              data2.value = sb;
            }
            format.set(key, data2);
          }
        });
      }
      if (TexCount > 0) {
        setTexNumber(TexCount);
      }
      set(format);
    }
  }, []);
  return (0, import_jsx_runtime4.jsx)(ProgramsUL, { children: uniforms && Array.from(uniforms.values()).map((uniform) => {
    return (0, import_jsx_runtime4.jsx)("span", { children: typeof uniform.value === "string" ? (0, import_jsx_runtime4.jsx)("li", { children: (0, import_jsx_runtime4.jsxs)("span", { children: [
      uniform.name,
      " :",
      " ",
      (0, import_jsx_runtime4.jsxs)("b", { children: [
        uniform.value.substring(0, 30),
        uniform.value.length > 30 ? "..." : ""
      ] })
    ] }) }) : (0, import_jsx_runtime4.jsxs)(import_jsx_runtime4.Fragment, { children: [
      (0, import_jsx_runtime4.jsx)("li", { children: (0, import_jsx_runtime4.jsxs)("b", { children: [
        uniform.value.name,
        ":"
      ] }) }),
      (0, import_jsx_runtime4.jsxs)("div", { children: [
        Object.keys(uniform.value).map((key) => {
          return key !== "name" ? (0, import_jsx_runtime4.jsx)("div", { children: key === "url" ? (0, import_jsx_runtime4.jsx)("a", { href: uniform.value[key], target: "_blank", children: (0, import_jsx_runtime4.jsx)("img", { src: uniform.value[key] }) }) : (0, import_jsx_runtime4.jsxs)("li", { children: [
            key,
            ": ",
            (0, import_jsx_runtime4.jsx)("b", { children: uniform.value[key] })
          ] }) }, key) : null;
        }),
        (0, import_jsx_runtime4.jsxs)(
          ProgramConsole,
          {
            onClick: () => {
              var _a;
              console.info(
                material[uniform.value.name] || ((_a = material == null ? void 0 : material.uniforms[uniform.value.name]) == null ? void 0 : _a.value)
              );
            },
            children: [
              "console.info(",
              uniform.value.name,
              ");"
            ]
          }
        )
      ] })
    ] }) }, uniform.name);
  }) });
};
var DynamicDrawCallInfo = ({ el }) => {
  usePerf((state) => state.log);
  const gl = usePerf((state) => state.gl);
  const getVal = (el2) => {
    if (!gl)
      return 0;
    const res = Math.round(
      el2.drawCounts.total / (gl.info.render.triangles + gl.info.render.lines + gl.info.render.points) * 100 * 10
    ) / 10;
    return isFinite(res) && res || 0;
  };
  return (0, import_jsx_runtime4.jsx)(import_jsx_runtime4.Fragment, { children: el.drawCounts.total > 0 && (0, import_jsx_runtime4.jsxs)(PerfI, { style: { height: "auto", width: "auto", margin: "0 4px" }, children: [
    el.drawCounts.type === "Triangle" ? (0, import_jsx_runtime4.jsx)(VercelLogoIcon, { style: { top: "-1px" } }) : (0, import_jsx_runtime4.jsx)(ActivityLogIcon, { style: { top: "-1px" } }),
    el.drawCounts.total,
    (0, import_jsx_runtime4.jsxs)("small", { children: [
      el.drawCounts.type,
      "s"
    ] }),
    gl && (0, import_jsx_runtime4.jsxs)(
      PerfB,
      {
        style: { bottom: "-10px", width: "40px", fontWeight: "bold" },
        children: [
          el.visible && !el.material.wireframe ? getVal(el) : 0,
          "%"
        ]
      }
    )
  ] }) });
};
var ProgramUI = ({ el }) => {
  const [showProgram, setShowProgram] = (0, import_react27.useState)(el.visible);
  const [toggleProgram, set] = (0, import_react27.useState)(el.expand);
  const [texNumber, setTexNumber] = (0, import_react27.useState)(0);
  const { meshes, program, material } = el;
  return (0, import_jsx_runtime4.jsxs)(ProgramGeo, { children: [
    (0, import_jsx_runtime4.jsxs)(
      ProgramHeader,
      {
        onClick: () => {
          el.expand = !toggleProgram;
          Object.keys(meshes).forEach((key) => {
            const mesh = meshes[key];
            mesh.material.wireframe = false;
          });
          set(!toggleProgram);
        },
        children: [
          (0, import_jsx_runtime4.jsx)(Toggle, { style: { marginRight: "6px" }, children: toggleProgram ? (0, import_jsx_runtime4.jsx)("span", { children: (0, import_jsx_runtime4.jsx)(TriangleDownIcon, {}) }) : (0, import_jsx_runtime4.jsx)("span", { children: (0, import_jsx_runtime4.jsx)(TriangleUpIcon, {}) }) }),
          program && (0, import_jsx_runtime4.jsxs)("span", { children: [
            (0, import_jsx_runtime4.jsx)(ProgramTitle, { children: program.name }),
            (0, import_jsx_runtime4.jsxs)(PerfI, { style: { height: "auto", width: "auto", margin: "0 4px" }, children: [
              (0, import_jsx_runtime4.jsx)(LayersIcon, { style: { top: "-1px" } }),
              Object.keys(meshes).length,
              (0, import_jsx_runtime4.jsx)("small", { children: Object.keys(meshes).length > 1 ? "users" : "user" })
            ] }),
            texNumber > 0 && (0, import_jsx_runtime4.jsxs)(PerfI, { style: { height: "auto", width: "auto", margin: "0 4px" }, children: [
              texNumber > 1 ? (0, import_jsx_runtime4.jsx)(ImageIcon, { style: { top: "-1px" } }) : (0, import_jsx_runtime4.jsx)(ImageIcon, { style: { top: "-1px" } }),
              texNumber,
              (0, import_jsx_runtime4.jsx)("small", { children: "tex" })
            ] }),
            (0, import_jsx_runtime4.jsx)(DynamicDrawCallInfo, { el }),
            material.glslVersion === "300 es" && (0, import_jsx_runtime4.jsxs)(PerfI, { style: { height: "auto", width: "auto", margin: "0 4px" }, children: [
              (0, import_jsx_runtime4.jsx)(RocketIcon, { style: { top: "-1px" } }),
              "300",
              (0, import_jsx_runtime4.jsx)("small", { children: "es" }),
              (0, import_jsx_runtime4.jsx)(PerfB, { style: { bottom: "-10px", width: "40px" }, children: "glsl" })
            ] })
          ] }),
          (0, import_jsx_runtime4.jsx)(
            ToggleVisible,
            {
              onPointerEnter: () => {
                Object.keys(meshes).forEach((key) => {
                  const mesh = meshes[key];
                  mesh.material.wireframe = true;
                });
              },
              onPointerLeave: () => {
                Object.keys(meshes).forEach((key) => {
                  const mesh = meshes[key];
                  mesh.material.wireframe = false;
                });
              },
              onClick: (e2) => {
                e2.stopPropagation();
                Object.keys(meshes).forEach((key) => {
                  const mesh = meshes[key];
                  const invert = !showProgram;
                  mesh.visible = invert;
                  el.visible = invert;
                  setShowProgram(invert);
                });
              },
              children: showProgram ? (0, import_jsx_runtime4.jsx)(EyeOpenIcon, {}) : (0, import_jsx_runtime4.jsx)(EyeNoneIcon, {})
            }
          )
        ]
      }
    ),
    (0, import_jsx_runtime4.jsxs)(
      "div",
      {
        style: { maxHeight: toggleProgram ? "9999px" : 0, overflow: "hidden" },
        children: [
          (0, import_jsx_runtime4.jsxs)(ProgramsULHeader, { children: [
            (0, import_jsx_runtime4.jsx)(ButtonIcon, {}),
            " Uniforms:"
          ] }),
          (0, import_jsx_runtime4.jsx)(
            UniformsGL,
            {
              program,
              material,
              setTexNumber
            }
          ),
          (0, import_jsx_runtime4.jsxs)(ProgramsULHeader, { children: [
            (0, import_jsx_runtime4.jsx)(CubeIcon, {}),
            " Geometries:"
          ] }),
          (0, import_jsx_runtime4.jsx)(ProgramsUL, { children: meshes && Object.keys(meshes).map(
            (key) => meshes[key] && meshes[key].geometry && (0, import_jsx_runtime4.jsxs)(ProgramsGeoLi, { children: [
              (0, import_jsx_runtime4.jsxs)("span", { children: [
                meshes[key].geometry.type,
                ": "
              ] }),
              meshes[key].userData && meshes[key].userData.drawCount && (0, import_jsx_runtime4.jsxs)("b", { children: [
                (0, import_jsx_runtime4.jsxs)("div", { children: [
                  meshes[key].userData.drawCount.count,
                  (0, import_jsx_runtime4.jsxs)("small", { children: [
                    " ",
                    meshes[key].userData.drawCount.type,
                    "s"
                  ] })
                ] }),
                (0, import_jsx_runtime4.jsx)("br", {}),
                (0, import_jsx_runtime4.jsxs)("div", { children: [
                  Math.round(
                    estimateBytesUsed(meshes[key].geometry) / 1024 * 1e3
                  ) / 1e3,
                  "Kb",
                  (0, import_jsx_runtime4.jsx)("small", { children: " memory used" })
                ] })
              ] })
            ] }, key)
          ) }),
          (0, import_jsx_runtime4.jsxs)(
            ProgramConsole,
            {
              onClick: () => {
                console.info(material);
              },
              children: [
                "console.info(",
                material.type,
                ")"
              ]
            }
          )
        ]
      }
    )
  ] });
};
var ProgramsUI = () => {
  usePerf((state) => state.triggerProgramsUpdate);
  const programs = usePerf((state) => state.programs);
  return (0, import_jsx_runtime4.jsx)(ProgramsContainer, { children: programs && Array.from(programs.values()).map((el) => {
    if (!el) {
      return null;
    }
    return el ? (0, import_jsx_runtime4.jsx)(ProgramUI, { el }, el.material.uuid) : null;
  }) });
};

// node_modules/r3f-perf/dist/components/Perf.mjs
var colorsGraph = (colorBlind) => {
  const colors = {
    overClock: `#ff6eff`,
    fps: colorBlind ? "100, 143, 255" : "238,38,110",
    cpu: colorBlind ? "254, 254, 98" : "66,226,46",
    gpu: colorBlind ? "254,254,254" : "253,151,31",
    custom: colorBlind ? "86,180,233" : "40,255,255"
  };
  return colors;
};
var DynamicUIPerf = ({ showGraph, colorBlind }) => {
  const overclockingFps = usePerf((s2) => s2.overclockingFps);
  const fpsLimit = usePerf((s2) => s2.fpsLimit);
  return (0, import_jsx_runtime5.jsxs)(
    PerfB,
    {
      style: showGraph ? {
        color: overclockingFps ? colorsGraph(colorBlind).overClock.toString() : `rgb(${colorsGraph(colorBlind).fps})`
      } : {},
      children: [
        "FPS ",
        overclockingFps ? `${fpsLimit}🚀` : ""
      ]
    }
  );
};
var DynamicUI = ({ showGraph, colorBlind, customData, minimal }) => {
  const gl = usePerf((state) => state.gl);
  return gl ? (0, import_jsx_runtime5.jsxs)(PerfIContainer, { children: [
    (0, import_jsx_runtime5.jsxs)(PerfI, { children: [
      (0, import_jsx_runtime5.jsx)(LightningBoltIcon, {}),
      (0, import_jsx_runtime5.jsx)(
        PerfB,
        {
          style: showGraph ? {
            color: `rgb(${colorsGraph(colorBlind).gpu.toString()})`
          } : {},
          children: "GPU"
        }
      ),
      (0, import_jsx_runtime5.jsx)(PerfSmallI, { children: "ms" })
    ] }),
    (0, import_jsx_runtime5.jsxs)(PerfI, { children: [
      (0, import_jsx_runtime5.jsx)(RulerHorizontalIcon, {}),
      (0, import_jsx_runtime5.jsx)(
        PerfB,
        {
          style: showGraph ? {
            color: `rgb(${colorsGraph(colorBlind).cpu.toString()})`
          } : {},
          children: "CPU"
        }
      ),
      (0, import_jsx_runtime5.jsx)(PerfSmallI, { children: "ms" })
    ] }),
    (0, import_jsx_runtime5.jsxs)(PerfI, { children: [
      (0, import_jsx_runtime5.jsx)(LapTimerIcon, {}),
      (0, import_jsx_runtime5.jsx)(DynamicUIPerf, { showGraph, colorBlind })
    ] }),
    !minimal && gl && (0, import_jsx_runtime5.jsxs)(PerfI, { children: [
      (0, import_jsx_runtime5.jsx)(TextAlignJustifyIcon, {}),
      (0, import_jsx_runtime5.jsx)(PerfB, { children: gl.info.render.calls === 1 ? "call" : "calls" })
    ] }),
    !minimal && gl && (0, import_jsx_runtime5.jsxs)(PerfI, { children: [
      (0, import_jsx_runtime5.jsx)(VercelLogoIcon, {}),
      (0, import_jsx_runtime5.jsx)(PerfB, { children: "Triangles" })
    ] }),
    customData && (0, import_jsx_runtime5.jsxs)(PerfI, { children: [
      (0, import_jsx_runtime5.jsx)(BarChartIcon, {}),
      (0, import_jsx_runtime5.jsx)(PerfB, { style: showGraph ? { color: `rgb(${colorsGraph(colorBlind).custom})` } : {}, children: customData.name }),
      customData.info && (0, import_jsx_runtime5.jsx)(PerfSmallI, { children: customData.info })
    ] })
  ] }) : null;
};
var PerfUI = ({
  showGraph,
  colorBlind,
  deepAnalyze,
  customData,
  matrixUpdate,
  openByDefault,
  minimal
}) => {
  return (0, import_jsx_runtime5.jsxs)(import_jsx_runtime5.Fragment, { children: [
    (0, import_jsx_runtime5.jsx)(DynamicUI, { showGraph, colorBlind, customData, minimal }),
    !minimal && (0, import_jsx_runtime5.jsx)(
      PerfThree,
      {
        matrixUpdate,
        openByDefault,
        deepAnalyze,
        showGraph
      }
    )
  ] });
};
var InfoUI = ({ matrixUpdate }) => {
  return (0, import_jsx_runtime5.jsxs)("div", { children: [
    (0, import_jsx_runtime5.jsxs)(PerfI, { children: [
      (0, import_jsx_runtime5.jsx)(MarginIcon, {}),
      (0, import_jsx_runtime5.jsx)(PerfB, { children: "Geometries" })
    ] }),
    (0, import_jsx_runtime5.jsxs)(PerfI, { children: [
      (0, import_jsx_runtime5.jsx)(ImageIcon, {}),
      (0, import_jsx_runtime5.jsx)(PerfB, { children: "Textures" })
    ] }),
    (0, import_jsx_runtime5.jsxs)(PerfI, { children: [
      (0, import_jsx_runtime5.jsx)(ActivityLogIcon, {}),
      (0, import_jsx_runtime5.jsx)(PerfB, { children: "shaders" })
    ] }),
    (0, import_jsx_runtime5.jsxs)(PerfI, { children: [
      (0, import_jsx_runtime5.jsx)(MinusIcon, {}),
      (0, import_jsx_runtime5.jsx)(PerfB, { children: "Lines" })
    ] }),
    (0, import_jsx_runtime5.jsxs)(PerfI, { children: [
      (0, import_jsx_runtime5.jsx)(DotIcon, {}),
      (0, import_jsx_runtime5.jsx)(PerfB, { children: "Points" })
    ] }),
    matrixUpdate && (0, import_jsx_runtime5.jsxs)(PerfI, { children: [
      (0, import_jsx_runtime5.jsx)(DropdownMenuIcon, {}),
      (0, import_jsx_runtime5.jsx)(PerfB, { children: "Matrices" })
    ] })
  ] });
};
var ToggleEl = ({ tab, title, set }) => {
  const tabStore = usePerf((s2) => s2.tab);
  return (0, import_jsx_runtime5.jsx)(
    Toggle,
    {
      className: `${tabStore === tab ? " __perf_toggle_tab_active" : ""}`,
      onClick: () => {
        set(true);
        setPerf({ tab });
      },
      children: (0, import_jsx_runtime5.jsx)("span", { children: title })
    }
  );
};
var PerfThree = ({ openByDefault, showGraph, deepAnalyze, matrixUpdate }) => {
  const [show, set] = import_react28.default.useState(openByDefault);
  return (0, import_jsx_runtime5.jsxs)("span", { children: [
    (0, import_jsx_runtime5.jsx)(TabContainers, { show, showGraph, matrixUpdate }),
    openByDefault && !deepAnalyze ? null : (0, import_jsx_runtime5.jsxs)(ToggleContainer, { className: "__perf_toggle", children: [
      deepAnalyze && (0, import_jsx_runtime5.jsx)(ToggleEl, { tab: "programs", title: "Programs", set }),
      deepAnalyze && (0, import_jsx_runtime5.jsx)(ToggleEl, { tab: "infos", title: "Infos", set }),
      (0, import_jsx_runtime5.jsx)(
        Toggle,
        {
          onClick: () => {
            set(!show);
          },
          children: show ? (0, import_jsx_runtime5.jsxs)("span", { children: [
            (0, import_jsx_runtime5.jsx)(TriangleDownIcon, {}),
            " Minimize"
          ] }) : (0, import_jsx_runtime5.jsxs)("span", { children: [
            (0, import_jsx_runtime5.jsx)(TriangleUpIcon, {}),
            " More"
          ] })
        }
      )
    ] })
  ] });
};
var TabContainers = ({ show, showGraph, matrixUpdate }) => {
  const tab = usePerf((state) => state.tab);
  return (0, import_jsx_runtime5.jsxs)(import_jsx_runtime5.Fragment, { children: [
    (0, import_jsx_runtime5.jsx)(InfoUI, { matrixUpdate }),
    show && (0, import_jsx_runtime5.jsx)("div", { children: (0, import_jsx_runtime5.jsx)(ContainerScroll, { style: { marginTop: showGraph ? "38px" : 0 }, children: tab === "programs" && (0, import_jsx_runtime5.jsx)(ProgramsUI, {}) }) })
  ] });
};
var Perf = ({
  showGraph = true,
  colorBlind = false,
  openByDefault = true,
  className,
  overClock = false,
  style,
  position: position2 = "top-right",
  chart,
  logsPerSecond,
  deepAnalyze = false,
  antialias = true,
  customData,
  matrixUpdate,
  minimal
}) => {
  const perfContainerRef = (0, import_react28.useRef)(null);
  return (0, import_jsx_runtime5.jsxs)(import_jsx_runtime5.Fragment, { children: [
    (0, import_jsx_runtime5.jsx)(
      PerfHeadless,
      {
        logsPerSecond,
        chart,
        overClock,
        deepAnalyze,
        matrixUpdate
      }
    ),
    (0, import_jsx_runtime5.jsx)(HtmlMinimal, { name: "r3f-perf", children: (0, import_jsx_runtime5.jsxs)(
      PerfS,
      {
        className: (className ? " ".concat(className) : " ") + ` ${position2 ? position2 : ""} ${minimal ? "minimal" : ""}`,
        style: { minHeight: minimal ? "37px" : showGraph ? "100px" : "60px", ...style },
        ref: perfContainerRef,
        children: [
          (0, import_jsx_runtime5.jsx)(
            ChartUI,
            {
              perfContainerRef,
              colorBlind,
              chart,
              showGraph,
              antialias,
              customData,
              minimal,
              matrixUpdate
            }
          ),
          (0, import_jsx_runtime5.jsx)(
            PerfUI,
            {
              colorBlind,
              showGraph,
              deepAnalyze,
              openByDefault,
              customData,
              matrixUpdate,
              minimal
            }
          )
        ]
      }
    ) })
  ] });
};
export {
  Perf,
  PerfHeadless,
  getCustomData,
  getPerf,
  setCustomData,
  setPerf,
  usePerf
};
/*! Bundled license information:

use-sync-external-store/cjs/use-sync-external-store-shim.development.js:
  (**
   * @license React
   * use-sync-external-store-shim.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js:
  (**
   * @license React
   * use-sync-external-store-shim/with-selector.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

camera-controls/dist/camera-controls.module.js:
  (*!
   * camera-controls
   * https://github.com/yomotsu/camera-controls
   * (c) 2017 @yomotsu
   * Released under the MIT License.
   *)
*/
//# sourceMappingURL=r3f-perf.js.map
