{
  "version": 3,
  "sources": ["../../@react-three/drei/web/Html.js", "../../@react-three/drei/web/CycleRaycast.js", "../../@react-three/drei/web/useCursor.js", "../../@react-three/drei/web/Loader.js", "../../@react-three/drei/core/useProgress.js", "../../@react-three/drei/web/ScrollControls.js", "../../@react-three/drei/web/PresentationControls.js", "../../@react-three/drei/web/KeyboardControls.js", "../../zustand/esm/middleware.js", "../../@react-three/drei/web/Select.js", "../../zustand/esm/shallow.js", "../../@react-three/drei/core/Billboard.js", "../../@react-three/drei/core/ScreenSpace.js", "../../@react-three/drei/core/QuadraticBezierLine.js", "../../@react-three/drei/core/Line.js", "../../@react-three/drei/core/CubicBezierLine.js", "../../@react-three/drei/core/CatmullRomLine.js", "../../@react-three/drei/core/PositionalAudio.js", "../../@react-three/drei/core/Text.js", "../../@react-three/drei/node_modules/suspend-react/dist/index.js", "../../@react-three/drei/core/Text3D.js", "../../@react-three/drei/core/Effects.js", "../../@react-three/drei/core/GradientTexture.js", "../../@react-three/drei/core/Image.js", "../../@react-three/drei/core/shaderMaterial.js", "../../@react-three/drei/core/useTexture.js", "../../@react-three/drei/core/Edges.js", "../../@react-three/drei/core/Trail.js", "../../@react-three/drei/core/Sampler.js", "../../@react-three/drei/core/ComputedAttribute.js", "../../@react-three/drei/core/Clone.js", "../../@react-three/drei/core/MarchingCubes.js", "../../@react-three/drei/core/Decal.js", "../../@react-three/drei/core/Svg.js", "../../@react-three/drei/core/AsciiRenderer.js", "../../@react-three/drei/core/OrthographicCamera.js", "../../@react-three/drei/core/useFBO.js", "../../@react-three/drei/core/PerspectiveCamera.js", "../../@react-three/drei/core/CubeCamera.js", "../../@react-three/drei/core/DeviceOrientationControls.js", "../../@react-three/drei/core/FlyControls.js", "../../@react-three/drei/core/MapControls.js", "../../@react-three/drei/core/OrbitControls.js", "../../@react-three/drei/core/TrackballControls.js", "../../@react-three/drei/core/ArcballControls.js", "../../@react-three/drei/core/TransformControls.js", "../../@react-three/drei/core/PointerLockControls.js", "../../@react-three/drei/core/FirstPersonControls.js", "../../@react-three/drei/core/GizmoHelper.js", "../../@react-three/drei/core/useCamera.js", "../../@react-three/drei/core/GizmoViewcube.js", "../../@react-three/drei/core/GizmoViewport.js", "../../@react-three/drei/core/Grid.js", "../../@react-three/drei/core/useCubeTexture.js", "../../@react-three/drei/core/useFBX.js", "../../@react-three/drei/core/useGLTF.js", "../../@react-three/drei/core/useKTX2.js", "../../@react-three/drei/core/useVideoTexture.js", "../../@react-three/drei/core/Stats.js", "../../@react-three/drei/helpers/useEffectfulState.js", "../../@react-three/drei/core/useDepthBuffer.js", "../../@react-three/drei/core/useAspect.js", "../../@react-three/drei/core/useDetectGPU.js", "../../@react-three/drei/core/useHelper.js", "../../@react-three/drei/core/useBVH.js", "../../three-mesh-bvh/src/core/Constants.js", "../../three-mesh-bvh/src/core/MeshBVHNode.js", "../../three-mesh-bvh/src/utils/ArrayBoxUtilities.js", "../../three-mesh-bvh/src/core/buildFunctions.js", "../../three-mesh-bvh/src/math/SeparatingAxisBounds.js", "../../three-mesh-bvh/src/math/MathUtilities.js", "../../three-mesh-bvh/src/math/ExtendedTriangle.js", "../../three-mesh-bvh/src/math/OrientedBox.js", "../../three-mesh-bvh/src/utils/ThreeRayIntersectUtilities.js", "../../three-mesh-bvh/src/utils/GeometryRayIntersectUtilities.js", "../../three-mesh-bvh/src/utils/TriangleUtilities.js", "../../three-mesh-bvh/src/utils/PrimitivePool.js", "../../three-mesh-bvh/src/core/nodeBufferFunctions.js", "../../three-mesh-bvh/src/core/castFunctions.js", "../../three-mesh-bvh/src/core/MeshBVH.js", "../../three-mesh-bvh/src/objects/MeshBVHVisualizer.js", "../../three-mesh-bvh/src/debug/Debug.js", "../../three-mesh-bvh/src/utils/ExtensionUtilities.js", "../../three-mesh-bvh/src/gpu/VertexAttributeTexture.js", "../../three-mesh-bvh/src/gpu/MeshBVHUniformStruct.js", "../../three-mesh-bvh/src/gpu/shaderFunctions.js", "../../three-mesh-bvh/src/utils/StaticGeometryGenerator.js", "../../@react-three/drei/core/useContextBridge.js", "../../@react-three/drei/core/useAnimations.js", "../../@react-three/drei/core/useIntersect.js", "../../@react-three/drei/core/useBoxProjectedEnv.js", "../../@react-three/drei/core/BBAnchor.js", "../../@react-three/drei/core/useTrailTexture.js", "../../@react-three/drei/core/CurveModifier.js", "../../@react-three/drei/core/MeshDistortMaterial.js", "../../@react-three/drei/helpers/glsl/distort.vert.glsl.js", "../../@react-three/drei/core/MeshWobbleMaterial.js", "../../@react-three/drei/core/MeshReflectorMaterial.js", "../../@react-three/drei/materials/ConvolutionMaterial.js", "../../@react-three/drei/materials/BlurPass.js", "../../@react-three/drei/materials/MeshReflectorMaterial.js", "../../@react-three/drei/core/MeshRefractionMaterial.js", "../../@react-three/drei/materials/MeshRefractionMaterial.js", "../../@react-three/drei/core/PointMaterial.js", "../../@react-three/drei/core/softShadows.js", "../../@react-three/drei/core/shapes.js", "../../@react-three/drei/core/RoundedBox.js", "../../@react-three/drei/core/ScreenQuad.js", "../../@react-three/drei/core/Center.js", "../../@react-three/drei/core/Bounds.js", "../../@react-three/drei/core/CameraShake.js", "../../@react-three/drei/core/Float.js", "../../@react-three/drei/core/Stage.js", "../../@react-three/drei/core/Environment.js", "../../@react-three/drei/helpers/environment-assets.js", "../../@react-three/drei/core/ContactShadows.js", "../../@react-three/drei/core/AccumulativeShadows.js", "../../@react-three/drei/core/Backdrop.js", "../../@react-three/drei/core/Shadow.js", "../../@react-three/drei/core/Reflector.js", "../../@react-three/drei/core/SpotLight.js", "../../@react-three/drei/materials/SpotLightMaterial.js", "../../@react-three/drei/helpers/glsl/DefaultSpotlightShadowShadows.glsl.js", "../../@react-three/drei/core/Lightformer.js", "../../@react-three/drei/core/Sky.js", "../../@react-three/drei/core/Stars.js", "../../@react-three/drei/core/Cloud.js", "../../@react-three/drei/core/Sparkles.js", "../../@react-three/drei/helpers/glsl/Sparkles.frag.glsl.js", "../../@react-three/drei/helpers/glsl/Sparkles.vert.glsl.js", "../../@react-three/drei/core/useMatcapTexture.js", "../../@react-three/drei/core/useNormalTexture.js", "../../@react-three/drei/core/Points.js", "../../@react-three/drei/core/Instances.js", "../../@react-three/drei/core/Segments.js", "../../@react-three/drei/core/Detailed.js", "../../@react-three/drei/core/Preload.js", "../../@react-three/drei/core/BakeShadows.js", "../../@react-three/drei/core/meshBounds.js", "../../@react-three/drei/core/AdaptiveDpr.js", "../../@react-three/drei/core/AdaptiveEvents.js", "../../@react-three/drei/core/PerformanceMonitor.js", "../../@react-three/drei/core/RenderTexture.js", "../../@react-three/drei/core/Mask.js", "../../@react-three/drei/core/Hud.js", "../../@react-three/drei/web/View.js", "../../@react-three/drei/web/pivotControls/index.js", "../../@react-three/drei/web/pivotControls/AxisArrow.js", "../../@react-three/drei/web/pivotControls/context.js", "../../@react-three/drei/web/pivotControls/PlaneSlider.js", "../../@react-three/drei/web/pivotControls/AxisRotator.js"],
  "sourcesContent": ["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom/client';\nimport { Vector3, OrthographicCamera, PerspectiveCamera } from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nconst v1 = new Vector3();\nconst v2 = new Vector3();\nconst v3 = new Vector3();\n\nfunction defaultCalculatePosition(el, camera, size) {\n  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n  objectPos.project(camera);\n  const widthHalf = size.width / 2;\n  const heightHalf = size.height / 2;\n  return [objectPos.x * widthHalf + widthHalf, -(objectPos.y * heightHalf) + heightHalf];\n}\n\nfunction isObjectBehindCamera(el, camera) {\n  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n  const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n  const deltaCamObj = objectPos.sub(cameraPos);\n  const camDir = camera.getWorldDirection(v3);\n  return deltaCamObj.angleTo(camDir) > Math.PI / 2;\n}\n\nfunction isObjectVisible(el, camera, raycaster, occlude) {\n  const elPos = v1.setFromMatrixPosition(el.matrixWorld);\n  const screenPos = elPos.clone();\n  screenPos.project(camera);\n  raycaster.setFromCamera(screenPos, camera);\n  const intersects = raycaster.intersectObjects(occlude, true);\n\n  if (intersects.length) {\n    const intersectionDistance = intersects[0].distance;\n    const pointDistance = elPos.distanceTo(raycaster.ray.origin);\n    return pointDistance < intersectionDistance;\n  }\n\n  return true;\n}\n\nfunction objectScale(el, camera) {\n  if (camera instanceof OrthographicCamera) {\n    return camera.zoom;\n  } else if (camera instanceof PerspectiveCamera) {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n    const vFOV = camera.fov * Math.PI / 180;\n    const dist = objectPos.distanceTo(cameraPos);\n    const scaleFOV = 2 * Math.tan(vFOV / 2) * dist;\n    return 1 / scaleFOV;\n  } else {\n    return 1;\n  }\n}\n\nfunction objectZIndex(el, camera, zIndexRange) {\n  if (camera instanceof PerspectiveCamera || camera instanceof OrthographicCamera) {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n    const dist = objectPos.distanceTo(cameraPos);\n    const A = (zIndexRange[1] - zIndexRange[0]) / (camera.far - camera.near);\n    const B = zIndexRange[1] - A * camera.far;\n    return Math.round(A * dist + B);\n  }\n\n  return undefined;\n}\n\nconst epsilon = value => Math.abs(value) < 1e-10 ? 0 : value;\n\nfunction getCSSMatrix(matrix, multipliers, prepend = '') {\n  let matrix3d = 'matrix3d(';\n\n  for (let i = 0; i !== 16; i++) {\n    matrix3d += epsilon(multipliers[i] * matrix.elements[i]) + (i !== 15 ? ',' : ')');\n  }\n\n  return prepend + matrix3d;\n}\n\nconst getCameraCSSMatrix = (multipliers => {\n  return matrix => getCSSMatrix(matrix, multipliers);\n})([1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1]);\n\nconst getObjectCSSMatrix = (scaleMultipliers => {\n  return (matrix, factor) => getCSSMatrix(matrix, scaleMultipliers(factor), 'translate(-50%,-50%)');\n})(f => [1 / f, 1 / f, 1 / f, 1, -1 / f, -1 / f, -1 / f, -1, 1 / f, 1 / f, 1 / f, 1, 1, 1, 1, 1]);\n\nconst Html = /*#__PURE__*/React.forwardRef(({\n  children,\n  eps = 0.001,\n  style,\n  className,\n  prepend,\n  center,\n  fullscreen,\n  portal,\n  distanceFactor,\n  sprite = false,\n  transform = false,\n  occlude,\n  onOcclude,\n  zIndexRange = [16777271, 0],\n  calculatePosition = defaultCalculatePosition,\n  as = 'div',\n  wrapperClass,\n  pointerEvents = 'auto',\n  ...props\n}, ref) => {\n  const {\n    gl,\n    camera,\n    scene,\n    size,\n    raycaster,\n    events\n  } = useThree();\n  const [el] = React.useState(() => document.createElement(as));\n  const root = React.useRef();\n  const group = React.useRef(null);\n  const oldZoom = React.useRef(0);\n  const oldPosition = React.useRef([0, 0]);\n  const transformOuterRef = React.useRef(null);\n  const transformInnerRef = React.useRef(null); // Append to the connected element, which makes HTML work with views\n\n  const target = (portal == null ? void 0 : portal.current) || events.connected || gl.domElement.parentNode;\n  React.useLayoutEffect(() => {\n    if (group.current) {\n      const currentRoot = root.current = ReactDOM.createRoot(el);\n      scene.updateMatrixWorld();\n\n      if (transform) {\n        el.style.cssText = `position:absolute;top:0;left:0;pointer-events:none;overflow:hidden;`;\n      } else {\n        const vec = calculatePosition(group.current, camera, size);\n        el.style.cssText = `position:absolute;top:0;left:0;transform:translate3d(${vec[0]}px,${vec[1]}px,0);transform-origin:0 0;`;\n      }\n\n      if (target) {\n        if (prepend) target.prepend(el);else target.appendChild(el);\n      }\n\n      return () => {\n        if (target) target.removeChild(el);\n        currentRoot.unmount();\n      };\n    }\n  }, [target, transform]);\n  React.useLayoutEffect(() => {\n    if (wrapperClass) el.className = wrapperClass;\n  }, [wrapperClass]);\n  const styles = React.useMemo(() => {\n    if (transform) {\n      return {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: size.width,\n        height: size.height,\n        transformStyle: 'preserve-3d',\n        pointerEvents: 'none'\n      };\n    } else {\n      return {\n        position: 'absolute',\n        transform: center ? 'translate3d(-50%,-50%,0)' : 'none',\n        ...(fullscreen && {\n          top: -size.height / 2,\n          left: -size.width / 2,\n          width: size.width,\n          height: size.height\n        }),\n        ...style\n      };\n    }\n  }, [style, center, fullscreen, size, transform]);\n  const transformInnerStyles = React.useMemo(() => ({\n    position: 'absolute',\n    pointerEvents\n  }), [pointerEvents]);\n  React.useLayoutEffect(() => {\n    if (transform) {\n      var _root$current;\n\n      (_root$current = root.current) == null ? void 0 : _root$current.render( /*#__PURE__*/React.createElement(\"div\", {\n        ref: transformOuterRef,\n        style: styles\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: transformInnerRef,\n        style: transformInnerStyles\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: ref,\n        className: className,\n        style: style,\n        children: children\n      }))));\n    } else {\n      var _root$current2;\n\n      (_root$current2 = root.current) == null ? void 0 : _root$current2.render( /*#__PURE__*/React.createElement(\"div\", {\n        ref: ref,\n        style: styles,\n        className: className,\n        children: children\n      }));\n    }\n  });\n  const visible = React.useRef(true);\n  useFrame(() => {\n    if (group.current) {\n      camera.updateMatrixWorld();\n      group.current.updateWorldMatrix(true, false);\n      const vec = transform ? oldPosition.current : calculatePosition(group.current, camera, size);\n\n      if (transform || Math.abs(oldZoom.current - camera.zoom) > eps || Math.abs(oldPosition.current[0] - vec[0]) > eps || Math.abs(oldPosition.current[1] - vec[1]) > eps) {\n        const isBehindCamera = isObjectBehindCamera(group.current, camera);\n        let raytraceTarget = false;\n\n        if (typeof occlude === 'boolean') {\n          if (occlude === true) {\n            raytraceTarget = [scene];\n          }\n        } else if (Array.isArray(occlude)) {\n          raytraceTarget = occlude.map(item => item.current);\n        }\n\n        const previouslyVisible = visible.current;\n\n        if (raytraceTarget) {\n          const isvisible = isObjectVisible(group.current, camera, raycaster, raytraceTarget);\n          visible.current = isvisible && !isBehindCamera;\n        } else {\n          visible.current = !isBehindCamera;\n        }\n\n        if (previouslyVisible !== visible.current) {\n          if (onOcclude) onOcclude(!visible.current);else el.style.display = visible.current ? 'block' : 'none';\n        }\n\n        el.style.zIndex = `${objectZIndex(group.current, camera, zIndexRange)}`;\n\n        if (transform) {\n          const [widthHalf, heightHalf] = [size.width / 2, size.height / 2];\n          const fov = camera.projectionMatrix.elements[5] * heightHalf;\n          const {\n            isOrthographicCamera,\n            top,\n            left,\n            bottom,\n            right\n          } = camera;\n          const cameraMatrix = getCameraCSSMatrix(camera.matrixWorldInverse);\n          const cameraTransform = isOrthographicCamera ? `scale(${fov})translate(${epsilon(-(right + left) / 2)}px,${epsilon((top + bottom) / 2)}px)` : `translateZ(${fov}px)`;\n          let matrix = group.current.matrixWorld;\n\n          if (sprite) {\n            matrix = camera.matrixWorldInverse.clone().transpose().copyPosition(matrix).scale(group.current.scale);\n            matrix.elements[3] = matrix.elements[7] = matrix.elements[11] = 0;\n            matrix.elements[15] = 1;\n          }\n\n          el.style.width = size.width + 'px';\n          el.style.height = size.height + 'px';\n          el.style.perspective = isOrthographicCamera ? '' : `${fov}px`;\n\n          if (transformOuterRef.current && transformInnerRef.current) {\n            transformOuterRef.current.style.transform = `${cameraTransform}${cameraMatrix}translate(${widthHalf}px,${heightHalf}px)`;\n            transformInnerRef.current.style.transform = getObjectCSSMatrix(matrix, 1 / ((distanceFactor || 10) / 400));\n          }\n        } else {\n          const scale = distanceFactor === undefined ? 1 : objectScale(group.current, camera) * distanceFactor;\n          el.style.transform = `translate3d(${vec[0]}px,${vec[1]}px,0) scale(${scale})`;\n        }\n\n        oldPosition.current = vec;\n        oldZoom.current = camera.zoom;\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n    ref: group\n  }));\n});\n\nexport { Html };\n", "import * as React from 'react';\nimport { useThree } from '@react-three/fiber';\n\nfunction CycleRaycast({\n  onChanged,\n  portal,\n  preventDefault = true,\n  scroll = true,\n  keyCode = 9\n}) {\n  const cycle = React.useRef(0);\n  const setEvents = useThree(state => state.setEvents);\n  const get = useThree(state => state.get);\n  const gl = useThree(state => state.gl);\n  React.useEffect(() => {\n    var _portal$current;\n\n    let hits = [];\n    let lastEvent = undefined;\n    const prev = get().events.filter;\n    const target = (_portal$current = portal == null ? void 0 : portal.current) !== null && _portal$current !== void 0 ? _portal$current : gl.domElement.parentNode; // Render custom status\n\n    const renderStatus = () => target && onChanged && onChanged(hits, Math.round(cycle.current) % hits.length); // Overwrite the raycasters custom filter (this only exists in r3f)\n\n\n    setEvents({\n      filter: (intersections, state) => {\n        // Reset cycle when the intersections change\n        let clone = [...intersections];\n\n        if (clone.length !== hits.length || !hits.every(hit => clone.map(e => e.object.uuid).includes(hit.object.uuid))) {\n          cycle.current = 0;\n          hits = clone;\n          renderStatus();\n        } // Run custom filter if there is one\n\n\n        if (prev) clone = prev(clone, state); // Cycle through the actual raycast intersects\n\n        for (let i = 0; i < Math.round(cycle.current) % clone.length; i++) {\n          const first = clone.shift();\n          clone = [...clone, first];\n        }\n\n        return clone;\n      }\n    }); // Cycle, refresh events and render status\n\n    const refresh = fn => {\n      var _get$events$handlers, _get$events$handlers2;\n\n      cycle.current = fn(cycle.current); // Cancel hovered elements and fake a pointer-move\n\n      (_get$events$handlers = get().events.handlers) == null ? void 0 : _get$events$handlers.onPointerCancel(undefined);\n      (_get$events$handlers2 = get().events.handlers) == null ? void 0 : _get$events$handlers2.onPointerMove(lastEvent);\n      renderStatus();\n    }; // Key events\n\n\n    const tabEvent = event => {\n      if (event.keyCode || event.which === keyCode) {\n        if (preventDefault) event.preventDefault();\n        if (hits.length > 1) refresh(current => current + 1);\n      }\n    }; // Wheel events\n\n\n    const wheelEvent = event => {\n      if (preventDefault) event.preventDefault();\n      let delta = 0;\n      if (!event) event = window.event;\n      if (event.wheelDelta) delta = event.wheelDelta / 120;else if (event.detail) delta = -event.detail / 3;\n      if (hits.length > 1) refresh(current => Math.abs(current - delta));\n    }; // Catch last move event and position custom status\n\n\n    const moveEvent = event => lastEvent = event;\n\n    document.addEventListener('pointermove', moveEvent, {\n      passive: true\n    });\n    if (scroll) document.addEventListener('wheel', wheelEvent);\n    if (keyCode !== undefined) document.addEventListener('keydown', tabEvent);\n    return () => {\n      // Clean up\n      setEvents({\n        filter: prev\n      });\n      if (keyCode !== undefined) document.removeEventListener('keydown', tabEvent);\n      if (scroll) document.removeEventListener('wheel', wheelEvent);\n      document.removeEventListener('pointermove', moveEvent);\n    };\n  }, [gl, get, setEvents, preventDefault, scroll, keyCode]);\n  return null;\n}\n\nexport { CycleRaycast };\n", "import * as React from 'react';\n\nfunction useCursor(hovered, onPointerOver = 'pointer', onPointerOut = 'auto') {\n  React.useEffect(() => {\n    if (hovered) {\n      document.body.style.cursor = onPointerOver;\n      return () => void (document.body.style.cursor = onPointerOut);\n    }\n  }, [hovered]);\n}\n\nexport { useCursor };\n", "import * as React from 'react';\nimport { useProgress } from '../core/useProgress.js';\n\nconst defaultDataInterpolation = p => `Loading ${p.toFixed(2)}%`;\n\nfunction Loader({\n  containerStyles,\n  innerStyles,\n  barStyles,\n  dataStyles,\n  dataInterpolation = defaultDataInterpolation,\n  initialState = active => active\n}) {\n  const {\n    active,\n    progress\n  } = useProgress();\n  const progressRef = React.useRef(0);\n  const rafRef = React.useRef(0);\n  const progressSpanRef = React.useRef(null);\n  const [shown, setShown] = React.useState(initialState(active));\n  React.useEffect(() => {\n    let t;\n    if (active !== shown) t = setTimeout(() => setShown(active), 300);\n    return () => clearTimeout(t);\n  }, [shown, active]);\n  const updateProgress = React.useCallback(() => {\n    if (!progressSpanRef.current) return;\n    progressRef.current += (progress - progressRef.current) / 2;\n    if (progressRef.current > 0.95 * progress || progress === 100) progressRef.current = progress;\n    progressSpanRef.current.innerText = dataInterpolation(progressRef.current);\n    if (progressRef.current < progress) rafRef.current = requestAnimationFrame(updateProgress);\n  }, [dataInterpolation, progress]);\n  React.useEffect(() => {\n    updateProgress();\n    return () => cancelAnimationFrame(rafRef.current);\n  }, [updateProgress]);\n  return shown ? /*#__PURE__*/React.createElement(\"div\", {\n    style: { ...styles.container,\n      opacity: active ? 1 : 0,\n      ...containerStyles\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n    style: { ...styles.inner,\n      ...innerStyles\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: { ...styles.bar,\n      transform: `scaleX(${progress / 100})`,\n      ...barStyles\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    ref: progressSpanRef,\n    style: { ...styles.data,\n      ...dataStyles\n    }\n  })))) : null;\n}\nconst styles = {\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    background: '#171717',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    transition: 'opacity 300ms ease',\n    zIndex: 1000\n  },\n  inner: {\n    width: 100,\n    height: 3,\n    background: '#272727',\n    textAlign: 'center'\n  },\n  bar: {\n    height: 3,\n    width: '100%',\n    background: 'white',\n    transition: 'transform 200ms',\n    transformOrigin: 'left center'\n  },\n  data: {\n    display: 'inline-block',\n    position: 'relative',\n    fontVariantNumeric: 'tabular-nums',\n    marginTop: '0.8em',\n    color: '#f0f0f0',\n    fontSize: '0.6em',\n    fontFamily: `-apple-system, BlinkMacSystemFont, \"Inter\", \"Segoe UI\", \"Helvetica Neue\", Helvetica, Arial, Roboto, Ubuntu, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n    whiteSpace: 'nowrap'\n  }\n};\n\nexport { Loader };\n", "import { DefaultLoadingManager } from 'three';\nimport create from 'zustand';\n\nlet saveLastTotalLoaded = 0;\nconst useProgress = create(set => {\n  DefaultLoadingManager.onStart = (item, loaded, total) => {\n    set({\n      active: true,\n      item,\n      loaded,\n      total,\n      progress: (loaded - saveLastTotalLoaded) / (total - saveLastTotalLoaded) * 100\n    });\n  };\n\n  DefaultLoadingManager.onLoad = () => {\n    set({\n      active: false\n    });\n  };\n\n  DefaultLoadingManager.onError = item => set(state => ({\n    errors: [...state.errors, item]\n  }));\n\n  DefaultLoadingManager.onProgress = (item, loaded, total) => {\n    if (loaded === total) {\n      saveLastTotalLoaded = total;\n    }\n\n    set({\n      active: true,\n      item,\n      loaded,\n      total,\n      progress: (loaded - saveLastTotalLoaded) / (total - saveLastTotalLoaded) * 100 || 100\n    });\n  };\n\n  return {\n    errors: [],\n    active: false,\n    progress: 0,\n    item: '',\n    loaded: 0,\n    total: 0\n  };\n});\n\nexport { useProgress };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom/client';\nimport { useThree, useFrame, context as context$1 } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\n\nconst context = /*#__PURE__*/React.createContext(null);\nfunction useScroll() {\n  return React.useContext(context);\n}\nfunction ScrollControls({\n  eps = 0.00001,\n  enabled = true,\n  infinite,\n  horizontal,\n  pages = 1,\n  distance = 1,\n  damping = 4,\n  style = {},\n  children\n}) {\n  const {\n    get,\n    setEvents,\n    gl,\n    size,\n    invalidate,\n    events\n  } = useThree();\n  const [el] = React.useState(() => document.createElement('div'));\n  const [fill] = React.useState(() => document.createElement('div'));\n  const [fixed] = React.useState(() => document.createElement('div'));\n  const target = gl.domElement.parentNode;\n  const scroll = React.useRef(0);\n  const state = React.useMemo(() => {\n    const state = {\n      el,\n      eps,\n      fill,\n      fixed,\n      horizontal,\n      damping,\n      offset: 0,\n      delta: 0,\n      scroll,\n      pages,\n\n      // 0-1 for a range between from -> from + distance\n      range(from, distance, margin = 0) {\n        const start = from - margin;\n        const end = start + distance + margin * 2;\n        return this.offset < start ? 0 : this.offset > end ? 1 : (this.offset - start) / (end - start);\n      },\n\n      // 0-1-0 for a range between from -> from + distance\n      curve(from, distance, margin = 0) {\n        return Math.sin(this.range(from, distance, margin) * Math.PI);\n      },\n\n      // true/false for a range between from -> from + distance\n      visible(from, distance, margin = 0) {\n        const start = from - margin;\n        const end = start + distance + margin * 2;\n        return this.offset >= start && this.offset <= end;\n      }\n\n    };\n    return state;\n  }, [eps, damping, horizontal, pages]);\n  React.useEffect(() => {\n    el.style.position = 'absolute';\n    el.style.width = '100%';\n    el.style.height = '100%';\n    el.style[horizontal ? 'overflowX' : 'overflowY'] = 'auto';\n    el.style[horizontal ? 'overflowY' : 'overflowX'] = 'hidden';\n    el.style.top = '0px';\n    el.style.left = '0px';\n\n    for (const key in style) {\n      el.style[key] = style[key];\n    }\n\n    fixed.style.position = 'sticky';\n    fixed.style.top = '0px';\n    fixed.style.left = '0px';\n    fixed.style.width = '100%';\n    fixed.style.height = '100%';\n    fixed.style.overflow = 'hidden';\n    el.appendChild(fixed);\n    fill.style.height = horizontal ? '100%' : `${pages * distance * 100}%`;\n    fill.style.width = horizontal ? `${pages * distance * 100}%` : '100%';\n    fill.style.pointerEvents = 'none';\n    el.appendChild(fill);\n    target.appendChild(el); // Init scroll one pixel in to allow upward/leftward scroll\n\n    el[horizontal ? 'scrollLeft' : 'scrollTop'] = 1;\n    const oldTarget = events.connected || gl.domElement;\n    requestAnimationFrame(() => events.connect == null ? void 0 : events.connect(el));\n    const oldCompute = get().events.compute;\n    setEvents({\n      compute(event, state) {\n        const offsetX = event.clientX - target.offsetLeft;\n        const offsetY = event.clientY - target.offsetTop;\n        state.pointer.set(offsetX / state.size.width * 2 - 1, -(offsetY / state.size.height) * 2 + 1);\n        state.raycaster.setFromCamera(state.pointer, state.camera);\n      }\n\n    });\n    return () => {\n      target.removeChild(el);\n      setEvents({\n        compute: oldCompute\n      });\n      events.connect == null ? void 0 : events.connect(oldTarget);\n    };\n  }, [pages, distance, horizontal, el, fill, fixed, target]);\n  React.useEffect(() => {\n    if (events.connected === el) {\n      const containerLength = size[horizontal ? 'width' : 'height'];\n      const scrollLength = el[horizontal ? 'scrollWidth' : 'scrollHeight'];\n      const scrollThreshold = scrollLength - containerLength;\n      let current = 0;\n      let disableScroll = true;\n      let firstRun = true;\n\n      const onScroll = () => {\n        // Prevent first scroll because it is indirectly caused by the one pixel offset\n        if (!enabled || firstRun) return;\n        invalidate();\n        current = el[horizontal ? 'scrollLeft' : 'scrollTop'];\n        scroll.current = current / scrollThreshold;\n\n        if (infinite) {\n          if (!disableScroll) {\n            if (current >= scrollThreshold) {\n              const damp = 1 - state.offset;\n              el[horizontal ? 'scrollLeft' : 'scrollTop'] = 1;\n              scroll.current = state.offset = -damp;\n              disableScroll = true;\n            } else if (current <= 0) {\n              const damp = 1 + state.offset;\n              el[horizontal ? 'scrollLeft' : 'scrollTop'] = scrollLength;\n              scroll.current = state.offset = damp;\n              disableScroll = true;\n            }\n          }\n\n          if (disableScroll) setTimeout(() => disableScroll = false, 40);\n        }\n      };\n\n      el.addEventListener('scroll', onScroll, {\n        passive: true\n      });\n      requestAnimationFrame(() => firstRun = false);\n\n      const onWheel = e => el.scrollLeft += e.deltaY / 2;\n\n      if (horizontal) el.addEventListener('wheel', onWheel, {\n        passive: true\n      });\n      return () => {\n        el.removeEventListener('scroll', onScroll);\n        if (horizontal) el.removeEventListener('wheel', onWheel);\n      };\n    }\n  }, [el, events, size, infinite, state, invalidate, horizontal, enabled]);\n  let last = 0;\n  useFrame((_, delta) => {\n    state.offset = THREE.MathUtils.damp(last = state.offset, scroll.current, damping, delta);\n    state.delta = THREE.MathUtils.damp(state.delta, Math.abs(last - state.offset), damping, delta);\n    if (state.delta > eps) invalidate();\n  });\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: state\n  }, children);\n}\nconst ScrollCanvas = /*#__PURE__*/React.forwardRef(({\n  children\n}, ref) => {\n  const group = React.useRef(null);\n  const state = useScroll();\n  const {\n    width,\n    height\n  } = useThree(state => state.viewport);\n  useFrame(() => {\n    group.current.position.x = state.horizontal ? -width * (state.pages - 1) * state.offset : 0;\n    group.current.position.y = state.horizontal ? 0 : height * (state.pages - 1) * state.offset;\n  });\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: mergeRefs([ref, group])\n  }, children);\n});\nconst ScrollHtml = /*#__PURE__*/React.forwardRef(({\n  children,\n  style,\n  ...props\n}, ref) => {\n  const state = useScroll();\n  const group = React.useRef(null);\n  const {\n    width,\n    height\n  } = useThree(state => state.size);\n  const fiberState = React.useContext(context$1);\n  const root = React.useMemo(() => ReactDOM.createRoot(state.fixed), [state.fixed]);\n  useFrame(() => {\n    if (state.delta > state.eps) {\n      group.current.style.transform = `translate3d(${state.horizontal ? -width * (state.pages - 1) * state.offset : 0}px,${state.horizontal ? 0 : height * (state.pages - 1) * -state.offset}px,0)`;\n    }\n  });\n  root.render( /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: mergeRefs([ref, group]),\n    style: { ...style,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      willChange: 'transform'\n    }\n  }, props), /*#__PURE__*/React.createElement(context.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(context$1.Provider, {\n    value: fiberState\n  }, children))));\n  return null;\n});\nconst Scroll = /*#__PURE__*/React.forwardRef(({\n  html,\n  ...props\n}, ref) => {\n  const El = html ? ScrollHtml : ScrollCanvas;\n  return /*#__PURE__*/React.createElement(El, _extends({\n    ref: ref\n  }, props));\n});\n\nexport { Scroll, ScrollControls, useScroll };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { MathUtils } from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { useSpring, a } from '@react-spring/three';\nimport { useGesture } from '@use-gesture/react';\n\nfunction PresentationControls({\n  enabled = true,\n  snap,\n  global,\n  cursor = true,\n  children,\n  speed = 1,\n  rotation = [0, 0, 0],\n  zoom = 1,\n  polar = [0, Math.PI / 2],\n  azimuth = [-Infinity, Infinity],\n  config = {\n    mass: 1,\n    tension: 170,\n    friction: 26\n  }\n}) {\n  const {\n    size,\n    gl\n  } = useThree();\n  const rPolar = React.useMemo(() => [rotation[0] + polar[0], rotation[0] + polar[1]], [rotation[0], polar[0], polar[1]]);\n  const rAzimuth = React.useMemo(() => [rotation[1] + azimuth[0], rotation[1] + azimuth[1]], [rotation[1], azimuth[0], azimuth[1]]);\n  const rInitial = React.useMemo(() => [MathUtils.clamp(rotation[0], ...rPolar), MathUtils.clamp(rotation[1], ...rAzimuth), rotation[2]], [rotation[0], rotation[1], rotation[2], rPolar, rAzimuth]);\n  const [spring, api] = useSpring(() => ({\n    scale: 1,\n    rotation: rInitial,\n    config\n  }));\n  React.useEffect(() => void api.start({\n    scale: 1,\n    rotation: rInitial,\n    config\n  }), [rInitial]);\n  React.useEffect(() => {\n    if (global && cursor && enabled) gl.domElement.style.cursor = 'grab';\n    return () => void (gl.domElement.style.cursor = 'default');\n  }, [global, cursor, gl.domElement, enabled]);\n  const bind = useGesture({\n    onHover: ({\n      last\n    }) => {\n      if (cursor && !global && enabled) gl.domElement.style.cursor = last ? 'auto' : 'grab';\n    },\n    onDrag: ({\n      down,\n      delta: [x, y],\n      memo: [oldY, oldX] = spring.rotation.animation.to || rInitial\n    }) => {\n      if (!enabled) return [y, x];\n      if (cursor) gl.domElement.style.cursor = down ? 'grabbing' : 'grab';\n      x = MathUtils.clamp(oldX + x / size.width * Math.PI * speed, ...rAzimuth);\n      y = MathUtils.clamp(oldY + y / size.height * Math.PI * speed, ...rPolar);\n      const sConfig = snap && !down && typeof snap !== 'boolean' ? snap : config;\n      api.start({\n        scale: down && y > rPolar[1] / 2 ? zoom : 1,\n        rotation: snap && !down ? rInitial : [y, x, 0],\n        config: n => n === 'scale' ? { ...sConfig,\n          friction: sConfig.friction * 3\n        } : sConfig\n      });\n      return [y, x];\n    }\n  }, {\n    target: global ? gl.domElement : undefined\n  });\n  return /*#__PURE__*/React.createElement(a.group, _extends({}, bind == null ? void 0 : bind(), spring), children);\n}\n\nexport { PresentationControls };\n", "import * as React from 'react';\nimport create from 'zustand';\nimport { subscribeWithSelector } from 'zustand/middleware';\n\nconst context = /*@__PURE__*/React.createContext(null);\nfunction KeyboardControls({\n  map,\n  children,\n  onChange,\n  domElement\n}) {\n  const key = map.map(item => item.name + item.keys).join('-');\n  const useControls = React.useMemo(() => {\n    return create(subscribeWithSelector(() => map.reduce((prev, cur) => ({ ...prev,\n      [cur.name]: false\n    }), {})));\n  }, [key]);\n  const api = React.useMemo(() => [useControls.subscribe, useControls.getState, useControls], [key]);\n  const set = useControls.setState;\n  React.useEffect(() => {\n    const config = map.map(({\n      name,\n      keys,\n      up\n    }) => ({\n      keys,\n      up,\n      fn: value => {\n        // Set zustand state\n        set({\n          [name]: value\n        }); // Inform callback\n\n        if (onChange) onChange(name, value, api[2]());\n      }\n    }));\n    const keyMap = config.reduce((out, {\n      keys,\n      fn,\n      up = true\n    }) => {\n      keys.forEach(key => out[key] = {\n        fn,\n        pressed: false,\n        up\n      });\n      return out;\n    }, {});\n\n    const downHandler = ({\n      key,\n      code\n    }) => {\n      const obj = keyMap[key] || keyMap[code];\n      if (!obj) return;\n      const {\n        fn,\n        pressed,\n        up\n      } = obj;\n      obj.pressed = true;\n      if (up || !pressed) fn(true);\n    };\n\n    const upHandler = ({\n      key,\n      code\n    }) => {\n      const obj = keyMap[key] || keyMap[code];\n      if (!obj) return;\n      const {\n        fn,\n        up\n      } = obj;\n      obj.pressed = false;\n      if (up) fn(false);\n    };\n\n    const source = domElement || window;\n    source.addEventListener('keydown', downHandler, {\n      passive: true\n    });\n    source.addEventListener('keyup', upHandler, {\n      passive: true\n    });\n    return () => {\n      source.removeEventListener('keydown', downHandler);\n      source.removeEventListener('keyup', upHandler);\n    };\n  }, [domElement, key]);\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: api,\n    children: children\n  });\n}\nfunction useKeyboardControls(sel) {\n  const [sub, get, store] = React.useContext(context);\n  if (sel) return store(sel);else return [sub, get];\n}\n\nexport { KeyboardControls, useKeyboardControls };\n", "var __defProp$1 = Object.defineProperty;\nvar __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$1 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$1 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$1 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$1.call(b, prop))\n      __defNormalProp$1(a, prop, b[prop]);\n  if (__getOwnPropSymbols$1)\n    for (var prop of __getOwnPropSymbols$1(b)) {\n      if (__propIsEnum$1.call(b, prop))\n        __defNormalProp$1(a, prop, b[prop]);\n    }\n  return a;\n};\nconst redux = (reducer, initial) => (set, get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return __spreadValues$1({ dispatch: (...a) => api.dispatch(...a) }, initial);\n};\n\nfunction devtools(fn, options) {\n  return (set, get, api) => {\n    var _a;\n    let didWarnAboutNameDeprecation = false;\n    if (typeof options === \"string\" && !didWarnAboutNameDeprecation) {\n      console.warn(\"[zustand devtools middleware]: passing `name` as directly will be not allowed in next majorpass the `name` in an object `{ name: ... }` instead\");\n      didWarnAboutNameDeprecation = true;\n    }\n    const devtoolsOptions = options === void 0 ? { name: void 0, anonymousActionType: void 0 } : typeof options === \"string\" ? { name: options } : options;\n    if (typeof ((_a = devtoolsOptions == null ? void 0 : devtoolsOptions.serialize) == null ? void 0 : _a.options) !== \"undefined\") {\n      console.warn(\"[zustand devtools middleware]: `serialize.options` is deprecated, just use `serialize`\");\n    }\n    let extensionConnector;\n    try {\n      extensionConnector = window.__REDUX_DEVTOOLS_EXTENSION__ || window.top.__REDUX_DEVTOOLS_EXTENSION__;\n    } catch {\n    }\n    if (!extensionConnector) {\n      if ((import.meta.env && import.meta.env.MODE) !== \"production\" && typeof window !== \"undefined\") {\n        console.warn(\"[zustand devtools middleware] Please install/enable Redux devtools extension\");\n      }\n      return fn(set, get, api);\n    }\n    let extension = Object.create(extensionConnector.connect(devtoolsOptions));\n    let didWarnAboutDevtools = false;\n    Object.defineProperty(api, \"devtools\", {\n      get: () => {\n        if (!didWarnAboutDevtools) {\n          console.warn(\"[zustand devtools middleware] `devtools` property on the store is deprecated it will be removed in the next major.\\nYou shouldn't interact with the extension directly. But in case you still want to you can patch `window.__REDUX_DEVTOOLS_EXTENSION__` directly\");\n          didWarnAboutDevtools = true;\n        }\n        return extension;\n      },\n      set: (value) => {\n        if (!didWarnAboutDevtools) {\n          console.warn(\"[zustand devtools middleware] `api.devtools` is deprecated, it will be removed in the next major.\\nYou shouldn't interact with the extension directly. But in case you still want to you can patch `window.__REDUX_DEVTOOLS_EXTENSION__` directly\");\n          didWarnAboutDevtools = true;\n        }\n        extension = value;\n      }\n    });\n    let didWarnAboutPrefix = false;\n    Object.defineProperty(extension, \"prefix\", {\n      get: () => {\n        if (!didWarnAboutPrefix) {\n          console.warn(\"[zustand devtools middleware] along with `api.devtools`, `api.devtools.prefix` is deprecated.\\nWe no longer prefix the actions/names\" + devtoolsOptions.name === void 0 ? \", pass the `name` option to create a separate instance of devtools for each store.\" : \", because the `name` option already creates a separate instance of devtools for each store.\");\n          didWarnAboutPrefix = true;\n        }\n        return \"\";\n      },\n      set: () => {\n        if (!didWarnAboutPrefix) {\n          console.warn(\"[zustand devtools middleware] along with `api.devtools`, `api.devtools.prefix` is deprecated.\\nWe no longer prefix the actions/names\" + devtoolsOptions.name === void 0 ? \", pass the `name` option to create a separate instance of devtools for each store.\" : \", because the `name` option already creates a separate instance of devtools for each store.\");\n          didWarnAboutPrefix = true;\n        }\n      }\n    });\n    let isRecording = true;\n    api.setState = (state, replace, nameOrAction) => {\n      set(state, replace);\n      if (!isRecording)\n        return;\n      extension.send(nameOrAction === void 0 ? { type: devtoolsOptions.anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction, get());\n    };\n    const setStateFromDevtools = (...a) => {\n      const originalIsRecording = isRecording;\n      isRecording = false;\n      set(...a);\n      isRecording = originalIsRecording;\n    };\n    const initialState = fn(api.setState, get, api);\n    extension.init(initialState);\n    if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n      let didWarnAboutReservedActionType = false;\n      const originalDispatch = api.dispatch;\n      api.dispatch = (...a) => {\n        if (a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n          console.warn('[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.');\n          didWarnAboutReservedActionType = true;\n        }\n        originalDispatch(...a);\n      };\n    }\n    extension.subscribe((message) => {\n      var _a2;\n      switch (message.type) {\n        case \"ACTION\":\n          if (typeof message.payload !== \"string\") {\n            console.error(\"[zustand devtools middleware] Unsupported action format\");\n            return;\n          }\n          return parseJsonThen(message.payload, (action) => {\n            if (action.type === \"__setState\") {\n              setStateFromDevtools(action.state);\n              return;\n            }\n            if (!api.dispatchFromDevtools)\n              return;\n            if (typeof api.dispatch !== \"function\")\n              return;\n            api.dispatch(action);\n          });\n        case \"DISPATCH\":\n          switch (message.payload.type) {\n            case \"RESET\":\n              setStateFromDevtools(initialState);\n              return extension.init(api.getState());\n            case \"COMMIT\":\n              return extension.init(api.getState());\n            case \"ROLLBACK\":\n              return parseJsonThen(message.state, (state) => {\n                setStateFromDevtools(state);\n                extension.init(api.getState());\n              });\n            case \"JUMP_TO_STATE\":\n            case \"JUMP_TO_ACTION\":\n              return parseJsonThen(message.state, (state) => {\n                setStateFromDevtools(state);\n              });\n            case \"IMPORT_STATE\": {\n              const { nextLiftedState } = message.payload;\n              const lastComputedState = (_a2 = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a2.state;\n              if (!lastComputedState)\n                return;\n              setStateFromDevtools(lastComputedState);\n              extension.send(null, nextLiftedState);\n              return;\n            }\n            case \"PAUSE_RECORDING\":\n              return isRecording = !isRecording;\n          }\n          return;\n      }\n    });\n    return initialState;\n  };\n}\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\"[zustand devtools middleware] Could not parse the received json\", e);\n  }\n  if (parsed !== void 0)\n    f(parsed);\n};\n\nconst subscribeWithSelector = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\n\nconst combine = (initialState, create) => (set, get, api) => Object.assign({}, initialState, create(set, get, api));\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst persist = (config, baseOptions) => (set, get, api) => {\n  let options = __spreadValues({\n    getStorage: () => localStorage,\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => __spreadValues(__spreadValues({}, currentState), persistedState)\n  }, baseOptions);\n  if (options.blacklist || options.whitelist) {\n    console.warn(`The ${options.blacklist ? \"blacklist\" : \"whitelist\"} option is deprecated and will be removed in the next version. Please use the 'partialize' option instead.`);\n  }\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage;\n  try {\n    storage = options.getStorage();\n  } catch (e) {\n  }\n  if (!storage) {\n    return config((...args) => {\n      console.warn(`[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`);\n      set(...args);\n    }, get, api);\n  } else if (!storage.removeItem) {\n    console.warn(`[zustand persist middleware] The given storage for item '${options.name}' does not contain a 'removeItem' method, which will be required in v4.`);\n  }\n  const thenableSerialize = toThenable(options.serialize);\n  const setItem = () => {\n    const state = options.partialize(__spreadValues({}, get()));\n    if (options.whitelist) {\n      Object.keys(state).forEach((key) => {\n        var _a;\n        !((_a = options.whitelist) == null ? void 0 : _a.includes(key)) && delete state[key];\n      });\n    }\n    if (options.blacklist) {\n      options.blacklist.forEach((key) => delete state[key]);\n    }\n    let errorInSync;\n    const thenable = thenableSerialize({ state, version: options.version }).then((serializedValue) => storage.setItem(options.name, serializedValue)).catch((e) => {\n      errorInSync = e;\n    });\n    if (errorInSync) {\n      throw errorInSync;\n    }\n    return thenable;\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config((...args) => {\n    set(...args);\n    void setItem();\n  }, get, api);\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a;\n    if (!storage)\n      return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => cb(get()));\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue) => {\n      if (storageValue) {\n        return options.deserialize(storageValue);\n      }\n    }).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(deserializedStorageValue.state, deserializedStorageValue.version);\n          }\n          console.error(`State loaded from storage couldn't be migrated since no migrate function was provided`);\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(migratedState, (_a2 = get()) != null ? _a2 : configResult);\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = __spreadValues(__spreadValues({}, options), newOptions);\n      if (newOptions.getStorage) {\n        storage = newOptions.getStorage();\n      }\n    },\n    clearStorage: () => {\n      var _a;\n      (_a = storage == null ? void 0 : storage.removeItem) == null ? void 0 : _a.call(storage, options.name);\n    },\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  hydrate();\n  return stateFromStorage || configResult;\n};\n\nexport { combine, devtools, persist, redux, subscribeWithSelector };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { SelectionBox } from 'three-stdlib';\nimport { useThree } from '@react-three/fiber';\nimport shallow from 'zustand/shallow';\n\nconst context = /*#__PURE__*/React.createContext([]);\nfunction Select({\n  box,\n  multiple,\n  children,\n  onChange,\n  border = '1px solid #55aaff',\n  backgroundColor = 'rgba(75, 160, 255, 0.1)',\n  filter: customFilter = item => item,\n  ...props\n}) {\n  const {\n    setEvents,\n    camera,\n    raycaster,\n    gl,\n    controls,\n    size,\n    get\n  } = useThree();\n  const [hovered, hover] = React.useState(false);\n  const [active, dispatch] = React.useReducer((state, {\n    object,\n    shift\n  }) => {\n    if (object === undefined) return [];else if (Array.isArray(object)) return object;else if (!shift) return state[0] === object ? [] : [object];else if (state.includes(object)) return state.filter(o => o !== object);else return [object, ...state];\n  }, []);\n  React.useEffect(() => void (onChange == null ? void 0 : onChange(active)), [active]);\n  const onClick = React.useCallback(e => {\n    e.stopPropagation();\n    dispatch({\n      object: customFilter([e.object])[0],\n      shift: multiple && e.shiftKey\n    });\n  }, []);\n  const onPointerMissed = React.useCallback(e => !hovered && dispatch({}), [hovered]);\n  const ref = React.useRef(null);\n  React.useEffect(() => {\n    if (!box || !multiple) return;\n    const selBox = new SelectionBox(camera, ref.current);\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n    element.style.border = border;\n    element.style.backgroundColor = backgroundColor;\n    element.style.position = 'fixed';\n    const startPoint = new THREE.Vector2();\n    const pointTopLeft = new THREE.Vector2();\n    const pointBottomRight = new THREE.Vector2();\n    const oldRaycasterEnabled = get().events.enabled;\n    const oldControlsEnabled = controls == null ? void 0 : controls.enabled;\n    let isDown = false;\n\n    function prepareRay(event, vec) {\n      const {\n        offsetX,\n        offsetY\n      } = event;\n      const {\n        width,\n        height\n      } = size;\n      vec.set(offsetX / width * 2 - 1, -(offsetY / height) * 2 + 1);\n    }\n\n    function onSelectStart(event) {\n      var _gl$domElement$parent;\n\n      if (controls) controls.enabled = false;\n      setEvents({\n        enabled: false\n      });\n      isDown = true;\n      (_gl$domElement$parent = gl.domElement.parentElement) == null ? void 0 : _gl$domElement$parent.appendChild(element);\n      element.style.left = `${event.clientX}px`;\n      element.style.top = `${event.clientY}px`;\n      element.style.width = '0px';\n      element.style.height = '0px';\n      startPoint.x = event.clientX;\n      startPoint.y = event.clientY;\n    }\n\n    function onSelectMove(event) {\n      pointBottomRight.x = Math.max(startPoint.x, event.clientX);\n      pointBottomRight.y = Math.max(startPoint.y, event.clientY);\n      pointTopLeft.x = Math.min(startPoint.x, event.clientX);\n      pointTopLeft.y = Math.min(startPoint.y, event.clientY);\n      element.style.left = `${pointTopLeft.x}px`;\n      element.style.top = `${pointTopLeft.y}px`;\n      element.style.width = `${pointBottomRight.x - pointTopLeft.x}px`;\n      element.style.height = `${pointBottomRight.y - pointTopLeft.y}px`;\n    }\n\n    function onSelectOver() {\n      if (isDown) {\n        var _element$parentElemen;\n\n        if (controls) controls.enabled = oldControlsEnabled;\n        setEvents({\n          enabled: oldRaycasterEnabled\n        });\n        isDown = false;\n        (_element$parentElemen = element.parentElement) == null ? void 0 : _element$parentElemen.removeChild(element);\n      }\n    }\n\n    function pointerDown(event) {\n      if (event.shiftKey) {\n        onSelectStart(event);\n        prepareRay(event, selBox.startPoint);\n      }\n    }\n\n    let previous = [];\n\n    function pointerMove(event) {\n      if (isDown) {\n        onSelectMove(event);\n        prepareRay(event, selBox.endPoint);\n        const allSelected = selBox.select().sort(o => o.uuid).filter(o => o.isMesh);\n\n        if (!shallow(allSelected, previous)) {\n          previous = allSelected;\n          dispatch({\n            object: customFilter(allSelected)\n          });\n        }\n      }\n    }\n\n    function pointerUp(event) {\n      if (isDown) onSelectOver();\n    }\n\n    document.addEventListener('pointerdown', pointerDown, {\n      passive: true\n    });\n    document.addEventListener('pointermove', pointerMove, {\n      passive: true,\n      capture: true\n    });\n    document.addEventListener('pointerup', pointerUp, {\n      passive: true\n    });\n    return () => {\n      document.removeEventListener('pointerdown', pointerDown);\n      document.removeEventListener('pointermove', pointerMove);\n      document.removeEventListener('pointerup', pointerUp);\n    };\n  }, [size, raycaster, camera, controls, gl]);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref,\n    onClick: onClick,\n    onPointerOver: () => hover(true),\n    onPointerOut: () => hover(false),\n    onPointerMissed: onPointerMissed\n  }, props), /*#__PURE__*/React.createElement(context.Provider, {\n    value: active\n  }, children));\n}\nfunction useSelect() {\n  return React.useContext(context);\n}\n\nexport { Select, useSelect };\n", "function shallow(objA, objB) {\n  if (Object.is(objA, objB)) {\n    return true;\n  }\n  if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n    return false;\n  }\n  const keysA = Object.keys(objA);\n  if (keysA.length !== Object.keys(objB).length) {\n    return false;\n  }\n  for (let i = 0; i < keysA.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !Object.is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport { shallow as default };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\n\n/**\n * Wraps children in a billboarded group. Sample usage:\n *\n * ```js\n * <Billboard>\n *   <Text>hi</Text>\n * </Billboard>\n * ```\n */\nconst Billboard = /*#__PURE__*/React.forwardRef(function Billboard({\n  follow = true,\n  lockX = false,\n  lockY = false,\n  lockZ = false,\n  ...props\n}, ref) {\n  const localRef = React.useRef();\n  useFrame(({\n    camera\n  }) => {\n    if (!follow || !localRef.current) return; // save previous rotation in case we're locking an axis\n\n    const prevRotation = localRef.current.rotation.clone(); // always face the camera\n\n    localRef.current.quaternion.copy(camera.quaternion); // readjust any axis that is locked\n\n    if (lockX) localRef.current.rotation.x = prevRotation.x;\n    if (lockY) localRef.current.rotation.y = prevRotation.y;\n    if (lockZ) localRef.current.rotation.z = prevRotation.z;\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: mergeRefs([localRef, ref])\n  }, props));\n});\n\nexport { Billboard };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport { useFrame } from '@react-three/fiber';\n\nconst ScreenSpace = /*#__PURE__*/React.forwardRef(({\n  children,\n  depth = -1,\n  ...rest\n}, ref) => {\n  const localRef = React.useRef(null);\n  useFrame(({\n    camera\n  }) => {\n    localRef.current.quaternion.copy(camera.quaternion);\n    localRef.current.position.copy(camera.position);\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: mergeRefs([ref, localRef])\n  }, rest), /*#__PURE__*/React.createElement(\"group\", {\n    \"position-z\": -depth\n  }, children));\n});\n\nexport { ScreenSpace };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Vector3, QuadraticBezierCurve3 } from 'three';\nimport mergeRefs from 'react-merge-refs';\nimport { Line } from './Line.js';\n\nconst v = new Vector3();\nconst QuadraticBezierLine = /*#__PURE__*/React.forwardRef(function QuadraticBezierLine({\n  start = [0, 0, 0],\n  end = [0, 0, 0],\n  mid,\n  segments = 20,\n  ...rest\n}, forwardref) {\n  const ref = React.useRef(null);\n  const [curve] = React.useState(() => new QuadraticBezierCurve3(undefined, undefined, undefined));\n  const getPoints = React.useCallback((start, end, mid, segments = 20) => {\n    if (start instanceof Vector3) curve.v0.copy(start);else curve.v0.set(...start);\n    if (end instanceof Vector3) curve.v2.copy(end);else curve.v2.set(...end);\n\n    if (mid instanceof Vector3) {\n      curve.v1.copy(mid);\n    } else {\n      curve.v1.copy(curve.v0.clone().add(curve.v2.clone().sub(curve.v0)).add(v.set(0, curve.v0.y - curve.v2.y, 0)));\n    }\n\n    return curve.getPoints(segments);\n  }, []);\n  React.useLayoutEffect(() => {\n    ref.current.setPoints = (start, end, mid) => {\n      const points = getPoints(start, end, mid);\n      if (ref.current.geometry) ref.current.geometry.setPositions(points.map(p => p.toArray()).flat());\n    };\n  }, []);\n  const points = React.useMemo(() => getPoints(start, end, mid, segments), [start, end, mid, segments]);\n  return /*#__PURE__*/React.createElement(Line, _extends({\n    ref: mergeRefs([ref, forwardref]),\n    points: points\n  }, rest));\n});\n\nexport { QuadraticBezierLine };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Vector3, Vector2, Color } from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line2, LineMaterial, LineGeometry } from 'three-stdlib';\n\nconst Line = /*#__PURE__*/React.forwardRef(function Line({\n  points,\n  color = 'black',\n  vertexColors,\n  linewidth,\n  lineWidth,\n  dashed,\n  ...rest\n}, ref) {\n  const size = useThree(state => state.size);\n  const [line2] = React.useState(() => new Line2());\n  const [lineMaterial] = React.useState(() => new LineMaterial());\n  const lineGeom = React.useMemo(() => {\n    const geom = new LineGeometry();\n    const pValues = points.map(p => {\n      const isArray = Array.isArray(p);\n      return p instanceof Vector3 ? [p.x, p.y, p.z] : p instanceof Vector2 ? [p.x, p.y, 0] : isArray && p.length === 3 ? [p[0], p[1], p[2]] : isArray && p.length === 2 ? [p[0], p[1], 0] : p;\n    });\n    geom.setPositions(pValues.flat());\n\n    if (vertexColors) {\n      const cValues = vertexColors.map(c => c instanceof Color ? c.toArray() : c);\n      geom.setColors(cValues.flat());\n    }\n\n    return geom;\n  }, [points, vertexColors]);\n  React.useLayoutEffect(() => {\n    line2.computeLineDistances();\n  }, [points, line2]);\n  React.useLayoutEffect(() => {\n    if (dashed) {\n      lineMaterial.defines.USE_DASH = '';\n    } else {\n      // Setting lineMaterial.defines.USE_DASH to undefined is apparently not sufficient.\n      delete lineMaterial.defines.USE_DASH;\n    }\n\n    lineMaterial.needsUpdate = true;\n  }, [dashed, lineMaterial]);\n  React.useEffect(() => {\n    return () => lineGeom.dispose();\n  }, [lineGeom]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: line2,\n    ref: ref\n  }, rest), /*#__PURE__*/React.createElement(\"primitive\", {\n    object: lineGeom,\n    attach: \"geometry\"\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: lineMaterial,\n    attach: \"material\",\n    color: color,\n    vertexColors: Boolean(vertexColors),\n    resolution: [size.width, size.height],\n    linewidth: linewidth !== null && linewidth !== void 0 ? linewidth : lineWidth,\n    dashed: dashed\n  }, rest)));\n});\n\nexport { Line };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Vector3, CubicBezierCurve3 } from 'three';\nimport { Line } from './Line.js';\n\nconst CubicBezierLine = /*#__PURE__*/React.forwardRef(function CubicBezierLine({\n  start,\n  end,\n  midA,\n  midB,\n  segments = 20,\n  ...rest\n}, ref) {\n  const points = React.useMemo(() => {\n    const startV = start instanceof Vector3 ? start : new Vector3(...start);\n    const endV = end instanceof Vector3 ? end : new Vector3(...end);\n    const midAV = midA instanceof Vector3 ? midA : new Vector3(...midA);\n    const midBV = midB instanceof Vector3 ? midB : new Vector3(...midB);\n    const interpolatedV = new CubicBezierCurve3(startV, midAV, midBV, endV).getPoints(segments);\n    return interpolatedV;\n  }, [start, end, midA, midB, segments]);\n  return /*#__PURE__*/React.createElement(Line, _extends({\n    ref: ref,\n    points: points\n  }, rest));\n});\n\nexport { CubicBezierLine };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Vector3, CatmullRomCurve3, Color } from 'three';\nimport { Line } from './Line.js';\n\nconst CatmullRomLine = /*#__PURE__*/React.forwardRef(function CatmullRomLine({\n  points,\n  closed = false,\n  curveType = 'centripetal',\n  tension = 0.5,\n  segments = 20,\n  vertexColors,\n  ...rest\n}, ref) {\n  const curve = React.useMemo(() => {\n    const mappedPoints = points.map(pt => pt instanceof Vector3 ? pt : new Vector3(...pt));\n    return new CatmullRomCurve3(mappedPoints, closed, curveType, tension);\n  }, [points, closed, curveType, tension]);\n  const segmentedPoints = React.useMemo(() => curve.getPoints(segments), [curve, segments]);\n  const interpolatedVertexColors = React.useMemo(() => {\n    if (!vertexColors || vertexColors.length < 2) return undefined;\n    if (vertexColors.length === segments + 1) return vertexColors;\n    const mappedColors = vertexColors.map(color => color instanceof Color ? color : new Color(...color));\n    if (closed) mappedColors.push(mappedColors[0].clone());\n    const iColors = [mappedColors[0]];\n    const divisions = segments / (mappedColors.length - 1);\n\n    for (let i = 1; i < segments; i++) {\n      const alpha = i % divisions / divisions;\n      const colorIndex = Math.floor(i / divisions);\n      iColors.push(mappedColors[colorIndex].clone().lerp(mappedColors[colorIndex + 1], alpha));\n    }\n\n    iColors.push(mappedColors[mappedColors.length - 1]);\n    return iColors;\n  }, [vertexColors, segments]);\n  return /*#__PURE__*/React.createElement(Line, _extends({\n    ref: ref,\n    points: segmentedPoints,\n    vertexColors: interpolatedVertexColors\n  }, rest));\n});\n\nexport { CatmullRomLine };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { AudioListener, AudioLoader } from 'three';\nimport { useThree, useLoader } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\n\nconst PositionalAudio = /*#__PURE__*/React.forwardRef(({\n  url,\n  distance = 1,\n  loop = true,\n  autoplay,\n  ...props\n}, ref) => {\n  const sound = React.useRef();\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const [listener] = React.useState(() => new AudioListener());\n  const buffer = useLoader(AudioLoader, url);\n  React.useEffect(() => {\n    const _sound = sound.current;\n\n    if (_sound) {\n      _sound.setBuffer(buffer);\n\n      _sound.setRefDistance(distance);\n\n      _sound.setLoop(loop);\n\n      if (autoplay && !_sound.isPlaying) _sound.play();\n    }\n  }, [buffer, camera, distance, loop]);\n  React.useEffect(() => {\n    const _sound = sound.current;\n    camera.add(listener);\n    return () => {\n      camera.remove(listener);\n\n      if (_sound) {\n        if (_sound.isPlaying) _sound.stop();\n        if (_sound.source && _sound.source._connected) _sound.disconnect();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"positionalAudio\", _extends({\n    ref: mergeRefs([sound, ref]),\n    args: [listener]\n  }, props));\n});\n\nexport { PositionalAudio };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Text as Text$1, preloadFont } from 'troika-three-text';\nimport { useThree } from '@react-three/fiber';\nimport { suspend } from 'suspend-react';\n\n// eslint-disable-next-line prettier/prettier\nconst Text = /*#__PURE__*/React.forwardRef(({\n  anchorX = 'center',\n  anchorY = 'middle',\n  font,\n  children,\n  characters,\n  onSync,\n  ...props\n}, ref) => {\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const [troikaMesh] = React.useState(() => new Text$1());\n  const [nodes, text] = React.useMemo(() => {\n    const n = [];\n    let t = '';\n    React.Children.forEach(children, child => {\n      if (typeof child === 'string' || typeof child === 'number') {\n        t += child;\n      } else {\n        n.push(child);\n      }\n    });\n    return [n, t];\n  }, [children]);\n  suspend(() => new Promise(res => preloadFont({\n    font,\n    characters\n  }, res)), ['troika-text', font, characters]);\n  React.useLayoutEffect(() => void troikaMesh.sync(() => {\n    invalidate();\n    if (onSync) onSync(troikaMesh);\n  }));\n  React.useEffect(() => {\n    return () => troikaMesh.dispose();\n  }, [troikaMesh]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: troikaMesh,\n    ref: ref,\n    font: font,\n    text: text,\n    anchorX: anchorX,\n    anchorY: anchorY\n  }, props), nodes);\n});\n\nexport { Text };\n", "function shallowEqualArrays(arrA, arrB, equal = (a, b) => a === b) {\n  if (arrA === arrB) return true;\n  if (!arrA || !arrB) return false;\n  const len = arrA.length;\n  if (arrB.length !== len) return false;\n\n  for (let i = 0; i < len; i++) if (!equal(arrA[i], arrB[i])) return false;\n\n  return true;\n}\n\nconst globalCache = [];\n\nfunction query(fn, keys, preload = false, config = {}) {\n  for (const entry of globalCache) {\n    // Find a match\n    if (shallowEqualArrays(keys, entry.keys, entry.equal)) {\n      // If we're pre-loading and the element is present, just return\n      if (preload) return undefined; // If an error occurred, throw\n\n      if (Object.prototype.hasOwnProperty.call(entry, 'error')) throw entry.error; // If a response was successful, return\n\n      if (Object.prototype.hasOwnProperty.call(entry, 'response')) return entry.response; // If the promise is still unresolved, throw\n\n      if (!preload) throw entry.promise;\n    }\n  } // The request is new or has changed.\n\n\n  const entry = {\n    keys,\n    equal: config.equal,\n    promise: // Execute the promise\n    fn(...keys) // When it resolves, store its value\n    .then(response => entry.response = response) // Remove the entry if a lifespan was given\n    .then(() => {\n      if (config.lifespan && config.lifespan > 0) {\n        setTimeout(() => {\n          const index = globalCache.indexOf(entry);\n          if (index !== -1) globalCache.splice(index, 1);\n        }, config.lifespan);\n      }\n    }) // Store caught errors, they will be thrown in the render-phase to bubble into an error-bound\n    .catch(error => entry.error = error)\n  }; // Register the entry\n\n  globalCache.push(entry); // And throw the promise, this yields control back to React\n\n  if (!preload) throw entry.promise;\n  return undefined;\n}\n\nconst suspend = (fn, keys, config) => query(fn, keys, false, config);\n\nconst preload = (fn, keys, config) => void query(fn, keys, true, config);\n\nconst peek = keys => {\n  var _globalCache$find;\n\n  return (_globalCache$find = globalCache.find(entry => shallowEqualArrays(keys, entry.keys, entry.equal))) == null ? void 0 : _globalCache$find.response;\n};\n\nconst clear = keys => {\n  if (keys === undefined || keys.length === 0) globalCache.splice(0, globalCache.length);else {\n    const entry = globalCache.find(entry => shallowEqualArrays(keys, entry.keys, entry.equal));\n\n    if (entry) {\n      const index = globalCache.indexOf(entry);\n      if (index !== -1) globalCache.splice(index, 1);\n    }\n  }\n};\n\nexport { clear, peek, preload, suspend };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { extend } from '@react-three/fiber';\nimport { suspend } from 'suspend-react';\nimport { TextGeometry, FontLoader } from 'three-stdlib';\n\nconst types = ['string', 'number'];\n\nconst getTextFromChildren = children => {\n  let label = '';\n  const rest = [];\n  React.Children.forEach(children, child => {\n    if (types.includes(typeof child)) label += child + '';else rest.push(child);\n  });\n  return [label, ...rest];\n};\n\nconst Text3D = /*#__PURE__*/React.forwardRef(({\n  font: _font,\n  letterSpacing = 0,\n  lineHeight = 1,\n  size = 1,\n  height = 0.2,\n  bevelThickness = 0.1,\n  bevelSize = 0.01,\n  bevelEnabled = false,\n  bevelOffset = 0,\n  bevelSegments = 4,\n  curveSegments = 8,\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    RenamedTextGeometry: TextGeometry\n  }), []);\n  const font = suspend(async () => {\n    let data = typeof _font === 'string' ? await (await fetch(_font)).json() : _font;\n    let loader = new FontLoader();\n    return loader.parse(data);\n  }, [_font]);\n  const opts = useMemo(() => {\n    return {\n      font,\n      size,\n      height,\n      bevelThickness,\n      bevelSize,\n      bevelEnabled,\n      bevelSegments,\n      bevelOffset,\n      curveSegments,\n      letterSpacing,\n      lineHeight\n    };\n  }, [font, size, height, bevelThickness, bevelSize, bevelEnabled, bevelSegments, bevelOffset, curveSegments, letterSpacing, lineHeight]);\n  /**\n   * We need the `children` in the deps because we\n   * need to be able to do `<Text3d>{state}</Text3d>`.\n   */\n\n  const [label, ...rest] = useMemo(() => getTextFromChildren(children), [children]);\n  const args = React.useMemo(() => [label, opts], [label, opts]);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({}, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"renamedTextGeometry\", {\n    args: args\n  }), rest);\n});\n\nexport { Text3D };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { WebGLRenderTarget, HalfFloatType, RGBAFormat } from 'three';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { EffectComposer, RenderPass, ShaderPass, GammaCorrectionShader } from 'three-stdlib';\nimport mergeRefs from 'react-merge-refs';\n\nconst isWebGL2Available = () => {\n  try {\n    var canvas = document.createElement('canvas');\n    return !!(window.WebGL2RenderingContext && canvas.getContext('webgl2'));\n  } catch (e) {\n    return false;\n  }\n};\nconst Effects = /*#__PURE__*/React.forwardRef(({\n  children,\n  multisamping = 8,\n  renderIndex = 1,\n  disableRender,\n  disableGamma,\n  disableRenderPass,\n  depthBuffer = true,\n  stencilBuffer = false,\n  anisotropy = 1,\n  encoding,\n  type,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    EffectComposer,\n    RenderPass,\n    ShaderPass\n  }), []);\n  const composer = React.useRef();\n  const {\n    scene,\n    camera,\n    gl,\n    size,\n    viewport\n  } = useThree();\n  const [target] = React.useState(() => {\n    const t = new WebGLRenderTarget(size.width, size.height, {\n      type: type || HalfFloatType,\n      format: RGBAFormat,\n      encoding: encoding || gl.outputEncoding,\n      depthBuffer,\n      stencilBuffer,\n      anisotropy\n    });\n    t.samples = multisamping;\n    return t;\n  });\n  React.useEffect(() => {\n    var _composer$current, _composer$current2;\n\n    (_composer$current = composer.current) == null ? void 0 : _composer$current.setSize(size.width, size.height);\n    (_composer$current2 = composer.current) == null ? void 0 : _composer$current2.setPixelRatio(viewport.dpr);\n  }, [gl, size, viewport.dpr]);\n  useFrame(() => {\n    var _composer$current3;\n\n    if (!disableRender) (_composer$current3 = composer.current) == null ? void 0 : _composer$current3.render();\n  }, renderIndex);\n  const passes = [];\n  if (!disableRenderPass) passes.push( /*#__PURE__*/React.createElement(\"renderPass\", {\n    key: \"renderpass\",\n    attach: `passes-${passes.length}`,\n    args: [scene, camera]\n  }));\n  if (!disableGamma) passes.push( /*#__PURE__*/React.createElement(\"shaderPass\", {\n    attach: `passes-${passes.length}`,\n    key: \"gammapass\",\n    args: [GammaCorrectionShader]\n  }));\n  React.Children.forEach(children, el => {\n    el && passes.push( /*#__PURE__*/React.cloneElement(el, {\n      key: passes.length,\n      attach: `passes-${passes.length}`\n    }));\n  });\n  return /*#__PURE__*/React.createElement(\"effectComposer\", _extends({\n    ref: mergeRefs([ref, composer]),\n    args: [gl, target]\n  }, props), passes);\n});\n\nexport { Effects, isWebGL2Available };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { useThree } from '@react-three/fiber';\n\nfunction GradientTexture({\n  stops,\n  colors,\n  size = 1024,\n  ...props\n}) {\n  const gl = useThree(state => state.gl);\n  const texture = React.useMemo(() => {\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    canvas.width = 16;\n    canvas.height = size;\n    const gradient = context.createLinearGradient(0, 0, 0, size);\n    let i = stops.length;\n\n    while (i--) {\n      gradient.addColorStop(stops[i], colors[i]);\n    }\n\n    context.fillStyle = gradient;\n    context.fillRect(0, 0, 16, size);\n    const texture = new THREE.Texture(canvas);\n    texture.needsUpdate = true;\n    return texture;\n  }, [stops]);\n  React.useEffect(() => () => void texture.dispose(), [texture]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: texture,\n    attach: \"map\",\n    encoding: gl.outputEncoding\n  }, props));\n}\n\nexport { GradientTexture };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { extend, useThree } from '@react-three/fiber';\nimport { shaderMaterial } from './shaderMaterial.js';\nimport { useTexture } from './useTexture.js';\n\nconst ImageMaterialImpl = shaderMaterial({\n  color: new THREE.Color('white'),\n  scale: [1, 1],\n  imageBounds: [1, 1],\n  map: null,\n  zoom: 1,\n  grayscale: 0,\n  opacity: 1\n},\n/* glsl */\n`\n  varying vec2 vUv;\n  void main() {\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);\n    vUv = uv;\n  }\n`,\n/* glsl */\n`\n  // mostly from https://gist.github.com/statico/df64c5d167362ecf7b34fca0b1459a44\n  varying vec2 vUv;\n  uniform vec2 scale;\n  uniform vec2 imageBounds;\n  uniform vec3 color;\n  uniform sampler2D map;\n  uniform float zoom;\n  uniform float grayscale;\n  uniform float opacity;\n  const vec3 luma = vec3(.299, 0.587, 0.114);\n  vec4 toGrayscale(vec4 color, float intensity) {\n    return vec4(mix(color.rgb, vec3(dot(color.rgb, luma)), intensity), color.a);\n  }\n  vec2 aspect(vec2 size) {\n    return size / min(size.x, size.y);\n  }\n  void main() {\n    vec2 s = aspect(scale);\n    vec2 i = aspect(imageBounds);\n    float rs = s.x / s.y;\n    float ri = i.x / i.y;\n    vec2 new = rs < ri ? vec2(i.x * s.y / i.y, s.y) : vec2(s.x, i.y * s.x / i.x);\n    vec2 offset = (rs < ri ? vec2((new.x - s.x) / 2.0, 0.0) : vec2(0.0, (new.y - s.y) / 2.0)) / new;\n    vec2 uv = vUv * s / new + offset;\n    vec2 zUv = (uv - vec2(0.5, 0.5)) / zoom + vec2(0.5, 0.5);\n    gl_FragColor = toGrayscale(texture2D(map, zUv) * vec4(color, opacity), grayscale);\n    \n    #include <tonemapping_fragment>\n    #include <encodings_fragment>\n  }\n`);\nconst ImageBase = /*#__PURE__*/React.forwardRef(({\n  children,\n  color,\n  segments = 1,\n  scale = 1,\n  zoom = 1,\n  grayscale = 0,\n  opacity = 1,\n  texture,\n  toneMapped,\n  transparent,\n  ...props\n}, ref) => {\n  extend({\n    ImageMaterial: ImageMaterialImpl\n  });\n  const gl = useThree(state => state.gl);\n  const planeBounds = Array.isArray(scale) ? [scale[0], scale[1]] : [scale, scale];\n  const imageBounds = [texture.image.width, texture.image.height];\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref,\n    scale: Array.isArray(scale) ? [...scale, 1] : scale\n  }, props), /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: [1, 1, segments, segments]\n  }), /*#__PURE__*/React.createElement(\"imageMaterial\", {\n    color: color,\n    map: texture,\n    \"map-encoding\": gl.outputEncoding,\n    zoom: zoom,\n    grayscale: grayscale,\n    opacity: opacity,\n    scale: planeBounds,\n    imageBounds: imageBounds,\n    toneMapped: toneMapped,\n    transparent: transparent\n  }), children);\n});\nconst ImageWithUrl = /*#__PURE__*/React.forwardRef(({\n  url,\n  ...props\n}, ref) => {\n  const texture = useTexture(url);\n  return /*#__PURE__*/React.createElement(ImageBase, _extends({}, props, {\n    texture: texture,\n    ref: ref\n  }));\n});\nconst ImageWithTexture = /*#__PURE__*/React.forwardRef(({\n  url: _url,\n  ...props\n}, ref) => {\n  return /*#__PURE__*/React.createElement(ImageBase, _extends({}, props, {\n    ref: ref\n  }));\n});\nconst Image = /*#__PURE__*/React.forwardRef((props, ref) => {\n  if (props.url) return /*#__PURE__*/React.createElement(ImageWithUrl, _extends({}, props, {\n    ref: ref\n  }));else if (props.texture) return /*#__PURE__*/React.createElement(ImageWithTexture, _extends({}, props, {\n    ref: ref\n  }));else throw new Error('<Image /> requires a url or texture');\n});\n\nexport { Image };\n", "import * as THREE from 'three';\n\nfunction shaderMaterial(uniforms, vertexShader, fragmentShader, onInit) {\n  const material = class material extends THREE.ShaderMaterial {\n    constructor(parameters = {}) {\n      const entries = Object.entries(uniforms); // Create unforms and shaders\n\n      super({\n        uniforms: entries.reduce((acc, [name, value]) => {\n          const uniform = THREE.UniformsUtils.clone({\n            [name]: {\n              value\n            }\n          });\n          return { ...acc,\n            ...uniform\n          };\n        }, {}),\n        vertexShader,\n        fragmentShader,\n        ...parameters\n      }); // Create getter/setters\n\n      this.key = '';\n      entries.forEach(([name]) => Object.defineProperty(this, name, {\n        get: () => this.uniforms[name].value,\n        set: v => this.uniforms[name].value = v\n      }));\n      if (onInit) onInit(this);\n    }\n\n  };\n  material.key = THREE.MathUtils.generateUUID();\n  return material;\n}\n\nexport { shaderMaterial };\n", "import { TextureLoader } from 'three';\nimport { useThree, useLoader } from '@react-three/fiber';\nimport { useLayoutEffect, useEffect } from 'react';\n\nconst IsObject = url => url === Object(url) && !Array.isArray(url) && typeof url !== 'function';\nfunction useTexture(input, onLoad) {\n  const gl = useThree(state => state.gl);\n  const textures = useLoader(TextureLoader, IsObject(input) ? Object.values(input) : input);\n  useLayoutEffect(() => {\n    onLoad == null ? void 0 : onLoad(textures);\n  }, [onLoad]); // https://github.com/mrdoob/three.js/issues/22696\n  // Upload the texture to the GPU immediately instead of waiting for the first render\n\n  useEffect(() => {\n    const array = Array.isArray(textures) ? textures : [textures];\n    array.forEach(gl.initTexture);\n  }, [gl, textures]);\n\n  if (IsObject(input)) {\n    const keys = Object.keys(input);\n    const keyed = {};\n    keys.forEach(key => Object.assign(keyed, {\n      [key]: textures[keys.indexOf(key)]\n    }));\n    return keyed;\n  } else {\n    return textures;\n  }\n}\n\nuseTexture.preload = url => useLoader.preload(TextureLoader, url);\n\nuseTexture.clear = input => useLoader.clear(TextureLoader, input);\n\nexport { IsObject, useTexture };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\n\nfunction Edges({\n  userData,\n  children,\n  geometry,\n  threshold = 15,\n  color = 'black',\n  ...props\n}) {\n  const ref = React.useRef(null);\n  React.useLayoutEffect(() => {\n    const parent = ref.current.parent;\n\n    if (parent) {\n      const geom = geometry || parent.geometry;\n\n      if (geom !== ref.current.userData.currentGeom || threshold !== ref.current.userData.currentThreshold) {\n        ref.current.userData.currentGeom = geom;\n        ref.current.userData.currentThreshold = threshold;\n        ref.current.geometry = new THREE.EdgesGeometry(geom, threshold);\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"lineSegments\", _extends({\n    ref: ref,\n    raycast: () => null\n  }, props), children ? children : /*#__PURE__*/React.createElement(\"lineBasicMaterial\", {\n    color: color\n  }));\n}\n\nexport { Edges };\n", "import { useFrame, useThree, createPortal } from '@react-three/fiber';\nimport * as React from 'react';\nimport { Vector3, Object3D, Vector2 } from 'three';\nimport { MeshLineGeometry, MeshLineMaterial } from 'meshline';\n\nconst defaults = {\n  width: 0.2,\n  length: 1,\n  decay: 1,\n  local: false,\n  stride: 0,\n  interval: 1\n};\n\nconst shiftLeft = (collection, steps = 1) => {\n  collection.set(collection.subarray(steps));\n  collection.fill(-Infinity, -steps);\n  return collection;\n};\n\nfunction useTrail(target, settings) {\n  const {\n    length,\n    local,\n    decay,\n    interval,\n    stride\n  } = { ...defaults,\n    ...settings\n  };\n  const points = React.useRef();\n  const [worldPosition] = React.useState(() => new Vector3());\n  React.useLayoutEffect(() => {\n    if (target) {\n      points.current = Float32Array.from({\n        length: length * 10 * 3\n      }, (_, i) => target.position.getComponent(i % 3));\n    }\n  }, [length, target]);\n  const prevPosition = React.useRef(new Vector3());\n  const frameCount = React.useRef(0);\n  useFrame(() => {\n    if (!target) return;\n    if (!points.current) return;\n\n    if (frameCount.current === 0) {\n      let newPosition;\n\n      if (local) {\n        newPosition = target.position;\n      } else {\n        target.getWorldPosition(worldPosition);\n        newPosition = worldPosition;\n      }\n\n      const steps = 1 * decay;\n\n      for (let i = 0; i < steps; i++) {\n        if (newPosition.distanceTo(prevPosition.current) < stride) continue;\n        shiftLeft(points.current, 3);\n        points.current.set(newPosition.toArray(), points.current.length - 3);\n      }\n\n      prevPosition.current.copy(newPosition);\n    }\n\n    frameCount.current++;\n    frameCount.current = frameCount.current % interval;\n  });\n  return points;\n}\nconst Trail = /*#__PURE__*/React.forwardRef((props, forwardRef) => {\n  const {\n    children\n  } = props;\n  const {\n    width,\n    length,\n    decay,\n    local,\n    stride,\n    interval\n  } = { ...defaults,\n    ...props\n  };\n  const {\n    color = 'hotpink',\n    attenuation,\n    target\n  } = props;\n  const size = useThree(s => s.size);\n  const scene = useThree(s => s.scene);\n  const ref = React.useRef(null);\n  const [anchor, setAnchor] = React.useState(null);\n  const points = useTrail(anchor, {\n    length,\n    decay,\n    local,\n    stride,\n    interval\n  });\n  React.useEffect(() => {\n    const t = (target == null ? void 0 : target.current) || ref.current.children.find(o => {\n      return o instanceof Object3D;\n    });\n\n    if (t) {\n      setAnchor(t);\n    }\n  }, [points, target]);\n  const geo = React.useMemo(() => new MeshLineGeometry(), []);\n  const mat = React.useMemo(() => {\n    var _matOverride;\n\n    const m = new MeshLineMaterial({\n      lineWidth: 0.1 * width,\n      color: color,\n      sizeAttenuation: 1,\n      resolution: new Vector2(size.width, size.height)\n    }); // Get and apply first <meshLineMaterial /> from children\n\n    let matOverride;\n\n    if (children) {\n      if (Array.isArray(children)) {\n        matOverride = children.find(child => {\n          const c = child;\n          return typeof c.type === 'string' && c.type === 'meshLineMaterial';\n        });\n      } else {\n        const c = children;\n\n        if (typeof c.type === 'string' && c.type === 'meshLineMaterial') {\n          matOverride = c;\n        }\n      }\n    }\n\n    if (typeof ((_matOverride = matOverride) == null ? void 0 : _matOverride.props) === 'object') {\n      m.setValues(matOverride.props);\n    }\n\n    return m;\n  }, [width, color, size, children]);\n  React.useEffect(() => {\n    mat.uniforms.resolution.value.set(size.width, size.height);\n  }, [size]);\n  useFrame(() => {\n    if (!points.current) return;\n    geo.setPoints(points.current, attenuation);\n  });\n  return /*#__PURE__*/React.createElement(\"group\", null, createPortal( /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: forwardRef,\n    geometry: geo,\n    material: mat\n  }), scene), /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, children));\n});\n\nexport { Trail, useTrail };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { MeshSurfaceSampler } from 'three-stdlib';\nimport { InstancedBufferAttribute, Vector3, Color, Object3D } from 'three';\n\nfunction useSurfaceSampler(mesh, count = 16, transform, weight, instanceMesh) {\n  const [buffer, setBuffer] = React.useState(() => {\n    const arr = Array.from({\n      length: count\n    }, () => [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]).flat();\n    return new InstancedBufferAttribute(Float32Array.from(arr), 16);\n  });\n  React.useEffect(() => {\n    if (typeof mesh.current === 'undefined') return;\n    const sampler = new MeshSurfaceSampler(mesh.current);\n\n    if (weight) {\n      sampler.setWeightAttribute(weight);\n    }\n\n    sampler.build();\n    const position = new Vector3();\n    const normal = new Vector3();\n    const color = new Color();\n    const dummy = new Object3D();\n    mesh.current.updateMatrixWorld(true);\n\n    for (let i = 0; i < count; i++) {\n      sampler.sample(position, normal, color);\n\n      if (typeof transform === 'function') {\n        transform({\n          dummy,\n          sampledMesh: mesh.current,\n          position,\n          normal,\n          color\n        }, i);\n      } else {\n        dummy.position.copy(position);\n      }\n\n      dummy.updateMatrix();\n\n      if (instanceMesh != null && instanceMesh.current) {\n        instanceMesh.current.setMatrixAt(i, dummy.matrix);\n      }\n\n      dummy.matrix.toArray(buffer.array, i * 16);\n    }\n\n    if (instanceMesh != null && instanceMesh.current) {\n      instanceMesh.current.instanceMatrix.needsUpdate = true;\n    }\n\n    buffer.needsUpdate = true;\n    setBuffer(buffer.clone());\n  }, [mesh, instanceMesh, weight, count, transform]);\n  return buffer;\n}\nfunction Sampler({\n  children,\n  weight,\n  transform,\n  instances,\n  mesh,\n  count = 16,\n  ...props\n}) {\n  const group = React.useRef(null);\n  const instancedRef = React.useRef(null);\n  const meshToSampleRef = React.useRef(null);\n  React.useEffect(() => {\n    var _instances$current, _mesh$current;\n\n    instancedRef.current = (_instances$current = instances == null ? void 0 : instances.current) !== null && _instances$current !== void 0 ? _instances$current : group.current.children.find(c => c.hasOwnProperty('instanceMatrix'));\n    meshToSampleRef.current = (_mesh$current = mesh == null ? void 0 : mesh.current) !== null && _mesh$current !== void 0 ? _mesh$current : group.current.children.find(c => c.type === 'Mesh');\n  }, [children, mesh == null ? void 0 : mesh.current, instances == null ? void 0 : instances.current]);\n  useSurfaceSampler(meshToSampleRef, count, transform, weight, instancedRef);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: group\n  }, props), children);\n}\n\nexport { Sampler, useSurfaceSampler };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { BufferAttribute } from 'three';\n\n/**\n * Used exclusively as a child of a BufferGeometry.\n * Computes the BufferAttribute by calling the `compute` function\n * and attaches the attribute to the geometry.\n */\nconst ComputedAttribute = ({\n  compute,\n  name,\n  ...props\n}) => {\n  const [bufferAttribute] = React.useState(() => new BufferAttribute(new Float32Array(0), 1));\n  const primitive = React.useRef(null);\n  React.useLayoutEffect(() => {\n    if (primitive.current) {\n      var _ref;\n\n      // @ts-expect-error brittle\n      const parent = (_ref = primitive.current.parent) !== null && _ref !== void 0 ? _ref : primitive.current.__r3f.parent;\n      const attr = compute(parent);\n      primitive.current.copy(attr);\n    }\n  }, [compute]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: primitive,\n    object: bufferAttribute,\n    attach: `attributes-${name}`\n  }, props));\n};\n\nexport { ComputedAttribute };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport pick from 'lodash.pick';\nimport { SkeletonUtils } from 'three-stdlib';\n\nfunction createSpread(child, {\n  keys = ['near', 'far', 'color', 'distance', 'decay', 'penumbra', 'angle', 'intensity', 'skeleton', 'visible', 'castShadow', 'receiveShadow', 'morphTargetDictionary', 'morphTargetInfluences', 'name', 'geometry', 'material', 'position', 'rotation', 'scale', 'up', 'userData', 'bindMode', 'bindMatrix', 'bindMatrixInverse', 'skeleton'],\n  deep,\n  inject,\n  castShadow,\n  receiveShadow\n}) {\n  let spread = pick(child, keys);\n\n  if (deep) {\n    if (spread.geometry && deep !== 'materialsOnly') spread.geometry = spread.geometry.clone();\n    if (spread.material && deep !== 'geometriesOnly') spread.material = spread.material.clone();\n  }\n\n  if (inject) {\n    if (typeof inject === 'function') spread = { ...spread,\n      children: inject(child)\n    };else if ( /*#__PURE__*/React.isValidElement(inject)) spread = { ...spread,\n      children: inject\n    };else spread = { ...spread,\n      ...inject\n    };\n  }\n\n  if (child instanceof THREE.Mesh) {\n    if (castShadow) spread.castShadow = true;\n    if (receiveShadow) spread.receiveShadow = true;\n  }\n\n  return spread;\n}\n\nconst Clone = /*#__PURE__*/React.forwardRef(({\n  isChild = false,\n  object,\n  children,\n  deep,\n  castShadow,\n  receiveShadow,\n  inject,\n  keys,\n  ...props\n}, forwardRef) => {\n  var _object;\n\n  const config = {\n    keys,\n    deep,\n    inject,\n    castShadow,\n    receiveShadow\n  };\n  object = React.useMemo(() => {\n    if (isChild === false && !Array.isArray(object)) {\n      let isSkinned = false;\n      object.traverse(object => {\n        if (object.isSkinnedMesh) isSkinned = true;\n      });\n      if (isSkinned) return SkeletonUtils.clone(object);\n    }\n\n    return object;\n  }, [object, isChild]); // Deal with arrayed clones\n\n  if (Array.isArray(object)) {\n    return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n      ref: forwardRef\n    }), object.map(o => /*#__PURE__*/React.createElement(Clone, _extends({\n      key: o.uuid,\n      object: o\n    }, config))), children);\n  } // Singleton clones\n\n\n  const {\n    children: injectChildren,\n    ...spread\n  } = createSpread(object, config);\n  const Element = object.type[0].toLowerCase() + object.type.slice(1);\n  return /*#__PURE__*/React.createElement(Element, _extends({}, spread, props, {\n    ref: forwardRef\n  }), ((_object = object) == null ? void 0 : _object.children).map(child => {\n    if (child.type === 'Bone') return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n      key: child.uuid,\n      object: child\n    }, config));\n    return /*#__PURE__*/React.createElement(Clone, _extends({\n      key: child.uuid,\n      object: child\n    }, config, {\n      isChild: true\n    }));\n  }), children, injectChildren);\n});\n\nexport { Clone };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport { MarchingCubes as MarchingCubes$1 } from 'three-stdlib';\nimport { useFrame } from '@react-three/fiber';\n\nconst globalContext = /*#__PURE__*/React.createContext(null);\nconst MarchingCubes = /*#__PURE__*/React.forwardRef(({\n  resolution = 28,\n  maxPolyCount = 10000,\n  enableUvs = false,\n  enableColors = false,\n  children,\n  ...props\n}, ref) => {\n  const marchingCubesRef = React.useRef(null);\n  const marchingCubes = React.useMemo(() => new MarchingCubes$1(resolution, null, enableUvs, enableColors, maxPolyCount), [resolution, maxPolyCount, enableUvs, enableColors]);\n  const api = React.useMemo(() => ({\n    getParent: () => marchingCubesRef\n  }), []);\n  useFrame(() => {\n    marchingCubes.reset();\n  }, -1); // To make sure the reset runs before the balls or planes are added\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: marchingCubes,\n    ref: mergeRefs([marchingCubesRef, ref])\n  }, props), /*#__PURE__*/React.createElement(globalContext.Provider, {\n    value: api\n  }, children)));\n});\nconst MarchingCube = /*#__PURE__*/React.forwardRef(({\n  strength = 0.5,\n  subtract = 12,\n  color,\n  ...props\n}, ref) => {\n  const {\n    getParent\n  } = React.useContext(globalContext);\n  const parentRef = React.useMemo(() => getParent(), [getParent]);\n  const cubeRef = React.useRef();\n  const vec = new THREE.Vector3();\n  useFrame(state => {\n    if (!parentRef.current || !cubeRef.current) return;\n    cubeRef.current.getWorldPosition(vec);\n    parentRef.current.addBall(0.5 + vec.x * 0.5, 0.5 + vec.y * 0.5, 0.5 + vec.z * 0.5, strength, subtract, color);\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: mergeRefs([ref, cubeRef])\n  }, props));\n});\nconst MarchingPlane = /*#__PURE__*/React.forwardRef(({\n  planeType: _planeType = 'x',\n  strength = 0.5,\n  subtract = 12,\n  ...props\n}, ref) => {\n  const {\n    getParent\n  } = React.useContext(globalContext);\n  const parentRef = React.useMemo(() => getParent(), [getParent]);\n  const wallRef = React.useRef();\n  const planeType = React.useMemo(() => _planeType === 'x' ? 'addPlaneX' : _planeType === 'y' ? 'addPlaneY' : 'addPlaneZ', [_planeType]);\n  useFrame(() => {\n    if (!parentRef.current || !wallRef.current) return;\n    parentRef.current[planeType](strength, subtract);\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: mergeRefs([ref, wallRef])\n  }, props));\n});\n\nexport { MarchingCube, MarchingCubes, MarchingPlane };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { applyProps } from '@react-three/fiber';\nimport { DecalGeometry } from 'three-stdlib';\n\nfunction isArray(vec) {\n  return Array.isArray(vec);\n}\n\nfunction vecToArray(vec = [0, 0, 0]) {\n  if (isArray(vec)) {\n    return vec;\n  } else if (vec instanceof THREE.Vector3 || vec instanceof THREE.Euler) {\n    return [vec.x, vec.y, vec.z];\n  } else {\n    return [vec, vec, vec];\n  }\n}\n\nfunction Decal({\n  debug,\n  mesh,\n  children,\n  position,\n  rotation,\n  scale,\n  ...props\n}) {\n  const ref = React.useRef(null);\n  const helper = React.useRef(null);\n  React.useLayoutEffect(() => {\n    const parent = (mesh == null ? void 0 : mesh.current) || ref.current.parent;\n    const target = ref.current;\n\n    if (!(parent instanceof THREE.Mesh)) {\n      throw new Error('Decal must have a Mesh as parent or specify its \"mesh\" prop');\n    }\n\n    const state = {\n      position: new THREE.Vector3(),\n      rotation: new THREE.Euler(),\n      scale: new THREE.Vector3(1, 1, 1)\n    };\n\n    if (parent) {\n      applyProps(state, {\n        position,\n        scale\n      }); // Zero out the parents matrix world for this operation\n\n      const matrixWorld = parent.matrixWorld.clone();\n      parent.matrixWorld.identity();\n\n      if (!rotation || typeof rotation === 'number') {\n        const o = new THREE.Object3D();\n        o.position.copy(state.position);\n        o.lookAt(parent.position);\n        if (typeof rotation === 'number') o.rotateZ(rotation);\n        applyProps(state, {\n          rotation: o.rotation\n        });\n      } else {\n        applyProps(state, {\n          rotation\n        });\n      }\n\n      target.geometry = new DecalGeometry(parent, state.position, state.rotation, state.scale);\n      if (helper.current) applyProps(helper.current, state); // Reset parents matix-world\n\n      parent.matrixWorld = matrixWorld;\n      return () => {\n        target.geometry.dispose();\n      };\n    }\n  }, [mesh, ...vecToArray(position), ...vecToArray(scale), ...vecToArray(rotation)]);\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: ref\n  }, children || /*#__PURE__*/React.createElement(\"meshStandardMaterial\", _extends({\n    transparent: true,\n    polygonOffset: true,\n    polygonOffsetFactor: -10\n  }, props)), debug && /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: helper\n  }, /*#__PURE__*/React.createElement(\"boxGeometry\", null), /*#__PURE__*/React.createElement(\"meshNormalMaterial\", {\n    wireframe: true\n  }), /*#__PURE__*/React.createElement(\"axesHelper\", null)));\n}\n\nexport { Decal };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useLoader } from '@react-three/fiber';\nimport * as React from 'react';\nimport { forwardRef, useMemo, useEffect, Fragment } from 'react';\nimport { DoubleSide } from 'three';\nimport { SVGLoader } from 'three-stdlib';\n\nconst Svg = /*#__PURE__*/forwardRef(function R3FSvg({\n  src,\n  skipFill,\n  skipStrokes,\n  fillMaterial,\n  strokeMaterial,\n  fillMeshProps,\n  strokeMeshProps,\n  ...props\n}, ref) {\n  const svg = useLoader(SVGLoader, !src.startsWith('<svg') ? src : `data:image/svg+xml;utf8,${src}`);\n  const strokeGeometries = useMemo(() => skipStrokes ? [] : svg.paths.map(path => {\n    var _path$userData;\n\n    return ((_path$userData = path.userData) == null ? void 0 : _path$userData.style.stroke) === undefined || path.userData.style.stroke === 'none' ? null : path.subPaths.map(subPath => SVGLoader.pointsToStroke(subPath.getPoints(), path.userData.style));\n  }), [svg, skipStrokes]);\n  useEffect(() => {\n    return () => strokeGeometries.forEach(group => group && group.map(g => g.dispose()));\n  }, [strokeGeometries]);\n  return /*#__PURE__*/React.createElement(\"object3D\", _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(\"object3D\", {\n    scale: [1, -1, 1]\n  }, svg.paths.map((path, p) => {\n    var _path$userData2, _path$userData3;\n\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: p\n    }, !skipFill && ((_path$userData2 = path.userData) == null ? void 0 : _path$userData2.style.fill) !== undefined && path.userData.style.fill !== 'none' && SVGLoader.createShapes(path).map((shape, s) => /*#__PURE__*/React.createElement(\"mesh\", _extends({\n      key: s\n    }, fillMeshProps), /*#__PURE__*/React.createElement(\"shapeGeometry\", {\n      args: [shape]\n    }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", _extends({\n      color: path.userData.style.fill,\n      opacity: path.userData.style.fillOpacity,\n      transparent: true,\n      side: DoubleSide,\n      depthWrite: false\n    }, fillMaterial)))), !skipStrokes && ((_path$userData3 = path.userData) == null ? void 0 : _path$userData3.style.stroke) !== undefined && path.userData.style.stroke !== 'none' && path.subPaths.map((_subPath, s) => /*#__PURE__*/React.createElement(\"mesh\", _extends({\n      key: s,\n      geometry: strokeGeometries[p][s]\n    }, strokeMeshProps), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", _extends({\n      color: path.userData.style.stroke,\n      opacity: path.userData.style.strokeOpacity,\n      transparent: true,\n      side: DoubleSide,\n      depthWrite: false\n    }, strokeMaterial)))));\n  })));\n});\n\nexport { Svg };\n", "import * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { AsciiEffect } from 'three-stdlib';\n\nfunction AsciiRenderer({\n  renderIndex = 1,\n  bgColor = 'black',\n  fgColor = 'white',\n  characters = ' .:-+*=%@#',\n  invert = true,\n  color = false,\n  resolution = 0.15\n}) {\n  // Reactive state\n  const {\n    size,\n    gl,\n    scene,\n    camera\n  } = useThree(); // Create effect\n\n  const effect = React.useMemo(() => {\n    const effect = new AsciiEffect(gl, characters, {\n      invert,\n      color,\n      resolution\n    });\n    effect.domElement.style.position = 'absolute';\n    effect.domElement.style.top = '0px';\n    effect.domElement.style.left = '0px';\n    effect.domElement.style.pointerEvents = 'none';\n    return effect;\n  }, [characters, invert, color, resolution]); // Styling\n\n  React.useLayoutEffect(() => {\n    effect.domElement.style.color = fgColor;\n    effect.domElement.style.backgroundColor = bgColor;\n  }, [fgColor, bgColor]); // Append on mount, remove on unmount\n\n  React.useEffect(() => {\n    gl.domElement.style.opacity = '0';\n    gl.domElement.parentNode.appendChild(effect.domElement);\n    return () => {\n      gl.domElement.style.opacity = '1';\n      gl.domElement.parentNode.removeChild(effect.domElement);\n    };\n  }, [effect]); // Set size\n\n  React.useEffect(() => {\n    effect.setSize(size.width, size.height);\n  }, [effect, size]); // Take over render-loop (that is what the index is for)\n\n  useFrame(state => {\n    effect.render(scene, camera);\n  }, renderIndex); // This component returns nothing, it is a purely logical\n}\n\nexport { AsciiRenderer };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { useFBO } from './useFBO.js';\n\nconst isFunction = node => typeof node === 'function';\n\nconst OrthographicCamera = /*#__PURE__*/React.forwardRef(({\n  envMap,\n  resolution = 256,\n  frames = Infinity,\n  children,\n  makeDefault,\n  ...props\n}, ref) => {\n  const set = useThree(({\n    set\n  }) => set);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const size = useThree(({\n    size\n  }) => size);\n  const cameraRef = React.useRef(null);\n  const groupRef = React.useRef(null);\n  const fbo = useFBO(resolution);\n  React.useLayoutEffect(() => {\n    if (!props.manual) {\n      cameraRef.current.updateProjectionMatrix();\n    }\n  }, [size, props]);\n  React.useLayoutEffect(() => {\n    cameraRef.current.updateProjectionMatrix();\n  });\n  React.useLayoutEffect(() => {\n    if (makeDefault) {\n      const oldCam = camera;\n      set(() => ({\n        camera: cameraRef.current\n      }));\n      return () => set(() => ({\n        camera: oldCam\n      }));\n    } // The camera should not be part of the dependency list because this components camera is a stable reference\n    // that must exchange the default, and clean up after itself on unmount.\n\n  }, [cameraRef, makeDefault, set]);\n  let count = 0;\n  let oldEnvMap = null;\n  const functional = isFunction(children);\n  useFrame(state => {\n    if (functional && (frames === Infinity || count < frames)) {\n      groupRef.current.visible = false;\n      state.gl.setRenderTarget(fbo);\n      oldEnvMap = state.scene.background;\n      if (envMap) state.scene.background = envMap;\n      state.gl.render(state.scene, cameraRef.current);\n      state.scene.background = oldEnvMap;\n      state.gl.setRenderTarget(null);\n      groupRef.current.visible = true;\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"orthographicCamera\", _extends({\n    left: size.width / -2,\n    right: size.width / 2,\n    top: size.height / 2,\n    bottom: size.height / -2,\n    ref: mergeRefs([cameraRef, ref])\n  }, props), !functional && children), /*#__PURE__*/React.createElement(\"group\", {\n    ref: groupRef\n  }, functional && children(fbo.texture)));\n});\n\nexport { OrthographicCamera };\n", "import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\n\n// 👇 uncomment when TS version supports function overloads\n// export function useFBO(settings?: FBOSettings)\nfunction useFBO(width, height, settings) {\n  const {\n    gl,\n    size,\n    viewport\n  } = useThree();\n\n  const _width = typeof width === 'number' ? width : size.width * viewport.dpr;\n\n  const _height = typeof height === 'number' ? height : size.height * viewport.dpr;\n\n  const _settings = (typeof width === 'number' ? settings : width) || {};\n\n  const {\n    samples,\n    ...targetSettings\n  } = _settings;\n  const target = React.useMemo(() => {\n    let target;\n    target = new THREE.WebGLRenderTarget(_width, _height, {\n      minFilter: THREE.LinearFilter,\n      magFilter: THREE.LinearFilter,\n      encoding: gl.outputEncoding,\n      type: THREE.HalfFloatType,\n      ...targetSettings\n    });\n    target.samples = samples;\n    return target;\n  }, []);\n  React.useLayoutEffect(() => {\n    target.setSize(_width, _height);\n    if (samples) target.samples = samples;\n  }, [samples, target, _width, _height]);\n  React.useEffect(() => {\n    return () => target.dispose();\n  }, []);\n  return target;\n}\n\nexport { useFBO };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { useFBO } from './useFBO.js';\n\nconst isFunction = node => typeof node === 'function';\n\nconst PerspectiveCamera = /*#__PURE__*/React.forwardRef(({\n  envMap,\n  resolution = 256,\n  frames = Infinity,\n  makeDefault,\n  children,\n  ...props\n}, ref) => {\n  const set = useThree(({\n    set\n  }) => set);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const size = useThree(({\n    size\n  }) => size);\n  const cameraRef = React.useRef(null);\n  const groupRef = React.useRef(null);\n  const fbo = useFBO(resolution);\n  React.useLayoutEffect(() => {\n    if (!props.manual) {\n      cameraRef.current.aspect = size.width / size.height;\n    }\n  }, [size, props]);\n  React.useLayoutEffect(() => {\n    cameraRef.current.updateProjectionMatrix();\n  });\n  let count = 0;\n  let oldEnvMap = null;\n  const functional = isFunction(children);\n  useFrame(state => {\n    if (functional && (frames === Infinity || count < frames)) {\n      groupRef.current.visible = false;\n      state.gl.setRenderTarget(fbo);\n      oldEnvMap = state.scene.background;\n      if (envMap) state.scene.background = envMap;\n      state.gl.render(state.scene, cameraRef.current);\n      state.scene.background = oldEnvMap;\n      state.gl.setRenderTarget(null);\n      groupRef.current.visible = true;\n      count++;\n    }\n  });\n  React.useLayoutEffect(() => {\n    if (makeDefault) {\n      const oldCam = camera;\n      set(() => ({\n        camera: cameraRef.current\n      }));\n      return () => set(() => ({\n        camera: oldCam\n      }));\n    } // The camera should not be part of the dependency list because this components camera is a stable reference\n    // that must exchange the default, and clean up after itself on unmount.\n\n  }, [cameraRef, makeDefault, set]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"perspectiveCamera\", _extends({\n    ref: mergeRefs([cameraRef, ref])\n  }, props), !functional && children), /*#__PURE__*/React.createElement(\"group\", {\n    ref: groupRef\n  }, functional && children(fbo.texture)));\n});\n\nexport { PerspectiveCamera };\n", "import { WebGLCubeRenderTarget, HalfFloatType } from 'three';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nfunction CubeCamera({\n  children,\n  fog,\n  frames = Infinity,\n  resolution = 256,\n  near = 0.1,\n  far = 1000,\n  envMap,\n  ...props\n}) {\n  const ref = React.useRef();\n  const [camera, setCamera] = React.useState(null);\n  const scene = useThree(({\n    scene\n  }) => scene);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const fbo = React.useMemo(() => {\n    const fbo = new WebGLCubeRenderTarget(resolution);\n    fbo.texture.encoding = gl.outputEncoding;\n    fbo.texture.type = HalfFloatType;\n    return fbo;\n  }, [resolution]);\n  let count = 0;\n  let originalFog;\n  let originalBackground;\n  useFrame(() => {\n    if (camera && ref.current && (frames === Infinity || count < frames)) {\n      ref.current.visible = false;\n      originalFog = scene.fog;\n      originalBackground = scene.background;\n      scene.background = envMap || originalBackground;\n      scene.fog = fog || originalFog;\n      camera.update(gl, scene);\n      scene.fog = originalFog;\n      scene.background = originalBackground;\n      ref.current.visible = true;\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"cubeCamera\", {\n    ref: setCamera,\n    args: [near, far, fbo]\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, children(fbo.texture)));\n}\n\nexport { CubeCamera };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { DeviceOrientationControls as DeviceOrientationControls$1 } from 'three-stdlib';\n\nconst DeviceOrientationControls = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    camera,\n    onChange,\n    makeDefault,\n    ...rest\n  } = props;\n  const defaultCamera = useThree(state => state.camera);\n  const invalidate = useThree(state => state.invalidate);\n  const get = useThree(state => state.get);\n  const set = useThree(state => state.set);\n  const explCamera = camera || defaultCamera;\n  const [controls] = React.useState(() => new DeviceOrientationControls$1(explCamera));\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (onChange) onChange(e);\n    };\n\n    controls == null ? void 0 : controls.addEventListener == null ? void 0 : controls.addEventListener('change', callback);\n    return () => controls == null ? void 0 : controls.removeEventListener == null ? void 0 : controls.removeEventListener('change', callback);\n  }, [onChange, controls, invalidate]);\n  useFrame(() => controls == null ? void 0 : controls.update(), -1);\n  React.useEffect(() => {\n    const current = controls;\n    current == null ? void 0 : current.connect();\n    return () => current == null ? void 0 : current.dispose();\n  }, [controls]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return controls ? /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls\n  }, rest)) : null;\n});\n\nexport { DeviceOrientationControls };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { FlyControls as FlyControls$1 } from 'three-stdlib';\n\nconst FlyControls = /*#__PURE__*/React.forwardRef(({\n  domElement,\n  ...props\n}, fref) => {\n  const {\n    onChange,\n    makeDefault,\n    ...rest\n  } = props;\n  const invalidate = useThree(state => state.invalidate);\n  const camera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const get = useThree(state => state.get);\n  const set = useThree(state => state.set);\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = React.useMemo(() => new FlyControls$1(camera), [camera]);\n  React.useEffect(() => {\n    controls.connect(explDomElement);\n    return () => void controls.dispose();\n  }, [explDomElement, controls, invalidate]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (onChange) onChange(e);\n    };\n\n    controls.addEventListener == null ? void 0 : controls.addEventListener('change', callback);\n    return () => controls.removeEventListener == null ? void 0 : controls.removeEventListener('change', callback);\n  }, [onChange, invalidate]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  useFrame((_, delta) => controls.update(delta));\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: fref,\n    object: controls,\n    args: [camera, explDomElement]\n  }, rest));\n});\n\nexport { FlyControls };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { MapControls as MapControls$1 } from 'three-stdlib';\n\nconst MapControls = /*#__PURE__*/React.forwardRef((props = {\n  enableDamping: true\n}, ref) => {\n  const {\n    domElement,\n    camera,\n    makeDefault,\n    onChange,\n    onStart,\n    onEnd,\n    ...rest\n  } = props;\n  const invalidate = useThree(state => state.invalidate);\n  const defaultCamera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const set = useThree(state => state.set);\n  const get = useThree(state => state.get);\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const explCamera = camera || defaultCamera;\n  const controls = React.useMemo(() => new MapControls$1(explCamera), [explCamera]);\n  React.useEffect(() => {\n    controls.connect(explDomElement);\n\n    const callback = e => {\n      invalidate();\n      if (onChange) onChange(e);\n    };\n\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      controls.dispose();\n      controls.removeEventListener('change', callback);\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n    };\n  }, [onChange, onStart, onEnd, controls, invalidate, explDomElement]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  useFrame(() => controls.update(), -1);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: true\n  }, rest));\n});\n\nexport { MapControls };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { OrbitControls as OrbitControls$1 } from 'three-stdlib';\n\nconst OrbitControls = /*#__PURE__*/React.forwardRef(({\n  makeDefault,\n  camera,\n  regress,\n  domElement,\n  enableDamping = true,\n  onChange,\n  onStart,\n  onEnd,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(state => state.invalidate);\n  const defaultCamera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const set = useThree(state => state.set);\n  const get = useThree(state => state.get);\n  const performance = useThree(state => state.performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = React.useMemo(() => new OrbitControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  }, -1);\n  React.useEffect(() => {\n    controls.connect(explDomElement);\n    return () => void controls.dispose();\n  }, [explDomElement, regress, controls, invalidate]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n      controls.removeEventListener('change', callback);\n    };\n  }, [onChange, onStart, onEnd, controls, invalidate]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: enableDamping\n  }, restProps));\n});\n\nexport { OrbitControls };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { TrackballControls as TrackballControls$1 } from 'three-stdlib';\n\nconst TrackballControls = /*#__PURE__*/React.forwardRef(({\n  makeDefault,\n  camera,\n  domElement,\n  regress,\n  onChange,\n  onStart,\n  onEnd,\n  ...restProps\n}, ref) => {\n  const {\n    invalidate,\n    camera: defaultCamera,\n    gl,\n    events,\n    set,\n    get,\n    performance,\n    viewport\n  } = useThree();\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = React.useMemo(() => new TrackballControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  }, -1);\n  React.useEffect(() => {\n    controls.connect(explDomElement);\n    return () => void controls.dispose();\n  }, [explDomElement, regress, controls, invalidate]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n      controls.removeEventListener('change', callback);\n    };\n  }, [onChange, onStart, onEnd, controls, invalidate]);\n  React.useEffect(() => {\n    controls.handleResize();\n  }, [viewport]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls\n  }, restProps));\n});\n\nexport { TrackballControls };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { forwardRef, useMemo, useEffect } from 'react';\nimport { ArcballControls as ArcballControls$1 } from 'three-stdlib';\n\nconst ArcballControls = /*#__PURE__*/forwardRef(({\n  camera,\n  makeDefault,\n  regress,\n  domElement,\n  onChange,\n  onStart,\n  onEnd,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(state => state.invalidate);\n  const defaultCamera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const set = useThree(state => state.set);\n  const get = useThree(state => state.get);\n  const performance = useThree(state => state.performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = useMemo(() => new ArcballControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  }, -1);\n  useEffect(() => {\n    controls.connect(explDomElement);\n    return () => void controls.dispose();\n  }, [explDomElement, regress, controls, invalidate]);\n  useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      controls.removeEventListener('change', callback);\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n    };\n  }, [onChange, onStart, onEnd]);\n  useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls\n  }, restProps));\n});\n\nexport { ArcballControls };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree } from '@react-three/fiber';\nimport omit from 'lodash.omit';\nimport pick from 'lodash.pick';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { TransformControls as TransformControls$1 } from 'three-stdlib';\n\nconst TransformControls = /*#__PURE__*/React.forwardRef(({\n  children,\n  domElement,\n  onChange,\n  onMouseDown,\n  onMouseUp,\n  onObjectChange,\n  object,\n  makeDefault,\n  ...props\n}, ref) => {\n  const transformOnlyPropNames = ['enabled', 'axis', 'mode', 'translationSnap', 'rotationSnap', 'scaleSnap', 'space', 'size', 'showX', 'showY', 'showZ'];\n  const {\n    camera,\n    ...rest\n  } = props;\n  const transformProps = pick(rest, transformOnlyPropNames);\n  const objectProps = omit(rest, transformOnlyPropNames); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const defaultControls = useThree(state => state.controls);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const defaultCamera = useThree(state => state.camera);\n  const invalidate = useThree(state => state.invalidate);\n  const get = useThree(state => state.get);\n  const set = useThree(state => state.set);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = React.useMemo(() => new TransformControls$1(explCamera, explDomElement), [explCamera, explDomElement]);\n  const group = React.useRef();\n  React.useLayoutEffect(() => {\n    if (object) {\n      controls.attach(object instanceof THREE.Object3D ? object : object.current);\n    } else if (group.current instanceof THREE.Object3D) {\n      controls.attach(group.current);\n    }\n\n    return () => void controls.detach();\n  }, [object, children, controls]);\n  React.useEffect(() => {\n    if (defaultControls) {\n      const callback = event => defaultControls.enabled = !event.value;\n\n      controls.addEventListener('dragging-changed', callback);\n      return () => controls.removeEventListener('dragging-changed', callback);\n    }\n  }, [controls, defaultControls]);\n  const onChangeRef = React.useRef();\n  const onMouseDownRef = React.useRef();\n  const onMouseUpRef = React.useRef();\n  const onObjectChangeRef = React.useRef();\n  React.useLayoutEffect(() => void (onChangeRef.current = onChange), [onChange]);\n  React.useLayoutEffect(() => void (onMouseDownRef.current = onMouseDown), [onMouseDown]);\n  React.useLayoutEffect(() => void (onMouseUpRef.current = onMouseUp), [onMouseUp]);\n  React.useLayoutEffect(() => void (onObjectChangeRef.current = onObjectChange), [onObjectChange]);\n  React.useEffect(() => {\n    const onChange = e => {\n      invalidate();\n      onChangeRef.current == null ? void 0 : onChangeRef.current(e);\n    };\n\n    const onMouseDown = e => onMouseDownRef.current == null ? void 0 : onMouseDownRef.current(e);\n\n    const onMouseUp = e => onMouseUpRef.current == null ? void 0 : onMouseUpRef.current(e);\n\n    const onObjectChange = e => onObjectChangeRef.current == null ? void 0 : onObjectChangeRef.current(e);\n\n    controls.addEventListener('change', onChange);\n    controls.addEventListener('mouseDown', onMouseDown);\n    controls.addEventListener('mouseUp', onMouseUp);\n    controls.addEventListener('objectChange', onObjectChange);\n    return () => {\n      controls.removeEventListener('change', onChange);\n      controls.removeEventListener('mouseDown', onMouseDown);\n      controls.removeEventListener('mouseUp', onMouseUp);\n      controls.removeEventListener('objectChange', onObjectChange);\n    };\n  }, [invalidate, controls]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return controls ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls\n  }, transformProps)), /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: group\n  }, objectProps), children)) : null;\n});\n\nexport { TransformControls };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree } from '@react-three/fiber';\nimport * as React from 'react';\nimport { PointerLockControls as PointerLockControls$1 } from 'three-stdlib';\n\nconst PointerLockControls = /*#__PURE__*/React.forwardRef(({\n  domElement,\n  selector,\n  onChange,\n  onLock,\n  onUnlock,\n  enabled = true,\n  makeDefault,\n  ...props\n}, ref) => {\n  const {\n    camera,\n    ...rest\n  } = props;\n  const setEvents = useThree(state => state.setEvents);\n  const gl = useThree(state => state.gl);\n  const defaultCamera = useThree(state => state.camera);\n  const invalidate = useThree(state => state.invalidate);\n  const events = useThree(state => state.events);\n  const get = useThree(state => state.get);\n  const set = useThree(state => state.set);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const [controls] = React.useState(() => new PointerLockControls$1(explCamera));\n  React.useEffect(() => {\n    if (enabled) {\n      controls.connect(explDomElement); // Force events to be centered while PLC is active\n\n      const oldComputeOffsets = get().events.compute;\n      setEvents({\n        compute(event, state) {\n          const offsetX = state.size.width / 2;\n          const offsetY = state.size.height / 2;\n          state.pointer.set(offsetX / state.size.width * 2 - 1, -(offsetY / state.size.height) * 2 + 1);\n          state.raycaster.setFromCamera(state.pointer, state.camera);\n        }\n\n      });\n      return () => {\n        controls.disconnect();\n        setEvents({\n          compute: oldComputeOffsets\n        });\n      };\n    }\n  }, [enabled, controls]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (onChange) onChange(e);\n    };\n\n    controls.addEventListener('change', callback);\n    if (onLock) controls.addEventListener('lock', onLock);\n    if (onUnlock) controls.addEventListener('unlock', onUnlock); // Enforce previous interaction\n\n    const handler = () => controls.lock();\n\n    const elements = selector ? Array.from(document.querySelectorAll(selector)) : [document];\n    elements.forEach(element => element && element.addEventListener('click', handler));\n    return () => {\n      controls.removeEventListener('change', callback);\n      if (onLock) controls.addEventListener('lock', onLock);\n      if (onUnlock) controls.addEventListener('unlock', onUnlock);\n      elements.forEach(element => element ? element.removeEventListener('click', handler) : undefined);\n    };\n  }, [onChange, onLock, onUnlock, selector, controls, invalidate]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls\n  }, rest));\n});\n\nexport { PointerLockControls };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { FirstPersonControls as FirstPersonControls$1 } from 'three-stdlib';\n\nconst FirstPersonControls = /*#__PURE__*/React.forwardRef(({\n  domElement,\n  makeDefault,\n  ...props\n}, ref) => {\n  const camera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const get = useThree(state => state.get);\n  const set = useThree(state => state.set);\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const [controls] = React.useState(() => new FirstPersonControls$1(camera, explDomElement));\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  useFrame((_, delta) => {\n    controls.update(delta);\n  }, -1);\n  return controls ? /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls\n  }, props)) : null;\n});\n\nexport { FirstPersonControls };\n", "import * as React from 'react';\nimport { useThree, useFrame, createPortal } from '@react-three/fiber';\nimport { Object3D, Matrix4, Quaternion, Vector3, Scene } from 'three';\nimport { OrthographicCamera } from './OrthographicCamera.js';\nimport { useCamera } from './useCamera.js';\n\nconst Context = /*#__PURE__*/React.createContext({});\nconst useGizmoContext = () => {\n  return React.useContext(Context);\n};\nconst turnRate = 2 * Math.PI; // turn rate in angles per second\n\nconst dummy = new Object3D();\nconst matrix = new Matrix4();\nconst [q1, q2] = [new Quaternion(), new Quaternion()];\nconst target = new Vector3();\nconst targetPosition = new Vector3();\n\nconst isOrbitControls = controls => {\n  return 'minPolarAngle' in controls;\n};\n\nconst GizmoHelper = ({\n  alignment = 'bottom-right',\n  margin = [80, 80],\n  renderPriority = 0,\n  autoClear = true,\n  onUpdate,\n  onTarget,\n  children: GizmoHelperComponent\n}) => {\n  const size = useThree(({\n    size\n  }) => size);\n  const mainCamera = useThree(({\n    camera\n  }) => camera); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const defaultControls = useThree(({\n    controls\n  }) => controls);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const scene = useThree(({\n    scene\n  }) => scene);\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const backgroundRef = React.useRef();\n  const gizmoRef = React.useRef();\n  const virtualCam = React.useRef(null);\n  const [virtualScene] = React.useState(() => new Scene());\n  const animating = React.useRef(false);\n  const radius = React.useRef(0);\n  const focusPoint = React.useRef(new Vector3(0, 0, 0));\n  const defaultUp = React.useRef(new Vector3(0, 0, 0));\n  React.useEffect(() => {\n    defaultUp.current.copy(mainCamera.up);\n  }, [mainCamera]);\n  const tweenCamera = React.useCallback(direction => {\n    animating.current = true;\n    if (defaultControls || onTarget) focusPoint.current = (defaultControls == null ? void 0 : defaultControls.target) || (onTarget == null ? void 0 : onTarget());\n    radius.current = mainCamera.position.distanceTo(target); // Rotate from current camera orientation\n\n    q1.copy(mainCamera.quaternion); // To new current camera orientation\n\n    targetPosition.copy(direction).multiplyScalar(radius.current).add(target);\n    dummy.lookAt(targetPosition);\n    q2.copy(dummy.quaternion);\n    invalidate();\n  }, [defaultControls, mainCamera, onTarget, invalidate]);\n  React.useEffect(() => {\n    if (scene.background) {\n      //Interchange the actual scene background with the virtual scene\n      backgroundRef.current = scene.background;\n      scene.background = null;\n      virtualScene.background = backgroundRef.current;\n    }\n\n    return () => {\n      // reset on unmount\n      if (backgroundRef.current) scene.background = backgroundRef.current;\n    };\n  }, []);\n  useFrame((_, delta) => {\n    if (virtualCam.current && gizmoRef.current) {\n      var _gizmoRef$current;\n\n      // Animate step\n      if (animating.current) {\n        if (q1.angleTo(q2) < 0.01) {\n          animating.current = false; // Orbit controls uses UP vector as the orbit axes,\n          // so we need to reset it after the animation is done\n          // moving it around for the controls to work correctly\n\n          if (isOrbitControls(defaultControls)) {\n            mainCamera.up.copy(defaultUp.current);\n          }\n        } else {\n          const step = delta * turnRate; // animate position by doing a slerp and then scaling the position on the unit sphere\n\n          q1.rotateTowards(q2, step); // animate orientation\n\n          mainCamera.position.set(0, 0, 1).applyQuaternion(q1).multiplyScalar(radius.current).add(focusPoint.current);\n          mainCamera.up.set(0, 1, 0).applyQuaternion(q1).normalize();\n          mainCamera.quaternion.copy(q1);\n          if (onUpdate) onUpdate();else if (defaultControls) defaultControls.update();\n          invalidate();\n        }\n      } // Sync Gizmo with main camera orientation\n\n\n      matrix.copy(mainCamera.matrix).invert();\n      (_gizmoRef$current = gizmoRef.current) == null ? void 0 : _gizmoRef$current.quaternion.setFromRotationMatrix(matrix); // Render virtual camera\n\n      if (autoClear) gl.autoClear = false;\n      gl.clearDepth();\n      gl.render(virtualScene, virtualCam.current);\n    }\n  }, renderPriority);\n  const raycast = useCamera(virtualCam);\n  const gizmoHelperContext = React.useMemo(() => ({\n    tweenCamera,\n    raycast\n  }), [tweenCamera]); // Position gizmo component within scene\n\n  const [marginX, marginY] = margin;\n  const x = alignment.endsWith('-center') ? 0 : alignment.endsWith('-left') ? -size.width / 2 + marginX : size.width / 2 - marginX;\n  const y = alignment.startsWith('center-') ? 0 : alignment.startsWith('top-') ? size.height / 2 - marginY : -size.height / 2 + marginY;\n  return createPortal( /*#__PURE__*/React.createElement(Context.Provider, {\n    value: gizmoHelperContext\n  }, /*#__PURE__*/React.createElement(OrthographicCamera, {\n    ref: virtualCam,\n    position: [0, 0, 200]\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    ref: gizmoRef,\n    position: [x, y, 0]\n  }, GizmoHelperComponent)), virtualScene);\n};\n\nexport { GizmoHelper, useGizmoContext };\n", "import * as React from 'react';\nimport { Raycaster, Camera } from 'three';\nimport { useThree, applyProps } from '@react-three/fiber';\n\nfunction useCamera(camera, props) {\n  const pointer = useThree(state => state.pointer);\n  const [raycast] = React.useState(() => {\n    const raycaster = new Raycaster();\n    /**\n     * applyProps is an internal method of r3f and\n     * therefore requires its first arg to be an\n     * \"Instance\" a term used with the Reconciler\n     * so we have an expect error to mask this\n     */\n    // @ts-expect-error\n\n    if (props) applyProps(raycaster, props, {});\n    return function (_, intersects) {\n      raycaster.setFromCamera(pointer, camera instanceof Camera ? camera : camera.current);\n      const rc = this.constructor.prototype.raycast.bind(this);\n      if (rc) rc(raycaster, intersects);\n    };\n  });\n  return raycast;\n}\n\nexport { useCamera };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree } from '@react-three/fiber';\nimport { useGizmoContext } from './GizmoHelper.js';\nimport { Vector3, CanvasTexture } from 'three';\n\nconst colors = {\n  bg: '#f0f0f0',\n  hover: '#999',\n  text: 'black',\n  stroke: 'black'\n};\nconst defaultFaces = ['Right', 'Left', 'Top', 'Bottom', 'Front', 'Back'];\n\nconst makePositionVector = xyz => new Vector3(...xyz).multiplyScalar(0.38);\n\nconst corners = [[1, 1, 1], [1, 1, -1], [1, -1, 1], [1, -1, -1], [-1, 1, 1], [-1, 1, -1], [-1, -1, 1], [-1, -1, -1]].map(makePositionVector);\nconst cornerDimensions = [0.25, 0.25, 0.25];\nconst edges = [[1, 1, 0], [1, 0, 1], [1, 0, -1], [1, -1, 0], [0, 1, 1], [0, 1, -1], [0, -1, 1], [0, -1, -1], [-1, 1, 0], [-1, 0, 1], [-1, 0, -1], [-1, -1, 0]].map(makePositionVector);\nconst edgeDimensions = edges.map(edge => edge.toArray().map(axis => axis == 0 ? 0.5 : 0.25));\n\nconst FaceMaterial = ({\n  hover,\n  index,\n  font = '20px Inter var, Arial, sans-serif',\n  faces = defaultFaces,\n  color = colors.bg,\n  hoverColor = colors.hover,\n  textColor = colors.text,\n  strokeColor = colors.stroke,\n  opacity = 1\n}) => {\n  const gl = useThree(state => state.gl);\n  const texture = React.useMemo(() => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 128;\n    canvas.height = 128;\n    const context = canvas.getContext('2d');\n    context.fillStyle = color;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    context.strokeStyle = strokeColor;\n    context.strokeRect(0, 0, canvas.width, canvas.height);\n    context.font = font;\n    context.textAlign = 'center';\n    context.fillStyle = textColor;\n    context.fillText(faces[index].toUpperCase(), 64, 76);\n    return new CanvasTexture(canvas);\n  }, [index, faces, font, color, textColor, strokeColor]);\n  return /*#__PURE__*/React.createElement(\"meshLambertMaterial\", {\n    map: texture,\n    \"map-encoding\": gl.outputEncoding,\n    \"map-anisotropy\": gl.capabilities.getMaxAnisotropy() || 1,\n    attach: `material-${index}`,\n    color: hover ? hoverColor : 'white',\n    transparent: true,\n    opacity: opacity\n  });\n};\n\nconst FaceCube = props => {\n  const {\n    tweenCamera,\n    raycast\n  } = useGizmoContext();\n  const [hover, setHover] = React.useState(null);\n\n  const handlePointerOut = e => {\n    e.stopPropagation();\n    setHover(null);\n  };\n\n  const handleClick = e => {\n    e.stopPropagation();\n    tweenCamera(e.face.normal);\n  };\n\n  const handlePointerMove = e => {\n    e.stopPropagation();\n    setHover(Math.floor(e.faceIndex / 2));\n  };\n\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    raycast: raycast,\n    onPointerOut: handlePointerOut,\n    onPointerMove: handlePointerMove,\n    onClick: props.onClick || handleClick\n  }, [...Array(6)].map((_, index) => /*#__PURE__*/React.createElement(FaceMaterial, _extends({\n    key: index,\n    index: index,\n    hover: hover === index\n  }, props))), /*#__PURE__*/React.createElement(\"boxGeometry\", null));\n};\n\nconst EdgeCube = ({\n  onClick,\n  dimensions,\n  position,\n  hoverColor = colors.hover\n}) => {\n  const {\n    tweenCamera,\n    raycast\n  } = useGizmoContext();\n  const [hover, setHover] = React.useState(false);\n\n  const handlePointerOut = e => {\n    e.stopPropagation();\n    setHover(false);\n  };\n\n  const handlePointerOver = e => {\n    e.stopPropagation();\n    setHover(true);\n  };\n\n  const handleClick = e => {\n    e.stopPropagation();\n    tweenCamera(position);\n  };\n\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    scale: 1.01,\n    position: position,\n    raycast: raycast,\n    onPointerOver: handlePointerOver,\n    onPointerOut: handlePointerOut,\n    onClick: onClick || handleClick\n  }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    color: hover ? hoverColor : 'white',\n    transparent: true,\n    opacity: 0.6,\n    visible: hover\n  }), /*#__PURE__*/React.createElement(\"boxGeometry\", {\n    args: dimensions\n  }));\n};\n\nconst GizmoViewcube = props => {\n  return /*#__PURE__*/React.createElement(\"group\", {\n    scale: [60, 60, 60]\n  }, /*#__PURE__*/React.createElement(FaceCube, props), edges.map((edge, index) => /*#__PURE__*/React.createElement(EdgeCube, _extends({\n    key: index,\n    position: edge,\n    dimensions: edgeDimensions[index]\n  }, props))), corners.map((corner, index) => /*#__PURE__*/React.createElement(EdgeCube, _extends({\n    key: index,\n    position: corner,\n    dimensions: cornerDimensions\n  }, props))), /*#__PURE__*/React.createElement(\"ambientLight\", {\n    intensity: 0.5\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    position: [10, 10, 10],\n    intensity: 0.5\n  }));\n};\n\nexport { GizmoViewcube };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree } from '@react-three/fiber';\nimport { CanvasTexture } from 'three';\nimport { useGizmoContext } from './GizmoHelper.js';\n\nfunction Axis({\n  scale = [0.8, 0.05, 0.05],\n  color,\n  rotation\n}) {\n  return /*#__PURE__*/React.createElement(\"group\", {\n    rotation: rotation\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    position: [0.4, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"boxGeometry\", {\n    args: scale\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    color: color,\n    toneMapped: false\n  })));\n}\n\nfunction AxisHead({\n  onClick,\n  font,\n  disabled,\n  arcStyle,\n  label,\n  labelColor,\n  axisHeadScale = 1,\n  ...props\n}) {\n  const gl = useThree(state => state.gl);\n  const texture = React.useMemo(() => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 64;\n    canvas.height = 64;\n    const context = canvas.getContext('2d');\n    context.beginPath();\n    context.arc(32, 32, 16, 0, 2 * Math.PI);\n    context.closePath();\n    context.fillStyle = arcStyle;\n    context.fill();\n\n    if (label) {\n      context.font = font;\n      context.textAlign = 'center';\n      context.fillStyle = labelColor;\n      context.fillText(label, 32, 41);\n    }\n\n    return new CanvasTexture(canvas);\n  }, [arcStyle, label, labelColor, font]);\n  const [active, setActive] = React.useState(false);\n  const scale = (label ? 1 : 0.75) * (active ? 1.2 : 1) * axisHeadScale;\n\n  const handlePointerOver = e => {\n    e.stopPropagation();\n    setActive(true);\n  };\n\n  const handlePointerOut = e => {\n    e.stopPropagation();\n    setActive(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"sprite\", _extends({\n    scale: scale,\n    onPointerOver: !disabled ? handlePointerOver : undefined,\n    onPointerOut: !disabled ? onClick || handlePointerOut : undefined\n  }, props), /*#__PURE__*/React.createElement(\"spriteMaterial\", {\n    map: texture,\n    \"map-encoding\": gl.outputEncoding,\n    \"map-anisotropy\": gl.capabilities.getMaxAnisotropy() || 1,\n    alphaTest: 0.3,\n    opacity: label ? 1 : 0.75,\n    toneMapped: false\n  }));\n}\n\nconst GizmoViewport = ({\n  hideNegativeAxes,\n  hideAxisHeads,\n  disabled,\n  font = '18px Inter var, Arial, sans-serif',\n  axisColors = ['#ff2060', '#20df80', '#2080ff'],\n  axisHeadScale = 1,\n  axisScale,\n  labels = ['X', 'Y', 'Z'],\n  labelColor = '#000',\n  onClick,\n  ...props\n}) => {\n  const [colorX, colorY, colorZ] = axisColors;\n  const {\n    tweenCamera,\n    raycast\n  } = useGizmoContext();\n  const axisHeadProps = {\n    font,\n    disabled,\n    labelColor,\n    raycast,\n    onClick,\n    axisHeadScale,\n    onPointerDown: !disabled ? e => {\n      tweenCamera(e.object.position);\n      e.stopPropagation();\n    } : undefined\n  };\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    scale: 40\n  }, props), /*#__PURE__*/React.createElement(Axis, {\n    color: colorX,\n    rotation: [0, 0, 0],\n    scale: axisScale\n  }), /*#__PURE__*/React.createElement(Axis, {\n    color: colorY,\n    rotation: [0, 0, Math.PI / 2],\n    scale: axisScale\n  }), /*#__PURE__*/React.createElement(Axis, {\n    color: colorZ,\n    rotation: [0, -Math.PI / 2, 0],\n    scale: axisScale\n  }), !hideAxisHeads && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AxisHead, _extends({\n    arcStyle: colorX,\n    position: [1, 0, 0],\n    label: labels[0]\n  }, axisHeadProps)), /*#__PURE__*/React.createElement(AxisHead, _extends({\n    arcStyle: colorY,\n    position: [0, 1, 0],\n    label: labels[1]\n  }, axisHeadProps)), /*#__PURE__*/React.createElement(AxisHead, _extends({\n    arcStyle: colorZ,\n    position: [0, 0, 1],\n    label: labels[2]\n  }, axisHeadProps)), !hideNegativeAxes && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AxisHead, _extends({\n    arcStyle: colorX,\n    position: [-1, 0, 0]\n  }, axisHeadProps)), /*#__PURE__*/React.createElement(AxisHead, _extends({\n    arcStyle: colorY,\n    position: [0, -1, 0]\n  }, axisHeadProps)), /*#__PURE__*/React.createElement(AxisHead, _extends({\n    arcStyle: colorZ,\n    position: [0, 0, -1]\n  }, axisHeadProps)))), /*#__PURE__*/React.createElement(\"ambientLight\", {\n    intensity: 0.5\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    position: [10, 10, 10],\n    intensity: 0.5\n  }));\n};\n\nexport { GizmoViewport };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { extend } from '@react-three/fiber';\nimport { shaderMaterial } from './shaderMaterial.js';\n\nconst GridMaterial = shaderMaterial({\n  cellSize: 0.5,\n  sectionSize: 1,\n  fadeDistance: 100,\n  fadeStrength: 1,\n  cellThickness: 0.5,\n  sectionThickness: 1,\n  cellColor: new THREE.Color(),\n  sectionColor: new THREE.Color(),\n  infiniteGrid: 0,\n  followCamera: 0\n}, `varying vec3 worldPosition;\n   uniform float fadeDistance;\n   uniform float infiniteGrid;\n   uniform float followCamera;\n   void main() {\n     vec3 pos = position.xzy * (1. + fadeDistance * infiniteGrid);\n     pos.xz += (cameraPosition.xz * followCamera);\n     worldPosition = pos;\n     gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n   }`, `varying vec3 worldPosition;\n   uniform float cellSize;\n   uniform float sectionSize;\n   uniform vec3 cellColor;\n   uniform vec3 sectionColor;\n   uniform float fadeDistance;\n   uniform float fadeStrength;\n   uniform float cellThickness;\n   uniform float sectionThickness;\n   uniform float infiniteGrid;\n   float getGrid(float size, float thickness) {\n     vec2 r = worldPosition.xz / size;\n     vec2 grid = abs(fract(r - 0.5) - 0.5) / fwidth(r);\n     float line = min(grid.x, grid.y) + 1. - thickness;\n     return 1.0 - min(line, 1.);\n   }\n   void main() {\n     float g1 = getGrid(cellSize, cellThickness);\n     float g2 = getGrid(sectionSize, sectionThickness);\n     float d = 1.0 - min(distance(cameraPosition.xz, worldPosition.xz) / fadeDistance, 1.);\n     vec3 color = mix(cellColor, sectionColor, min(1.,sectionThickness * g2));\n     gl_FragColor = vec4(color, (g1 + g2) * pow(d,fadeStrength));\n     gl_FragColor.a = mix(0.75 * gl_FragColor.a, gl_FragColor.a, g2);\n     if (gl_FragColor.a <= 0.0) discard;\n     #include <tonemapping_fragment>\n     #include <encodings_fragment>\n   }`);\nconst Grid = /*#__PURE__*/React.forwardRef(({\n  args,\n  cellColor = '#000000',\n  sectionColor = '#2080ff',\n  cellSize = 0.5,\n  sectionSize = 1,\n  followCamera = false,\n  infiniteGrid = false,\n  fadeDistance = 100,\n  fadeStrength = 1,\n  cellThickness = 0.5,\n  sectionThickness = 1,\n  ...props\n}, fRef) => {\n  extend({\n    GridMaterial\n  });\n  const uniforms1 = {\n    cellSize,\n    sectionSize,\n    cellColor,\n    sectionColor,\n    cellThickness,\n    sectionThickness\n  };\n  const uniforms2 = {\n    fadeDistance,\n    fadeStrength,\n    infiniteGrid,\n    followCamera\n  };\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: fRef,\n    frustumCulled: false\n  }, props), /*#__PURE__*/React.createElement(\"gridMaterial\", _extends({\n    transparent: true,\n    \"extensions-derivatives\": true,\n    side: THREE.DoubleSide\n  }, uniforms1, uniforms2)), /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: args\n  }));\n});\n\nexport { Grid };\n", "import { CubeTextureLoader } from 'three';\nimport { useLoader } from '@react-three/fiber';\n\nfunction useCubeTexture(files, {\n  path\n}) {\n  // @ts-ignore\n  const [cubeTexture] = useLoader( // @ts-ignore\n  CubeTextureLoader, [files], loader => loader.setPath(path));\n  return cubeTexture;\n}\n\nuseCubeTexture.preload = (files, {\n  path\n}) => useLoader.preload( // @ts-ignore\nCubeTextureLoader, [files], loader => loader.setPath(path));\n\nexport { useCubeTexture };\n", "import { FBXLoader } from 'three-stdlib';\nimport { useLoader } from '@react-three/fiber';\n\nfunction useFBX(path) {\n  return useLoader(FBXLoader, path);\n}\n\nuseFBX.preload = path => useLoader.preload(FBXLoader, path);\n\nuseFBX.clear = input => useLoader.clear(FBXLoader, input);\n\nexport { useFBX };\n", "import { GLTFLoader, DRACOLoader, MeshoptDecoder } from 'three-stdlib';\nimport { useLoader } from '@react-three/fiber';\n\n// @ts-ignore\nlet dracoLoader = null;\n\nfunction extensions(useDraco, useMeshopt, extendLoader) {\n  return loader => {\n    if (extendLoader) {\n      extendLoader(loader);\n    }\n\n    if (useDraco) {\n      if (!dracoLoader) {\n        dracoLoader = new DRACOLoader();\n      }\n\n      dracoLoader.setDecoderPath(typeof useDraco === 'string' ? useDraco : 'https://www.gstatic.com/draco/versioned/decoders/1.4.3/');\n      loader.setDRACOLoader(dracoLoader);\n    }\n\n    if (useMeshopt) {\n      loader.setMeshoptDecoder(typeof MeshoptDecoder === 'function' ? MeshoptDecoder() : MeshoptDecoder);\n    }\n  };\n}\n\nfunction useGLTF(path, useDraco = true, useMeshOpt = true, extendLoader) {\n  const gltf = useLoader(GLTFLoader, path, extensions(useDraco, useMeshOpt, extendLoader));\n  return gltf;\n}\n\nuseGLTF.preload = (path, useDraco = true, useMeshOpt = true, extendLoader) => useLoader.preload(GLTFLoader, path, extensions(useDraco, useMeshOpt, extendLoader));\n\nuseGLTF.clear = input => useLoader.clear(GLTFLoader, input);\n\nexport { useGLTF };\n", "import { useThree, useLoader } from '@react-three/fiber';\nimport { useEffect } from 'react';\nimport { KTX2Loader } from 'three-stdlib';\nimport { IsObject } from './useTexture.js';\n\nconst cdn = 'https://cdn.jsdelivr.net/gh/pmndrs/drei-assets@master';\nfunction useKTX2(input, basisPath = `${cdn}/basis/`) {\n  const gl = useThree(state => state.gl);\n  const textures = useLoader(KTX2Loader, IsObject(input) ? Object.values(input) : input, loader => {\n    loader.detectSupport(gl);\n    loader.setTranscoderPath(basisPath);\n  }); // https://github.com/mrdoob/three.js/issues/22696\n  // Upload the texture to the GPU immediately instead of waiting for the first render\n\n  useEffect(() => {\n    const array = Array.isArray(textures) ? textures : [textures];\n    array.forEach(gl.initTexture);\n  }, [gl, textures]);\n\n  if (IsObject(input)) {\n    const keys = Object.keys(input);\n    const keyed = {};\n    keys.forEach(key => Object.assign(keyed, {\n      [key]: textures[keys.indexOf(key)]\n    }));\n    return keyed;\n  } else {\n    return textures;\n  }\n}\n\nuseKTX2.preload = (url, basisPath = `${cdn}/basis/`) => useLoader.preload(KTX2Loader, url, loader => {\n  loader.setTranscoderPath(basisPath);\n});\n\nuseKTX2.clear = input => useLoader.clear(KTX2Loader, input);\n\nexport { useKTX2 };\n", "import * as THREE from 'three';\nimport { useEffect } from 'react';\nimport { useThree } from '@react-three/fiber';\nimport { suspend } from 'suspend-react';\n\nfunction useVideoTexture(src, props) {\n  const {\n    unsuspend,\n    start,\n    crossOrigin,\n    muted,\n    loop,\n    ...rest\n  } = {\n    unsuspend: 'loadedmetadata',\n    crossOrigin: 'Anonymous',\n    muted: true,\n    loop: true,\n    start: true,\n    playsInline: true,\n    ...props\n  };\n  const gl = useThree(state => state.gl);\n  const texture = suspend(() => new Promise((res, rej) => {\n    const video = Object.assign(document.createElement('video'), {\n      src,\n      crossOrigin,\n      loop,\n      muted,\n      ...rest\n    });\n    const texture = new THREE.VideoTexture(video);\n    texture.encoding = gl.outputEncoding;\n    video.addEventListener(unsuspend, () => res(texture));\n  }), [src]);\n  useEffect(() => void (start && texture.image.play()), [texture, start]);\n  return texture;\n}\n\nexport { useVideoTexture };\n", "import * as React from 'react';\nimport { addEffect, addAfterEffect } from '@react-three/fiber';\nimport StatsImpl from 'stats.js';\nimport { useEffectfulState } from '../helpers/useEffectfulState.js';\n\nfunction Stats({\n  showPanel = 0,\n  className,\n  parent\n}) {\n  const stats = useEffectfulState(() => new StatsImpl(), []);\n  React.useEffect(() => {\n    if (stats) {\n      const node = parent && parent.current || document.body;\n      stats.showPanel(showPanel);\n      node == null ? void 0 : node.appendChild(stats.dom);\n      if (className) stats.dom.classList.add(...className.split(' ').filter(cls => cls));\n      const begin = addEffect(() => stats.begin());\n      const end = addAfterEffect(() => stats.end());\n      return () => {\n        node == null ? void 0 : node.removeChild(stats.dom);\n        begin();\n        end();\n      };\n    }\n  }, [parent, stats, className, showPanel]);\n  return null;\n}\n\nexport { Stats };\n", "import * as React from 'react';\n\nfunction call(ref, value) {\n  if (typeof ref === 'function') ref(value);else if (ref != null) ref.current = value;\n}\n\nfunction useEffectfulState(fn, deps = [], cb) {\n  const [state, set] = React.useState();\n  React.useLayoutEffect(() => {\n    const value = fn();\n    set(value);\n    call(cb, value);\n    return () => call(cb, null);\n  }, deps);\n  return state;\n}\n\nexport { useEffectfulState };\n", "import { DepthTexture, DepthFormat, UnsignedShortType } from 'three';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { useFBO } from './useFBO.js';\n\nfunction useDepthBuffer({\n  size = 256,\n  frames = Infinity\n} = {}) {\n  const dpr = useThree(state => state.viewport.dpr);\n  const {\n    width,\n    height\n  } = useThree(state => state.size);\n  const w = size || width * dpr;\n  const h = size || height * dpr;\n  const depthConfig = React.useMemo(() => {\n    const depthTexture = new DepthTexture(w, h);\n    depthTexture.format = DepthFormat;\n    depthTexture.type = UnsignedShortType;\n    return {\n      depthTexture\n    };\n  }, [w, h]);\n  let count = 0;\n  const depthFBO = useFBO(w, h, depthConfig);\n  useFrame(state => {\n    if (frames === Infinity || count < frames) {\n      state.gl.setRenderTarget(depthFBO);\n      state.gl.render(state.scene, state.camera);\n      state.gl.setRenderTarget(null);\n      count++;\n    }\n  });\n  return depthFBO.depthTexture;\n}\n\nexport { useDepthBuffer };\n", "import { useThree } from '@react-three/fiber';\n\nfunction useAspect(width, height, factor = 1) {\n  const v = useThree(state => state.viewport);\n  const adaptedHeight = height * (v.aspect > width / height ? v.width / width : v.height / height);\n  const adaptedWidth = width * (v.aspect > width / height ? v.width / width : v.height / height);\n  return [adaptedWidth * factor, adaptedHeight * factor, 1];\n}\n\nexport { useAspect };\n", "import { getGPUTier } from 'detect-gpu';\nimport { suspend } from 'suspend-react';\n\nconst useDetectGPU = props => suspend(() => getGPUTier(props), ['useDetectGPU']);\n\nexport { useDetectGPU };\n", "import * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nfunction useHelper(object3D, helperConstructor, ...args) {\n  const helper = React.useRef();\n  const scene = useThree(state => state.scene);\n  React.useEffect(() => {\n    let currentHelper = undefined;\n\n    if (object3D && object3D != null && object3D.current && helperConstructor) {\n      helper.current = currentHelper = new helperConstructor(object3D.current, ...args);\n    }\n\n    if (currentHelper) {\n      scene.add(currentHelper);\n      return () => {\n        helper.current = undefined;\n        scene.remove(currentHelper);\n        currentHelper.dispose == null ? void 0 : currentHelper.dispose();\n      };\n    }\n  }, [scene, helperConstructor, object3D, ...args]);\n  useFrame(() => {\n    var _helper$current;\n\n    return void ((_helper$current = helper.current) == null ? void 0 : _helper$current.update == null ? void 0 : _helper$current.update());\n  });\n  return helper;\n}\n\nexport { useHelper };\n", "import * as React from 'react';\nimport { acceleratedRaycast, computeBoundsTree, disposeBoundsTree } from 'three-mesh-bvh';\n\nfunction useBVH(mesh, options) {\n  React.useEffect(() => {\n    if (mesh.current) {\n      mesh.current.raycast = acceleratedRaycast;\n      const geometry = mesh.current.geometry;\n      geometry.computeBoundsTree = computeBoundsTree;\n      geometry.disposeBoundsTree = disposeBoundsTree;\n      geometry.computeBoundsTree(options);\n      return () => {\n        if (geometry.boundsTree) {\n          geometry.disposeBoundsTree();\n        }\n      };\n    }\n  }, [mesh, options]);\n}\n\nexport { useBVH };\n", "// Split strategy constants\nexport const CENTER = 0;\nexport const AVERAGE = 1;\nexport const SAH = 2;\n\n// Traversal constants\nexport const NOT_INTERSECTED = 0;\nexport const INTERSECTED = 1;\nexport const CONTAINED = 2;\n\n// SAH cost constants\n// TODO: hone these costs more. The relative difference between them should be the\n// difference in measured time to perform a triangle intersection vs traversing\n// bounds.\nexport const TRIANGLE_INTERSECT_COST = 1.25;\nexport const TRAVERSAL_COST = 1;\n\n\n// Build constants\nexport const BYTES_PER_NODE = 6 * 4 + 4 + 4;\nexport const IS_LEAFNODE_FLAG = 0xFFFF;\n\n// EPSILON for computing floating point error during build\n// https://en.wikipedia.org/wiki/Machine_epsilon#Values_for_standard_hardware_floating_point_arithmetics\nexport const FLOAT32_EPSILON = Math.pow( 2, - 24 );\n\n", "export class MeshBVHNode {\n\n\tconstructor() {\n\n\t\t// internal nodes have boundingData, left, right, and splitAxis\n\t\t// leaf nodes have offset and count (referring to primitives in the mesh geometry)\n\n\t}\n\n}\n", "export function arrayToBox( nodeIndex32, array, target ) {\n\n\ttarget.min.x = array[ nodeIndex32 ];\n\ttarget.min.y = array[ nodeIndex32 + 1 ];\n\ttarget.min.z = array[ nodeIndex32 + 2 ];\n\n\ttarget.max.x = array[ nodeIndex32 + 3 ];\n\ttarget.max.y = array[ nodeIndex32 + 4 ];\n\ttarget.max.z = array[ nodeIndex32 + 5 ];\n\n\treturn target;\n\n}\n\nexport function getLongestEdgeIndex( bounds ) {\n\n\tlet splitDimIdx = - 1;\n\tlet splitDist = - Infinity;\n\n\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\tconst dist = bounds[ i + 3 ] - bounds[ i ];\n\t\tif ( dist > splitDist ) {\n\n\t\t\tsplitDist = dist;\n\t\t\tsplitDimIdx = i;\n\n\t\t}\n\n\t}\n\n\treturn splitDimIdx;\n\n}\n\n// copies bounds a into bounds b\nexport function copyBounds( source, target ) {\n\n\ttarget.set( source );\n\n}\n\n// sets bounds target to the union of bounds a and b\nexport function unionBounds( a, b, target ) {\n\n\tlet aVal, bVal;\n\tfor ( let d = 0; d < 3; d ++ ) {\n\n\t\tconst d3 = d + 3;\n\n\t\t// set the minimum values\n\t\taVal = a[ d ];\n\t\tbVal = b[ d ];\n\t\ttarget[ d ] = aVal < bVal ? aVal : bVal;\n\n\t\t// set the max values\n\t\taVal = a[ d3 ];\n\t\tbVal = b[ d3 ];\n\t\ttarget[ d3 ] = aVal > bVal ? aVal : bVal;\n\n\t}\n\n}\n\n// expands the given bounds by the provided triangle bounds\nexport function expandByTriangleBounds( startIndex, triangleBounds, bounds ) {\n\n\tfor ( let d = 0; d < 3; d ++ ) {\n\n\t\tconst tCenter = triangleBounds[ startIndex + 2 * d ];\n\t\tconst tHalf = triangleBounds[ startIndex + 2 * d + 1 ];\n\n\t\tconst tMin = tCenter - tHalf;\n\t\tconst tMax = tCenter + tHalf;\n\n\t\tif ( tMin < bounds[ d ] ) {\n\n\t\t\tbounds[ d ] = tMin;\n\n\t\t}\n\n\t\tif ( tMax > bounds[ d + 3 ] ) {\n\n\t\t\tbounds[ d + 3 ] = tMax;\n\n\t\t}\n\n\t}\n\n}\n\n// compute bounds surface area\nexport function computeSurfaceArea( bounds ) {\n\n\tconst d0 = bounds[ 3 ] - bounds[ 0 ];\n\tconst d1 = bounds[ 4 ] - bounds[ 1 ];\n\tconst d2 = bounds[ 5 ] - bounds[ 2 ];\n\n\treturn 2 * ( d0 * d1 + d1 * d2 + d2 * d0 );\n\n}\n", "import { BufferAttribute } from 'three';\nimport { MeshBVHNode } from './MeshBVHNode.js';\nimport { getLongestEdgeIndex, computeSurfaceArea, copyBounds, unionBounds, expandByTriangleBounds } from '../utils/ArrayBoxUtilities.js';\nimport {\n\tCENTER, AVERAGE, SAH, TRIANGLE_INTERSECT_COST, TRAVERSAL_COST,\n\tBYTES_PER_NODE, FLOAT32_EPSILON, IS_LEAFNODE_FLAG,\n} from './Constants.js';\n\nfunction ensureIndex( geo, options ) {\n\n\tif ( ! geo.index ) {\n\n\t\tconst vertexCount = geo.attributes.position.count;\n\t\tconst BufferConstructor = options.useSharedArrayBuffer ? SharedArrayBuffer : ArrayBuffer;\n\t\tlet index;\n\t\tif ( vertexCount > 65535 ) {\n\n\t\t\tindex = new Uint32Array( new BufferConstructor( 4 * vertexCount ) );\n\n\t\t} else {\n\n\t\t\tindex = new Uint16Array( new BufferConstructor( 2 * vertexCount ) );\n\n\t\t}\n\n\t\tgeo.setIndex( new BufferAttribute( index, 1 ) );\n\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tindex[ i ] = i;\n\n\t\t}\n\n\t}\n\n}\n\n// Computes the set of { offset, count } ranges which need independent BVH roots. Each\n// region in the geometry index that belongs to a different set of material groups requires\n// a separate BVH root, so that triangles indices belonging to one group never get swapped\n// with triangle indices belongs to another group. For example, if the groups were like this:\n//\n// [-------------------------------------------------------------]\n// |__________________|\n//   g0 = [0, 20]  |______________________||_____________________|\n//                      g1 = [16, 40]           g2 = [41, 60]\n//\n// we would need four BVH roots: [0, 15], [16, 20], [21, 40], [41, 60].\nfunction getRootIndexRanges( geo ) {\n\n\tif ( ! geo.groups || ! geo.groups.length ) {\n\n\t\treturn [ { offset: 0, count: geo.index.count / 3 } ];\n\n\t}\n\n\tconst ranges = [];\n\tconst rangeBoundaries = new Set();\n\tfor ( const group of geo.groups ) {\n\n\t\trangeBoundaries.add( group.start );\n\t\trangeBoundaries.add( group.start + group.count );\n\n\t}\n\n\t// note that if you don't pass in a comparator, it sorts them lexicographically as strings :-(\n\tconst sortedBoundaries = Array.from( rangeBoundaries.values() ).sort( ( a, b ) => a - b );\n\tfor ( let i = 0; i < sortedBoundaries.length - 1; i ++ ) {\n\n\t\tconst start = sortedBoundaries[ i ], end = sortedBoundaries[ i + 1 ];\n\t\tranges.push( { offset: ( start / 3 ), count: ( end - start ) / 3 } );\n\n\t}\n\n\treturn ranges;\n\n}\n\n// computes the union of the bounds of all of the given triangles and puts the resulting box in target. If\n// centroidTarget is provided then a bounding box is computed for the centroids of the triangles, as well.\n// These are computed together to avoid redundant accesses to bounds array.\nfunction getBounds( triangleBounds, offset, count, target, centroidTarget = null ) {\n\n\tlet minx = Infinity;\n\tlet miny = Infinity;\n\tlet minz = Infinity;\n\tlet maxx = - Infinity;\n\tlet maxy = - Infinity;\n\tlet maxz = - Infinity;\n\n\tlet cminx = Infinity;\n\tlet cminy = Infinity;\n\tlet cminz = Infinity;\n\tlet cmaxx = - Infinity;\n\tlet cmaxy = - Infinity;\n\tlet cmaxz = - Infinity;\n\n\tconst includeCentroid = centroidTarget !== null;\n\tfor ( let i = offset * 6, end = ( offset + count ) * 6; i < end; i += 6 ) {\n\n\t\tconst cx = triangleBounds[ i + 0 ];\n\t\tconst hx = triangleBounds[ i + 1 ];\n\t\tconst lx = cx - hx;\n\t\tconst rx = cx + hx;\n\t\tif ( lx < minx ) minx = lx;\n\t\tif ( rx > maxx ) maxx = rx;\n\t\tif ( includeCentroid && cx < cminx ) cminx = cx;\n\t\tif ( includeCentroid && cx > cmaxx ) cmaxx = cx;\n\n\t\tconst cy = triangleBounds[ i + 2 ];\n\t\tconst hy = triangleBounds[ i + 3 ];\n\t\tconst ly = cy - hy;\n\t\tconst ry = cy + hy;\n\t\tif ( ly < miny ) miny = ly;\n\t\tif ( ry > maxy ) maxy = ry;\n\t\tif ( includeCentroid && cy < cminy ) cminy = cy;\n\t\tif ( includeCentroid && cy > cmaxy ) cmaxy = cy;\n\n\t\tconst cz = triangleBounds[ i + 4 ];\n\t\tconst hz = triangleBounds[ i + 5 ];\n\t\tconst lz = cz - hz;\n\t\tconst rz = cz + hz;\n\t\tif ( lz < minz ) minz = lz;\n\t\tif ( rz > maxz ) maxz = rz;\n\t\tif ( includeCentroid && cz < cminz ) cminz = cz;\n\t\tif ( includeCentroid && cz > cmaxz ) cmaxz = cz;\n\n\t}\n\n\ttarget[ 0 ] = minx;\n\ttarget[ 1 ] = miny;\n\ttarget[ 2 ] = minz;\n\n\ttarget[ 3 ] = maxx;\n\ttarget[ 4 ] = maxy;\n\ttarget[ 5 ] = maxz;\n\n\tif ( includeCentroid ) {\n\n\t\tcentroidTarget[ 0 ] = cminx;\n\t\tcentroidTarget[ 1 ] = cminy;\n\t\tcentroidTarget[ 2 ] = cminz;\n\n\t\tcentroidTarget[ 3 ] = cmaxx;\n\t\tcentroidTarget[ 4 ] = cmaxy;\n\t\tcentroidTarget[ 5 ] = cmaxz;\n\n\t}\n\n}\n\n// A stand alone function for retrieving the centroid bounds.\nfunction getCentroidBounds( triangleBounds, offset, count, centroidTarget ) {\n\n\tlet cminx = Infinity;\n\tlet cminy = Infinity;\n\tlet cminz = Infinity;\n\tlet cmaxx = - Infinity;\n\tlet cmaxy = - Infinity;\n\tlet cmaxz = - Infinity;\n\n\tfor ( let i = offset * 6, end = ( offset + count ) * 6; i < end; i += 6 ) {\n\n\t\tconst cx = triangleBounds[ i + 0 ];\n\t\tif ( cx < cminx ) cminx = cx;\n\t\tif ( cx > cmaxx ) cmaxx = cx;\n\n\t\tconst cy = triangleBounds[ i + 2 ];\n\t\tif ( cy < cminy ) cminy = cy;\n\t\tif ( cy > cmaxy ) cmaxy = cy;\n\n\t\tconst cz = triangleBounds[ i + 4 ];\n\t\tif ( cz < cminz ) cminz = cz;\n\t\tif ( cz > cmaxz ) cmaxz = cz;\n\n\t}\n\n\tcentroidTarget[ 0 ] = cminx;\n\tcentroidTarget[ 1 ] = cminy;\n\tcentroidTarget[ 2 ] = cminz;\n\n\tcentroidTarget[ 3 ] = cmaxx;\n\tcentroidTarget[ 4 ] = cmaxy;\n\tcentroidTarget[ 5 ] = cmaxz;\n\n}\n\n\n// reorders `tris` such that for `count` elements after `offset`, elements on the left side of the split\n// will be on the left and elements on the right side of the split will be on the right. returns the index\n// of the first element on the right side, or offset + count if there are no elements on the right side.\nfunction partition( index, triangleBounds, offset, count, split ) {\n\n\tlet left = offset;\n\tlet right = offset + count - 1;\n\tconst pos = split.pos;\n\tconst axisOffset = split.axis * 2;\n\n\t// hoare partitioning, see e.g. https://en.wikipedia.org/wiki/Quicksort#Hoare_partition_scheme\n\twhile ( true ) {\n\n\t\twhile ( left <= right && triangleBounds[ left * 6 + axisOffset ] < pos ) {\n\n\t\t\tleft ++;\n\n\t\t}\n\n\n\t\t// if a triangle center lies on the partition plane it is considered to be on the right side\n\t\twhile ( left <= right && triangleBounds[ right * 6 + axisOffset ] >= pos ) {\n\n\t\t\tright --;\n\n\t\t}\n\n\t\tif ( left < right ) {\n\n\t\t\t// we need to swap all of the information associated with the triangles at index\n\t\t\t// left and right; that's the verts in the geometry index, the bounds,\n\t\t\t// and perhaps the SAH planes\n\n\t\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\t\tlet t0 = index[ left * 3 + i ];\n\t\t\t\tindex[ left * 3 + i ] = index[ right * 3 + i ];\n\t\t\t\tindex[ right * 3 + i ] = t0;\n\n\t\t\t\tlet t1 = triangleBounds[ left * 6 + i * 2 + 0 ];\n\t\t\t\ttriangleBounds[ left * 6 + i * 2 + 0 ] = triangleBounds[ right * 6 + i * 2 + 0 ];\n\t\t\t\ttriangleBounds[ right * 6 + i * 2 + 0 ] = t1;\n\n\t\t\t\tlet t2 = triangleBounds[ left * 6 + i * 2 + 1 ];\n\t\t\t\ttriangleBounds[ left * 6 + i * 2 + 1 ] = triangleBounds[ right * 6 + i * 2 + 1 ];\n\t\t\t\ttriangleBounds[ right * 6 + i * 2 + 1 ] = t2;\n\n\t\t\t}\n\n\t\t\tleft ++;\n\t\t\tright --;\n\n\t\t} else {\n\n\t\t\treturn left;\n\n\t\t}\n\n\t}\n\n}\n\nconst BIN_COUNT = 32;\nconst binsSort = ( a, b ) => a.candidate - b.candidate;\nconst sahBins = new Array( BIN_COUNT ).fill().map( () => {\n\n\treturn {\n\n\t\tcount: 0,\n\t\tbounds: new Float32Array( 6 ),\n\t\trightCacheBounds: new Float32Array( 6 ),\n\t\tleftCacheBounds: new Float32Array( 6 ),\n\t\tcandidate: 0,\n\n\t};\n\n} );\nconst leftBounds = new Float32Array( 6 );\n\nfunction getOptimalSplit( nodeBoundingData, centroidBoundingData, triangleBounds, offset, count, strategy ) {\n\n\tlet axis = - 1;\n\tlet pos = 0;\n\n\t// Center\n\tif ( strategy === CENTER ) {\n\n\t\taxis = getLongestEdgeIndex( centroidBoundingData );\n\t\tif ( axis !== - 1 ) {\n\n\t\t\tpos = ( centroidBoundingData[ axis ] + centroidBoundingData[ axis + 3 ] ) / 2;\n\n\t\t}\n\n\t} else if ( strategy === AVERAGE ) {\n\n\t\taxis = getLongestEdgeIndex( nodeBoundingData );\n\t\tif ( axis !== - 1 ) {\n\n\t\t\tpos = getAverage( triangleBounds, offset, count, axis );\n\n\t\t}\n\n\t} else if ( strategy === SAH ) {\n\n\t\tconst rootSurfaceArea = computeSurfaceArea( nodeBoundingData );\n\t\tlet bestCost = TRIANGLE_INTERSECT_COST * count;\n\n\t\t// iterate over all axes\n\t\tconst cStart = offset * 6;\n\t\tconst cEnd = ( offset + count ) * 6;\n\t\tfor ( let a = 0; a < 3; a ++ ) {\n\n\t\t\tconst axisLeft = centroidBoundingData[ a ];\n\t\t\tconst axisRight = centroidBoundingData[ a + 3 ];\n\t\t\tconst axisLength = axisRight - axisLeft;\n\t\t\tconst binWidth = axisLength / BIN_COUNT;\n\n\t\t\t// If we have fewer triangles than we're planning to split then just check all\n\t\t\t// the triangle positions because it will be faster.\n\t\t\tif ( count < BIN_COUNT / 4 ) {\n\n\t\t\t\t// initialize the bin candidates\n\t\t\t\tconst truncatedBins = [ ...sahBins ];\n\t\t\t\ttruncatedBins.length = count;\n\n\t\t\t\t// set the candidates\n\t\t\t\tlet b = 0;\n\t\t\t\tfor ( let c = cStart; c < cEnd; c += 6, b ++ ) {\n\n\t\t\t\t\tconst bin = truncatedBins[ b ];\n\t\t\t\t\tbin.candidate = triangleBounds[ c + 2 * a ];\n\t\t\t\t\tbin.count = 0;\n\n\t\t\t\t\tconst {\n\t\t\t\t\t\tbounds,\n\t\t\t\t\t\tleftCacheBounds,\n\t\t\t\t\t\trightCacheBounds,\n\t\t\t\t\t} = bin;\n\t\t\t\t\tfor ( let d = 0; d < 3; d ++ ) {\n\n\t\t\t\t\t\trightCacheBounds[ d ] = Infinity;\n\t\t\t\t\t\trightCacheBounds[ d + 3 ] = - Infinity;\n\n\t\t\t\t\t\tleftCacheBounds[ d ] = Infinity;\n\t\t\t\t\t\tleftCacheBounds[ d + 3 ] = - Infinity;\n\n\t\t\t\t\t\tbounds[ d ] = Infinity;\n\t\t\t\t\t\tbounds[ d + 3 ] = - Infinity;\n\n\t\t\t\t\t}\n\n\t\t\t\t\texpandByTriangleBounds( c, triangleBounds, bounds );\n\n\t\t\t\t}\n\n\t\t\t\ttruncatedBins.sort( binsSort );\n\n\t\t\t\t// remove redundant splits\n\t\t\t\tlet splitCount = count;\n\t\t\t\tfor ( let bi = 0; bi < splitCount; bi ++ ) {\n\n\t\t\t\t\tconst bin = truncatedBins[ bi ];\n\t\t\t\t\twhile ( bi + 1 < splitCount && truncatedBins[ bi + 1 ].candidate === bin.candidate ) {\n\n\t\t\t\t\t\ttruncatedBins.splice( bi + 1, 1 );\n\t\t\t\t\t\tsplitCount --;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// find the appropriate bin for each triangle and expand the bounds.\n\t\t\t\tfor ( let c = cStart; c < cEnd; c += 6 ) {\n\n\t\t\t\t\tconst center = triangleBounds[ c + 2 * a ];\n\t\t\t\t\tfor ( let bi = 0; bi < splitCount; bi ++ ) {\n\n\t\t\t\t\t\tconst bin = truncatedBins[ bi ];\n\t\t\t\t\t\tif ( center >= bin.candidate ) {\n\n\t\t\t\t\t\t\texpandByTriangleBounds( c, triangleBounds, bin.rightCacheBounds );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\texpandByTriangleBounds( c, triangleBounds, bin.leftCacheBounds );\n\t\t\t\t\t\t\tbin.count ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// expand all the bounds\n\t\t\t\tfor ( let bi = 0; bi < splitCount; bi ++ ) {\n\n\t\t\t\t\tconst bin = truncatedBins[ bi ];\n\t\t\t\t\tconst leftCount = bin.count;\n\t\t\t\t\tconst rightCount = count - bin.count;\n\n\t\t\t\t\t// check the cost of this split\n\t\t\t\t\tconst leftBounds = bin.leftCacheBounds;\n\t\t\t\t\tconst rightBounds = bin.rightCacheBounds;\n\n\t\t\t\t\tlet leftProb = 0;\n\t\t\t\t\tif ( leftCount !== 0 ) {\n\n\t\t\t\t\t\tleftProb = computeSurfaceArea( leftBounds ) / rootSurfaceArea;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet rightProb = 0;\n\t\t\t\t\tif ( rightCount !== 0 ) {\n\n\t\t\t\t\t\trightProb = computeSurfaceArea( rightBounds ) / rootSurfaceArea;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst cost = TRAVERSAL_COST + TRIANGLE_INTERSECT_COST * (\n\t\t\t\t\t\tleftProb * leftCount + rightProb * rightCount\n\t\t\t\t\t);\n\n\t\t\t\t\tif ( cost < bestCost ) {\n\n\t\t\t\t\t\taxis = a;\n\t\t\t\t\t\tbestCost = cost;\n\t\t\t\t\t\tpos = bin.candidate;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// reset the bins\n\t\t\t\tfor ( let i = 0; i < BIN_COUNT; i ++ ) {\n\n\t\t\t\t\tconst bin = sahBins[ i ];\n\t\t\t\t\tbin.count = 0;\n\t\t\t\t\tbin.candidate = axisLeft + binWidth + i * binWidth;\n\n\t\t\t\t\tconst bounds = bin.bounds;\n\t\t\t\t\tfor ( let d = 0; d < 3; d ++ ) {\n\n\t\t\t\t\t\tbounds[ d ] = Infinity;\n\t\t\t\t\t\tbounds[ d + 3 ] = - Infinity;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over all center positions\n\t\t\t\tfor ( let c = cStart; c < cEnd; c += 6 ) {\n\n\t\t\t\t\tconst triCenter = triangleBounds[ c + 2 * a ];\n\t\t\t\t\tconst relativeCenter = triCenter - axisLeft;\n\n\t\t\t\t\t// in the partition function if the centroid lies on the split plane then it is\n\t\t\t\t\t// considered to be on the right side of the split\n\t\t\t\t\tlet binIndex = ~ ~ ( relativeCenter / binWidth );\n\t\t\t\t\tif ( binIndex >= BIN_COUNT ) binIndex = BIN_COUNT - 1;\n\n\t\t\t\t\tconst bin = sahBins[ binIndex ];\n\t\t\t\t\tbin.count ++;\n\n\t\t\t\t\texpandByTriangleBounds( c, triangleBounds, bin.bounds );\n\n\t\t\t\t}\n\n\t\t\t\t// cache the unioned bounds from right to left so we don't have to regenerate them each time\n\t\t\t\tconst lastBin = sahBins[ BIN_COUNT - 1 ];\n\t\t\t\tcopyBounds( lastBin.bounds, lastBin.rightCacheBounds );\n\t\t\t\tfor ( let i = BIN_COUNT - 2; i >= 0; i -- ) {\n\n\t\t\t\t\tconst bin = sahBins[ i ];\n\t\t\t\t\tconst nextBin = sahBins[ i + 1 ];\n\t\t\t\t\tunionBounds( bin.bounds, nextBin.rightCacheBounds, bin.rightCacheBounds );\n\n\t\t\t\t}\n\n\t\t\t\tlet leftCount = 0;\n\t\t\t\tfor ( let i = 0; i < BIN_COUNT - 1; i ++ ) {\n\n\t\t\t\t\tconst bin = sahBins[ i ];\n\t\t\t\t\tconst binCount = bin.count;\n\t\t\t\t\tconst bounds = bin.bounds;\n\n\t\t\t\t\tconst nextBin = sahBins[ i + 1 ];\n\t\t\t\t\tconst rightBounds = nextBin.rightCacheBounds;\n\n\t\t\t\t\t// don't do anything with the bounds if the new bounds have no triangles\n\t\t\t\t\tif ( binCount !== 0 ) {\n\n\t\t\t\t\t\tif ( leftCount === 0 ) {\n\n\t\t\t\t\t\t\tcopyBounds( bounds, leftBounds );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tunionBounds( bounds, leftBounds, leftBounds );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tleftCount += binCount;\n\n\t\t\t\t\t// check the cost of this split\n\t\t\t\t\tlet leftProb = 0;\n\t\t\t\t\tlet rightProb = 0;\n\n\t\t\t\t\tif ( leftCount !== 0 ) {\n\n\t\t\t\t\t\tleftProb = computeSurfaceArea( leftBounds ) / rootSurfaceArea;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst rightCount = count - leftCount;\n\t\t\t\t\tif ( rightCount !== 0 ) {\n\n\t\t\t\t\t\trightProb = computeSurfaceArea( rightBounds ) / rootSurfaceArea;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst cost = TRAVERSAL_COST + TRIANGLE_INTERSECT_COST * (\n\t\t\t\t\t\tleftProb * leftCount + rightProb * rightCount\n\t\t\t\t\t);\n\n\t\t\t\t\tif ( cost < bestCost ) {\n\n\t\t\t\t\t\taxis = a;\n\t\t\t\t\t\tbestCost = cost;\n\t\t\t\t\t\tpos = bin.candidate;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\tconsole.warn( `MeshBVH: Invalid build strategy value ${ strategy } used.` );\n\n\t}\n\n\treturn { axis, pos };\n\n}\n\n// returns the average coordinate on the specified axis of the all the provided triangles\nfunction getAverage( triangleBounds, offset, count, axis ) {\n\n\tlet avg = 0;\n\tfor ( let i = offset, end = offset + count; i < end; i ++ ) {\n\n\t\tavg += triangleBounds[ i * 6 + axis * 2 ];\n\n\t}\n\n\treturn avg / count;\n\n}\n\n// precomputes the bounding box for each triangle; required for quickly calculating tree splits.\n// result is an array of size tris.length * 6 where triangle i maps to a\n// [x_center, x_delta, y_center, y_delta, z_center, z_delta] tuple starting at index i * 6,\n// representing the center and half-extent in each dimension of triangle i\nfunction computeTriangleBounds( geo, fullBounds ) {\n\n\tconst posAttr = geo.attributes.position;\n\tconst index = geo.index.array;\n\tconst triCount = index.length / 3;\n\tconst triangleBounds = new Float32Array( triCount * 6 );\n\tconst normalized = posAttr.normalized;\n\n\t// used for non-normalized positions\n\tconst posArr = posAttr.array;\n\n\t// support for an interleaved position buffer\n\tconst bufferOffset = posAttr.offset || 0;\n\tlet stride = 3;\n\tif ( posAttr.isInterleavedBufferAttribute ) {\n\n\t\tstride = posAttr.data.stride;\n\n\t}\n\n\t// used for normalized positions\n\tconst getters = [ 'getX', 'getY', 'getZ' ];\n\n\tfor ( let tri = 0; tri < triCount; tri ++ ) {\n\n\t\tconst tri3 = tri * 3;\n\t\tconst tri6 = tri * 6;\n\n\t\tlet ai, bi, ci;\n\n\t\tif ( normalized ) {\n\n\t\t\tai = index[ tri3 + 0 ];\n\t\t\tbi = index[ tri3 + 1 ];\n\t\t\tci = index[ tri3 + 2 ];\n\n\t\t} else {\n\n\t\t\tai = index[ tri3 + 0 ] * stride + bufferOffset;\n\t\t\tbi = index[ tri3 + 1 ] * stride + bufferOffset;\n\t\t\tci = index[ tri3 + 2 ] * stride + bufferOffset;\n\n\t\t}\n\n\t\tfor ( let el = 0; el < 3; el ++ ) {\n\n\t\t\tlet a, b, c;\n\n\t\t\tif ( normalized ) {\n\n\t\t\t\ta = posAttr[ getters[ el ] ]( ai );\n\t\t\t\tb = posAttr[ getters[ el ] ]( bi );\n\t\t\t\tc = posAttr[ getters[ el ] ]( ci );\n\n\t\t\t} else {\n\n\t\t\t\ta = posArr[ ai + el ];\n\t\t\t\tb = posArr[ bi + el ];\n\t\t\t\tc = posArr[ ci + el ];\n\n\t\t\t}\n\n\t\t\tlet min = a;\n\t\t\tif ( b < min ) min = b;\n\t\t\tif ( c < min ) min = c;\n\n\t\t\tlet max = a;\n\t\t\tif ( b > max ) max = b;\n\t\t\tif ( c > max ) max = c;\n\n\t\t\t// Increase the bounds size by float32 epsilon to avoid precision errors when\n\t\t\t// converting to 32 bit float. Scale the epsilon by the size of the numbers being\n\t\t\t// worked with.\n\t\t\tconst halfExtents = ( max - min ) / 2;\n\t\t\tconst el2 = el * 2;\n\t\t\ttriangleBounds[ tri6 + el2 + 0 ] = min + halfExtents;\n\t\t\ttriangleBounds[ tri6 + el2 + 1 ] = halfExtents + ( Math.abs( min ) + halfExtents ) * FLOAT32_EPSILON;\n\n\t\t\tif ( min < fullBounds[ el ] ) fullBounds[ el ] = min;\n\t\t\tif ( max > fullBounds[ el + 3 ] ) fullBounds[ el + 3 ] = max;\n\n\t\t}\n\n\t}\n\n\treturn triangleBounds;\n\n}\n\nexport function buildTree( geo, options ) {\n\n\tfunction triggerProgress( trianglesProcessed ) {\n\n\t\tif ( onProgress ) {\n\n\t\t\tonProgress( trianglesProcessed / totalTriangles );\n\n\t\t}\n\n\t}\n\n\t// either recursively splits the given node, creating left and right subtrees for it, or makes it a leaf node,\n\t// recording the offset and count of its triangles and writing them into the reordered geometry index.\n\tfunction splitNode( node, offset, count, centroidBoundingData = null, depth = 0 ) {\n\n\t\tif ( ! reachedMaxDepth && depth >= maxDepth ) {\n\n\t\t\treachedMaxDepth = true;\n\t\t\tif ( verbose ) {\n\n\t\t\t\tconsole.warn( `MeshBVH: Max depth of ${ maxDepth } reached when generating BVH. Consider increasing maxDepth.` );\n\t\t\t\tconsole.warn( geo );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// early out if we've met our capacity\n\t\tif ( count <= maxLeafTris || depth >= maxDepth ) {\n\n\t\t\ttriggerProgress( offset + count );\n\t\t\tnode.offset = offset;\n\t\t\tnode.count = count;\n\t\t\treturn node;\n\n\t\t}\n\n\t\t// Find where to split the volume\n\t\tconst split = getOptimalSplit( node.boundingData, centroidBoundingData, triangleBounds, offset, count, strategy );\n\t\tif ( split.axis === - 1 ) {\n\n\t\t\ttriggerProgress( offset + count );\n\t\t\tnode.offset = offset;\n\t\t\tnode.count = count;\n\t\t\treturn node;\n\n\t\t}\n\n\t\tconst splitOffset = partition( indexArray, triangleBounds, offset, count, split );\n\n\t\t// create the two new child nodes\n\t\tif ( splitOffset === offset || splitOffset === offset + count ) {\n\n\t\t\ttriggerProgress( offset + count );\n\t\t\tnode.offset = offset;\n\t\t\tnode.count = count;\n\n\t\t} else {\n\n\t\t\tnode.splitAxis = split.axis;\n\n\t\t\t// create the left child and compute its bounding box\n\t\t\tconst left = new MeshBVHNode();\n\t\t\tconst lstart = offset;\n\t\t\tconst lcount = splitOffset - offset;\n\t\t\tnode.left = left;\n\t\t\tleft.boundingData = new Float32Array( 6 );\n\n\t\t\tgetBounds( triangleBounds, lstart, lcount, left.boundingData, cacheCentroidBoundingData );\n\t\t\tsplitNode( left, lstart, lcount, cacheCentroidBoundingData, depth + 1 );\n\n\t\t\t// repeat for right\n\t\t\tconst right = new MeshBVHNode();\n\t\t\tconst rstart = splitOffset;\n\t\t\tconst rcount = count - lcount;\n\t\t\tnode.right = right;\n\t\t\tright.boundingData = new Float32Array( 6 );\n\n\t\t\tgetBounds( triangleBounds, rstart, rcount, right.boundingData, cacheCentroidBoundingData );\n\t\t\tsplitNode( right, rstart, rcount, cacheCentroidBoundingData, depth + 1 );\n\n\t\t}\n\n\t\treturn node;\n\n\t}\n\n\tensureIndex( geo, options );\n\n\t// Compute the full bounds of the geometry at the same time as triangle bounds because\n\t// we'll need it for the root bounds in the case with no groups and it should be fast here.\n\t// We can't use the geometrying bounding box if it's available because it may be out of date.\n\tconst fullBounds = new Float32Array( 6 );\n\tconst cacheCentroidBoundingData = new Float32Array( 6 );\n\tconst triangleBounds = computeTriangleBounds( geo, fullBounds );\n\tconst indexArray = geo.index.array;\n\tconst maxDepth = options.maxDepth;\n\tconst verbose = options.verbose;\n\tconst maxLeafTris = options.maxLeafTris;\n\tconst strategy = options.strategy;\n\tconst onProgress = options.onProgress;\n\tconst totalTriangles = geo.index.count / 3;\n\tlet reachedMaxDepth = false;\n\n\tconst roots = [];\n\tconst ranges = getRootIndexRanges( geo );\n\n\tif ( ranges.length === 1 ) {\n\n\t\tconst range = ranges[ 0 ];\n\t\tconst root = new MeshBVHNode();\n\t\troot.boundingData = fullBounds;\n\t\tgetCentroidBounds( triangleBounds, range.offset, range.count, cacheCentroidBoundingData );\n\n\t\tsplitNode( root, range.offset, range.count, cacheCentroidBoundingData );\n\t\troots.push( root );\n\n\t} else {\n\n\t\tfor ( let range of ranges ) {\n\n\t\t\tconst root = new MeshBVHNode();\n\t\t\troot.boundingData = new Float32Array( 6 );\n\t\t\tgetBounds( triangleBounds, range.offset, range.count, root.boundingData, cacheCentroidBoundingData );\n\n\t\t\tsplitNode( root, range.offset, range.count, cacheCentroidBoundingData );\n\t\t\troots.push( root );\n\n\t\t}\n\n\t}\n\n\treturn roots;\n\n}\n\nexport function buildPackedTree( geo, options ) {\n\n\t// boundingData  \t\t\t\t: 6 float32\n\t// right / offset \t\t\t\t: 1 uint32\n\t// splitAxis / isLeaf + count \t: 1 uint32 / 2 uint16\n\tconst roots = buildTree( geo, options );\n\n\tlet float32Array;\n\tlet uint32Array;\n\tlet uint16Array;\n\tconst packedRoots = [];\n\tconst BufferConstructor = options.useSharedArrayBuffer ? SharedArrayBuffer : ArrayBuffer;\n\tfor ( let i = 0; i < roots.length; i ++ ) {\n\n\t\tconst root = roots[ i ];\n\t\tlet nodeCount = countNodes( root );\n\n\t\tconst buffer = new BufferConstructor( BYTES_PER_NODE * nodeCount );\n\t\tfloat32Array = new Float32Array( buffer );\n\t\tuint32Array = new Uint32Array( buffer );\n\t\tuint16Array = new Uint16Array( buffer );\n\t\tpopulateBuffer( 0, root );\n\t\tpackedRoots.push( buffer );\n\n\t}\n\n\treturn packedRoots;\n\n\tfunction countNodes( node ) {\n\n\t\tif ( node.count ) {\n\n\t\t\treturn 1;\n\n\t\t} else {\n\n\t\t\treturn 1 + countNodes( node.left ) + countNodes( node.right );\n\n\t\t}\n\n\t}\n\n\tfunction populateBuffer( byteOffset, node ) {\n\n\t\tconst stride4Offset = byteOffset / 4;\n\t\tconst stride2Offset = byteOffset / 2;\n\t\tconst isLeaf = ! ! node.count;\n\t\tconst boundingData = node.boundingData;\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tfloat32Array[ stride4Offset + i ] = boundingData[ i ];\n\n\t\t}\n\n\t\tif ( isLeaf ) {\n\n\t\t\tconst offset = node.offset;\n\t\t\tconst count = node.count;\n\t\t\tuint32Array[ stride4Offset + 6 ] = offset;\n\t\t\tuint16Array[ stride2Offset + 14 ] = count;\n\t\t\tuint16Array[ stride2Offset + 15 ] = IS_LEAFNODE_FLAG;\n\t\t\treturn byteOffset + BYTES_PER_NODE;\n\n\t\t} else {\n\n\t\t\tconst left = node.left;\n\t\t\tconst right = node.right;\n\t\t\tconst splitAxis = node.splitAxis;\n\n\t\t\tlet nextUnusedPointer;\n\t\t\tnextUnusedPointer = populateBuffer( byteOffset + BYTES_PER_NODE, left );\n\n\t\t\tif ( ( nextUnusedPointer / 4 ) > Math.pow( 2, 32 ) ) {\n\n\t\t\t\tthrow new Error( 'MeshBVH: Cannot store child pointer greater than 32 bits.' );\n\n\t\t\t}\n\n\t\t\tuint32Array[ stride4Offset + 6 ] = nextUnusedPointer / 4;\n\t\t\tnextUnusedPointer = populateBuffer( nextUnusedPointer, right );\n\n\t\t\tuint32Array[ stride4Offset + 7 ] = splitAxis;\n\t\t\treturn nextUnusedPointer;\n\n\t\t}\n\n\t}\n\n}\n", "import { Vector3 } from 'three';\n\nexport class SeparatingAxisBounds {\n\n\tconstructor() {\n\n\t\tthis.min = Infinity;\n\t\tthis.max = - Infinity;\n\n\t}\n\n\tsetFromPointsField( points, field ) {\n\n\t\tlet min = Infinity;\n\t\tlet max = - Infinity;\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst p = points[ i ];\n\t\t\tconst val = p[ field ];\n\t\t\tmin = val < min ? val : min;\n\t\t\tmax = val > max ? val : max;\n\n\t\t}\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tsetFromPoints( axis, points ) {\n\n\t\tlet min = Infinity;\n\t\tlet max = - Infinity;\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst p = points[ i ];\n\t\t\tconst val = axis.dot( p );\n\t\t\tmin = val < min ? val : min;\n\t\t\tmax = val > max ? val : max;\n\n\t\t}\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tisSeparated( other ) {\n\n\t\treturn this.min > other.max || other.min > this.max;\n\n\t}\n\n}\n\nSeparatingAxisBounds.prototype.setFromBox = ( function () {\n\n\tconst p = new Vector3();\n\treturn function setFromBox( axis, box ) {\n\n\t\tconst boxMin = box.min;\n\t\tconst boxMax = box.max;\n\t\tlet min = Infinity;\n\t\tlet max = - Infinity;\n\t\tfor ( let x = 0; x <= 1; x ++ ) {\n\n\t\t\tfor ( let y = 0; y <= 1; y ++ ) {\n\n\t\t\t\tfor ( let z = 0; z <= 1; z ++ ) {\n\n\t\t\t\t\tp.x = boxMin.x * x + boxMax.x * ( 1 - x );\n\t\t\t\t\tp.y = boxMin.y * y + boxMax.y * ( 1 - y );\n\t\t\t\t\tp.z = boxMin.z * z + boxMax.z * ( 1 - z );\n\n\t\t\t\t\tconst val = axis.dot( p );\n\t\t\t\t\tmin = Math.min( val, min );\n\t\t\t\t\tmax = Math.max( val, max );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t};\n\n} )();\n\nexport const areIntersecting = ( function () {\n\n\tconst cacheSatBounds = new SeparatingAxisBounds();\n\treturn function areIntersecting( shape1, shape2 ) {\n\n\t\tconst points1 = shape1.points;\n\t\tconst satAxes1 = shape1.satAxes;\n\t\tconst satBounds1 = shape1.satBounds;\n\n\t\tconst points2 = shape2.points;\n\t\tconst satAxes2 = shape2.satAxes;\n\t\tconst satBounds2 = shape2.satBounds;\n\n\t\t// check axes of the first shape\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst sb = satBounds1[ i ];\n\t\t\tconst sa = satAxes1[ i ];\n\t\t\tcacheSatBounds.setFromPoints( sa, points2 );\n\t\t\tif ( sb.isSeparated( cacheSatBounds ) ) return false;\n\n\t\t}\n\n\t\t// check axes of the second shape\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst sb = satBounds2[ i ];\n\t\t\tconst sa = satAxes2[ i ];\n\t\t\tcacheSatBounds.setFromPoints( sa, points1 );\n\t\t\tif ( sb.isSeparated( cacheSatBounds ) ) return false;\n\n\t\t}\n\n\t};\n\n} )();\n", "import { Vector3, Vector2, Plane, Line3 } from 'three';\n\nexport const closestPointLineToLine = ( function () {\n\n\t// https://github.com/juj/MathGeoLib/blob/master/src/Geometry/Line.cpp#L56\n\tconst dir1 = new Vector3();\n\tconst dir2 = new Vector3();\n\tconst v02 = new Vector3();\n\treturn function closestPointLineToLine( l1, l2, result ) {\n\n\t\tconst v0 = l1.start;\n\t\tconst v10 = dir1;\n\t\tconst v2 = l2.start;\n\t\tconst v32 = dir2;\n\n\t\tv02.subVectors( v0, v2 );\n\t\tdir1.subVectors( l1.end, l1.start );\n\t\tdir2.subVectors( l2.end, l2.start );\n\n\t\t// float d0232 = v02.Dot(v32);\n\t\tconst d0232 = v02.dot( v32 );\n\n\t\t// float d3210 = v32.Dot(v10);\n\t\tconst d3210 = v32.dot( v10 );\n\n\t\t// float d3232 = v32.Dot(v32);\n\t\tconst d3232 = v32.dot( v32 );\n\n\t\t// float d0210 = v02.Dot(v10);\n\t\tconst d0210 = v02.dot( v10 );\n\n\t\t// float d1010 = v10.Dot(v10);\n\t\tconst d1010 = v10.dot( v10 );\n\n\t\t// float denom = d1010*d3232 - d3210*d3210;\n\t\tconst denom = d1010 * d3232 - d3210 * d3210;\n\n\t\tlet d, d2;\n\t\tif ( denom !== 0 ) {\n\n\t\t\td = ( d0232 * d3210 - d0210 * d3232 ) / denom;\n\n\t\t} else {\n\n\t\t\td = 0;\n\n\t\t}\n\n\t\td2 = ( d0232 + d * d3210 ) / d3232;\n\n\t\tresult.x = d;\n\t\tresult.y = d2;\n\n\t};\n\n} )();\n\nexport const closestPointsSegmentToSegment = ( function () {\n\n\t// https://github.com/juj/MathGeoLib/blob/master/src/Geometry/LineSegment.cpp#L187\n\tconst paramResult = new Vector2();\n\tconst temp1 = new Vector3();\n\tconst temp2 = new Vector3();\n\treturn function closestPointsSegmentToSegment( l1, l2, target1, target2 ) {\n\n\t\tclosestPointLineToLine( l1, l2, paramResult );\n\n\t\tlet d = paramResult.x;\n\t\tlet d2 = paramResult.y;\n\t\tif ( d >= 0 && d <= 1 && d2 >= 0 && d2 <= 1 ) {\n\n\t\t\tl1.at( d, target1 );\n\t\t\tl2.at( d2, target2 );\n\n\t\t\treturn;\n\n\t\t} else if ( d >= 0 && d <= 1 ) {\n\n\t\t\t// Only d2 is out of bounds.\n\t\t\tif ( d2 < 0 ) {\n\n\t\t\t\tl2.at( 0, target2 );\n\n\t\t\t} else {\n\n\t\t\t\tl2.at( 1, target2 );\n\n\t\t\t}\n\n\t\t\tl1.closestPointToPoint( target2, true, target1 );\n\t\t\treturn;\n\n\t\t} else if ( d2 >= 0 && d2 <= 1 ) {\n\n\t\t\t// Only d is out of bounds.\n\t\t\tif ( d < 0 ) {\n\n\t\t\t\tl1.at( 0, target1 );\n\n\t\t\t} else {\n\n\t\t\t\tl1.at( 1, target1 );\n\n\t\t\t}\n\n\t\t\tl2.closestPointToPoint( target1, true, target2 );\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// Both u and u2 are out of bounds.\n\t\t\tlet p;\n\t\t\tif ( d < 0 ) {\n\n\t\t\t\tp = l1.start;\n\n\t\t\t} else {\n\n\t\t\t\tp = l1.end;\n\n\t\t\t}\n\n\t\t\tlet p2;\n\t\t\tif ( d2 < 0 ) {\n\n\t\t\t\tp2 = l2.start;\n\n\t\t\t} else {\n\n\t\t\t\tp2 = l2.end;\n\n\t\t\t}\n\n\t\t\tconst closestPoint = temp1;\n\t\t\tconst closestPoint2 = temp2;\n\t\t\tl1.closestPointToPoint( p2, true, temp1 );\n\t\t\tl2.closestPointToPoint( p, true, temp2 );\n\n\t\t\tif ( closestPoint.distanceToSquared( p2 ) <= closestPoint2.distanceToSquared( p ) ) {\n\n\t\t\t\ttarget1.copy( closestPoint );\n\t\t\t\ttarget2.copy( p2 );\n\t\t\t\treturn;\n\n\t\t\t} else {\n\n\t\t\t\ttarget1.copy( p );\n\t\t\t\ttarget2.copy( closestPoint2 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n} )();\n\n\nexport const sphereIntersectTriangle = ( function () {\n\n\t// https://stackoverflow.com/questions/34043955/detect-collision-between-sphere-and-triangle-in-three-js\n\tconst closestPointTemp = new Vector3();\n\tconst projectedPointTemp = new Vector3();\n\tconst planeTemp = new Plane();\n\tconst lineTemp = new Line3();\n\treturn function sphereIntersectTriangle( sphere, triangle ) {\n\n\t\tconst { radius, center } = sphere;\n\t\tconst { a, b, c } = triangle;\n\n\t\t// phase 1\n\t\tlineTemp.start = a;\n\t\tlineTemp.end = b;\n\t\tconst closestPoint1 = lineTemp.closestPointToPoint( center, true, closestPointTemp );\n\t\tif ( closestPoint1.distanceTo( center ) <= radius ) return true;\n\n\t\tlineTemp.start = a;\n\t\tlineTemp.end = c;\n\t\tconst closestPoint2 = lineTemp.closestPointToPoint( center, true, closestPointTemp );\n\t\tif ( closestPoint2.distanceTo( center ) <= radius ) return true;\n\n\t\tlineTemp.start = b;\n\t\tlineTemp.end = c;\n\t\tconst closestPoint3 = lineTemp.closestPointToPoint( center, true, closestPointTemp );\n\t\tif ( closestPoint3.distanceTo( center ) <= radius ) return true;\n\n\t\t// phase 2\n\t\tconst plane = triangle.getPlane( planeTemp );\n\t\tconst dp = Math.abs( plane.distanceToPoint( center ) );\n\t\tif ( dp <= radius ) {\n\n\t\t\tconst pp = plane.projectPoint( center, projectedPointTemp );\n\t\t\tconst cp = triangle.containsPoint( pp );\n\t\t\tif ( cp ) return true;\n\n\t\t}\n\n\t\treturn false;\n\n\t};\n\n} )();\n", "import { Triangle, Vector3, Line3, Sphere, Plane } from 'three';\nimport { SeparatingAxisBounds } from './SeparatingAxisBounds.js';\nimport { closestPointsSegmentToSegment, sphereIntersectTriangle } from './MathUtilities.js';\n\nconst DIST_EPSILON = 1e-15;\nfunction isNearZero( value ) {\n\n\treturn Math.abs( value ) < DIST_EPSILON;\n\n}\n\nexport class ExtendedTriangle extends Triangle {\n\n\tconstructor( ...args ) {\n\n\t\tsuper( ...args );\n\n\t\tthis.isExtendedTriangle = true;\n\t\tthis.satAxes = new Array( 4 ).fill().map( () => new Vector3() );\n\t\tthis.satBounds = new Array( 4 ).fill().map( () => new SeparatingAxisBounds() );\n\t\tthis.points = [ this.a, this.b, this.c ];\n\t\tthis.sphere = new Sphere();\n\t\tthis.plane = new Plane();\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphereIntersectTriangle( sphere, this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst a = this.a;\n\t\tconst b = this.b;\n\t\tconst c = this.c;\n\t\tconst points = this.points;\n\n\t\tconst satAxes = this.satAxes;\n\t\tconst satBounds = this.satBounds;\n\n\t\tconst axis0 = satAxes[ 0 ];\n\t\tconst sab0 = satBounds[ 0 ];\n\t\tthis.getNormal( axis0 );\n\t\tsab0.setFromPoints( axis0, points );\n\n\t\tconst axis1 = satAxes[ 1 ];\n\t\tconst sab1 = satBounds[ 1 ];\n\t\taxis1.subVectors( a, b );\n\t\tsab1.setFromPoints( axis1, points );\n\n\t\tconst axis2 = satAxes[ 2 ];\n\t\tconst sab2 = satBounds[ 2 ];\n\t\taxis2.subVectors( b, c );\n\t\tsab2.setFromPoints( axis2, points );\n\n\t\tconst axis3 = satAxes[ 3 ];\n\t\tconst sab3 = satBounds[ 3 ];\n\t\taxis3.subVectors( c, a );\n\t\tsab3.setFromPoints( axis3, points );\n\n\t\tthis.sphere.setFromPoints( this.points );\n\t\tthis.plane.setFromNormalAndCoplanarPoint( axis0, a );\n\t\tthis.needsUpdate = false;\n\n\t}\n\n}\n\nExtendedTriangle.prototype.closestPointToSegment = ( function () {\n\n\tconst point1 = new Vector3();\n\tconst point2 = new Vector3();\n\tconst edge = new Line3();\n\n\treturn function distanceToSegment( segment, target1 = null, target2 = null ) {\n\n\t\tconst { start, end } = segment;\n\t\tconst points = this.points;\n\t\tlet distSq;\n\t\tlet closestDistanceSq = Infinity;\n\n\t\t// check the triangle edges\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst nexti = ( i + 1 ) % 3;\n\t\t\tedge.start.copy( points[ i ] );\n\t\t\tedge.end.copy( points[ nexti ] );\n\n\t\t\tclosestPointsSegmentToSegment( edge, segment, point1, point2 );\n\n\t\t\tdistSq = point1.distanceToSquared( point2 );\n\t\t\tif ( distSq < closestDistanceSq ) {\n\n\t\t\t\tclosestDistanceSq = distSq;\n\t\t\t\tif ( target1 ) target1.copy( point1 );\n\t\t\t\tif ( target2 ) target2.copy( point2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// check end points\n\t\tthis.closestPointToPoint( start, point1 );\n\t\tdistSq = start.distanceToSquared( point1 );\n\t\tif ( distSq < closestDistanceSq ) {\n\n\t\t\tclosestDistanceSq = distSq;\n\t\t\tif ( target1 ) target1.copy( point1 );\n\t\t\tif ( target2 ) target2.copy( start );\n\n\t\t}\n\n\t\tthis.closestPointToPoint( end, point1 );\n\t\tdistSq = end.distanceToSquared( point1 );\n\t\tif ( distSq < closestDistanceSq ) {\n\n\t\t\tclosestDistanceSq = distSq;\n\t\t\tif ( target1 ) target1.copy( point1 );\n\t\t\tif ( target2 ) target2.copy( end );\n\n\t\t}\n\n\t\treturn Math.sqrt( closestDistanceSq );\n\n\t};\n\n} )();\n\nExtendedTriangle.prototype.intersectsTriangle = ( function () {\n\n\tconst saTri2 = new ExtendedTriangle();\n\tconst arr1 = new Array( 3 );\n\tconst arr2 = new Array( 3 );\n\tconst cachedSatBounds = new SeparatingAxisBounds();\n\tconst cachedSatBounds2 = new SeparatingAxisBounds();\n\tconst cachedAxis = new Vector3();\n\tconst dir1 = new Vector3();\n\tconst dir2 = new Vector3();\n\tconst tempDir = new Vector3();\n\tconst edge = new Line3();\n\tconst edge1 = new Line3();\n\tconst edge2 = new Line3();\n\n\t// TODO: If the triangles are coplanar and intersecting the target is nonsensical. It should at least\n\t// be a line contained by both triangles if not a different special case somehow represented in the return result.\n\treturn function intersectsTriangle( other, target = null, suppressLog = false ) {\n\n\t\tif ( this.needsUpdate ) {\n\n\t\t\tthis.update();\n\n\t\t}\n\n\t\tif ( ! other.isExtendedTriangle ) {\n\n\t\t\tsaTri2.copy( other );\n\t\t\tsaTri2.update();\n\t\t\tother = saTri2;\n\n\t\t} else if ( other.needsUpdate ) {\n\n\t\t\tother.update();\n\n\t\t}\n\n\t\tconst plane1 = this.plane;\n\t\tconst plane2 = other.plane;\n\n\t\tif ( Math.abs( plane1.normal.dot( plane2.normal ) ) > 1.0 - 1e-10 ) {\n\n\t\t\t// perform separating axis intersection test only for coplanar triangles\n\t\t\tconst satBounds1 = this.satBounds;\n\t\t\tconst satAxes1 = this.satAxes;\n\t\t\tarr2[ 0 ] = other.a;\n\t\t\tarr2[ 1 ] = other.b;\n\t\t\tarr2[ 2 ] = other.c;\n\t\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\t\tconst sb = satBounds1[ i ];\n\t\t\t\tconst sa = satAxes1[ i ];\n\t\t\t\tcachedSatBounds.setFromPoints( sa, arr2 );\n\t\t\t\tif ( sb.isSeparated( cachedSatBounds ) ) return false;\n\n\t\t\t}\n\n\t\t\tconst satBounds2 = other.satBounds;\n\t\t\tconst satAxes2 = other.satAxes;\n\t\t\tarr1[ 0 ] = this.a;\n\t\t\tarr1[ 1 ] = this.b;\n\t\t\tarr1[ 2 ] = this.c;\n\t\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\t\tconst sb = satBounds2[ i ];\n\t\t\t\tconst sa = satAxes2[ i ];\n\t\t\t\tcachedSatBounds.setFromPoints( sa, arr1 );\n\t\t\t\tif ( sb.isSeparated( cachedSatBounds ) ) return false;\n\n\t\t\t}\n\n\t\t\t// check crossed axes\n\t\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\t\tconst sa1 = satAxes1[ i ];\n\t\t\t\tfor ( let i2 = 0; i2 < 4; i2 ++ ) {\n\n\t\t\t\t\tconst sa2 = satAxes2[ i2 ];\n\t\t\t\t\tcachedAxis.crossVectors( sa1, sa2 );\n\t\t\t\t\tcachedSatBounds.setFromPoints( cachedAxis, arr1 );\n\t\t\t\t\tcachedSatBounds2.setFromPoints( cachedAxis, arr2 );\n\t\t\t\t\tif ( cachedSatBounds.isSeparated( cachedSatBounds2 ) ) return false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( target ) {\n\n\t\t\t\t// TODO find two points that intersect on the edges and make that the result\n\t\t\t\tif ( ! suppressLog ) {\n\n\t\t\t\t\tconsole.warn( 'ExtendedTriangle.intersectsTriangle: Triangles are coplanar which does not support an output edge. Setting edge to 0, 0, 0.' );\n\n\t\t\t\t}\n\n\t\t\t\ttarget.start.set( 0, 0, 0 );\n\t\t\t\ttarget.end.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\t// find the edge that intersects the other triangle plane\n\t\t\tconst points1 = this.points;\n\t\t\tlet found1 = false;\n\t\t\tlet count1 = 0;\n\t\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\t\tconst p = points1[ i ];\n\t\t\t\tconst pNext = points1[ ( i + 1 ) % 3 ];\n\n\t\t\t\tedge.start.copy( p );\n\t\t\t\tedge.end.copy( pNext );\n\t\t\t\tedge.delta( dir1 );\n\n\t\t\t\tconst targetPoint = found1 ? edge1.start : edge1.end;\n\t\t\t\tconst startIntersects = isNearZero( plane2.distanceToPoint( p ) );\n\t\t\t\tif ( isNearZero( plane2.normal.dot( dir1 ) ) && startIntersects ) {\n\n\t\t\t\t\t// if the edge lies on the plane then take the line\n\t\t\t\t\tedge1.copy( edge );\n\t\t\t\t\tcount1 = 2;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// check if the start point is near the plane because \"intersectLine\" is not robust to that case\n\t\t\t\tconst doesIntersect = plane2.intersectLine( edge, targetPoint ) || startIntersects;\n\t\t\t\tif ( doesIntersect && ! isNearZero( targetPoint.distanceTo( pNext ) ) ) {\n\n\t\t\t\t\tcount1 ++;\n\t\t\t\t\tif ( found1 ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfound1 = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( count1 === 1 && other.containsPoint( edge1.end ) ) {\n\n\t\t\t\tif ( target ) {\n\n\t\t\t\t\ttarget.start.copy( edge1.end );\n\t\t\t\t\ttarget.end.copy( edge1.end );\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t} else if ( count1 !== 2 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// find the other triangles edge that intersects this plane\n\t\t\tconst points2 = other.points;\n\t\t\tlet found2 = false;\n\t\t\tlet count2 = 0;\n\t\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\t\tconst p = points2[ i ];\n\t\t\t\tconst pNext = points2[ ( i + 1 ) % 3 ];\n\n\t\t\t\tedge.start.copy( p );\n\t\t\t\tedge.end.copy( pNext );\n\t\t\t\tedge.delta( dir2 );\n\n\t\t\t\tconst targetPoint = found2 ? edge2.start : edge2.end;\n\t\t\t\tconst startIntersects = isNearZero( plane1.distanceToPoint( p ) );\n\t\t\t\tif ( isNearZero( plane1.normal.dot( dir2 ) ) && startIntersects ) {\n\n\t\t\t\t\t// if the edge lies on the plane then take the line\n\t\t\t\t\tedge2.copy( edge );\n\t\t\t\t\tcount2 = 2;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// check if the start point is near the plane because \"intersectLine\" is not robust to that case\n\t\t\t\tconst doesIntersect = plane1.intersectLine( edge, targetPoint ) || startIntersects;\n\t\t\t\tif ( doesIntersect && ! isNearZero( targetPoint.distanceTo( pNext ) ) ) {\n\n\t\t\t\t\tcount2 ++;\n\t\t\t\t\tif ( found2 ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfound2 = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( count2 === 1 && this.containsPoint( edge2.end ) ) {\n\n\t\t\t\tif ( target ) {\n\n\t\t\t\t\ttarget.start.copy( edge2.end );\n\t\t\t\t\ttarget.end.copy( edge2.end );\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t} else if ( count2 !== 2 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// find swap the second edge so both lines are running the same direction\n\t\t\tedge1.delta( dir1 );\n\t\t\tedge2.delta( dir2 );\n\n\t\t\tif ( dir1.dot( dir2 ) < 0 ) {\n\n\t\t\t\tlet tmp = edge2.start;\n\t\t\t\tedge2.start = edge2.end;\n\t\t\t\tedge2.end = tmp;\n\n\t\t\t}\n\n\t\t\t// check if the edges are overlapping\n\t\t\tconst s1 = edge1.start.dot( dir1 );\n\t\t\tconst e1 = edge1.end.dot( dir1 );\n\t\t\tconst s2 = edge2.start.dot( dir1 );\n\t\t\tconst e2 = edge2.end.dot( dir1 );\n\t\t\tconst separated1 = e1 < s2;\n\t\t\tconst separated2 = s1 < e2;\n\n\t\t\tif ( s1 !== e2 && s2 !== e1 && separated1 === separated2 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// assign the target output\n\t\t\tif ( target ) {\n\n\t\t\t\ttempDir.subVectors( edge1.start, edge2.start );\n\t\t\t\tif ( tempDir.dot( dir1 ) > 0 ) {\n\n\t\t\t\t\ttarget.start.copy( edge1.start );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttarget.start.copy( edge2.start );\n\n\t\t\t\t}\n\n\t\t\t\ttempDir.subVectors( edge1.end, edge2.end );\n\t\t\t\tif ( tempDir.dot( dir1 ) < 0 ) {\n\n\t\t\t\t\ttarget.end.copy( edge1.end );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttarget.end.copy( edge2.end );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t};\n\n} )();\n\n\nExtendedTriangle.prototype.distanceToPoint = ( function () {\n\n\tconst target = new Vector3();\n\treturn function distanceToPoint( point ) {\n\n\t\tthis.closestPointToPoint( point, target );\n\t\treturn point.distanceTo( target );\n\n\t};\n\n} )();\n\n\nExtendedTriangle.prototype.distanceToTriangle = ( function () {\n\n\tconst point = new Vector3();\n\tconst point2 = new Vector3();\n\tconst cornerFields = [ 'a', 'b', 'c' ];\n\tconst line1 = new Line3();\n\tconst line2 = new Line3();\n\n\treturn function distanceToTriangle( other, target1 = null, target2 = null ) {\n\n\t\tconst lineTarget = target1 || target2 ? line1 : null;\n\t\tif ( this.intersectsTriangle( other, lineTarget ) ) {\n\n\t\t\tif ( target1 || target2 ) {\n\n\t\t\t\tif ( target1 ) lineTarget.getCenter( target1 );\n\t\t\t\tif ( target2 ) lineTarget.getCenter( target2 );\n\n\t\t\t}\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tlet closestDistanceSq = Infinity;\n\n\t\t// check all point distances\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tlet dist;\n\t\t\tconst field = cornerFields[ i ];\n\t\t\tconst otherVec = other[ field ];\n\t\t\tthis.closestPointToPoint( otherVec, point );\n\n\t\t\tdist = otherVec.distanceToSquared( point );\n\n\t\t\tif ( dist < closestDistanceSq ) {\n\n\t\t\t\tclosestDistanceSq = dist;\n\t\t\t\tif ( target1 ) target1.copy( point );\n\t\t\t\tif ( target2 ) target2.copy( otherVec );\n\n\t\t\t}\n\n\n\t\t\tconst thisVec = this[ field ];\n\t\t\tother.closestPointToPoint( thisVec, point );\n\n\t\t\tdist = thisVec.distanceToSquared( point );\n\n\t\t\tif ( dist < closestDistanceSq ) {\n\n\t\t\t\tclosestDistanceSq = dist;\n\t\t\t\tif ( target1 ) target1.copy( thisVec );\n\t\t\t\tif ( target2 ) target2.copy( point );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst f11 = cornerFields[ i ];\n\t\t\tconst f12 = cornerFields[ ( i + 1 ) % 3 ];\n\t\t\tline1.set( this[ f11 ], this[ f12 ] );\n\t\t\tfor ( let i2 = 0; i2 < 3; i2 ++ ) {\n\n\t\t\t\tconst f21 = cornerFields[ i2 ];\n\t\t\t\tconst f22 = cornerFields[ ( i2 + 1 ) % 3 ];\n\t\t\t\tline2.set( other[ f21 ], other[ f22 ] );\n\n\t\t\t\tclosestPointsSegmentToSegment( line1, line2, point, point2 );\n\n\t\t\t\tconst dist = point.distanceToSquared( point2 );\n\t\t\t\tif ( dist < closestDistanceSq ) {\n\n\t\t\t\t\tclosestDistanceSq = dist;\n\t\t\t\t\tif ( target1 ) target1.copy( point );\n\t\t\t\t\tif ( target2 ) target2.copy( point2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.sqrt( closestDistanceSq );\n\n\t};\n\n} )();\n", "import { Vector3, Matrix4, Line3 } from 'three';\nimport { SeparatingAxisBounds } from './SeparatingAxisBounds.js';\nimport { ExtendedTriangle } from './ExtendedTriangle.js';\nimport { closestPointsSegmentToSegment } from './MathUtilities.js';\n\nexport class OrientedBox {\n\n\tconstructor( min, max, matrix ) {\n\n\t\tthis.isOrientedBox = true;\n\t\tthis.min = new Vector3();\n\t\tthis.max = new Vector3();\n\t\tthis.matrix = new Matrix4();\n\t\tthis.invMatrix = new Matrix4();\n\t\tthis.points = new Array( 8 ).fill().map( () => new Vector3() );\n\t\tthis.satAxes = new Array( 3 ).fill().map( () => new Vector3() );\n\t\tthis.satBounds = new Array( 3 ).fill().map( () => new SeparatingAxisBounds() );\n\t\tthis.alignedSatBounds = new Array( 3 ).fill().map( () => new SeparatingAxisBounds() );\n\t\tthis.needsUpdate = false;\n\n\t\tif ( min ) this.min.copy( min );\n\t\tif ( max ) this.max.copy( max );\n\t\tif ( matrix ) this.matrix.copy( matrix );\n\n\t}\n\n\tset( min, max, matrix ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\t\tthis.matrix.copy( matrix );\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.min.copy( other.min );\n\t\tthis.max.copy( other.max );\n\t\tthis.matrix.copy( other.matrix );\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nOrientedBox.prototype.update = ( function () {\n\n\treturn function update() {\n\n\t\tconst matrix = this.matrix;\n\t\tconst min = this.min;\n\t\tconst max = this.max;\n\n\t\tconst points = this.points;\n\t\tfor ( let x = 0; x <= 1; x ++ ) {\n\n\t\t\tfor ( let y = 0; y <= 1; y ++ ) {\n\n\t\t\t\tfor ( let z = 0; z <= 1; z ++ ) {\n\n\t\t\t\t\tconst i = ( ( 1 << 0 ) * x ) | ( ( 1 << 1 ) * y ) | ( ( 1 << 2 ) * z );\n\t\t\t\t\tconst v = points[ i ];\n\t\t\t\t\tv.x = x ? max.x : min.x;\n\t\t\t\t\tv.y = y ? max.y : min.y;\n\t\t\t\t\tv.z = z ? max.z : min.z;\n\n\t\t\t\t\tv.applyMatrix4( matrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst satBounds = this.satBounds;\n\t\tconst satAxes = this.satAxes;\n\t\tconst minVec = points[ 0 ];\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst axis = satAxes[ i ];\n\t\t\tconst sb = satBounds[ i ];\n\t\t\tconst index = 1 << i;\n\t\t\tconst pi = points[ index ];\n\n\t\t\taxis.subVectors( minVec, pi );\n\t\t\tsb.setFromPoints( axis, points );\n\n\t\t}\n\n\t\tconst alignedSatBounds = this.alignedSatBounds;\n\t\talignedSatBounds[ 0 ].setFromPointsField( points, 'x' );\n\t\talignedSatBounds[ 1 ].setFromPointsField( points, 'y' );\n\t\talignedSatBounds[ 2 ].setFromPointsField( points, 'z' );\n\n\t\tthis.invMatrix.copy( this.matrix ).invert();\n\t\tthis.needsUpdate = false;\n\n\t};\n\n} )();\n\nOrientedBox.prototype.intersectsBox = ( function () {\n\n\tconst aabbBounds = new SeparatingAxisBounds();\n\treturn function intersectsBox( box ) {\n\n\t\t// TODO: should this be doing SAT against the AABB?\n\t\tif ( this.needsUpdate ) {\n\n\t\t\tthis.update();\n\n\t\t}\n\n\t\tconst min = box.min;\n\t\tconst max = box.max;\n\t\tconst satBounds = this.satBounds;\n\t\tconst satAxes = this.satAxes;\n\t\tconst alignedSatBounds = this.alignedSatBounds;\n\n\t\taabbBounds.min = min.x;\n\t\taabbBounds.max = max.x;\n\t\tif ( alignedSatBounds[ 0 ].isSeparated( aabbBounds ) ) return false;\n\n\t\taabbBounds.min = min.y;\n\t\taabbBounds.max = max.y;\n\t\tif ( alignedSatBounds[ 1 ].isSeparated( aabbBounds ) ) return false;\n\n\t\taabbBounds.min = min.z;\n\t\taabbBounds.max = max.z;\n\t\tif ( alignedSatBounds[ 2 ].isSeparated( aabbBounds ) ) return false;\n\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst axis = satAxes[ i ];\n\t\t\tconst sb = satBounds[ i ];\n\t\t\taabbBounds.setFromBox( axis, box );\n\t\t\tif ( sb.isSeparated( aabbBounds ) ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t};\n\n} )();\n\nOrientedBox.prototype.intersectsTriangle = ( function () {\n\n\tconst saTri = new ExtendedTriangle();\n\tconst pointsArr = new Array( 3 );\n\tconst cachedSatBounds = new SeparatingAxisBounds();\n\tconst cachedSatBounds2 = new SeparatingAxisBounds();\n\tconst cachedAxis = new Vector3();\n\treturn function intersectsTriangle( triangle ) {\n\n\t\tif ( this.needsUpdate ) {\n\n\t\t\tthis.update();\n\n\t\t}\n\n\t\tif ( ! triangle.isExtendedTriangle ) {\n\n\t\t\tsaTri.copy( triangle );\n\t\t\tsaTri.update();\n\t\t\ttriangle = saTri;\n\n\t\t} else if ( triangle.needsUpdate ) {\n\n\t\t\ttriangle.update();\n\n\t\t}\n\n\t\tconst satBounds = this.satBounds;\n\t\tconst satAxes = this.satAxes;\n\n\t\tpointsArr[ 0 ] = triangle.a;\n\t\tpointsArr[ 1 ] = triangle.b;\n\t\tpointsArr[ 2 ] = triangle.c;\n\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst sb = satBounds[ i ];\n\t\t\tconst sa = satAxes[ i ];\n\t\t\tcachedSatBounds.setFromPoints( sa, pointsArr );\n\t\t\tif ( sb.isSeparated( cachedSatBounds ) ) return false;\n\n\t\t}\n\n\t\tconst triSatBounds = triangle.satBounds;\n\t\tconst triSatAxes = triangle.satAxes;\n\t\tconst points = this.points;\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst sb = triSatBounds[ i ];\n\t\t\tconst sa = triSatAxes[ i ];\n\t\t\tcachedSatBounds.setFromPoints( sa, points );\n\t\t\tif ( sb.isSeparated( cachedSatBounds ) ) return false;\n\n\t\t}\n\n\t\t// check crossed axes\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst sa1 = satAxes[ i ];\n\t\t\tfor ( let i2 = 0; i2 < 4; i2 ++ ) {\n\n\t\t\t\tconst sa2 = triSatAxes[ i2 ];\n\t\t\t\tcachedAxis.crossVectors( sa1, sa2 );\n\t\t\t\tcachedSatBounds.setFromPoints( cachedAxis, pointsArr );\n\t\t\t\tcachedSatBounds2.setFromPoints( cachedAxis, points );\n\t\t\t\tif ( cachedSatBounds.isSeparated( cachedSatBounds2 ) ) return false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t};\n\n} )();\n\nOrientedBox.prototype.closestPointToPoint = ( function () {\n\n\treturn function closestPointToPoint( point, target1 ) {\n\n\t\tif ( this.needsUpdate ) {\n\n\t\t\tthis.update();\n\n\t\t}\n\n\t\ttarget1\n\t\t\t.copy( point )\n\t\t\t.applyMatrix4( this.invMatrix )\n\t\t\t.clamp( this.min, this.max )\n\t\t\t.applyMatrix4( this.matrix );\n\n\t\treturn target1;\n\n\t};\n\n} )();\n\nOrientedBox.prototype.distanceToPoint = ( function () {\n\n\tconst target = new Vector3();\n\treturn function distanceToPoint( point ) {\n\n\t\tthis.closestPointToPoint( point, target );\n\t\treturn point.distanceTo( target );\n\n\t};\n\n} )();\n\nOrientedBox.prototype.distanceToBox = ( function () {\n\n\tconst xyzFields = [ 'x', 'y', 'z' ];\n\tconst segments1 = new Array( 12 ).fill().map( () => new Line3() );\n\tconst segments2 = new Array( 12 ).fill().map( () => new Line3() );\n\n\tconst point1 = new Vector3();\n\tconst point2 = new Vector3();\n\n\t// early out if we find a value below threshold\n\treturn function distanceToBox( box, threshold = 0, target1 = null, target2 = null ) {\n\n\t\tif ( this.needsUpdate ) {\n\n\t\t\tthis.update();\n\n\t\t}\n\n\t\tif ( this.intersectsBox( box ) ) {\n\n\t\t\tif ( target1 || target2 ) {\n\n\t\t\t\tbox.getCenter( point2 );\n\t\t\t\tthis.closestPointToPoint( point2, point1 );\n\t\t\t\tbox.closestPointToPoint( point1, point2 );\n\n\t\t\t\tif ( target1 ) target1.copy( point1 );\n\t\t\t\tif ( target2 ) target2.copy( point2 );\n\n\t\t\t}\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tconst threshold2 = threshold * threshold;\n\t\tconst min = box.min;\n\t\tconst max = box.max;\n\t\tconst points = this.points;\n\n\n\t\t// iterate over every edge and compare distances\n\t\tlet closestDistanceSq = Infinity;\n\n\t\t// check over all these points\n\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\tconst p = points[ i ];\n\t\t\tpoint2.copy( p ).clamp( min, max );\n\n\t\t\tconst dist = p.distanceToSquared( point2 );\n\t\t\tif ( dist < closestDistanceSq ) {\n\n\t\t\t\tclosestDistanceSq = dist;\n\t\t\t\tif ( target1 ) target1.copy( p );\n\t\t\t\tif ( target2 ) target2.copy( point2 );\n\n\t\t\t\tif ( dist < threshold2 ) return Math.sqrt( dist );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate and check all line segment distances\n\t\tlet count = 0;\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tfor ( let i1 = 0; i1 <= 1; i1 ++ ) {\n\n\t\t\t\tfor ( let i2 = 0; i2 <= 1; i2 ++ ) {\n\n\t\t\t\t\tconst nextIndex = ( i + 1 ) % 3;\n\t\t\t\t\tconst nextIndex2 = ( i + 2 ) % 3;\n\n\t\t\t\t\t// get obb line segments\n\t\t\t\t\tconst index = i1 << nextIndex | i2 << nextIndex2;\n\t\t\t\t\tconst index2 = 1 << i | i1 << nextIndex | i2 << nextIndex2;\n\t\t\t\t\tconst p1 = points[ index ];\n\t\t\t\t\tconst p2 = points[ index2 ];\n\t\t\t\t\tconst line1 = segments1[ count ];\n\t\t\t\t\tline1.set( p1, p2 );\n\n\n\t\t\t\t\t// get aabb line segments\n\t\t\t\t\tconst f1 = xyzFields[ i ];\n\t\t\t\t\tconst f2 = xyzFields[ nextIndex ];\n\t\t\t\t\tconst f3 = xyzFields[ nextIndex2 ];\n\t\t\t\t\tconst line2 = segments2[ count ];\n\t\t\t\t\tconst start = line2.start;\n\t\t\t\t\tconst end = line2.end;\n\n\t\t\t\t\tstart[ f1 ] = min[ f1 ];\n\t\t\t\t\tstart[ f2 ] = i1 ? min[ f2 ] : max[ f2 ];\n\t\t\t\t\tstart[ f3 ] = i2 ? min[ f3 ] : max[ f2 ];\n\n\t\t\t\t\tend[ f1 ] = max[ f1 ];\n\t\t\t\t\tend[ f2 ] = i1 ? min[ f2 ] : max[ f2 ];\n\t\t\t\t\tend[ f3 ] = i2 ? min[ f3 ] : max[ f2 ];\n\n\t\t\t\t\tcount ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// check all the other boxes point\n\t\tfor ( let x = 0; x <= 1; x ++ ) {\n\n\t\t\tfor ( let y = 0; y <= 1; y ++ ) {\n\n\t\t\t\tfor ( let z = 0; z <= 1; z ++ ) {\n\n\t\t\t\t\tpoint2.x = x ? max.x : min.x;\n\t\t\t\t\tpoint2.y = y ? max.y : min.y;\n\t\t\t\t\tpoint2.z = z ? max.z : min.z;\n\n\t\t\t\t\tthis.closestPointToPoint( point2, point1 );\n\t\t\t\t\tconst dist = point2.distanceToSquared( point1 );\n\t\t\t\t\tif ( dist < closestDistanceSq ) {\n\n\t\t\t\t\t\tclosestDistanceSq = dist;\n\t\t\t\t\t\tif ( target1 ) target1.copy( point1 );\n\t\t\t\t\t\tif ( target2 ) target2.copy( point2 );\n\n\t\t\t\t\t\tif ( dist < threshold2 ) return Math.sqrt( dist );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 12; i ++ ) {\n\n\t\t\tconst l1 = segments1[ i ];\n\t\t\tfor ( let i2 = 0; i2 < 12; i2 ++ ) {\n\n\t\t\t\tconst l2 = segments2[ i2 ];\n\t\t\t\tclosestPointsSegmentToSegment( l1, l2, point1, point2 );\n\t\t\t\tconst dist = point1.distanceToSquared( point2 );\n\t\t\t\tif ( dist < closestDistanceSq ) {\n\n\t\t\t\t\tclosestDistanceSq = dist;\n\t\t\t\t\tif ( target1 ) target1.copy( point1 );\n\t\t\t\t\tif ( target2 ) target2.copy( point2 );\n\n\t\t\t\t\tif ( dist < threshold2 ) return Math.sqrt( dist );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.sqrt( closestDistanceSq );\n\n\t};\n\n} )();\n", "import { Vector3, Vector2, Triangle, DoubleSide, BackSide } from 'three';\n\n// Ripped and modified From THREE.js Mesh raycast\n// https://github.com/mrdoob/three.js/blob/0aa87c999fe61e216c1133fba7a95772b503eddf/src/objects/Mesh.js#L115\nconst vA = /* @__PURE__ */ new Vector3();\nconst vB = /* @__PURE__ */ new Vector3();\nconst vC = /* @__PURE__ */ new Vector3();\n\nconst uvA = /* @__PURE__ */ new Vector2();\nconst uvB = /* @__PURE__ */ new Vector2();\nconst uvC = /* @__PURE__ */ new Vector2();\n\nconst intersectionPoint = /* @__PURE__ */ new Vector3();\nfunction checkIntersection( ray, pA, pB, pC, point, side ) {\n\n\tlet intersect;\n\tif ( side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, side !== DoubleSide, point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\tconst distance = ray.origin.distanceTo( point );\n\n\treturn {\n\n\t\tdistance: distance,\n\t\tpoint: point.clone(),\n\n\t};\n\n}\n\nfunction checkBufferGeometryIntersection( ray, position, uv, a, b, c, side ) {\n\n\tvA.fromBufferAttribute( position, a );\n\tvB.fromBufferAttribute( position, b );\n\tvC.fromBufferAttribute( position, c );\n\n\tconst intersection = checkIntersection( ray, vA, vB, vC, intersectionPoint, side );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\tuvA.fromBufferAttribute( uv, a );\n\t\t\tuvB.fromBufferAttribute( uv, b );\n\t\t\tuvC.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getUV( intersectionPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2( ) );\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( vA, vB, vC, face.normal );\n\n\t\tintersection.face = face;\n\t\tintersection.faceIndex = a;\n\n\t}\n\n\treturn intersection;\n\n}\n\n// https://github.com/mrdoob/three.js/blob/0aa87c999fe61e216c1133fba7a95772b503eddf/src/objects/Mesh.js#L258\nfunction intersectTri( geo, side, ray, tri, intersections ) {\n\n\tconst triOffset = tri * 3;\n\tconst a = geo.index.getX( triOffset );\n\tconst b = geo.index.getX( triOffset + 1 );\n\tconst c = geo.index.getX( triOffset + 2 );\n\n\tconst intersection = checkBufferGeometryIntersection( ray, geo.attributes.position, geo.attributes.uv, a, b, c, side );\n\n\tif ( intersection ) {\n\n\t\tintersection.faceIndex = tri;\n\t\tif ( intersections ) intersections.push( intersection );\n\t\treturn intersection;\n\n\t}\n\n\treturn null;\n\n}\n\nexport { intersectTri };\n", "import { intersectTri } from './ThreeRayIntersectUtilities.js';\n\nexport function intersectTris( geo, side, ray, offset, count, intersections ) {\n\n\tfor ( let i = offset, end = offset + count; i < end; i ++ ) {\n\n\t\tintersectTri( geo, side, ray, i, intersections );\n\n\t}\n\n}\n\nexport function intersectClosestTri( geo, side, ray, offset, count ) {\n\n\tlet dist = Infinity;\n\tlet res = null;\n\tfor ( let i = offset, end = offset + count; i < end; i ++ ) {\n\n\t\tconst intersection = intersectTri( geo, side, ray, i );\n\t\tif ( intersection && intersection.distance < dist ) {\n\n\t\t\tres = intersection;\n\t\t\tdist = intersection.distance;\n\n\t\t}\n\n\t}\n\n\treturn res;\n\n}\n\n// converts the given BVH raycast intersection to align with the three.js raycast\n// structure (include object, world space distance and point).\nexport function convertRaycastIntersect( hit, object, raycaster ) {\n\n\tif ( hit === null ) {\n\n\t\treturn null;\n\n\t}\n\n\thit.point.applyMatrix4( object.matrixWorld );\n\thit.distance = hit.point.distanceTo( raycaster.ray.origin );\n\thit.object = object;\n\n\tif ( hit.distance < raycaster.near || hit.distance > raycaster.far ) {\n\n\t\treturn null;\n\n\t} else {\n\n\t\treturn hit;\n\n\t}\n\n}\n", "\nimport { Vector2, Vector3, Triangle } from 'three';\n\n// sets the vertices of triangle `tri` with the 3 vertices after i\nexport function setTriangle( tri, i, index, pos ) {\n\n\tconst ta = tri.a;\n\tconst tb = tri.b;\n\tconst tc = tri.c;\n\n\tlet i0 = i;\n\tlet i1 = i + 1;\n\tlet i2 = i + 2;\n\tif ( index ) {\n\n\t\ti0 = index.getX( i );\n\t\ti1 = index.getX( i + 1 );\n\t\ti2 = index.getX( i + 2 );\n\n\t}\n\n\tta.x = pos.getX( i0 );\n\tta.y = pos.getY( i0 );\n\tta.z = pos.getZ( i0 );\n\n\ttb.x = pos.getX( i1 );\n\ttb.y = pos.getY( i1 );\n\ttb.z = pos.getZ( i1 );\n\n\ttc.x = pos.getX( i2 );\n\ttc.y = pos.getY( i2 );\n\ttc.z = pos.getZ( i2 );\n\n}\n\nexport function iterateOverTriangles(\n\toffset,\n\tcount,\n\tgeometry,\n\tintersectsTriangleFunc,\n\tcontained,\n\tdepth,\n\ttriangle\n) {\n\n\tconst index = geometry.index;\n\tconst pos = geometry.attributes.position;\n\tfor ( let i = offset, l = count + offset; i < l; i ++ ) {\n\n\t\tsetTriangle( triangle, i * 3, index, pos );\n\t\ttriangle.needsUpdate = true;\n\n\t\tif ( intersectsTriangleFunc( triangle, i, contained, depth ) ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t}\n\n\treturn false;\n\n}\n\nconst tempV1 = /* @__PURE__ */ new Vector3();\nconst tempV2 = /* @__PURE__ */ new Vector3();\nconst tempV3 = /* @__PURE__ */ new Vector3();\nconst tempUV1 = /* @__PURE__ */ new Vector2();\nconst tempUV2 = /* @__PURE__ */ new Vector2();\nconst tempUV3 = /* @__PURE__ */ new Vector2();\n\nexport function getTriangleHitPointInfo( point, geometry, triangleIndex, target ) {\n\n\tconst indices = geometry.getIndex().array;\n\tconst positions = geometry.getAttribute( 'position' );\n\tconst uvs = geometry.getAttribute( 'uv' );\n\n\tconst a = indices[ triangleIndex * 3 ];\n\tconst b = indices[ triangleIndex * 3 + 1 ];\n\tconst c = indices[ triangleIndex * 3 + 2 ];\n\n\ttempV1.fromBufferAttribute( positions, a );\n\ttempV2.fromBufferAttribute( positions, b );\n\ttempV3.fromBufferAttribute( positions, c );\n\n\t// find the associated material index\n\tlet materialIndex = 0;\n\tconst groups = geometry.groups;\n\tconst firstVertexIndex = triangleIndex * 3;\n\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\t\tconst { start, count } = group;\n\t\tif ( firstVertexIndex >= start && firstVertexIndex < start + count ) {\n\n\t\t\tmaterialIndex = group.materialIndex;\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\t// extract uvs\n\tlet uv = null;\n\tif ( uvs ) {\n\n\t\ttempUV1.fromBufferAttribute( uvs, a );\n\t\ttempUV2.fromBufferAttribute( uvs, b );\n\t\ttempUV3.fromBufferAttribute( uvs, c );\n\n\t\tif ( target && target.uv ) uv = target.uv;\n\t\telse uv = new Vector2();\n\n\t\tTriangle.getUV( point, tempV1, tempV2, tempV3, tempUV1, tempUV2, tempUV3, uv );\n\n\t}\n\n\t// adjust the provided target or create a new one\n\tif ( target ) {\n\n\t\tif ( ! target.face ) target.face = { };\n\t\ttarget.face.a = a;\n\t\ttarget.face.b = b;\n\t\ttarget.face.c = c;\n\t\ttarget.face.materialIndex = materialIndex;\n\t\tif ( ! target.face.normal ) target.face.normal = new Vector3();\n\t\tTriangle.getNormal( tempV1, tempV2, tempV3, target.face.normal );\n\n\t\tif ( uv ) target.uv = uv;\n\n\t\treturn target;\n\n\t} else {\n\n\t\treturn {\n\t\t\tface: {\n\t\t\t\ta: a,\n\t\t\t\tb: b,\n\t\t\t\tc: c,\n\t\t\t\tmaterialIndex: materialIndex,\n\t\t\t\tnormal: Triangle.getNormal( tempV1, tempV2, tempV3, new Vector3() )\n\t\t\t},\n\t\t\tuv: uv\n\t\t};\n\n\t}\n\n}\n", "export class PrimitivePool {\n\n\tconstructor( getNewPrimitive ) {\n\n\t\tthis._getNewPrimitive = getNewPrimitive;\n\t\tthis._primitives = [];\n\n\t}\n\n\tgetPrimitive() {\n\n\t\tconst primitives = this._primitives;\n\t\tif ( primitives.length === 0 ) {\n\n\t\t\treturn this._getNewPrimitive();\n\n\t\t} else {\n\n\t\t\treturn primitives.pop();\n\n\t\t}\n\n\t}\n\n\treleasePrimitive( primitive ) {\n\n\t\tthis._primitives.push( primitive );\n\n\t}\n\n}\n", "export function IS_LEAF( n16, uint16Array ) {\n\n\treturn uint16Array[ n16 + 15 ] === 0xFFFF;\n\n}\n\nexport function OFFSET( n32, uint32Array ) {\n\n\treturn uint32Array[ n32 + 6 ];\n\n}\n\nexport function COUNT( n16, uint16Array ) {\n\n\treturn uint16Array[ n16 + 14 ];\n\n}\n\nexport function LEFT_NODE( n32 ) {\n\n\treturn n32 + 8;\n\n}\n\nexport function RIGHT_NODE( n32, uint32Array ) {\n\n\treturn uint32Array[ n32 + 6 ];\n\n}\n\nexport function SPLIT_AXIS( n32, uint32Array ) {\n\n\treturn uint32Array[ n32 + 7 ];\n\n}\n\nexport function BOUNDING_DATA_INDEX( n32 ) {\n\n\treturn n32;\n\n}\n", "import { Box3, Vector3, Matrix4 } from 'three';\nimport { CONTAINED } from './Constants.js';\n\nimport { OrientedBox } from '../math/OrientedBox.js';\nimport { ExtendedTriangle } from '../math/ExtendedTriangle.js';\nimport { intersectTris, intersectClosestTri } from '../utils/GeometryRayIntersectUtilities.js';\nimport { setTriangle } from '../utils/TriangleUtilities.js';\nimport { arrayToBox } from '../utils/ArrayBoxUtilities.js';\nimport { PrimitivePool } from '../utils/PrimitivePool.js';\nimport { COUNT, OFFSET, LEFT_NODE, RIGHT_NODE, IS_LEAF, BOUNDING_DATA_INDEX, SPLIT_AXIS } from './nodeBufferFunctions.js';\n\nconst boundingBox = new Box3();\nconst boxIntersection = new Vector3();\nconst xyzFields = [ 'x', 'y', 'z' ];\n\nexport function raycast( nodeIndex32, geometry, side, ray, intersects ) {\n\n\tlet nodeIndex16 = nodeIndex32 * 2, float32Array = _float32Array, uint16Array = _uint16Array, uint32Array = _uint32Array;\n\n\tconst isLeaf = IS_LEAF( nodeIndex16, uint16Array );\n\tif ( isLeaf ) {\n\n\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\n\t\tconst count = COUNT( nodeIndex16, uint16Array );\n\n\t\tintersectTris( geometry, side, ray, offset, count, intersects );\n\n\t} else {\n\n\t\tconst leftIndex = LEFT_NODE( nodeIndex32 );\n\t\tif ( intersectRay( leftIndex, float32Array, ray, boxIntersection ) ) {\n\n\t\t\traycast( leftIndex, geometry, side, ray, intersects );\n\n\t\t}\n\n\t\tconst rightIndex = RIGHT_NODE( nodeIndex32, uint32Array );\n\t\tif ( intersectRay( rightIndex, float32Array, ray, boxIntersection ) ) {\n\n\t\t\traycast( rightIndex, geometry, side, ray, intersects );\n\n\t\t}\n\n\t}\n\n}\n\nexport function raycastFirst( nodeIndex32, geometry, side, ray ) {\n\n\tlet nodeIndex16 = nodeIndex32 * 2, float32Array = _float32Array, uint16Array = _uint16Array, uint32Array = _uint32Array;\n\n\tconst isLeaf = IS_LEAF( nodeIndex16, uint16Array );\n\tif ( isLeaf ) {\n\n\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\n\t\tconst count = COUNT( nodeIndex16, uint16Array );\n\t\treturn intersectClosestTri( geometry, side, ray, offset, count );\n\n\t} else {\n\n\t\t// consider the position of the split plane with respect to the oncoming ray; whichever direction\n\t\t// the ray is coming from, look for an intersection among that side of the tree first\n\t\tconst splitAxis = SPLIT_AXIS( nodeIndex32, uint32Array );\n\t\tconst xyzAxis = xyzFields[ splitAxis ];\n\t\tconst rayDir = ray.direction[ xyzAxis ];\n\t\tconst leftToRight = rayDir >= 0;\n\n\t\t// c1 is the child to check first\n\t\tlet c1, c2;\n\t\tif ( leftToRight ) {\n\n\t\t\tc1 = LEFT_NODE( nodeIndex32 );\n\t\t\tc2 = RIGHT_NODE( nodeIndex32, uint32Array );\n\n\t\t} else {\n\n\t\t\tc1 = RIGHT_NODE( nodeIndex32, uint32Array );\n\t\t\tc2 = LEFT_NODE( nodeIndex32 );\n\n\t\t}\n\n\t\tconst c1Intersection = intersectRay( c1, float32Array, ray, boxIntersection );\n\t\tconst c1Result = c1Intersection ? raycastFirst( c1, geometry, side, ray ) : null;\n\n\t\t// if we got an intersection in the first node and it's closer than the second node's bounding\n\t\t// box, we don't need to consider the second node because it couldn't possibly be a better result\n\t\tif ( c1Result ) {\n\n\t\t\t// check if the point is within the second bounds\n\t\t\t// \"point\" is in the local frame of the bvh\n\t\t\tconst point = c1Result.point[ xyzAxis ];\n\t\t\tconst isOutside = leftToRight ?\n\t\t\t\tpoint <= float32Array[ c2 + splitAxis ] : // min bounding data\n\t\t\t\tpoint >= float32Array[ c2 + splitAxis + 3 ]; // max bounding data\n\n\t\t\tif ( isOutside ) {\n\n\t\t\t\treturn c1Result;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// either there was no intersection in the first node, or there could still be a closer\n\t\t// intersection in the second, so check the second node and then take the better of the two\n\t\tconst c2Intersection = intersectRay( c2, float32Array, ray, boxIntersection );\n\t\tconst c2Result = c2Intersection ? raycastFirst( c2, geometry, side, ray ) : null;\n\n\t\tif ( c1Result && c2Result ) {\n\n\t\t\treturn c1Result.distance <= c2Result.distance ? c1Result : c2Result;\n\n\t\t} else {\n\n\t\t\treturn c1Result || c2Result || null;\n\n\t\t}\n\n\t}\n\n}\n\nexport const shapecast = ( function () {\n\n\tlet _box1, _box2;\n\tconst boxStack = [];\n\tconst boxPool = new PrimitivePool( () => new Box3() );\n\n\treturn function shapecast( ...args ) {\n\n\t\t_box1 = boxPool.getPrimitive();\n\t\t_box2 = boxPool.getPrimitive();\n\t\tboxStack.push( _box1, _box2 );\n\n\t\tconst result = shapecastTraverse( ...args );\n\n\t\tboxPool.releasePrimitive( _box1 );\n\t\tboxPool.releasePrimitive( _box2 );\n\t\tboxStack.pop();\n\t\tboxStack.pop();\n\n\t\tconst length = boxStack.length;\n\t\tif ( length > 0 ) {\n\n\t\t\t_box2 = boxStack[ length - 1 ];\n\t\t\t_box1 = boxStack[ length - 2 ];\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\tfunction shapecastTraverse(\n\t\tnodeIndex32,\n\t\tgeometry,\n\t\tintersectsBoundsFunc,\n\t\tintersectsRangeFunc,\n\t\tnodeScoreFunc = null,\n\t\tnodeIndexByteOffset = 0, // offset for unique node identifier\n\t\tdepth = 0\n\t) {\n\n\t\t// Define these inside the function so it has access to the local variables needed\n\t\t// when converting to the buffer equivalents\n\t\tfunction getLeftOffset( nodeIndex32 ) {\n\n\t\t\tlet nodeIndex16 = nodeIndex32 * 2, uint16Array = _uint16Array, uint32Array = _uint32Array;\n\n\t\t\t// traverse until we find a leaf\n\t\t\twhile ( ! IS_LEAF( nodeIndex16, uint16Array ) ) {\n\n\t\t\t\tnodeIndex32 = LEFT_NODE( nodeIndex32 );\n\t\t\t\tnodeIndex16 = nodeIndex32 * 2;\n\n\t\t\t}\n\n\t\t\treturn OFFSET( nodeIndex32, uint32Array );\n\n\t\t}\n\n\t\tfunction getRightEndOffset( nodeIndex32 ) {\n\n\t\t\tlet nodeIndex16 = nodeIndex32 * 2, uint16Array = _uint16Array, uint32Array = _uint32Array;\n\n\t\t\t// traverse until we find a leaf\n\t\t\twhile ( ! IS_LEAF( nodeIndex16, uint16Array ) ) {\n\n\t\t\t\t// adjust offset to point to the right node\n\t\t\t\tnodeIndex32 = RIGHT_NODE( nodeIndex32, uint32Array );\n\t\t\t\tnodeIndex16 = nodeIndex32 * 2;\n\n\t\t\t}\n\n\t\t\t// return the end offset of the triangle range\n\t\t\treturn OFFSET( nodeIndex32, uint32Array ) + COUNT( nodeIndex16, uint16Array );\n\n\t\t}\n\n\t\tlet nodeIndex16 = nodeIndex32 * 2, float32Array = _float32Array, uint16Array = _uint16Array, uint32Array = _uint32Array;\n\n\t\tconst isLeaf = IS_LEAF( nodeIndex16, uint16Array );\n\t\tif ( isLeaf ) {\n\n\t\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\n\t\t\tconst count = COUNT( nodeIndex16, uint16Array );\n\t\t\tarrayToBox( BOUNDING_DATA_INDEX( nodeIndex32 ), float32Array, _box1 );\n\t\t\treturn intersectsRangeFunc( offset, count, false, depth, nodeIndexByteOffset + nodeIndex32, _box1 );\n\n\t\t} else {\n\n\t\t\tconst left = LEFT_NODE( nodeIndex32 );\n\t\t\tconst right = RIGHT_NODE( nodeIndex32, uint32Array );\n\t\t\tlet c1 = left;\n\t\t\tlet c2 = right;\n\n\t\t\tlet score1, score2;\n\t\t\tlet box1, box2;\n\t\t\tif ( nodeScoreFunc ) {\n\n\t\t\t\tbox1 = _box1;\n\t\t\t\tbox2 = _box2;\n\n\t\t\t\t// bounding data is not offset\n\t\t\t\tarrayToBox( BOUNDING_DATA_INDEX( c1 ), float32Array, box1 );\n\t\t\t\tarrayToBox( BOUNDING_DATA_INDEX( c2 ), float32Array, box2 );\n\n\t\t\t\tscore1 = nodeScoreFunc( box1 );\n\t\t\t\tscore2 = nodeScoreFunc( box2 );\n\n\t\t\t\tif ( score2 < score1 ) {\n\n\t\t\t\t\tc1 = right;\n\t\t\t\t\tc2 = left;\n\n\t\t\t\t\tconst temp = score1;\n\t\t\t\t\tscore1 = score2;\n\t\t\t\t\tscore2 = temp;\n\n\t\t\t\t\tbox1 = box2;\n\t\t\t\t\t// box2 is always set before use below\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Check box 1 intersection\n\t\t\tif ( ! box1 ) {\n\n\t\t\t\tbox1 = _box1;\n\t\t\t\tarrayToBox( BOUNDING_DATA_INDEX( c1 ), float32Array, box1 );\n\n\t\t\t}\n\n\t\t\tconst isC1Leaf = IS_LEAF( c1 * 2, uint16Array );\n\t\t\tconst c1Intersection = intersectsBoundsFunc( box1, isC1Leaf, score1, depth + 1, nodeIndexByteOffset + c1 );\n\n\t\t\tlet c1StopTraversal;\n\t\t\tif ( c1Intersection === CONTAINED ) {\n\n\t\t\t\tconst offset = getLeftOffset( c1 );\n\t\t\t\tconst end = getRightEndOffset( c1 );\n\t\t\t\tconst count = end - offset;\n\n\t\t\t\tc1StopTraversal = intersectsRangeFunc( offset, count, true, depth + 1, nodeIndexByteOffset + c1, box1 );\n\n\t\t\t} else {\n\n\t\t\t\tc1StopTraversal =\n\t\t\t\t\tc1Intersection &&\n\t\t\t\t\tshapecastTraverse(\n\t\t\t\t\t\tc1,\n\t\t\t\t\t\tgeometry,\n\t\t\t\t\t\tintersectsBoundsFunc,\n\t\t\t\t\t\tintersectsRangeFunc,\n\t\t\t\t\t\tnodeScoreFunc,\n\t\t\t\t\t\tnodeIndexByteOffset,\n\t\t\t\t\t\tdepth + 1\n\t\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( c1StopTraversal ) return true;\n\n\t\t\t// Check box 2 intersection\n\t\t\t// cached box2 will have been overwritten by previous traversal\n\t\t\tbox2 = _box2;\n\t\t\tarrayToBox( BOUNDING_DATA_INDEX( c2 ), float32Array, box2 );\n\n\t\t\tconst isC2Leaf = IS_LEAF( c2 * 2, uint16Array );\n\t\t\tconst c2Intersection = intersectsBoundsFunc( box2, isC2Leaf, score2, depth + 1, nodeIndexByteOffset + c2 );\n\n\t\t\tlet c2StopTraversal;\n\t\t\tif ( c2Intersection === CONTAINED ) {\n\n\t\t\t\tconst offset = getLeftOffset( c2 );\n\t\t\t\tconst end = getRightEndOffset( c2 );\n\t\t\t\tconst count = end - offset;\n\n\t\t\t\tc2StopTraversal = intersectsRangeFunc( offset, count, true, depth + 1, nodeIndexByteOffset + c2, box2 );\n\n\t\t\t} else {\n\n\t\t\t\tc2StopTraversal =\n\t\t\t\t\tc2Intersection &&\n\t\t\t\t\tshapecastTraverse(\n\t\t\t\t\t\tc2,\n\t\t\t\t\t\tgeometry,\n\t\t\t\t\t\tintersectsBoundsFunc,\n\t\t\t\t\t\tintersectsRangeFunc,\n\t\t\t\t\t\tnodeScoreFunc,\n\t\t\t\t\t\tnodeIndexByteOffset,\n\t\t\t\t\t\tdepth + 1\n\t\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( c2StopTraversal ) return true;\n\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n} )();\n\nexport const intersectsGeometry = ( function () {\n\n\tconst triangle = new ExtendedTriangle();\n\tconst triangle2 = new ExtendedTriangle();\n\tconst invertedMat = new Matrix4();\n\n\tconst obb = new OrientedBox();\n\tconst obb2 = new OrientedBox();\n\n\treturn function intersectsGeometry( nodeIndex32, geometry, otherGeometry, geometryToBvh, cachedObb = null ) {\n\n\t\tlet nodeIndex16 = nodeIndex32 * 2, float32Array = _float32Array, uint16Array = _uint16Array, uint32Array = _uint32Array;\n\n\t\tif ( cachedObb === null ) {\n\n\t\t\tif ( ! otherGeometry.boundingBox ) {\n\n\t\t\t\totherGeometry.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tobb.set( otherGeometry.boundingBox.min, otherGeometry.boundingBox.max, geometryToBvh );\n\t\t\tcachedObb = obb;\n\n\t\t}\n\n\t\tconst isLeaf = IS_LEAF( nodeIndex16, uint16Array );\n\t\tif ( isLeaf ) {\n\n\t\t\tconst thisGeometry = geometry;\n\t\t\tconst thisIndex = thisGeometry.index;\n\t\t\tconst thisPos = thisGeometry.attributes.position;\n\n\t\t\tconst index = otherGeometry.index;\n\t\t\tconst pos = otherGeometry.attributes.position;\n\n\t\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\n\t\t\tconst count = COUNT( nodeIndex16, uint16Array );\n\n\t\t\t// get the inverse of the geometry matrix so we can transform our triangles into the\n\t\t\t// geometry space we're trying to test. We assume there are fewer triangles being checked\n\t\t\t// here.\n\t\t\tinvertedMat.copy( geometryToBvh ).invert();\n\n\t\t\tif ( otherGeometry.boundsTree ) {\n\n\t\t\t\tarrayToBox( BOUNDING_DATA_INDEX( nodeIndex32 ), float32Array, obb2 );\n\t\t\t\tobb2.matrix.copy( invertedMat );\n\t\t\t\tobb2.needsUpdate = true;\n\n\t\t\t\tconst res = otherGeometry.boundsTree.shapecast( {\n\n\t\t\t\t\tintersectsBounds: box => obb2.intersectsBox( box ),\n\n\t\t\t\t\tintersectsTriangle: tri => {\n\n\t\t\t\t\t\ttri.a.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\ttri.b.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\ttri.c.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\ttri.needsUpdate = true;\n\n\t\t\t\t\t\tfor ( let i = offset * 3, l = ( count + offset ) * 3; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t// this triangle needs to be transformed into the current BVH coordinate frame\n\t\t\t\t\t\t\tsetTriangle( triangle2, i, thisIndex, thisPos );\n\t\t\t\t\t\t\ttriangle2.needsUpdate = true;\n\t\t\t\t\t\t\tif ( tri.intersectsTriangle( triangle2 ) ) {\n\n\t\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\treturn res;\n\n\t\t\t} else {\n\n\t\t\t\tfor ( let i = offset * 3, l = ( count + offset * 3 ); i < l; i += 3 ) {\n\n\t\t\t\t\t// this triangle needs to be transformed into the current BVH coordinate frame\n\t\t\t\t\tsetTriangle( triangle, i, thisIndex, thisPos );\n\t\t\t\t\ttriangle.a.applyMatrix4( invertedMat );\n\t\t\t\t\ttriangle.b.applyMatrix4( invertedMat );\n\t\t\t\t\ttriangle.c.applyMatrix4( invertedMat );\n\t\t\t\t\ttriangle.needsUpdate = true;\n\n\t\t\t\t\tfor ( let i2 = 0, l2 = index.count; i2 < l2; i2 += 3 ) {\n\n\t\t\t\t\t\tsetTriangle( triangle2, i2, index, pos );\n\t\t\t\t\t\ttriangle2.needsUpdate = true;\n\n\t\t\t\t\t\tif ( triangle.intersectsTriangle( triangle2 ) ) {\n\n\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst left = nodeIndex32 + 8;\n\t\t\tconst right = uint32Array[ nodeIndex32 + 6 ];\n\n\t\t\tarrayToBox( BOUNDING_DATA_INDEX( left ), float32Array, boundingBox );\n\t\t\tconst leftIntersection =\n\t\t\t\tcachedObb.intersectsBox( boundingBox ) &&\n\t\t\t\tintersectsGeometry( left, geometry, otherGeometry, geometryToBvh, cachedObb );\n\n\t\t\tif ( leftIntersection ) return true;\n\n\t\t\tarrayToBox( BOUNDING_DATA_INDEX( right ), float32Array, boundingBox );\n\t\t\tconst rightIntersection =\n\t\t\t\tcachedObb.intersectsBox( boundingBox ) &&\n\t\t\t\tintersectsGeometry( right, geometry, otherGeometry, geometryToBvh, cachedObb );\n\n\t\t\tif ( rightIntersection ) return true;\n\n\t\t\treturn false;\n\n\t\t}\n\n\t};\n\n} )();\n\nfunction intersectRay( nodeIndex32, array, ray, target ) {\n\n\tarrayToBox( nodeIndex32, array, boundingBox );\n\treturn ray.intersectBox( boundingBox, target );\n\n}\n\nconst bufferStack = [];\nlet _prevBuffer;\nlet _float32Array;\nlet _uint16Array;\nlet _uint32Array;\nexport function setBuffer( buffer ) {\n\n\tif ( _prevBuffer ) {\n\n\t\tbufferStack.push( _prevBuffer );\n\n\t}\n\n\t_prevBuffer = buffer;\n\t_float32Array = new Float32Array( buffer );\n\t_uint16Array = new Uint16Array( buffer );\n\t_uint32Array = new Uint32Array( buffer );\n\n}\n\nexport function clearBuffer() {\n\n\t_prevBuffer = null;\n\t_float32Array = null;\n\t_uint16Array = null;\n\t_uint32Array = null;\n\n\tif ( bufferStack.length ) {\n\n\t\tsetBuffer( bufferStack.pop() );\n\n\t}\n\n}\n", "import { Vector3, BufferAttribute, Box3, FrontSide, Matrix4 } from 'three';\nimport { CENTER, BYTES_PER_NODE, IS_LEAFNODE_FLAG } from './Constants.js';\nimport { buildPackedTree } from './buildFunctions.js';\nimport {\n\traycast,\n\traycastFirst,\n\tshapecast,\n\tintersectsGeometry,\n\tsetBuffer,\n\tclearBuffer,\n} from './castFunctions.js';\nimport { OrientedBox } from '../math/OrientedBox.js';\nimport { ExtendedTriangle } from '../math/ExtendedTriangle.js';\nimport { PrimitivePool } from '../utils/PrimitivePool.js';\nimport { arrayToBox } from '../utils/ArrayBoxUtilities.js';\nimport { iterateOverTriangles, setTriangle } from '../utils/TriangleUtilities.js';\n\nconst SKIP_GENERATION = Symbol( 'skip tree generation' );\n\nconst aabb = /* @__PURE__ */ new Box3();\nconst aabb2 = /* @__PURE__ */ new Box3();\nconst tempMatrix = /* @__PURE__ */ new Matrix4();\nconst obb = /* @__PURE__ */ new OrientedBox();\nconst obb2 = /* @__PURE__ */ new OrientedBox();\nconst temp = /* @__PURE__ */ new Vector3();\nconst temp1 = /* @__PURE__ */ new Vector3();\nconst temp2 = /* @__PURE__ */ new Vector3();\nconst temp3 = /* @__PURE__ */ new Vector3();\nconst temp4 = /* @__PURE__ */ new Vector3();\nconst tempBox = /* @__PURE__ */ new Box3();\nconst trianglePool = /* @__PURE__ */ new PrimitivePool( () => new ExtendedTriangle() );\n\nexport class MeshBVH {\n\n\tstatic serialize( bvh, options = {} ) {\n\n\t\tif ( options.isBufferGeometry ) {\n\n\t\t\tconsole.warn( 'MeshBVH.serialize: The arguments for the function have changed. See documentation for new signature.' );\n\n\t\t\treturn MeshBVH.serialize(\n\t\t\t\targuments[ 0 ],\n\t\t\t\t{\n\t\t\t\t\tcloneBuffers: arguments[ 2 ] === undefined ? true : arguments[ 2 ],\n\t\t\t\t}\n\t\t\t);\n\n\t\t}\n\n\t\toptions = {\n\t\t\tcloneBuffers: true,\n\t\t\t...options,\n\t\t};\n\n\t\tconst geometry = bvh.geometry;\n\t\tconst rootData = bvh._roots;\n\t\tconst indexAttribute = geometry.getIndex();\n\t\tlet result;\n\t\tif ( options.cloneBuffers ) {\n\n\t\t\tresult = {\n\t\t\t\troots: rootData.map( root => root.slice() ),\n\t\t\t\tindex: indexAttribute.array.slice(),\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tresult = {\n\t\t\t\troots: rootData,\n\t\t\t\tindex: indexAttribute.array,\n\t\t\t};\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tstatic deserialize( data, geometry, options = {} ) {\n\n\t\tif ( typeof options === 'boolean' ) {\n\n\t\t\tconsole.warn( 'MeshBVH.deserialize: The arguments for the function have changed. See documentation for new signature.' );\n\n\t\t\treturn MeshBVH.deserialize(\n\t\t\t\targuments[ 0 ],\n\t\t\t\targuments[ 1 ],\n\t\t\t\t{\n\t\t\t\t\tsetIndex: arguments[ 2 ] === undefined ? true : arguments[ 2 ],\n\t\t\t\t}\n\t\t\t);\n\n\t\t}\n\n\t\toptions = {\n\t\t\tsetIndex: true,\n\t\t\t...options,\n\t\t};\n\n\t\tconst { index, roots } = data;\n\t\tconst bvh = new MeshBVH( geometry, { ...options, [ SKIP_GENERATION ]: true } );\n\t\tbvh._roots = roots;\n\n\t\tif ( options.setIndex ) {\n\n\t\t\tconst indexAttribute = geometry.getIndex();\n\t\t\tif ( indexAttribute === null ) {\n\n\t\t\t\tconst newIndex = new BufferAttribute( data.index, 1, false );\n\t\t\t\tgeometry.setIndex( newIndex );\n\n\t\t\t} else if ( indexAttribute.array !== index ) {\n\n\t\t\t\tindexAttribute.array.set( index );\n\t\t\t\tindexAttribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn bvh;\n\n\t}\n\n\tconstructor( geometry, options = {} ) {\n\n\t\tif ( ! geometry.isBufferGeometry ) {\n\n\t\t\tthrow new Error( 'MeshBVH: Only BufferGeometries are supported.' );\n\n\t\t} else if ( geometry.index && geometry.index.isInterleavedBufferAttribute ) {\n\n\t\t\tthrow new Error( 'MeshBVH: InterleavedBufferAttribute is not supported for the index attribute.' );\n\n\t\t}\n\n\t\t// default options\n\t\toptions = Object.assign( {\n\n\t\t\tstrategy: CENTER,\n\t\t\tmaxDepth: 40,\n\t\t\tmaxLeafTris: 10,\n\t\t\tverbose: true,\n\t\t\tuseSharedArrayBuffer: false,\n\t\t\tsetBoundingBox: true,\n\t\t\tonProgress: null,\n\n\t\t\t// undocumented options\n\n\t\t\t// Whether to skip generating the tree. Used for deserialization.\n\t\t\t[ SKIP_GENERATION ]: false,\n\n\t\t}, options );\n\n\t\tif ( options.useSharedArrayBuffer && typeof SharedArrayBuffer === 'undefined' ) {\n\n\t\t\tthrow new Error( 'MeshBVH: SharedArrayBuffer is not available.' );\n\n\t\t}\n\n\t\tthis._roots = null;\n\t\tif ( ! options[ SKIP_GENERATION ] ) {\n\n\t\t\tthis._roots = buildPackedTree( geometry, options );\n\n\t\t\tif ( ! geometry.boundingBox && options.setBoundingBox ) {\n\n\t\t\t\tgeometry.boundingBox = this.getBoundingBox( new Box3() );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// retain references to the geometry so we can use them it without having to\n\t\t// take a geometry reference in every function.\n\t\tthis.geometry = geometry;\n\n\t}\n\n\trefit( nodeIndices = null ) {\n\n\t\tif ( nodeIndices && Array.isArray( nodeIndices ) ) {\n\n\t\t\tnodeIndices = new Set( nodeIndices );\n\n\t\t}\n\n\t\tconst geometry = this.geometry;\n\t\tconst indexArr = geometry.index.array;\n\t\tconst posAttr = geometry.attributes.position;\n\n\t\tlet buffer, uint32Array, uint16Array, float32Array;\n\t\tlet byteOffset = 0;\n\t\tconst roots = this._roots;\n\t\tfor ( let i = 0, l = roots.length; i < l; i ++ ) {\n\n\t\t\tbuffer = roots[ i ];\n\t\t\tuint32Array = new Uint32Array( buffer );\n\t\t\tuint16Array = new Uint16Array( buffer );\n\t\t\tfloat32Array = new Float32Array( buffer );\n\n\t\t\t_traverse( 0, byteOffset );\n\t\t\tbyteOffset += buffer.byteLength;\n\n\t\t}\n\n\t\tfunction _traverse( node32Index, byteOffset, force = false ) {\n\n\t\t\tconst node16Index = node32Index * 2;\n\t\t\tconst isLeaf = uint16Array[ node16Index + 15 ] === IS_LEAFNODE_FLAG;\n\t\t\tif ( isLeaf ) {\n\n\t\t\t\tconst offset = uint32Array[ node32Index + 6 ];\n\t\t\t\tconst count = uint16Array[ node16Index + 14 ];\n\n\t\t\t\tlet minx = Infinity;\n\t\t\t\tlet miny = Infinity;\n\t\t\t\tlet minz = Infinity;\n\t\t\t\tlet maxx = - Infinity;\n\t\t\t\tlet maxy = - Infinity;\n\t\t\t\tlet maxz = - Infinity;\n\n\t\t\t\tfor ( let i = 3 * offset, l = 3 * ( offset + count ); i < l; i ++ ) {\n\n\t\t\t\t\tconst index = indexArr[ i ];\n\t\t\t\t\tconst x = posAttr.getX( index );\n\t\t\t\t\tconst y = posAttr.getY( index );\n\t\t\t\t\tconst z = posAttr.getZ( index );\n\n\t\t\t\t\tif ( x < minx ) minx = x;\n\t\t\t\t\tif ( x > maxx ) maxx = x;\n\n\t\t\t\t\tif ( y < miny ) miny = y;\n\t\t\t\t\tif ( y > maxy ) maxy = y;\n\n\t\t\t\t\tif ( z < minz ) minz = z;\n\t\t\t\t\tif ( z > maxz ) maxz = z;\n\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tfloat32Array[ node32Index + 0 ] !== minx ||\n\t\t\t\t\tfloat32Array[ node32Index + 1 ] !== miny ||\n\t\t\t\t\tfloat32Array[ node32Index + 2 ] !== minz ||\n\n\t\t\t\t\tfloat32Array[ node32Index + 3 ] !== maxx ||\n\t\t\t\t\tfloat32Array[ node32Index + 4 ] !== maxy ||\n\t\t\t\t\tfloat32Array[ node32Index + 5 ] !== maxz\n\t\t\t\t) {\n\n\t\t\t\t\tfloat32Array[ node32Index + 0 ] = minx;\n\t\t\t\t\tfloat32Array[ node32Index + 1 ] = miny;\n\t\t\t\t\tfloat32Array[ node32Index + 2 ] = minz;\n\n\t\t\t\t\tfloat32Array[ node32Index + 3 ] = maxx;\n\t\t\t\t\tfloat32Array[ node32Index + 4 ] = maxy;\n\t\t\t\t\tfloat32Array[ node32Index + 5 ] = maxz;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst left = node32Index + 8;\n\t\t\t\tconst right = uint32Array[ node32Index + 6 ];\n\n\t\t\t\t// the identifying node indices provided by the shapecast function include offsets of all\n\t\t\t\t// root buffers to guarantee they're unique between roots so offset left and right indices here.\n\t\t\t\tconst offsetLeft = left + byteOffset;\n\t\t\t\tconst offsetRight = right + byteOffset;\n\t\t\t\tlet forceChildren = force;\n\t\t\t\tlet includesLeft = false;\n\t\t\t\tlet includesRight = false;\n\n\t\t\t\tif ( nodeIndices ) {\n\n\t\t\t\t\t// if we see that neither the left or right child are included in the set that need to be updated\n\t\t\t\t\t// then we assume that all children need to be updated.\n\t\t\t\t\tif ( ! forceChildren ) {\n\n\t\t\t\t\t\tincludesLeft = nodeIndices.has( offsetLeft );\n\t\t\t\t\t\tincludesRight = nodeIndices.has( offsetRight );\n\t\t\t\t\t\tforceChildren = ! includesLeft && ! includesRight;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tincludesLeft = true;\n\t\t\t\t\tincludesRight = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst traverseLeft = forceChildren || includesLeft;\n\t\t\t\tconst traverseRight = forceChildren || includesRight;\n\n\t\t\t\tlet leftChange = false;\n\t\t\t\tif ( traverseLeft ) {\n\n\t\t\t\t\tleftChange = _traverse( left, byteOffset, forceChildren );\n\n\t\t\t\t}\n\n\t\t\t\tlet rightChange = false;\n\t\t\t\tif ( traverseRight ) {\n\n\t\t\t\t\trightChange = _traverse( right, byteOffset, forceChildren );\n\n\t\t\t\t}\n\n\t\t\t\tconst didChange = leftChange || rightChange;\n\t\t\t\tif ( didChange ) {\n\n\t\t\t\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\tconst lefti = left + i;\n\t\t\t\t\t\tconst righti = right + i;\n\t\t\t\t\t\tconst minLeftValue = float32Array[ lefti ];\n\t\t\t\t\t\tconst maxLeftValue = float32Array[ lefti + 3 ];\n\t\t\t\t\t\tconst minRightValue = float32Array[ righti ];\n\t\t\t\t\t\tconst maxRightValue = float32Array[ righti + 3 ];\n\n\t\t\t\t\t\tfloat32Array[ node32Index + i ] = minLeftValue < minRightValue ? minLeftValue : minRightValue;\n\t\t\t\t\t\tfloat32Array[ node32Index + i + 3 ] = maxLeftValue > maxRightValue ? maxLeftValue : maxRightValue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn didChange;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttraverse( callback, rootIndex = 0 ) {\n\n\t\tconst buffer = this._roots[ rootIndex ];\n\t\tconst uint32Array = new Uint32Array( buffer );\n\t\tconst uint16Array = new Uint16Array( buffer );\n\t\t_traverse( 0 );\n\n\t\tfunction _traverse( node32Index, depth = 0 ) {\n\n\t\t\tconst node16Index = node32Index * 2;\n\t\t\tconst isLeaf = uint16Array[ node16Index + 15 ] === IS_LEAFNODE_FLAG;\n\t\t\tif ( isLeaf ) {\n\n\t\t\t\tconst offset = uint32Array[ node32Index + 6 ];\n\t\t\t\tconst count = uint16Array[ node16Index + 14 ];\n\t\t\t\tcallback( depth, isLeaf, new Float32Array( buffer, node32Index * 4, 6 ), offset, count );\n\n\t\t\t} else {\n\n\t\t\t\t// TODO: use node functions here\n\t\t\t\tconst left = node32Index + BYTES_PER_NODE / 4;\n\t\t\t\tconst right = uint32Array[ node32Index + 6 ];\n\t\t\t\tconst splitAxis = uint32Array[ node32Index + 7 ];\n\t\t\t\tconst stopTraversal = callback( depth, isLeaf, new Float32Array( buffer, node32Index * 4, 6 ), splitAxis );\n\n\t\t\t\tif ( ! stopTraversal ) {\n\n\t\t\t\t\t_traverse( left, depth + 1 );\n\t\t\t\t\t_traverse( right, depth + 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/* Core Cast Functions */\n\traycast( ray, materialOrSide = FrontSide ) {\n\n\t\tconst roots = this._roots;\n\t\tconst geometry = this.geometry;\n\t\tconst intersects = [];\n\t\tconst isMaterial = materialOrSide.isMaterial;\n\t\tconst isArrayMaterial = Array.isArray( materialOrSide );\n\n\t\tconst groups = geometry.groups;\n\t\tconst side = isMaterial ? materialOrSide.side : materialOrSide;\n\t\tfor ( let i = 0, l = roots.length; i < l; i ++ ) {\n\n\t\t\tconst materialSide = isArrayMaterial ? materialOrSide[ groups[ i ].materialIndex ].side : side;\n\t\t\tconst startCount = intersects.length;\n\n\t\t\tsetBuffer( roots[ i ] );\n\t\t\traycast( 0, geometry, materialSide, ray, intersects );\n\t\t\tclearBuffer();\n\n\t\t\tif ( isArrayMaterial ) {\n\n\t\t\t\tconst materialIndex = groups[ i ].materialIndex;\n\t\t\t\tfor ( let j = startCount, jl = intersects.length; j < jl; j ++ ) {\n\n\t\t\t\t\tintersects[ j ].face.materialIndex = materialIndex;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn intersects;\n\n\t}\n\n\traycastFirst( ray, materialOrSide = FrontSide ) {\n\n\t\tconst roots = this._roots;\n\t\tconst geometry = this.geometry;\n\t\tconst isMaterial = materialOrSide.isMaterial;\n\t\tconst isArrayMaterial = Array.isArray( materialOrSide );\n\n\t\tlet closestResult = null;\n\n\t\tconst groups = geometry.groups;\n\t\tconst side = isMaterial ? materialOrSide.side : materialOrSide;\n\t\tfor ( let i = 0, l = roots.length; i < l; i ++ ) {\n\n\t\t\tconst materialSide = isArrayMaterial ? materialOrSide[ groups[ i ].materialIndex ].side : side;\n\n\t\t\tsetBuffer( roots[ i ] );\n\t\t\tconst result = raycastFirst( 0, geometry, materialSide, ray );\n\t\t\tclearBuffer();\n\n\t\t\tif ( result != null && ( closestResult == null || result.distance < closestResult.distance ) ) {\n\n\t\t\t\tclosestResult = result;\n\t\t\t\tif ( isArrayMaterial ) {\n\n\t\t\t\t\tresult.face.materialIndex = groups[ i ].materialIndex;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn closestResult;\n\n\t}\n\n\tintersectsGeometry( otherGeometry, geomToMesh ) {\n\n\t\tconst geometry = this.geometry;\n\t\tlet result = false;\n\t\tfor ( const root of this._roots ) {\n\n\t\t\tsetBuffer( root );\n\t\t\tresult = intersectsGeometry( 0, geometry, otherGeometry, geomToMesh );\n\t\t\tclearBuffer();\n\n\t\t\tif ( result ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tshapecast( callbacks, _intersectsTriangleFunc, _orderNodesFunc ) {\n\n\t\tconst geometry = this.geometry;\n\t\tif ( callbacks instanceof Function ) {\n\n\t\t\tif ( _intersectsTriangleFunc ) {\n\n\t\t\t\t// Support the previous function signature that provided three sequential index buffer\n\t\t\t\t// indices here.\n\t\t\t\tconst originalTriangleFunc = _intersectsTriangleFunc;\n\t\t\t\t_intersectsTriangleFunc = ( tri, index, contained, depth ) => {\n\n\t\t\t\t\tconst i3 = index * 3;\n\t\t\t\t\treturn originalTriangleFunc( tri, i3, i3 + 1, i3 + 2, contained, depth );\n\n\t\t\t\t};\n\n\n\t\t\t}\n\n\t\t\tcallbacks = {\n\n\t\t\t\tboundsTraverseOrder: _orderNodesFunc,\n\t\t\t\tintersectsBounds: callbacks,\n\t\t\t\tintersectsTriangle: _intersectsTriangleFunc,\n\t\t\t\tintersectsRange: null,\n\n\t\t\t};\n\n\t\t\tconsole.warn( 'MeshBVH: Shapecast function signature has changed and now takes an object of callbacks as a second argument. See docs for new signature.' );\n\n\t\t}\n\n\t\tconst triangle = trianglePool.getPrimitive();\n\t\tlet {\n\t\t\tboundsTraverseOrder,\n\t\t\tintersectsBounds,\n\t\t\tintersectsRange,\n\t\t\tintersectsTriangle,\n\t\t} = callbacks;\n\n\t\tif ( intersectsRange && intersectsTriangle ) {\n\n\t\t\tconst originalIntersectsRange = intersectsRange;\n\t\t\tintersectsRange = ( offset, count, contained, depth, nodeIndex ) => {\n\n\t\t\t\tif ( ! originalIntersectsRange( offset, count, contained, depth, nodeIndex ) ) {\n\n\t\t\t\t\treturn iterateOverTriangles( offset, count, geometry, intersectsTriangle, contained, depth, triangle );\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t};\n\n\t\t} else if ( ! intersectsRange ) {\n\n\t\t\tif ( intersectsTriangle ) {\n\n\t\t\t\tintersectsRange = ( offset, count, contained, depth ) => {\n\n\t\t\t\t\treturn iterateOverTriangles( offset, count, geometry, intersectsTriangle, contained, depth, triangle );\n\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tintersectsRange = ( offset, count, contained ) => {\n\n\t\t\t\t\treturn contained;\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet result = false;\n\t\tlet byteOffset = 0;\n\t\tfor ( const root of this._roots ) {\n\n\t\t\tsetBuffer( root );\n\t\t\tresult = shapecast( 0, geometry, intersectsBounds, intersectsRange, boundsTraverseOrder, byteOffset );\n\t\t\tclearBuffer();\n\n\t\t\tif ( result ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tbyteOffset += root.byteLength;\n\n\t\t}\n\n\t\ttrianglePool.releasePrimitive( triangle );\n\n\t\treturn result;\n\n\t}\n\n\tbvhcast( otherBvh, matrixToLocal, callbacks ) {\n\n\t\t// BVHCast function for intersecting two BVHs against each other. Ultimately just uses two recursive shapecast calls rather\n\t\t// than an approach that walks down the tree (see bvhcast.js file for more info).\n\n\t\tlet {\n\t\t\tintersectsRanges,\n\t\t\tintersectsTriangles,\n\t\t} = callbacks;\n\n\t\tconst indexAttr = this.geometry.index;\n\t\tconst positionAttr = this.geometry.attributes.position;\n\n\t\tconst otherIndexAttr = otherBvh.geometry.index;\n\t\tconst otherPositionAttr = otherBvh.geometry.attributes.position;\n\n\t\ttempMatrix.copy( matrixToLocal ).invert();\n\n\t\tconst triangle = trianglePool.getPrimitive();\n\t\tconst triangle2 = trianglePool.getPrimitive();\n\n\t\tif ( intersectsTriangles ) {\n\n\t\t\tfunction iterateOverDoubleTriangles( offset1, count1, offset2, count2, depth1, index1, depth2, index2 ) {\n\n\t\t\t\tfor ( let i2 = offset2, l2 = offset2 + count2; i2 < l2; i2 ++ ) {\n\n\t\t\t\t\tsetTriangle( triangle2, i2 * 3, otherIndexAttr, otherPositionAttr );\n\t\t\t\t\ttriangle2.a.applyMatrix4( matrixToLocal );\n\t\t\t\t\ttriangle2.b.applyMatrix4( matrixToLocal );\n\t\t\t\t\ttriangle2.c.applyMatrix4( matrixToLocal );\n\t\t\t\t\ttriangle2.needsUpdate = true;\n\n\t\t\t\t\tfor ( let i1 = offset1, l1 = offset1 + count1; i1 < l1; i1 ++ ) {\n\n\t\t\t\t\t\tsetTriangle( triangle, i1 * 3, indexAttr, positionAttr );\n\t\t\t\t\t\ttriangle.needsUpdate = true;\n\n\t\t\t\t\t\tif ( intersectsTriangles( triangle, triangle2, i1, i2, depth1, index1, depth2, index2 ) ) {\n\n\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\tif ( intersectsRanges ) {\n\n\t\t\t\tconst originalIntersectsRanges = intersectsRanges;\n\t\t\t\tintersectsRanges = function ( offset1, count1, offset2, count2, depth1, index1, depth2, index2 ) {\n\n\t\t\t\t\tif ( ! originalIntersectsRanges( offset1, count1, offset2, count2, depth1, index1, depth2, index2 ) ) {\n\n\t\t\t\t\t\treturn iterateOverDoubleTriangles( offset1, count1, offset2, count2, depth1, index1, depth2, index2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tintersectsRanges = iterateOverDoubleTriangles;\n\n\t\t\t}\n\n\t\t}\n\n\t\totherBvh.getBoundingBox( aabb2 );\n\t\taabb2.applyMatrix4( matrixToLocal );\n\t\tconst result = this.shapecast( {\n\n\t\t\tintersectsBounds: box => aabb2.intersectsBox( box ),\n\n\t\t\tintersectsRange: ( offset1, count1, contained, depth1, nodeIndex1, box ) => {\n\n\t\t\t\taabb.copy( box );\n\t\t\t\taabb.applyMatrix4( tempMatrix );\n\t\t\t\treturn otherBvh.shapecast( {\n\n\t\t\t\t\tintersectsBounds: box => aabb.intersectsBox( box ),\n\n\t\t\t\t\tintersectsRange: ( offset2, count2, contained, depth2, nodeIndex2 ) => {\n\n\t\t\t\t\t\treturn intersectsRanges( offset1, count1, offset2, count2, depth1, nodeIndex1, depth2, nodeIndex2 );\n\n\t\t\t\t\t},\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} );\n\n\t\ttrianglePool.releasePrimitive( triangle );\n\t\ttrianglePool.releasePrimitive( triangle2 );\n\t\treturn result;\n\n\t}\n\n\t/* Derived Cast Functions */\n\tintersectsBox( box, boxToMesh ) {\n\n\t\tobb.set( box.min, box.max, boxToMesh );\n\t\tobb.needsUpdate = true;\n\n\t\treturn this.shapecast(\n\t\t\t{\n\t\t\t\tintersectsBounds: box => obb.intersectsBox( box ),\n\t\t\t\tintersectsTriangle: tri => obb.intersectsTriangle( tri )\n\t\t\t}\n\t\t);\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.shapecast(\n\t\t\t{\n\t\t\t\tintersectsBounds: box => sphere.intersectsBox( box ),\n\t\t\t\tintersectsTriangle: tri => tri.intersectsSphere( sphere )\n\t\t\t}\n\t\t);\n\n\t}\n\n\tclosestPointToGeometry( otherGeometry, geometryToBvh, target1 = { }, target2 = { }, minThreshold = 0, maxThreshold = Infinity ) {\n\n\t\tif ( ! otherGeometry.boundingBox ) {\n\n\t\t\totherGeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tobb.set( otherGeometry.boundingBox.min, otherGeometry.boundingBox.max, geometryToBvh );\n\t\tobb.needsUpdate = true;\n\n\t\tconst geometry = this.geometry;\n\t\tconst pos = geometry.attributes.position;\n\t\tconst index = geometry.index;\n\t\tconst otherPos = otherGeometry.attributes.position;\n\t\tconst otherIndex = otherGeometry.index;\n\t\tconst triangle = trianglePool.getPrimitive();\n\t\tconst triangle2 = trianglePool.getPrimitive();\n\n\t\tlet tempTarget1 = temp1;\n\t\tlet tempTargetDest1 = temp2;\n\t\tlet tempTarget2 = null;\n\t\tlet tempTargetDest2 = null;\n\n\t\tif ( target2 ) {\n\n\t\t\ttempTarget2 = temp3;\n\t\t\ttempTargetDest2 = temp4;\n\n\t\t}\n\n\t\tlet closestDistance = Infinity;\n\t\tlet closestDistanceTriIndex = null;\n\t\tlet closestDistanceOtherTriIndex = null;\n\t\ttempMatrix.copy( geometryToBvh ).invert();\n\t\tobb2.matrix.copy( tempMatrix );\n\t\tthis.shapecast(\n\t\t\t{\n\n\t\t\t\tboundsTraverseOrder: box => {\n\n\t\t\t\t\treturn obb.distanceToBox( box );\n\n\t\t\t\t},\n\n\t\t\t\tintersectsBounds: ( box, isLeaf, score ) => {\n\n\t\t\t\t\tif ( score < closestDistance && score < maxThreshold ) {\n\n\t\t\t\t\t\t// if we know the triangles of this bounds will be intersected next then\n\t\t\t\t\t\t// save the bounds to use during triangle checks.\n\t\t\t\t\t\tif ( isLeaf ) {\n\n\t\t\t\t\t\t\tobb2.min.copy( box.min );\n\t\t\t\t\t\t\tobb2.max.copy( box.max );\n\t\t\t\t\t\t\tobb2.needsUpdate = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t},\n\n\t\t\t\tintersectsRange: ( offset, count ) => {\n\n\t\t\t\t\tif ( otherGeometry.boundsTree ) {\n\n\t\t\t\t\t\t// if the other geometry has a bvh then use the accelerated path where we use shapecast to find\n\t\t\t\t\t\t// the closest bounds in the other geometry to check.\n\t\t\t\t\t\treturn otherGeometry.boundsTree.shapecast( {\n\t\t\t\t\t\t\tboundsTraverseOrder: box => {\n\n\t\t\t\t\t\t\t\treturn obb2.distanceToBox( box );\n\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tintersectsBounds: ( box, isLeaf, score ) => {\n\n\t\t\t\t\t\t\t\treturn score < closestDistance && score < maxThreshold;\n\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tintersectsRange: ( otherOffset, otherCount ) => {\n\n\t\t\t\t\t\t\t\tfor ( let i2 = otherOffset * 3, l2 = ( otherOffset + otherCount ) * 3; i2 < l2; i2 += 3 ) {\n\n\t\t\t\t\t\t\t\t\tsetTriangle( triangle2, i2, otherIndex, otherPos );\n\t\t\t\t\t\t\t\t\ttriangle2.a.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\t\t\t\ttriangle2.b.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\t\t\t\ttriangle2.c.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\t\t\t\ttriangle2.needsUpdate = true;\n\n\t\t\t\t\t\t\t\t\tfor ( let i = offset * 3, l = ( offset + count ) * 3; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\t\t\tsetTriangle( triangle, i, index, pos );\n\t\t\t\t\t\t\t\t\t\ttriangle.needsUpdate = true;\n\n\t\t\t\t\t\t\t\t\t\tconst dist = triangle.distanceToTriangle( triangle2, tempTarget1, tempTarget2 );\n\t\t\t\t\t\t\t\t\t\tif ( dist < closestDistance ) {\n\n\t\t\t\t\t\t\t\t\t\t\ttempTargetDest1.copy( tempTarget1 );\n\n\t\t\t\t\t\t\t\t\t\t\tif ( tempTargetDest2 ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\ttempTargetDest2.copy( tempTarget2 );\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tclosestDistance = dist;\n\t\t\t\t\t\t\t\t\t\t\tclosestDistanceTriIndex = i / 3;\n\t\t\t\t\t\t\t\t\t\t\tclosestDistanceOtherTriIndex = i2 / 3;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// stop traversal if we find a point that's under the given threshold\n\t\t\t\t\t\t\t\t\t\tif ( dist < minThreshold ) {\n\n\t\t\t\t\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// If no bounds tree then we'll just check every triangle.\n\t\t\t\t\t\tconst triCount = otherIndex ? otherIndex.count : otherPos.count;\n\t\t\t\t\t\tfor ( let i2 = 0, l2 = triCount; i2 < l2; i2 += 3 ) {\n\n\t\t\t\t\t\t\tsetTriangle( triangle2, i2, otherIndex, otherPos );\n\t\t\t\t\t\t\ttriangle2.a.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\t\ttriangle2.b.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\t\ttriangle2.c.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\t\ttriangle2.needsUpdate = true;\n\n\t\t\t\t\t\t\tfor ( let i = offset * 3, l = ( offset + count ) * 3; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\tsetTriangle( triangle, i, index, pos );\n\t\t\t\t\t\t\t\ttriangle.needsUpdate = true;\n\n\t\t\t\t\t\t\t\tconst dist = triangle.distanceToTriangle( triangle2, tempTarget1, tempTarget2 );\n\t\t\t\t\t\t\t\tif ( dist < closestDistance ) {\n\n\t\t\t\t\t\t\t\t\ttempTargetDest1.copy( tempTarget1 );\n\n\t\t\t\t\t\t\t\t\tif ( tempTargetDest2 ) {\n\n\t\t\t\t\t\t\t\t\t\ttempTargetDest2.copy( tempTarget2 );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tclosestDistance = dist;\n\t\t\t\t\t\t\t\t\tclosestDistanceTriIndex = i / 3;\n\t\t\t\t\t\t\t\t\tclosestDistanceOtherTriIndex = i2 / 3;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// stop traversal if we find a point that's under the given threshold\n\t\t\t\t\t\t\t\tif ( dist < minThreshold ) {\n\n\t\t\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t}\n\n\t\t);\n\n\t\ttrianglePool.releasePrimitive( triangle );\n\t\ttrianglePool.releasePrimitive( triangle2 );\n\n\t\tif ( closestDistance === Infinity ) return null;\n\n\t\tif ( ! target1.point ) target1.point = tempTargetDest1.clone();\n\t\telse target1.point.copy( tempTargetDest1 );\n\t\ttarget1.distance = closestDistance,\n\t\ttarget1.faceIndex = closestDistanceTriIndex;\n\n\t\tif ( target2 ) {\n\n\t\t\tif ( ! target2.point ) target2.point = tempTargetDest2.clone();\n\t\t\telse target2.point.copy( tempTargetDest2 );\n\t\t\ttarget2.point.applyMatrix4( tempMatrix );\n\t\t\ttempTargetDest1.applyMatrix4( tempMatrix );\n\t\t\ttarget2.distance = tempTargetDest1.sub( target2.point ).length();\n\t\t\ttarget2.faceIndex = closestDistanceOtherTriIndex;\n\n\t\t}\n\n\t\treturn target1;\n\n\t}\n\n\tclosestPointToPoint( point, target = { }, minThreshold = 0, maxThreshold = Infinity ) {\n\n\t\t// early out if under minThreshold\n\t\t// skip checking if over maxThreshold\n\t\t// set minThreshold = maxThreshold to quickly check if a point is within a threshold\n\t\t// returns Infinity if no value found\n\t\tconst minThresholdSq = minThreshold * minThreshold;\n\t\tconst maxThresholdSq = maxThreshold * maxThreshold;\n\t\tlet closestDistanceSq = Infinity;\n\t\tlet closestDistanceTriIndex = null;\n\t\tthis.shapecast(\n\n\t\t\t{\n\n\t\t\t\tboundsTraverseOrder: box => {\n\n\t\t\t\t\ttemp.copy( point ).clamp( box.min, box.max );\n\t\t\t\t\treturn temp.distanceToSquared( point );\n\n\t\t\t\t},\n\n\t\t\t\tintersectsBounds: ( box, isLeaf, score ) => {\n\n\t\t\t\t\treturn score < closestDistanceSq && score < maxThresholdSq;\n\n\t\t\t\t},\n\n\t\t\t\tintersectsTriangle: ( tri, triIndex ) => {\n\n\t\t\t\t\ttri.closestPointToPoint( point, temp );\n\t\t\t\t\tconst distSq = point.distanceToSquared( temp );\n\t\t\t\t\tif ( distSq < closestDistanceSq ) {\n\n\t\t\t\t\t\ttemp1.copy( temp );\n\t\t\t\t\t\tclosestDistanceSq = distSq;\n\t\t\t\t\t\tclosestDistanceTriIndex = triIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( distSq < minThresholdSq ) {\n\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t}\n\n\t\t);\n\n\t\tif ( closestDistanceSq === Infinity ) return null;\n\n\t\tconst closestDistance = Math.sqrt( closestDistanceSq );\n\n\t\tif ( ! target.point ) target.point = temp1.clone();\n\t\telse target.point.copy( temp1 );\n\t\ttarget.distance = closestDistance,\n\t\ttarget.faceIndex = closestDistanceTriIndex;\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\ttarget.makeEmpty();\n\n\t\tconst roots = this._roots;\n\t\troots.forEach( buffer => {\n\n\t\t\tarrayToBox( 0, new Float32Array( buffer ), tempBox );\n\t\t\ttarget.union( tempBox );\n\n\t\t} );\n\n\t\treturn target;\n\n\t}\n\n}\n", "import { LineBasicMaterial, BufferAttribute, Box3, Group, MeshBasicMaterial, Object3D, BufferGeometry } from 'three';\nimport { arrayToBox } from '../utils/ArrayBoxUtilities.js';\n\nconst boundingBox = /* @__PURE__ */ new Box3();\nclass MeshBVHRootVisualizer extends Object3D {\n\n\tget isMesh() {\n\n\t\treturn ! this.displayEdges;\n\n\t}\n\n\tget isLineSegments() {\n\n\t\treturn this.displayEdges;\n\n\t}\n\n\tget isLine() {\n\n\t\treturn this.displayEdges;\n\n\t}\n\n\tconstructor( mesh, material, depth = 10, group = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.material = material;\n\t\tthis.geometry = new BufferGeometry();\n\t\tthis.name = 'MeshBVHRootVisualizer';\n\t\tthis.depth = depth;\n\t\tthis.displayParents = false;\n\t\tthis.mesh = mesh;\n\t\tthis.displayEdges = true;\n\t\tthis._group = group;\n\n\t}\n\n\traycast() {}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst boundsTree = this.mesh.geometry.boundsTree;\n\t\tconst group = this._group;\n\t\tgeometry.dispose();\n\t\tthis.visible = false;\n\t\tif ( boundsTree ) {\n\n\t\t\t// count the number of bounds required\n\t\t\tconst targetDepth = this.depth - 1;\n\t\t\tconst displayParents = this.displayParents;\n\t\t\tlet boundsCount = 0;\n\t\t\tboundsTree.traverse( ( depth, isLeaf ) => {\n\n\t\t\t\tif ( depth === targetDepth || isLeaf ) {\n\n\t\t\t\t\tboundsCount ++;\n\t\t\t\t\treturn true;\n\n\t\t\t\t} else if ( displayParents ) {\n\n\t\t\t\t\tboundsCount ++;\n\n\t\t\t\t}\n\n\t\t\t}, group );\n\n\t\t\t// fill in the position buffer with the bounds corners\n\t\t\tlet posIndex = 0;\n\t\t\tconst positionArray = new Float32Array( 8 * 3 * boundsCount );\n\t\t\tboundsTree.traverse( ( depth, isLeaf, boundingData ) => {\n\n\t\t\t\tconst terminate = depth === targetDepth || isLeaf;\n\t\t\t\tif ( terminate || displayParents ) {\n\n\t\t\t\t\tarrayToBox( 0, boundingData, boundingBox );\n\n\t\t\t\t\tconst { min, max } = boundingBox;\n\t\t\t\t\tfor ( let x = - 1; x <= 1; x += 2 ) {\n\n\t\t\t\t\t\tconst xVal = x < 0 ? min.x : max.x;\n\t\t\t\t\t\tfor ( let y = - 1; y <= 1; y += 2 ) {\n\n\t\t\t\t\t\t\tconst yVal = y < 0 ? min.y : max.y;\n\t\t\t\t\t\t\tfor ( let z = - 1; z <= 1; z += 2 ) {\n\n\t\t\t\t\t\t\t\tconst zVal = z < 0 ? min.z : max.z;\n\t\t\t\t\t\t\t\tpositionArray[ posIndex + 0 ] = xVal;\n\t\t\t\t\t\t\t\tpositionArray[ posIndex + 1 ] = yVal;\n\t\t\t\t\t\t\t\tpositionArray[ posIndex + 2 ] = zVal;\n\n\t\t\t\t\t\t\t\tposIndex += 3;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn terminate;\n\n\t\t\t\t}\n\n\t\t\t}, group );\n\n\t\t\tlet indexArray;\n\t\t\tlet indices;\n\t\t\tif ( this.displayEdges ) {\n\n\t\t\t\t// fill in the index buffer to point to the corner points\n\t\t\t\tindices = new Uint8Array( [\n\t\t\t\t\t// x axis\n\t\t\t\t\t0, 4,\n\t\t\t\t\t1, 5,\n\t\t\t\t\t2, 6,\n\t\t\t\t\t3, 7,\n\n\t\t\t\t\t// y axis\n\t\t\t\t\t0, 2,\n\t\t\t\t\t1, 3,\n\t\t\t\t\t4, 6,\n\t\t\t\t\t5, 7,\n\n\t\t\t\t\t// z axis\n\t\t\t\t\t0, 1,\n\t\t\t\t\t2, 3,\n\t\t\t\t\t4, 5,\n\t\t\t\t\t6, 7,\n\t\t\t\t] );\n\n\t\t\t} else {\n\n\t\t\t\tindices = new Uint8Array( [\n\n\t\t\t\t\t// X-, X+\n\t\t\t\t\t0, 1, 2,\n\t\t\t\t\t2, 1, 3,\n\n\t\t\t\t\t4, 6, 5,\n\t\t\t\t\t6, 7, 5,\n\n\t\t\t\t\t// Y-, Y+\n\t\t\t\t\t1, 4, 5,\n\t\t\t\t\t0, 4, 1,\n\n\t\t\t\t\t2, 3, 6,\n\t\t\t\t\t3, 7, 6,\n\n\t\t\t\t\t// Z-, Z+\n\t\t\t\t\t0, 2, 4,\n\t\t\t\t\t2, 6, 4,\n\n\t\t\t\t\t1, 5, 3,\n\t\t\t\t\t3, 5, 7,\n\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t\tif ( positionArray.length > 65535 ) {\n\n\t\t\t\tindexArray = new Uint32Array( indices.length * boundsCount );\n\n\t\t\t} else {\n\n\t\t\t\tindexArray = new Uint16Array( indices.length * boundsCount );\n\n\t\t\t}\n\n\t\t\tconst indexLength = indices.length;\n\t\t\tfor ( let i = 0; i < boundsCount; i ++ ) {\n\n\t\t\t\tconst posOffset = i * 8;\n\t\t\t\tconst indexOffset = i * indexLength;\n\t\t\t\tfor ( let j = 0; j < indexLength; j ++ ) {\n\n\t\t\t\t\tindexArray[ indexOffset + j ] = posOffset + indices[ j ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// update the geometry\n\t\t\tgeometry.setIndex(\n\t\t\t\tnew BufferAttribute( indexArray, 1, false ),\n\t\t\t);\n\t\t\tgeometry.setAttribute(\n\t\t\t\t'position',\n\t\t\t\tnew BufferAttribute( positionArray, 3, false ),\n\t\t\t);\n\t\t\tthis.visible = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass MeshBVHVisualizer extends Group {\n\n\tget color() {\n\n\t\treturn this.edgeMaterial.color;\n\n\t}\n\n\tget opacity() {\n\n\t\treturn this.edgeMaterial.opacity;\n\n\t}\n\n\tset opacity( v ) {\n\n\t\tthis.edgeMaterial.opacity = v;\n\t\tthis.meshMaterial.opacity = v;\n\n\t}\n\n\tconstructor( mesh, depth = 10 ) {\n\n\t\tsuper();\n\n\t\tthis.name = 'MeshBVHVisualizer';\n\t\tthis.depth = depth;\n\t\tthis.mesh = mesh;\n\t\tthis.displayParents = false;\n\t\tthis.displayEdges = true;\n\t\tthis._roots = [];\n\n\t\tconst edgeMaterial = new LineBasicMaterial( {\n\t\t\tcolor: 0x00FF88,\n\t\t\ttransparent: true,\n\t\t\topacity: 0.3,\n\t\t\tdepthWrite: false,\n\t\t} );\n\n\t\tconst meshMaterial = new MeshBasicMaterial( {\n\t\t\tcolor: 0x00FF88,\n\t\t\ttransparent: true,\n\t\t\topacity: 0.3,\n\t\t\tdepthWrite: false,\n\t\t} );\n\n\t\tmeshMaterial.color = edgeMaterial.color;\n\n\t\tthis.edgeMaterial = edgeMaterial;\n\t\tthis.meshMaterial = meshMaterial;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate() {\n\n\t\tconst bvh = this.mesh.geometry.boundsTree;\n\t\tconst totalRoots = bvh ? bvh._roots.length : 0;\n\t\twhile ( this._roots.length > totalRoots ) {\n\n\t\t\tconst root = this._roots.pop();\n\t\t\troot.geometry.dispose();\n\t\t\tthis.remove( root );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < totalRoots; i ++ ) {\n\n\t\t\tif ( i >= this._roots.length ) {\n\n\t\t\t\tconst root = new MeshBVHRootVisualizer( this.mesh, this.edgeMaterial, this.depth, i );\n\t\t\t\tthis.add( root );\n\t\t\t\tthis._roots.push( root );\n\n\t\t\t}\n\n\t\t\tconst root = this._roots[ i ];\n\t\t\troot.depth = this.depth;\n\t\t\troot.mesh = this.mesh;\n\t\t\troot.displayParents = this.displayParents;\n\t\t\troot.displayEdges = this.displayEdges;\n\t\t\troot.material = this.displayEdges ? this.edgeMaterial : this.meshMaterial;\n\t\t\troot.update();\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( ...args ) {\n\n\t\tthis.position.copy( this.mesh.position );\n\t\tthis.rotation.copy( this.mesh.rotation );\n\t\tthis.scale.copy( this.mesh.scale );\n\n\t\tsuper.updateMatrixWorld( ...args );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.depth = source.depth;\n\t\tthis.mesh = source.mesh;\n\n\t}\n\n\tclone() {\n\n\t\treturn new MeshBVHVisualizer( this.mesh, this.depth );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.edgeMaterial.dispose();\n\t\tthis.meshMaterial.dispose();\n\n\t\tconst children = this.children;\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].geometry.dispose();\n\n\t\t}\n\n\t}\n\n}\n\n\nexport { MeshBVHVisualizer };\n", "import { Box3, Vector3 } from 'three';\nimport { TRAVERSAL_COST, TRIANGLE_INTERSECT_COST } from '../core/Constants.js';\nimport { arrayToBox } from '../utils/ArrayBoxUtilities.js';\n\nconst _box1 = /* @__PURE__ */ new Box3();\nconst _box2 = /* @__PURE__ */ new Box3();\nconst _vec = /* @__PURE__ */ new Vector3();\n\n// https://stackoverflow.com/questions/1248302/how-to-get-the-size-of-a-javascript-object\nfunction getPrimitiveSize( el ) {\n\n\tswitch ( typeof el ) {\n\n\t\tcase 'number':\n\t\t\treturn 8;\n\t\tcase 'string':\n\t\t\treturn el.length * 2;\n\t\tcase 'boolean':\n\t\t\treturn 4;\n\t\tdefault:\n\t\t\treturn 0;\n\n\t}\n\n}\n\nfunction isTypedArray( arr ) {\n\n\tconst regex = /(Uint|Int|Float)(8|16|32)Array/;\n\treturn regex.test( arr.constructor.name );\n\n}\n\nfunction getRootExtremes( bvh, group ) {\n\n\tconst result = {\n\t\tnodeCount: 0,\n\t\tleafNodeCount: 0,\n\n\t\tdepth: {\n\t\t\tmin: Infinity, max: - Infinity\n\t\t},\n\t\ttris: {\n\t\t\tmin: Infinity, max: - Infinity\n\t\t},\n\t\tsplits: [ 0, 0, 0 ],\n\t\tsurfaceAreaScore: 0,\n\t};\n\n\tbvh.traverse( ( depth, isLeaf, boundingData, offsetOrSplit, count ) => {\n\n\t\tconst l0 = boundingData[ 0 + 3 ] - boundingData[ 0 ];\n\t\tconst l1 = boundingData[ 1 + 3 ] - boundingData[ 1 ];\n\t\tconst l2 = boundingData[ 2 + 3 ] - boundingData[ 2 ];\n\n\t\tconst surfaceArea = 2 * ( l0 * l1 + l1 * l2 + l2 * l0 );\n\n\t\tresult.nodeCount ++;\n\t\tif ( isLeaf ) {\n\n\t\t\tresult.leafNodeCount ++;\n\n\t\t\tresult.depth.min = Math.min( depth, result.depth.min );\n\t\t\tresult.depth.max = Math.max( depth, result.depth.max );\n\n\t\t\tresult.tris.min = Math.min( count, result.tris.min );\n\t\t\tresult.tris.max = Math.max( count, result.tris.max );\n\n\t\t\tresult.surfaceAreaScore += surfaceArea * TRIANGLE_INTERSECT_COST * count;\n\n\t\t} else {\n\n\t\t\tresult.splits[ offsetOrSplit ] ++;\n\n\t\t\tresult.surfaceAreaScore += surfaceArea * TRAVERSAL_COST;\n\n\t\t}\n\n\t}, group );\n\n\t// If there are no leaf nodes because the tree hasn't finished generating yet.\n\tif ( result.tris.min === Infinity ) {\n\n\t\tresult.tris.min = 0;\n\t\tresult.tris.max = 0;\n\n\t}\n\n\tif ( result.depth.min === Infinity ) {\n\n\t\tresult.depth.min = 0;\n\t\tresult.depth.max = 0;\n\n\t}\n\n\treturn result;\n\n}\n\nfunction getBVHExtremes( bvh ) {\n\n\treturn bvh._roots.map( ( root, i ) => getRootExtremes( bvh, i ) );\n\n}\n\nfunction estimateMemoryInBytes( obj ) {\n\n\tconst traversed = new Set();\n\tconst stack = [ obj ];\n\tlet bytes = 0;\n\n\twhile ( stack.length ) {\n\n\t\tconst curr = stack.pop();\n\t\tif ( traversed.has( curr ) ) {\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\ttraversed.add( curr );\n\n\t\tfor ( let key in curr ) {\n\n\t\t\tif ( ! curr.hasOwnProperty( key ) ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tbytes += getPrimitiveSize( key );\n\n\t\t\tconst value = curr[ key ];\n\t\t\tif ( value && ( typeof value === 'object' || typeof value === 'function' ) ) {\n\n\t\t\t\tif ( isTypedArray( value ) ) {\n\n\t\t\t\t\tbytes += value.byteLength;\n\n\t\t\t\t} else if ( value instanceof ArrayBuffer ) {\n\n\t\t\t\t\tbytes += value.byteLength;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstack.push( value );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tbytes += getPrimitiveSize( value );\n\n\t\t\t}\n\n\n\t\t}\n\n\t}\n\n\treturn bytes;\n\n}\n\nfunction validateBounds( bvh ) {\n\n\tconst geometry = bvh.geometry;\n\tconst depthStack = [];\n\tconst index = geometry.index;\n\tconst position = geometry.getAttribute( 'position' );\n\tlet passes = true;\n\n\tbvh.traverse( ( depth, isLeaf, boundingData, offset, count ) => {\n\n\t\tconst info = {\n\t\t\tdepth,\n\t\t\tisLeaf,\n\t\t\tboundingData,\n\t\t\toffset,\n\t\t\tcount,\n\t\t};\n\t\tdepthStack[ depth ] = info;\n\n\t\tarrayToBox( 0, boundingData, _box1 );\n\t\tconst parent = depthStack[ depth - 1 ];\n\n\t\tif ( isLeaf ) {\n\n\t\t\t// check triangles\n\t\t\tfor ( let i = offset * 3, l = ( offset + count ) * 3; i < l; i += 3 ) {\n\n\t\t\t\tconst i0 = index.getX( i );\n\t\t\t\tconst i1 = index.getX( i + 1 );\n\t\t\t\tconst i2 = index.getX( i + 2 );\n\n\t\t\t\tlet isContained;\n\n\t\t\t\t_vec.fromBufferAttribute( position, i0 );\n\t\t\t\tisContained = _box1.containsPoint( _vec );\n\n\t\t\t\t_vec.fromBufferAttribute( position, i1 );\n\t\t\t\tisContained = isContained && _box1.containsPoint( _vec );\n\n\t\t\t\t_vec.fromBufferAttribute( position, i2 );\n\t\t\t\tisContained = isContained && _box1.containsPoint( _vec );\n\n\t\t\t\tconsole.assert( isContained, 'Leaf bounds does not fully contain triangle.' );\n\t\t\t\tpasses = passes && isContained;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parent ) {\n\n\t\t\t// check if my bounds fit in my parents\n\t\t\tarrayToBox( 0, boundingData, _box2 );\n\n\t\t\tconst isContained = _box2.containsBox( _box1 );\n\t\t\tconsole.assert( isContained, 'Parent bounds does not fully contain child.' );\n\t\t\tpasses = passes && isContained;\n\n\t\t}\n\n\t} );\n\n\treturn passes;\n\n}\n\n// Returns a simple, human readable object that represents the BVH.\nfunction getJSONStructure( bvh ) {\n\n\tconst depthStack = [];\n\n\tbvh.traverse( ( depth, isLeaf, boundingData, offset, count ) => {\n\n\t\tconst info = {\n\t\t\tbounds: arrayToBox( 0, boundingData, new Box3() ),\n\t\t};\n\n\t\tif ( isLeaf ) {\n\n\t\t\tinfo.count = count;\n\t\t\tinfo.offset = offset;\n\n\t\t} else {\n\n\t\t\tinfo.left = null;\n\t\t\tinfo.right = null;\n\n\t\t}\n\n\t\tdepthStack[ depth ] = info;\n\n\t\t// traversal hits the left then right node\n\t\tconst parent = depthStack[ depth - 1 ];\n\t\tif ( parent ) {\n\n\t\t\tif ( parent.left === null ) {\n\n\t\t\t\tparent.left = info;\n\n\t\t\t} else {\n\n\t\t\t\tparent.right = info;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\treturn depthStack[ 0 ];\n\n}\n\nexport { estimateMemoryInBytes, getBVHExtremes, validateBounds, getJSONStructure };\n", "import { Ray, Matrix4, Mesh } from 'three';\nimport { convertRaycastIntersect } from './GeometryRayIntersectUtilities.js';\nimport { MeshBVH } from '../core/MeshBVH.js';\n\nconst ray = /* @__PURE__ */ new Ray();\nconst tmpInverseMatrix = /* @__PURE__ */ new Matrix4();\nconst origMeshRaycastFunc = Mesh.prototype.raycast;\n\nexport function acceleratedRaycast( raycaster, intersects ) {\n\n\tif ( this.geometry.boundsTree ) {\n\n\t\tif ( this.material === undefined ) return;\n\n\t\ttmpInverseMatrix.copy( this.matrixWorld ).invert();\n\t\tray.copy( raycaster.ray ).applyMatrix4( tmpInverseMatrix );\n\n\t\tconst bvh = this.geometry.boundsTree;\n\t\tif ( raycaster.firstHitOnly === true ) {\n\n\t\t\tconst hit = convertRaycastIntersect( bvh.raycastFirst( ray, this.material ), this, raycaster );\n\t\t\tif ( hit ) {\n\n\t\t\t\tintersects.push( hit );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst hits = bvh.raycast( ray, this.material );\n\t\t\tfor ( let i = 0, l = hits.length; i < l; i ++ ) {\n\n\t\t\t\tconst hit = convertRaycastIntersect( hits[ i ], this, raycaster );\n\t\t\t\tif ( hit ) {\n\n\t\t\t\t\tintersects.push( hit );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\torigMeshRaycastFunc.call( this, raycaster, intersects );\n\n\t}\n\n}\n\nexport function computeBoundsTree( options ) {\n\n\tthis.boundsTree = new MeshBVH( this, options );\n\treturn this.boundsTree;\n\n}\n\nexport function disposeBoundsTree() {\n\n\tthis.boundsTree = null;\n\n}\n", "import {\n\tDataTexture,\n\tFloatType,\n\tIntType,\n\tUnsignedIntType,\n\tByteType,\n\tUnsignedByteType,\n\tShortType,\n\tUnsignedShortType,\n\n\tRedFormat,\n\tRGFormat,\n\tRGBAFormat,\n\n\tRedIntegerFormat,\n\tRGIntegerFormat,\n\tRGBAIntegerFormat,\n\n\tNearestFilter,\n} from 'three';\n\nfunction countToStringFormat( count ) {\n\n\tswitch ( count ) {\n\n\t\tcase 1: return 'R';\n\t\tcase 2: return 'RG';\n\t\tcase 3: return 'RGBA';\n\t\tcase 4: return 'RGBA';\n\n\t}\n\n\tthrow new Error();\n\n}\n\nfunction countToFormat( count ) {\n\n\tswitch ( count ) {\n\n\t\tcase 1: return RedFormat;\n\t\tcase 2: return RGFormat;\n\t\tcase 3: return RGBAFormat;\n\t\tcase 4: return RGBAFormat;\n\n\t}\n\n}\n\nfunction countToIntFormat( count ) {\n\n\tswitch ( count ) {\n\n\t\tcase 1: return RedIntegerFormat;\n\t\tcase 2: return RGIntegerFormat;\n\t\tcase 3: return RGBAIntegerFormat;\n\t\tcase 4: return RGBAIntegerFormat;\n\n\t}\n\n}\n\nexport class VertexAttributeTexture extends DataTexture {\n\n\tconstructor() {\n\n\t\tsuper();\n\t\tthis.minFilter = NearestFilter;\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.generateMipmaps = false;\n\t\tthis.overrideItemSize = null;\n\t\tthis._forcedType = null;\n\n\t}\n\n\tupdateFrom( attr ) {\n\n\t\tconst overrideItemSize = this.overrideItemSize;\n\t\tconst originalItemSize = attr.itemSize;\n\t\tconst originalCount = attr.count;\n\t\tif ( overrideItemSize !== null ) {\n\n\t\t\tif ( ( originalItemSize * originalCount ) % overrideItemSize !== 0.0 ) {\n\n\t\t\t\tthrow new Error( 'VertexAttributeTexture: overrideItemSize must divide evenly into buffer length.' );\n\n\t\t\t}\n\n\t\t\tattr.itemSize = overrideItemSize;\n\t\t\tattr.count = originalCount * originalItemSize / overrideItemSize;\n\n\t\t}\n\n\t\tconst itemSize = attr.itemSize;\n\t\tconst count = attr.count;\n\t\tconst normalized = attr.normalized;\n\t\tconst originalBufferCons = attr.array.constructor;\n\t\tconst byteCount = originalBufferCons.BYTES_PER_ELEMENT;\n\t\tlet targetType = this._forcedType;\n\t\tlet finalStride = itemSize;\n\n\t\t// derive the type of texture this should be in the shader\n\t\tif ( targetType === null ) {\n\n\t\t\tswitch ( originalBufferCons ) {\n\n\t\t\t\tcase Float32Array:\n\t\t\t\t\ttargetType = FloatType;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Uint8Array:\n\t\t\t\tcase Uint16Array:\n\t\t\t\tcase Uint32Array:\n\t\t\t\t\ttargetType = UnsignedIntType;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Int8Array:\n\t\t\t\tcase Int16Array:\n\t\t\t\tcase Int32Array:\n\t\t\t\t\ttargetType = IntType;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// get the target format to store the texture as\n\t\tlet type, format, normalizeValue, targetBufferCons;\n\t\tlet internalFormat = countToStringFormat( itemSize );\n\t\tswitch ( targetType ) {\n\n\t\t\tcase FloatType:\n\t\t\t\tnormalizeValue = 1.0;\n\t\t\t\tformat = countToFormat( itemSize );\n\n\t\t\t\tif ( normalized && byteCount === 1 ) {\n\n\t\t\t\t\ttargetBufferCons = originalBufferCons;\n\t\t\t\t\tinternalFormat += '8';\n\n\t\t\t\t\tif ( originalBufferCons === Uint8Array ) {\n\n\t\t\t\t\t\ttype = UnsignedByteType;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttype = ByteType;\n\t\t\t\t\t\tinternalFormat += '_SNORM';\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetBufferCons = Float32Array;\n\t\t\t\t\tinternalFormat += '32F';\n\t\t\t\t\ttype = FloatType;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase IntType:\n\t\t\t\tinternalFormat += byteCount * 8 + 'I';\n\t\t\t\tnormalizeValue = normalized ? Math.pow( 2, originalBufferCons.BYTES_PER_ELEMENT * 8 - 1 ) : 1.0;\n\t\t\t\tformat = countToIntFormat( itemSize );\n\n\t\t\t\tif ( byteCount === 1 ) {\n\n\t\t\t\t\ttargetBufferCons = Int8Array;\n\t\t\t\t\ttype = ByteType;\n\n\t\t\t\t} else if ( byteCount === 2 ) {\n\n\t\t\t\t\ttargetBufferCons = Int16Array;\n\t\t\t\t\ttype = ShortType;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetBufferCons = Int32Array;\n\t\t\t\t\ttype = IntType;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase UnsignedIntType:\n\t\t\t\tinternalFormat += byteCount * 8 + 'UI';\n\t\t\t\tnormalizeValue = normalized ? Math.pow( 2, originalBufferCons.BYTES_PER_ELEMENT * 8 - 1 ) : 1.0;\n\t\t\t\tformat = countToIntFormat( itemSize );\n\n\t\t\t\tif ( byteCount === 1 ) {\n\n\t\t\t\t\ttargetBufferCons = Uint8Array;\n\t\t\t\t\ttype = UnsignedByteType;\n\n\t\t\t\t} else if ( byteCount === 2 ) {\n\n\t\t\t\t\ttargetBufferCons = Uint16Array;\n\t\t\t\t\ttype = UnsignedShortType;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetBufferCons = Uint32Array;\n\t\t\t\t\ttype = UnsignedIntType;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t// there will be a mismatch between format length and final length because\n\t\t// RGBFormat and RGBIntegerFormat was removed\n\t\tif ( finalStride === 3 && ( format === RGBAFormat || format === RGBAIntegerFormat ) ) {\n\n\t\t\tfinalStride = 4;\n\n\t\t}\n\n\t\t// copy the data over to the new texture array\n\t\tconst dimension = Math.ceil( Math.sqrt( count ) );\n\t\tconst length = finalStride * dimension * dimension;\n\t\tconst dataArray = new targetBufferCons( length );\n\n\t\t// temporarily set the normalized state to false since we have custom normalization logic\n\t\tconst originalNormalized = attr.normalized;\n\t\tattr.normalized = false;\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tconst ii = finalStride * i;\n\t\t\tdataArray[ ii ] = attr.getX( i ) / normalizeValue;\n\n\t\t\tif ( itemSize >= 2 ) {\n\n\t\t\t\tdataArray[ ii + 1 ] = attr.getY( i ) / normalizeValue;\n\n\t\t\t}\n\n\t\t\tif ( itemSize >= 3 ) {\n\n\t\t\t\tdataArray[ ii + 2 ] = attr.getZ( i ) / normalizeValue;\n\n\t\t\t\tif ( finalStride === 4 ) {\n\n\t\t\t\t\tdataArray[ ii + 3 ] = 1.0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( itemSize >= 4 ) {\n\n\t\t\t\tdataArray[ ii + 3 ] = attr.getW( i ) / normalizeValue;\n\n\t\t\t}\n\n\t\t}\n\n\t\tattr.normalized = originalNormalized;\n\n\t\tthis.internalFormat = internalFormat;\n\t\tthis.format = format;\n\t\tthis.type = type;\n\t\tthis.image.width = dimension;\n\t\tthis.image.height = dimension;\n\t\tthis.image.data = dataArray;\n\t\tthis.needsUpdate = true;\n\t\tthis.dispose();\n\n\t\tattr.itemSize = originalItemSize;\n\t\tattr.count = originalCount;\n\n\t}\n\n}\n\nexport class UIntVertexAttributeTexture extends VertexAttributeTexture {\n\n\tconstructor() {\n\n\t\tsuper();\n\t\tthis._forcedType = UnsignedIntType;\n\n\t}\n\n}\n\nexport class IntVertexAttributeTexture extends VertexAttributeTexture {\n\n\tconstructor() {\n\n\t\tsuper();\n\t\tthis._forcedType = IntType;\n\n\t}\n\n\n}\n\nexport class FloatVertexAttributeTexture extends VertexAttributeTexture {\n\n\tconstructor() {\n\n\t\tsuper();\n\t\tthis._forcedType = FloatType;\n\n\t}\n\n}\n", "import {\n\tDataTexture,\n\tFloatType,\n\tUnsignedIntType,\n\tRGBAFormat,\n\tRGIntegerFormat,\n\tNearestFilter,\n} from 'three';\nimport {\n\tFloatVertexAttributeTexture,\n\tUIntVertexAttributeTexture,\n} from './VertexAttributeTexture.js';\nimport { BYTES_PER_NODE } from '../core/Constants.js';\nimport {\n\tBOUNDING_DATA_INDEX,\n\tCOUNT,\n\tIS_LEAF,\n\tRIGHT_NODE,\n\tOFFSET,\n\tSPLIT_AXIS,\n} from '../core/nodeBufferFunctions.js';\n\nfunction bvhToTextures( bvh, boundsTexture, contentsTexture ) {\n\n\tconst roots = bvh._roots;\n\n\tif ( roots.length !== 1 ) {\n\n\t\tthrow new Error( 'MeshBVHUniformStruct: Multi-root BVHs not supported.' );\n\n\t}\n\n\tconst root = roots[ 0 ];\n\tconst uint16Array = new Uint16Array( root );\n\tconst uint32Array = new Uint32Array( root );\n\tconst float32Array = new Float32Array( root );\n\n\t// Both bounds need two elements per node so compute the height so it's twice as long as\n\t// the width so we can expand the row by two and still have a square texture\n\tconst nodeCount = root.byteLength / BYTES_PER_NODE;\n\tconst boundsDimension = 2 * Math.ceil( Math.sqrt( nodeCount / 2 ) );\n\tconst boundsArray = new Float32Array( 4 * boundsDimension * boundsDimension );\n\n\tconst contentsDimension = Math.ceil( Math.sqrt( nodeCount ) );\n\tconst contentsArray = new Uint32Array( 2 * contentsDimension * contentsDimension );\n\n\tfor ( let i = 0; i < nodeCount; i ++ ) {\n\n\t\tconst nodeIndex32 = i * BYTES_PER_NODE / 4;\n\t\tconst nodeIndex16 = nodeIndex32 * 2;\n\t\tconst boundsIndex = BOUNDING_DATA_INDEX( nodeIndex32 );\n\t\tfor ( let b = 0; b < 3; b ++ ) {\n\n\t\t\tboundsArray[ 8 * i + 0 + b ] = float32Array[ boundsIndex + 0 + b ];\n\t\t\tboundsArray[ 8 * i + 4 + b ] = float32Array[ boundsIndex + 3 + b ];\n\n\t\t}\n\n\t\tif ( IS_LEAF( nodeIndex16, uint16Array ) ) {\n\n\t\t\tconst count = COUNT( nodeIndex16, uint16Array );\n\t\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\n\n\t\t\tconst mergedLeafCount = 0xffff0000 | count;\n\t\t\tcontentsArray[ i * 2 + 0 ] = mergedLeafCount;\n\t\t\tcontentsArray[ i * 2 + 1 ] = offset;\n\n\t\t} else {\n\n\t\t\tconst rightIndex = 4 * RIGHT_NODE( nodeIndex32, uint32Array ) / BYTES_PER_NODE;\n\t\t\tconst splitAxis = SPLIT_AXIS( nodeIndex32, uint32Array );\n\n\t\t\tcontentsArray[ i * 2 + 0 ] = splitAxis;\n\t\t\tcontentsArray[ i * 2 + 1 ] = rightIndex;\n\n\t\t}\n\n\t}\n\n\tboundsTexture.image.data = boundsArray;\n\tboundsTexture.image.width = boundsDimension;\n\tboundsTexture.image.height = boundsDimension;\n\tboundsTexture.format = RGBAFormat;\n\tboundsTexture.type = FloatType;\n\tboundsTexture.internalFormat = 'RGBA32F';\n\tboundsTexture.minFilter = NearestFilter;\n\tboundsTexture.magFilter = NearestFilter;\n\tboundsTexture.generateMipmaps = false;\n\tboundsTexture.needsUpdate = true;\n\tboundsTexture.dispose();\n\n\tcontentsTexture.image.data = contentsArray;\n\tcontentsTexture.image.width = contentsDimension;\n\tcontentsTexture.image.height = contentsDimension;\n\tcontentsTexture.format = RGIntegerFormat;\n\tcontentsTexture.type = UnsignedIntType;\n\tcontentsTexture.internalFormat = 'RG32UI';\n\tcontentsTexture.minFilter = NearestFilter;\n\tcontentsTexture.magFilter = NearestFilter;\n\tcontentsTexture.generateMipmaps = false;\n\tcontentsTexture.needsUpdate = true;\n\tcontentsTexture.dispose();\n\n}\n\nexport class MeshBVHUniformStruct {\n\n\tconstructor() {\n\n\t\tthis.autoDispose = true;\n\t\tthis.index = new UIntVertexAttributeTexture();\n\t\tthis.position = new FloatVertexAttributeTexture();\n\t\tthis.bvhBounds = new DataTexture();\n\t\tthis.bvhContents = new DataTexture();\n\n\t\tthis.index.overrideItemSize = 3;\n\n\t}\n\n\tupdateFrom( bvh ) {\n\n\t\tconst { geometry } = bvh;\n\n\t\tbvhToTextures( bvh, this.bvhBounds, this.bvhContents );\n\n\t\tthis.index.updateFrom( geometry.index );\n\t\tthis.position.updateFrom( geometry.attributes.position );\n\n\t}\n\n\tdispose() {\n\n\t\tconst { index, position, bvhBounds, bvhContents } = this;\n\n\t\tif ( index ) index.dispose();\n\t\tif ( position ) position.dispose();\n\t\tif ( bvhBounds ) bvhBounds.dispose();\n\t\tif ( bvhContents ) bvhContents.dispose();\n\n\t}\n\n}\n", "// Note that a struct cannot be used for the hit record including faceIndices, faceNormal, barycoord,\n// side, and dist because on some mobile GPUS (such as Adreno) numbers are afforded less precision specifically\n// when in a struct leading to inaccurate hit results. See KhronosGroup/WebGL#3351 for more details.\nexport const shaderStructs = /* glsl */`\n#ifndef TRI_INTERSECT_EPSILON\n#define TRI_INTERSECT_EPSILON 1e-5\n#endif\n\n#ifndef INFINITY\n#define INFINITY 1e20\n#endif\n\nstruct BVH {\n\n\tusampler2D index;\n\tsampler2D position;\n\n\tsampler2D bvhBounds;\n\tusampler2D bvhContents;\n\n};\n`;\n\nexport const shaderIntersectFunction = /* glsl */`\n\n// Utilities\nuvec4 uTexelFetch1D( usampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nivec4 iTexelFetch1D( isampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nvec4 texelFetch1D( sampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nvec4 textureSampleBarycoord( sampler2D tex, vec3 barycoord, uvec3 faceIndices ) {\n\n\treturn\n\t\tbarycoord.x * texelFetch1D( tex, faceIndices.x ) +\n\t\tbarycoord.y * texelFetch1D( tex, faceIndices.y ) +\n\t\tbarycoord.z * texelFetch1D( tex, faceIndices.z );\n\n}\n\nvoid ndcToCameraRay(\n\tvec2 coord, mat4 cameraWorld, mat4 invProjectionMatrix,\n\tout vec3 rayOrigin, out vec3 rayDirection\n) {\n\n\t// get camera look direction and near plane for camera clipping\n\tvec4 lookDirection = cameraWorld * vec4( 0.0, 0.0, - 1.0, 0.0 );\n\tvec4 nearVector = invProjectionMatrix * vec4( 0.0, 0.0, - 1.0, 1.0 );\n\tfloat near = abs( nearVector.z / nearVector.w );\n\n\t// get the camera direction and position from camera matrices\n\tvec4 origin = cameraWorld * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec4 direction = invProjectionMatrix * vec4( coord, 0.5, 1.0 );\n\tdirection /= direction.w;\n\tdirection = cameraWorld * direction - origin;\n\n\t// slide the origin along the ray until it sits at the near clip plane position\n\torigin.xyz += direction.xyz * near / dot( direction, lookDirection );\n\n\trayOrigin = origin.xyz;\n\trayDirection = direction.xyz;\n\n}\n\n// Raycasting\nfloat intersectsBounds( vec3 rayOrigin, vec3 rayDirection, vec3 boundsMin, vec3 boundsMax ) {\n\n\t// https://www.reddit.com/r/opengl/comments/8ntzz5/fast_glsl_ray_box_intersection/\n\t// https://tavianator.com/2011/ray_box.html\n\tvec3 invDir = 1.0 / rayDirection;\n\n\t// find intersection distances for each plane\n\tvec3 tMinPlane = invDir * ( boundsMin - rayOrigin );\n\tvec3 tMaxPlane = invDir * ( boundsMax - rayOrigin );\n\n\t// get the min and max distances from each intersection\n\tvec3 tMinHit = min( tMaxPlane, tMinPlane );\n\tvec3 tMaxHit = max( tMaxPlane, tMinPlane );\n\n\t// get the furthest hit distance\n\tvec2 t = max( tMinHit.xx, tMinHit.yz );\n\tfloat t0 = max( t.x, t.y );\n\n\t// get the minimum hit distance\n\tt = min( tMaxHit.xx, tMaxHit.yz );\n\tfloat t1 = min( t.x, t.y );\n\n\t// set distance to 0.0 if the ray starts inside the box\n\tfloat dist = max( t0, 0.0 );\n\n\treturn t1 >= dist ? dist : INFINITY;\n\n}\n\nbool intersectsTriangle(\n\tvec3 rayOrigin, vec3 rayDirection, vec3 a, vec3 b, vec3 c,\n\tout vec3 barycoord, out vec3 norm, out float dist, out float side\n) {\n\n\t// https://stackoverflow.com/questions/42740765/intersection-between-line-and-triangle-in-3d\n\tvec3 edge1 = b - a;\n\tvec3 edge2 = c - a;\n\tnorm = cross( edge1, edge2 );\n\n\tfloat det = - dot( rayDirection, norm );\n\tfloat invdet = 1.0 / det;\n\n\tvec3 AO = rayOrigin - a;\n\tvec3 DAO = cross( AO, rayDirection );\n\n\tvec4 uvt;\n\tuvt.x = dot( edge2, DAO ) * invdet;\n\tuvt.y = - dot( edge1, DAO ) * invdet;\n\tuvt.z = dot( AO, norm ) * invdet;\n\tuvt.w = 1.0 - uvt.x - uvt.y;\n\n\t// set the hit information\n\tbarycoord = uvt.wxy; // arranged in A, B, C order\n\tdist = uvt.z;\n\tside = sign( det );\n\tnorm = side * normalize( norm );\n\n\t// add an epsilon to avoid misses between triangles\n\tuvt += vec4( TRI_INTERSECT_EPSILON );\n\n\treturn all( greaterThanEqual( uvt, vec4( 0.0 ) ) );\n\n}\n\nbool intersectTriangles(\n\tBVH bvh, vec3 rayOrigin, vec3 rayDirection, uint offset, uint count,\n\tinout float minDistance,\n\n\t// output variables\n\tout uvec4 faceIndices, out vec3 faceNormal, out vec3 barycoord,\n\tout float side, out float dist\n) {\n\n\tbool found = false;\n\tvec3 localBarycoord, localNormal;\n\tfloat localDist, localSide;\n\tfor ( uint i = offset, l = offset + count; i < l; i ++ ) {\n\n\t\tuvec3 indices = uTexelFetch1D( bvh.index, i ).xyz;\n\t\tvec3 a = texelFetch1D( bvh.position, indices.x ).rgb;\n\t\tvec3 b = texelFetch1D( bvh.position, indices.y ).rgb;\n\t\tvec3 c = texelFetch1D( bvh.position, indices.z ).rgb;\n\n\t\tif (\n\t\t\tintersectsTriangle( rayOrigin, rayDirection, a, b, c, localBarycoord, localNormal, localDist, localSide )\n\t\t\t&& localDist < minDistance\n\t\t) {\n\n\t\t\tfound = true;\n\t\t\tminDistance = localDist;\n\n\t\t\tfaceIndices = uvec4( indices.xyz, i );\n\t\t\tfaceNormal = localNormal;\n\n\t\t\tside = localSide;\n\t\t\tbarycoord = localBarycoord;\n\t\t\tdist = localDist;\n\n\t\t}\n\n\t}\n\n\treturn found;\n\n}\n\nfloat intersectsBVHNodeBounds( vec3 rayOrigin, vec3 rayDirection, BVH bvh, uint currNodeIndex ) {\n\n\tvec3 boundsMin = texelFetch1D( bvh.bvhBounds, currNodeIndex * 2u + 0u ).xyz;\n\tvec3 boundsMax = texelFetch1D( bvh.bvhBounds, currNodeIndex * 2u + 1u ).xyz;\n\treturn intersectsBounds( rayOrigin, rayDirection, boundsMin, boundsMax );\n\n}\n\nbool bvhIntersectFirstHit(\n\tBVH bvh, vec3 rayOrigin, vec3 rayDirection,\n\n\t// output variables\n\tout uvec4 faceIndices, out vec3 faceNormal, out vec3 barycoord,\n\tout float side, out float dist\n) {\n\n\t// stack needs to be twice as long as the deepest tree we expect because\n\t// we push both the left and right child onto the stack every traversal\n\tint ptr = 0;\n\tuint stack[ 60 ];\n\tstack[ 0 ] = 0u;\n\n\tfloat triangleDistance = 1e20;\n\tbool found = false;\n\twhile ( ptr > - 1 && ptr < 60 ) {\n\n\t\tuint currNodeIndex = stack[ ptr ];\n\t\tptr --;\n\n\t\t// check if we intersect the current bounds\n\t\tfloat boundsHitDistance = intersectsBVHNodeBounds( rayOrigin, rayDirection, bvh, currNodeIndex );\n\t\tif ( boundsHitDistance == INFINITY || boundsHitDistance > triangleDistance ) {\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tuvec2 boundsInfo = uTexelFetch1D( bvh.bvhContents, currNodeIndex ).xy;\n\t\tbool isLeaf = bool( boundsInfo.x & 0xffff0000u );\n\n\t\tif ( isLeaf ) {\n\n\t\t\tuint count = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint offset = boundsInfo.y;\n\n\t\t\tfound = intersectTriangles(\n\t\t\t\tbvh, rayOrigin, rayDirection, offset, count, triangleDistance,\n\t\t\t\tfaceIndices, faceNormal, barycoord, side, dist\n\t\t\t) || found;\n\n\t\t} else {\n\n\t\t\tuint leftIndex = currNodeIndex + 1u;\n\t\t\tuint splitAxis = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint rightIndex = boundsInfo.y;\n\n\t\t\tbool leftToRight = rayDirection[ splitAxis ] >= 0.0;\n\t\t\tuint c1 = leftToRight ? leftIndex : rightIndex;\n\t\t\tuint c2 = leftToRight ? rightIndex : leftIndex;\n\n\t\t\t// set c2 in the stack so we traverse it later. We need to keep track of a pointer in\n\t\t\t// the stack while we traverse. The second pointer added is the one that will be\n\t\t\t// traversed first\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c2;\n\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c1;\n\n\t\t}\n\n\t}\n\n\treturn found;\n\n}\n`;\n\n// Distance to Point\nexport const shaderDistanceFunction = /* glsl */`\n\nfloat dot2( in vec3 v ) {\n\n\treturn dot( v, v );\n\n}\n\n\n// https://www.shadertoy.com/view/ttfGWl\nvec3 closestPointToTriangle( vec3 p, vec3 v0, vec3 v1, vec3 v2, out vec3 barycoord ) {\n\n    vec3 v10 = v1 - v0;\n    vec3 v21 = v2 - v1;\n    vec3 v02 = v0 - v2;\n\n\tvec3 p0 = p - v0;\n\tvec3 p1 = p - v1;\n\tvec3 p2 = p - v2;\n\n    vec3 nor = cross( v10, v02 );\n\n    // method 2, in barycentric space\n    vec3  q = cross( nor, p0 );\n    float d = 1.0 / dot2( nor );\n    float u = d * dot( q, v02 );\n    float v = d * dot( q, v10 );\n    float w = 1.0 - u - v;\n\n\tif( u < 0.0 ) {\n\n\t\tw = clamp( dot( p2, v02 ) / dot2( v02 ), 0.0, 1.0 );\n\t\tu = 0.0;\n\t\tv = 1.0 - w;\n\n\t} else if( v < 0.0 ) {\n\n\t\tu = clamp( dot( p0, v10 ) / dot2( v10 ), 0.0, 1.0 );\n\t\tv = 0.0;\n\t\tw = 1.0 - u;\n\n\t} else if( w < 0.0 ) {\n\n\t\tv = clamp( dot( p1, v21 ) / dot2( v21 ), 0.0, 1.0 );\n\t\tw = 0.0;\n\t\tu = 1.0-v;\n\n\t}\n\n\tbarycoord = vec3( u, v, w );\n    return u * v1 + v * v2 + w * v0;\n\n}\n\nfloat distanceToTriangles(\n\tBVH bvh, vec3 point, uint offset, uint count, float closestDistanceSquared,\n\n\tout uvec4 faceIndices, out vec3 faceNormal, out vec3 barycoord, out float side, out vec3 outPoint\n) {\n\n\tbool found = false;\n\tuvec3 localIndices;\n\tvec3 localBarycoord;\n\tvec3 localNormal;\n\tfor ( uint i = offset, l = offset + count; i < l; i ++ ) {\n\n\t\tuvec3 indices = uTexelFetch1D( bvh.index, i ).xyz;\n\t\tvec3 a = texelFetch1D( bvh.position, indices.x ).rgb;\n\t\tvec3 b = texelFetch1D( bvh.position, indices.y ).rgb;\n\t\tvec3 c = texelFetch1D( bvh.position, indices.z ).rgb;\n\n\t\t// get the closest point and barycoord\n\t\tvec3 closestPoint = closestPointToTriangle( point, a, b, c, localBarycoord );\n\t\tvec3 delta = point - closestPoint;\n\t\tfloat sqDist = dot2( delta );\n\t\tif ( sqDist < closestDistanceSquared ) {\n\n\t\t\t// set the output results\n\t\t\tclosestDistanceSquared = sqDist;\n\t\t\tfaceIndices = uvec4( indices.xyz, i );\n\t\t\tfaceNormal = normalize( cross( a - b, b - c ) );\n\t\t\tbarycoord = localBarycoord;\n\t\t\toutPoint = closestPoint;\n\t\t\tside = sign( dot( faceNormal, delta ) );\n\n\t\t}\n\n\t}\n\n\treturn closestDistanceSquared;\n\n}\n\nfloat distanceSqToBounds( vec3 point, vec3 boundsMin, vec3 boundsMax ) {\n\n\tvec3 clampedPoint = clamp( point, boundsMin, boundsMax );\n\tvec3 delta = point - clampedPoint;\n\treturn dot( delta, delta );\n\n}\n\nfloat distanceSqToBVHNodeBoundsPoint( vec3 point, BVH bvh, uint currNodeIndex ) {\n\n\tvec3 boundsMin = texelFetch1D( bvh.bvhBounds, currNodeIndex * 2u + 0u ).xyz;\n\tvec3 boundsMax = texelFetch1D( bvh.bvhBounds, currNodeIndex * 2u + 1u ).xyz;\n\treturn distanceSqToBounds( point, boundsMin, boundsMax );\n\n}\n\nfloat bvhClosestPointToPoint(\n\tBVH bvh, vec3 point,\n\n\t// output variables\n\tout uvec4 faceIndices, out vec3 faceNormal, out vec3 barycoord,\n\tout float side, out vec3 outPoint\n ) {\n\n\t// stack needs to be twice as long as the deepest tree we expect because\n\t// we push both the left and right child onto the stack every traversal\n\tint ptr = 0;\n\tuint stack[ 60 ];\n\tstack[ 0 ] = 0u;\n\tfloat closestDistanceSquared = pow( 100000.0, 2.0 );\n\tbool found = false;\n\twhile ( ptr > - 1 && ptr < 60 ) {\n\n\t\tuint currNodeIndex = stack[ ptr ];\n\t\tptr --;\n\n\t\t// check if we intersect the current bounds\n\t\tfloat boundsHitDistance = distanceSqToBVHNodeBoundsPoint( point, bvh, currNodeIndex );\n\t\tif ( boundsHitDistance > closestDistanceSquared ) {\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tuvec2 boundsInfo = uTexelFetch1D( bvh.bvhContents, currNodeIndex ).xy;\n\t\tbool isLeaf = bool( boundsInfo.x & 0xffff0000u );\n\t\tif ( isLeaf ) {\n\n\t\t\tuint count = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint offset = boundsInfo.y;\n\t\t\tclosestDistanceSquared = distanceToTriangles(\n\t\t\t\tbvh, point, offset, count, closestDistanceSquared,\n\n\t\t\t\t// outputs\n\t\t\t\tfaceIndices, faceNormal, barycoord, side, outPoint\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tuint leftIndex = currNodeIndex + 1u;\n\t\t\tuint splitAxis = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint rightIndex = boundsInfo.y;\n\t\t\tbool leftToRight = distanceSqToBVHNodeBoundsPoint( point, bvh, leftIndex ) < distanceSqToBVHNodeBoundsPoint( point, bvh, rightIndex );//rayDirection[ splitAxis ] >= 0.0;\n\t\t\tuint c1 = leftToRight ? leftIndex : rightIndex;\n\t\t\tuint c2 = leftToRight ? rightIndex : leftIndex;\n\n\t\t\t// set c2 in the stack so we traverse it later. We need to keep track of a pointer in\n\t\t\t// the stack while we traverse. The second pointer added is the one that will be\n\t\t\t// traversed first\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c2;\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c1;\n\n\t\t}\n\n\t}\n\n\treturn sqrt( closestDistanceSquared );\n\n}\n`;\n", "import { BufferAttribute, BufferGeometry, Vector3, Vector4, Matrix4, Matrix3 } from 'three';\n\nconst _positionVector = /*@__PURE__*/ new Vector3();\nconst _normalVector = /*@__PURE__*/ new Vector3();\nconst _tangentVector = /*@__PURE__*/ new Vector3();\nconst _tangentVector4 = /*@__PURE__*/ new Vector4();\n\nconst _morphVector = /*@__PURE__*/ new Vector3();\nconst _temp = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\nconst _matrix = /*@__PURE__*/ new Matrix4();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\n\n// Confirms that the two provided attributes are compatible\nfunction validateAttributes( attr1, attr2 ) {\n\n\tif ( ! attr1 && ! attr2 ) {\n\n\t\treturn;\n\n\t}\n\n\tconst sameCount = attr1.count === attr2.count;\n\tconst sameNormalized = attr1.normalized === attr2.normalized;\n\tconst sameType = attr1.array.constructor === attr2.array.constructor;\n\tconst sameItemSize = attr1.itemSize === attr2.itemSize;\n\n\tif ( ! sameCount || ! sameNormalized || ! sameType || ! sameItemSize ) {\n\n\t\tthrow new Error();\n\n\t}\n\n}\n\n// Clones the given attribute with a new compatible buffer attribute but no data\nfunction createAttributeClone( attr, countOverride = null ) {\n\n\tconst cons = attr.array.constructor;\n\tconst normalized = attr.normalized;\n\tconst itemSize = attr.itemSize;\n\tconst count = countOverride === null ? attr.count : countOverride;\n\n\treturn new BufferAttribute( new cons( itemSize * count ), itemSize, normalized );\n\n}\n\n// target offset is the number of elements in the target buffer stride to skip before copying the\n// attributes contents in to.\nfunction copyAttributeContents( attr, target, targetOffset = 0 ) {\n\n\tif ( attr.isInterleavedBufferAttribute ) {\n\n\t\tconst itemSize = attr.itemSize;\n\t\tfor ( let i = 0, l = attr.count; i < l; i ++ ) {\n\n\t\t\tconst io = i + targetOffset;\n\t\t\ttarget.setX( io, attr.getX( i ) );\n\t\t\tif ( itemSize >= 2 ) target.setY( io, attr.getY( i ) );\n\t\t\tif ( itemSize >= 3 ) target.setZ( io, attr.getZ( i ) );\n\t\t\tif ( itemSize >= 4 ) target.setW( io, attr.getW( i ) );\n\n\t\t}\n\n\t} else {\n\n\t\tconst array = target.array;\n\t\tconst cons = array.constructor;\n\t\tconst byteOffset = array.BYTES_PER_ELEMENT * attr.itemSize * targetOffset;\n\t\tconst temp = new cons( array.buffer, byteOffset, attr.array.length );\n\t\ttemp.set( attr.array );\n\n\t}\n\n}\n\n// Adds the \"matrix\" multiplied by \"scale\" to \"target\"\nfunction addScaledMatrix( target, matrix, scale ) {\n\n\tconst targetArray = target.elements;\n\tconst matrixArray = matrix.elements;\n\tfor ( let i = 0, l = matrixArray.length; i < l; i ++ ) {\n\n\t\ttargetArray[ i ] += matrixArray[ i ] * scale;\n\n\t}\n\n}\n\n// A version of \"SkinnedMesh.boneTransform\" for normals\nfunction boneNormalTransform( mesh, index, target ) {\n\n\tconst skeleton = mesh.skeleton;\n\tconst geometry = mesh.geometry;\n\tconst bones = skeleton.bones;\n\tconst boneInverses = skeleton.boneInverses;\n\n\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t_matrix.elements.fill( 0 );\n\n\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\tif ( weight !== 0 ) {\n\n\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\t\t\t_boneMatrix.multiplyMatrices( bones[ boneIndex ].matrixWorld, boneInverses[ boneIndex ] );\n\n\t\t\taddScaledMatrix( _matrix, _boneMatrix, weight );\n\n\t\t}\n\n\t}\n\n\t_matrix.multiply( mesh.bindMatrix ).premultiply( mesh.bindMatrixInverse );\n\ttarget.transformDirection( _matrix );\n\n\treturn target;\n\n}\n\n// Applies the morph target data to the target vector\nfunction applyMorphTarget( morphData, morphInfluences, morphTargetsRelative, i, target ) {\n\n\t_morphVector.set( 0, 0, 0 );\n\tfor ( let j = 0, jl = morphData.length; j < jl; j ++ ) {\n\n\t\tconst influence = morphInfluences[ j ];\n\t\tconst morphAttribute = morphData[ j ];\n\n\t\tif ( influence === 0 ) continue;\n\n\t\t_temp.fromBufferAttribute( morphAttribute, i );\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\t_morphVector.addScaledVector( _temp, influence );\n\n\t\t} else {\n\n\t\t\t_morphVector.addScaledVector( _temp.sub( target ), influence );\n\n\t\t}\n\n\t}\n\n\ttarget.add( _morphVector );\n\n}\n\n// Modified version of BufferGeometryUtils.mergeBufferGeometries that ignores morph targets and updates a attributes in place\nfunction mergeBufferGeometries( geometries, options = { useGroups: false, updateIndex: false, skipAttributes: [] }, targetGeometry = new BufferGeometry() ) {\n\n\tconst isIndexed = geometries[ 0 ].index !== null;\n\tconst { useGroups = false, updateIndex = false, skipAttributes = [] } = options;\n\n\tconst attributesUsed = new Set( Object.keys( geometries[ 0 ].attributes ) );\n\tconst attributes = {};\n\n\tlet offset = 0;\n\n\ttargetGeometry.clearGroups();\n\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\tconst geometry = geometries[ i ];\n\t\tlet attributesCount = 0;\n\n\t\t// ensure that all geometries are indexed, or none\n\t\tif ( isIndexed !== ( geometry.index !== null ) ) {\n\n\t\t\tthrow new Error( 'StaticGeometryGenerator: All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them.' );\n\n\t\t}\n\n\t\t// gather attributes, exit early if they're different\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tif ( ! attributesUsed.has( name ) ) {\n\n\t\t\t\tthrow new Error( 'StaticGeometryGenerator: All geometries must have compatible attributes; make sure \"' + name + '\" attribute exists among all geometries, or in none of them.' );\n\n\t\t\t}\n\n\t\t\tif ( attributes[ name ] === undefined ) {\n\n\t\t\t\tattributes[ name ] = [];\n\n\t\t\t}\n\n\t\t\tattributes[ name ].push( geometry.attributes[ name ] );\n\t\t\tattributesCount ++;\n\n\t\t}\n\n\t\t// ensure geometries have the same number of attributes\n\t\tif ( attributesCount !== attributesUsed.size ) {\n\n\t\t\tthrow new Error( 'StaticGeometryGenerator: Make sure all geometries have the same number of attributes.' );\n\n\t\t}\n\n\t\tif ( useGroups ) {\n\n\t\t\tlet count;\n\t\t\tif ( isIndexed ) {\n\n\t\t\t\tcount = geometry.index.count;\n\n\t\t\t} else if ( geometry.attributes.position !== undefined ) {\n\n\t\t\t\tcount = geometry.attributes.position.count;\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'StaticGeometryGenerator: The geometry must have either an index or a position attribute' );\n\n\t\t\t}\n\n\t\t\ttargetGeometry.addGroup( offset, count, i );\n\t\t\toffset += count;\n\n\t\t}\n\n\t}\n\n\t// merge indices\n\tif ( isIndexed ) {\n\n\t\tlet forceUpdateIndex = false;\n\t\tif ( ! targetGeometry.index ) {\n\n\t\t\tlet indexCount = 0;\n\t\t\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\t\t\tindexCount += geometries[ i ].index.count;\n\n\t\t\t}\n\n\t\t\ttargetGeometry.setIndex( new BufferAttribute( new Uint32Array( indexCount ), 1, false ) );\n\t\t\tforceUpdateIndex = true;\n\n\t\t}\n\n\t\tif ( updateIndex || forceUpdateIndex ) {\n\n\t\t\tconst targetIndex = targetGeometry.index;\n\t\t\tlet targetOffset = 0;\n\t\t\tlet indexOffset = 0;\n\t\t\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\t\t\tconst geometry = geometries[ i ];\n\t\t\t\tconst index = geometry.index;\n\t\t\t\tif ( skipAttributes[ i ] !== true ) {\n\n\t\t\t\t\tfor ( let j = 0; j < index.count; ++ j ) {\n\n\t\t\t\t\t\ttargetIndex.setX( targetOffset, index.getX( j ) + indexOffset );\n\t\t\t\t\t\ttargetOffset ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tindexOffset += geometry.attributes.position.count;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// merge attributes\n\tfor ( const name in attributes ) {\n\n\t\tconst attrList = attributes[ name ];\n\t\tif ( ! ( name in targetGeometry.attributes ) ) {\n\n\t\t\tlet count = 0;\n\t\t\tfor ( const key in attrList ) {\n\n\t\t\t\tcount += attrList[ key ].count;\n\n\t\t\t}\n\n\t\t\ttargetGeometry.setAttribute( name, createAttributeClone( attributes[ name ][ 0 ], count ) );\n\n\t\t}\n\n\t\tconst targetAttribute = targetGeometry.attributes[ name ];\n\t\tlet offset = 0;\n\t\tfor ( let i = 0, l = attrList.length; i < l; i ++ ) {\n\n\t\t\tconst attr = attrList[ i ];\n\t\t\tif ( skipAttributes[ i ] !== true ) {\n\n\t\t\t\tcopyAttributeContents( attr, targetAttribute, offset );\n\n\t\t\t}\n\n\t\t\toffset += attr.count;\n\n\t\t}\n\n\t}\n\n\treturn targetGeometry;\n\n}\n\nfunction checkTypedArrayEquality( a, b ) {\n\n\tif ( a === null || b === null ) {\n\n\t\treturn a === b;\n\n\t}\n\n\tif ( a.length !== b.length ) {\n\n\t\treturn false;\n\n\t}\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\n// Checks whether the geometry changed between this and last evaluation\nclass GeometryDiff {\n\n\tconstructor( mesh ) {\n\n\t\tthis.matrixWorld = new Matrix4();\n\t\tthis.geometryHash = null;\n\t\tthis.boneMatrices = null;\n\t\tthis.primitiveCount = - 1;\n\t\tthis.mesh = mesh;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.mesh;\n\t\tconst geometry = mesh.geometry;\n\t\tconst skeleton = mesh.skeleton;\n\t\tconst primitiveCount = ( geometry.index ? geometry.index.count : geometry.attributes.position.count ) / 3;\n\t\tthis.matrixWorld.copy( mesh.matrixWorld );\n\t\tthis.geometryHash = geometry.attributes.position.version;\n\t\tthis.primitiveCount = primitiveCount;\n\n\t\tif ( skeleton ) {\n\n\t\t\t// ensure the bone matrix array is updated to the appropriate length\n\t\t\tif ( ! skeleton.boneTexture ) {\n\n\t\t\t\tskeleton.computeBoneTexture();\n\n\t\t\t}\n\n\t\t\tskeleton.update();\n\n\t\t\t// copy data if possible otherwise clone it\n\t\t\tconst boneMatrices = skeleton.boneMatrices;\n\t\t\tif ( ! this.boneMatrices || this.boneMatrices.length !== boneMatrices.length ) {\n\n\t\t\t\tthis.boneMatrices = boneMatrices.slice();\n\n\t\t\t} else {\n\n\t\t\t\tthis.boneMatrices.set( boneMatrices );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boneMatrices = null;\n\n\t\t}\n\n\t}\n\n\tdidChange() {\n\n\t\tconst mesh = this.mesh;\n\t\tconst geometry = mesh.geometry;\n\t\tconst primitiveCount = ( geometry.index ? geometry.index.count : geometry.attributes.position.count ) / 3;\n\t\tconst identical =\n\t\t\tthis.matrixWorld.equals( mesh.matrixWorld ) &&\n\t\t\tthis.geometryHash === geometry.attributes.position.version &&\n\t\t\tcheckTypedArrayEquality( mesh.skeleton && mesh.skeleton.boneMatrices || null, this.boneMatrices ) &&\n\t\t\tthis.primitiveCount === primitiveCount;\n\n\t\treturn ! identical;\n\n\t}\n\n}\n\nexport class StaticGeometryGenerator {\n\n\tconstructor( meshes ) {\n\n\t\tif ( ! Array.isArray( meshes ) ) {\n\n\t\t\tmeshes = [ meshes ];\n\n\t\t}\n\n\t\tconst finalMeshes = [];\n\t\tmeshes.forEach( object => {\n\n\t\t\tobject.traverseVisible( c => {\n\n\t\t\t\tif ( c.isMesh ) {\n\n\t\t\t\t\tfinalMeshes.push( c );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t\tthis.meshes = finalMeshes;\n\t\tthis.useGroups = true;\n\t\tthis.applyWorldTransforms = true;\n\t\tthis.attributes = [ 'position', 'normal', 'color', 'tangent', 'uv', 'uv2' ];\n\t\tthis._intermediateGeometry = new Array( finalMeshes.length ).fill().map( () => new BufferGeometry() );\n\t\tthis._diffMap = new WeakMap();\n\n\t}\n\n\tgetMaterials() {\n\n\t\tconst materials = [];\n\t\tthis.meshes.forEach( mesh => {\n\n\t\t\tif ( Array.isArray( mesh.material ) ) {\n\n\t\t\t\tmaterials.push( ...mesh.material );\n\n\t\t\t} else {\n\n\t\t\t\tmaterials.push( mesh.material );\n\n\t\t\t}\n\n\t\t} );\n\t\treturn materials;\n\n\t}\n\n\tgenerate( targetGeometry = new BufferGeometry() ) {\n\n\t\t// track which attributes have been updated and which to skip to avoid unnecessary attribute copies\n\t\tlet skipAttributes = [];\n\t\tconst { meshes, useGroups, _intermediateGeometry, _diffMap } = this;\n\t\tfor ( let i = 0, l = meshes.length; i < l; i ++ ) {\n\n\t\t\tconst mesh = meshes[ i ];\n\t\t\tconst geom = _intermediateGeometry[ i ];\n\t\t\tconst diff = _diffMap.get( mesh );\n\t\t\tif ( ! diff || diff.didChange( mesh ) ) {\n\n\t\t\t\tthis._convertToStaticGeometry( mesh, geom );\n\t\t\t\tskipAttributes.push( false );\n\n\t\t\t\tif ( ! diff ) {\n\n\t\t\t\t\t_diffMap.set( mesh, new GeometryDiff( mesh ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdiff.update();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tskipAttributes.push( true );\n\n\t\t\t}\n\n\t\t}\n\n\t\tmergeBufferGeometries( _intermediateGeometry, { useGroups, skipAttributes }, targetGeometry );\n\n\t\tfor ( const key in targetGeometry.attributes ) {\n\n\t\t\ttargetGeometry.attributes[ key ].needsUpdate = true;\n\n\t\t}\n\n\t\treturn targetGeometry;\n\n\t}\n\n\t_convertToStaticGeometry( mesh, targetGeometry = new BufferGeometry() ) {\n\n\t\tconst geometry = mesh.geometry;\n\t\tconst applyWorldTransforms = this.applyWorldTransforms;\n\t\tconst includeNormal = this.attributes.includes( 'normal' );\n\t\tconst includeTangent = this.attributes.includes( 'tangent' );\n\t\tconst attributes = geometry.attributes;\n\t\tconst targetAttributes = targetGeometry.attributes;\n\n\t\t// initialize the attributes if they don't exist\n\t\tif ( ! targetGeometry.index ) {\n\n\t\t\ttargetGeometry.index = geometry.index;\n\n\t\t}\n\n\t\tif ( ! targetAttributes.position ) {\n\n\t\t\ttargetGeometry.setAttribute( 'position', createAttributeClone( attributes.position ) );\n\n\t\t}\n\n\t\tif ( includeNormal && ! targetAttributes.normal && attributes.normal ) {\n\n\t\t\ttargetGeometry.setAttribute( 'normal', createAttributeClone( attributes.normal ) );\n\n\t\t}\n\n\t\tif ( includeTangent && ! targetAttributes.tangent && attributes.tangent ) {\n\n\t\t\ttargetGeometry.setAttribute( 'tangent', createAttributeClone( attributes.tangent ) );\n\n\t\t}\n\n\t\t// ensure the attributes are consistent\n\t\tvalidateAttributes( geometry.index, targetGeometry.index );\n\t\tvalidateAttributes( attributes.position, targetAttributes.position );\n\n\t\tif ( includeNormal ) {\n\n\t\t\tvalidateAttributes( attributes.normal, targetAttributes.normal );\n\n\t\t}\n\n\t\tif ( includeTangent ) {\n\n\t\t\tvalidateAttributes( attributes.tangent, targetAttributes.tangent );\n\n\t\t}\n\n\t\t// generate transformed vertex attribute data\n\t\tconst position = attributes.position;\n\t\tconst normal = includeNormal ? attributes.normal : null;\n\t\tconst tangent = includeTangent ? attributes.tangent : null;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphNormal = geometry.morphAttributes.normal;\n\t\tconst morphTangent = geometry.morphAttributes.tangent;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\tconst morphInfluences = mesh.morphTargetInfluences;\n\t\tconst normalMatrix = new Matrix3();\n\t\tnormalMatrix.getNormalMatrix( mesh.matrixWorld );\n\n\t\tfor ( let i = 0, l = attributes.position.count; i < l; i ++ ) {\n\n\t\t\t_positionVector.fromBufferAttribute( position, i );\n\t\t\tif ( normal ) {\n\n\t\t\t\t_normalVector.fromBufferAttribute( normal, i );\n\n\t\t\t}\n\n\t\t\tif ( tangent ) {\n\n\t\t\t\t_tangentVector4.fromBufferAttribute( tangent, i );\n\t\t\t\t_tangentVector.fromBufferAttribute( tangent, i );\n\n\t\t\t}\n\n\t\t\t// apply morph target transform\n\t\t\tif ( morphInfluences ) {\n\n\t\t\t\tif ( morphPosition ) {\n\n\t\t\t\t\tapplyMorphTarget( morphPosition, morphInfluences, morphTargetsRelative, i, _positionVector );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphNormal ) {\n\n\t\t\t\t\tapplyMorphTarget( morphNormal, morphInfluences, morphTargetsRelative, i, _normalVector );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphTangent ) {\n\n\t\t\t\t\tapplyMorphTarget( morphTangent, morphInfluences, morphTargetsRelative, i, _tangentVector );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// apply bone transform\n\t\t\tif ( mesh.isSkinnedMesh ) {\n\n\t\t\t\tmesh.boneTransform( i, _positionVector );\n\t\t\t\tif ( normal ) {\n\n\t\t\t\t\tboneNormalTransform( mesh, i, _normalVector );\n\n\t\t\t\t}\n\n\t\t\t\tif ( tangent ) {\n\n\t\t\t\t\tboneNormalTransform( mesh, i, _tangentVector );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// update the vectors of the attributes\n\t\t\tif ( applyWorldTransforms ) {\n\n\t\t\t\t_positionVector.applyMatrix4( mesh.matrixWorld );\n\n\t\t\t}\n\n\t\t\ttargetAttributes.position.setXYZ( i, _positionVector.x, _positionVector.y, _positionVector.z );\n\n\t\t\tif ( normal ) {\n\n\t\t\t\tif ( applyWorldTransforms ) {\n\n\t\t\t\t\t_normalVector.applyNormalMatrix( normalMatrix );\n\n\t\t\t\t}\n\n\t\t\t\ttargetAttributes.normal.setXYZ( i, _normalVector.x, _normalVector.y, _normalVector.z );\n\n\t\t\t}\n\n\t\t\tif ( tangent ) {\n\n\t\t\t\tif ( applyWorldTransforms ) {\n\n\t\t\t\t\t_tangentVector.transformDirection( mesh.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\ttargetAttributes.tangent.setXYZW( i, _tangentVector.x, _tangentVector.y, _tangentVector.z, _tangentVector4.w );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// copy other attributes over\n\t\tfor ( const i in this.attributes ) {\n\n\t\t\tconst key = this.attributes[ i ];\n\t\t\tif ( key === 'position' || key === 'tangent' || key === 'normal' || ! ( key in attributes ) ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( ! targetAttributes[ key ] ) {\n\n\t\t\t\ttargetGeometry.setAttribute( key, createAttributeClone( attributes[ key ] ) );\n\n\t\t\t}\n\n\t\t\tvalidateAttributes( attributes[ key ], targetAttributes[ key ] );\n\t\t\tcopyAttributeContents( attributes[ key ], targetAttributes[ key ] );\n\n\t\t}\n\n\t\treturn targetGeometry;\n\n\t}\n\n}\n", "import * as React from 'react';\n\n/* eslint-disable react-hooks/rules-of-hooks */\nfunction useContextBridge(...contexts) {\n  const cRef = React.useRef([]);\n  cRef.current = contexts.map(context => React.useContext(context));\n  return React.useMemo(() => ({\n    children\n  }) => contexts.reduceRight((acc, Context, i) => /*#__PURE__*/React.createElement(Context.Provider, {\n    value: cRef.current[i],\n    children: acc\n  }), children\n  /*\n   * done this way in reference to:\n   * https://github.com/DefinitelyTyped/DefinitelyTyped/issues/44572#issuecomment-625878049\n   * https://github.com/microsoft/TypeScript/issues/14729\n   */\n  ), []);\n}\n\nexport { useContextBridge };\n", "import * as React from 'react';\nimport { Object3D, AnimationMixer } from 'three';\nimport { useFrame } from '@react-three/fiber';\n\nfunction useAnimations(clips, root) {\n  const ref = React.useRef();\n  const [actualRef] = React.useState(() => root ? root instanceof Object3D ? {\n    current: root\n  } : root : ref); // eslint-disable-next-line prettier/prettier\n\n  const [mixer] = React.useState(() => new AnimationMixer(undefined));\n  const lazyActions = React.useRef({});\n  const [api] = React.useState(() => {\n    const actions = {};\n    clips.forEach(clip => Object.defineProperty(actions, clip.name, {\n      enumerable: true,\n\n      get() {\n        if (actualRef.current) {\n          return lazyActions.current[clip.name] || (lazyActions.current[clip.name] = mixer.clipAction(clip, actualRef.current));\n        }\n      }\n\n    }));\n    return {\n      ref: actualRef,\n      clips,\n      actions,\n      names: clips.map(c => c.name),\n      mixer\n    };\n  });\n  useFrame((state, delta) => mixer.update(delta));\n  React.useEffect(() => {\n    const currentRoot = actualRef.current;\n    return () => {\n      // Clean up only when clips change, wipe out lazy actions and uncache clips\n      lazyActions.current = {};\n      Object.values(api.actions).forEach(action => {\n        if (currentRoot) {\n          mixer.uncacheAction(action, currentRoot);\n        }\n      });\n    };\n  }, [clips]);\n  React.useEffect(() => {\n    return () => {\n      mixer.stopAllAction();\n    };\n  }, [mixer]);\n  return api;\n}\n\nexport { useAnimations };\n", "import * as React from 'react';\nimport { addEffect, addAfterEffect } from '@react-three/fiber';\n\nfunction useIntersect(onChange) {\n  const ref = React.useRef(null);\n  const check = React.useRef(false);\n  const temp = React.useRef(false);\n  const callback = React.useRef(onChange);\n  React.useLayoutEffect(() => void (callback.current = onChange), [onChange]);\n  React.useEffect(() => {\n    const obj = ref.current;\n\n    if (obj) {\n      // Stamp out frustum check pre-emptively\n      const unsub1 = addEffect(() => {\n        check.current = false;\n        return true;\n      }); // If the object is inside the frustum three will call onRender\n\n      const oldOnRender = obj.onBeforeRender;\n\n      obj.onBeforeRender = () => check.current = true; // Compare the check value against the temp value, if it differs set state\n\n\n      const unsub2 = addAfterEffect(() => {\n        if (check.current !== temp.current) callback.current == null ? void 0 : callback.current(temp.current = check.current);\n        return true;\n      });\n      return () => {\n        obj.onBeforeRender = oldOnRender;\n        unsub1();\n        unsub2();\n      };\n    }\n  }, []);\n  return ref;\n}\n\nexport { useIntersect };\n", "import * as THREE from 'three';\nimport * as React from 'react';\nimport { applyProps } from '@react-three/fiber';\n\n// and @0beqz https://gist.github.com/0beqz/8d51b4ae16d68021a09fb504af708fca\n\nconst worldposReplace =\n/* glsl */\n`\n#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n  vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n  #ifdef BOX_PROJECTED_ENV_MAP\n    vWorldPosition = worldPosition.xyz;\n  #endif\n#endif\n`;\nconst boxProjectDefinitions =\n/*glsl */\n`\n#ifdef BOX_PROJECTED_ENV_MAP\n  uniform vec3 envMapSize;\n  uniform vec3 envMapPosition;\n  varying vec3 vWorldPosition;\n    \n  vec3 parallaxCorrectNormal( vec3 v, vec3 cubeSize, vec3 cubePos ) {\n    vec3 nDir = normalize( v );\n    vec3 rbmax = ( .5 * cubeSize + cubePos - vWorldPosition ) / nDir;\n    vec3 rbmin = ( -.5 * cubeSize + cubePos - vWorldPosition ) / nDir;\n    vec3 rbminmax;\n    rbminmax.x = ( nDir.x > 0. ) ? rbmax.x : rbmin.x;\n    rbminmax.y = ( nDir.y > 0. ) ? rbmax.y : rbmin.y;\n    rbminmax.z = ( nDir.z > 0. ) ? rbmax.z : rbmin.z;\n    float correction = min( min( rbminmax.x, rbminmax.y ), rbminmax.z );\n    vec3 boxIntersection = vWorldPosition + nDir * correction;    \n    return boxIntersection - cubePos;\n  }\n#endif\n`; // will be inserted after \"vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\"\n\nconst getIBLIrradiance_patch =\n/* glsl */\n`\n#ifdef BOX_PROJECTED_ENV_MAP\n  worldNormal = parallaxCorrectNormal( worldNormal, envMapSize, envMapPosition );\n#endif\n`; // will be inserted after \"reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\"\n\nconst getIBLRadiance_patch =\n/* glsl */\n`\n#ifdef BOX_PROJECTED_ENV_MAP\n  reflectVec = parallaxCorrectNormal( reflectVec, envMapSize, envMapPosition );\n#endif\n`;\n\nfunction boxProjectedEnvMap(shader, envMapPosition, envMapSize) {\n  shader.defines.BOX_PROJECTED_ENV_MAP = true; // uniforms\n\n  shader.uniforms.envMapPosition = {\n    value: envMapPosition\n  };\n  shader.uniforms.envMapSize = {\n    value: envMapSize\n  }; // vertex shader\n\n  shader.vertexShader = `\n  varying vec3 vWorldPosition;\n  ${shader.vertexShader.replace('#include <worldpos_vertex>', worldposReplace)}`; // fragment shader\n\n  shader.fragmentShader = `\n    ${boxProjectDefinitions}\n    ${shader.fragmentShader.replace('#include <envmap_physical_pars_fragment>', THREE.ShaderChunk.envmap_physical_pars_fragment).replace('vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );', `vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n         ${getIBLIrradiance_patch}\n         `).replace('reflectVec = inverseTransformDirection( reflectVec, viewMatrix );', `reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n         ${getIBLRadiance_patch}\n        `)}`;\n}\n\nfunction useBoxProjectedEnv(position = new THREE.Vector3(), size = new THREE.Vector3()) {\n  const [config] = React.useState(() => ({\n    position: new THREE.Vector3(),\n    size: new THREE.Vector3()\n  }));\n  applyProps(config, {\n    position,\n    size\n  });\n  const ref = React.useRef(null);\n  const spread = React.useMemo(() => ({\n    ref,\n    onBeforeCompile: shader => boxProjectedEnvMap(shader, config.position, config.size),\n    customProgramCacheKey: () => JSON.stringify(config.position.toArray()) + JSON.stringify(config.size.toArray())\n  }), [...config.position.toArray(), ...config.size.toArray()]);\n  React.useLayoutEffect(() => void (ref.current.needsUpdate = true), [config]);\n  return spread;\n}\n\nexport { useBoxProjectedEnv };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useFrame } from '@react-three/fiber';\n\nconst boundingBox = new THREE.Box3();\nconst boundingBoxSize = new THREE.Vector3();\nconst BBAnchor = ({\n  anchor,\n  ...props\n}) => {\n  const ref = React.useRef(null);\n  const parentRef = React.useRef(null); // Reattach group created by this component to the parent's parent,\n  // so it becomes a sibling of its initial parent.\n  // We do that so the children have no impact on a bounding box of a parent.\n\n  React.useEffect(() => {\n    var _ref$current, _ref$current$parent;\n\n    if ((_ref$current = ref.current) != null && (_ref$current$parent = _ref$current.parent) != null && _ref$current$parent.parent) {\n      parentRef.current = ref.current.parent;\n      ref.current.parent.parent.add(ref.current);\n    }\n  }, []);\n  useFrame(() => {\n    if (parentRef.current) {\n      boundingBox.setFromObject(parentRef.current);\n      boundingBox.getSize(boundingBoxSize);\n      ref.current.position.set(parentRef.current.position.x + boundingBoxSize.x * anchor[0] / 2, parentRef.current.position.y + boundingBoxSize.y * anchor[1] / 2, parentRef.current.position.z + boundingBoxSize.z * anchor[2] / 2);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props));\n};\n\nexport { BBAnchor };\n", "import { useMemo, useCallback } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Texture } from 'three';\n\n/**\n *  Adapted from https://github.com/brunoimbrizi/interactive-particles/blob/master/src/scripts/webgl/particles/TrailTexture.js\n *  Changes:\n *    * accepts config as constructor params\n *    * frame-rate independent aging\n *    * added option to interpolate between slow mouse events\n *    * added option for smoothing between values to avoid large jumps in force\n */\n\n// smooth new sample (measurement) based on previous sample (current)\nfunction smoothAverage(current, measurement, smoothing = 0.9) {\n  return measurement * smoothing + current * (1.0 - smoothing);\n} // default ease\n\n\nconst easeCircleOut = x => Math.sqrt(1 - Math.pow(x - 1, 2));\n\nclass TrailTexture {\n  constructor({\n    size = 256,\n    maxAge = 750,\n    radius = 0.3,\n    intensity = 0.2,\n    interpolate = 0,\n    smoothing = 0,\n    minForce = 0.3,\n    blend = 'screen',\n    // source-over is canvas default. Others are slower\n    ease = easeCircleOut\n  } = {}) {\n    this.size = size;\n    this.maxAge = maxAge;\n    this.radius = radius;\n    this.intensity = intensity;\n    this.ease = ease;\n    this.interpolate = interpolate;\n    this.smoothing = smoothing;\n    this.minForce = minForce;\n    this.blend = blend;\n    this.trail = [];\n    this.force = 0;\n    this.initTexture();\n  }\n\n  initTexture() {\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = this.canvas.height = this.size;\n    this.ctx = this.canvas.getContext('2d');\n    this.ctx.fillStyle = 'black';\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    this.texture = new Texture(this.canvas);\n    this.canvas.id = 'touchTexture';\n    this.canvas.style.width = this.canvas.style.height = `${this.canvas.width}px`;\n  }\n\n  update(delta) {\n    this.clear(); // age points\n\n    this.trail.forEach((point, i) => {\n      point.age += delta * 1000; // remove old\n\n      if (point.age > this.maxAge) {\n        this.trail.splice(i, 1);\n      }\n    }); // reset force when empty (when smoothing)\n\n    if (!this.trail.length) this.force = 0;\n    this.trail.forEach(point => {\n      this.drawTouch(point);\n    });\n    this.texture.needsUpdate = true;\n  }\n\n  clear() {\n    this.ctx.globalCompositeOperation = 'source-over';\n    this.ctx.fillStyle = 'black';\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  addTouch(point) {\n    const last = this.trail[this.trail.length - 1];\n\n    if (last) {\n      const dx = last.x - point.x;\n      const dy = last.y - point.y;\n      const dd = dx * dx + dy * dy;\n      const force = Math.max(this.minForce, Math.min(dd * 10000, 1));\n      this.force = smoothAverage(force, this.force, this.smoothing);\n\n      if (!!this.interpolate) {\n        const lines = Math.ceil(dd / Math.pow(this.radius * 0.5 / this.interpolate, 2));\n\n        if (lines > 1) {\n          for (let i = 1; i < lines; i++) {\n            this.trail.push({\n              x: last.x - dx / lines * i,\n              y: last.y - dy / lines * i,\n              age: 0,\n              force\n            });\n          }\n        }\n      }\n    }\n\n    this.trail.push({\n      x: point.x,\n      y: point.y,\n      age: 0,\n      force: this.force\n    });\n  }\n\n  drawTouch(point) {\n    const pos = {\n      x: point.x * this.size,\n      y: (1 - point.y) * this.size\n    };\n    let intensity = 1;\n\n    if (point.age < this.maxAge * 0.3) {\n      intensity = this.ease(point.age / (this.maxAge * 0.3));\n    } else {\n      intensity = this.ease(1 - (point.age - this.maxAge * 0.3) / (this.maxAge * 0.7));\n    }\n\n    intensity *= point.force; // apply blending\n\n    this.ctx.globalCompositeOperation = this.blend;\n    const radius = this.size * this.radius * intensity;\n    const grd = this.ctx.createRadialGradient(pos.x, pos.y, Math.max(0, radius * 0.25), pos.x, pos.y, Math.max(0, radius));\n    grd.addColorStop(0, `rgba(255, 255, 255, ${this.intensity})`);\n    grd.addColorStop(1, `rgba(0, 0, 0, 0.0)`);\n    this.ctx.beginPath();\n    this.ctx.fillStyle = grd;\n    this.ctx.arc(pos.x, pos.y, Math.max(0, radius), 0, Math.PI * 2);\n    this.ctx.fill();\n  }\n\n}\n\nfunction useTrailTexture(config = {}) {\n  const {\n    size,\n    maxAge,\n    radius,\n    intensity,\n    interpolate,\n    smoothing,\n    minForce,\n    blend,\n    ease\n  } = config;\n  const trail = useMemo(() => new TrailTexture(config), [size, maxAge, radius, intensity, interpolate, smoothing, minForce, blend, ease]);\n  useFrame((_, delta) => void trail.update(delta));\n  const onMove = useCallback(e => trail.addTouch(e.uv), [trail]);\n  return [trail.texture, onMove];\n}\n\nexport { useTrailTexture };\n", "import * as React from 'react';\nimport * as THREE from 'three';\nimport { createPortal } from '@react-three/fiber';\nimport { Flow } from 'three-stdlib';\n\nconst CurveModifier = /*#__PURE__*/React.forwardRef(({\n  children,\n  curve\n}, ref) => {\n  const [scene] = React.useState(() => new THREE.Scene());\n  const [obj, set] = React.useState();\n  const modifier = React.useRef();\n  React.useEffect(() => {\n    modifier.current = new Flow(scene.children[0]);\n    set(modifier.current.object3D);\n  }, [children]);\n  React.useEffect(() => {\n    var _modifier$current;\n\n    if (curve) (_modifier$current = modifier.current) == null ? void 0 : _modifier$current.updateCurve(0, curve);\n  }, [curve]);\n  React.useImperativeHandle(ref, () => ({\n    moveAlongCurve: val => {\n      var _modifier$current2;\n\n      (_modifier$current2 = modifier.current) == null ? void 0 : _modifier$current2.moveAlongCurve(val);\n    }\n  }));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal(children, scene), obj && /*#__PURE__*/React.createElement(\"primitive\", {\n    object: obj\n  }));\n});\n\nexport { CurveModifier };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { MeshPhysicalMaterial } from 'three';\nimport { useFrame } from '@react-three/fiber';\nimport distort from '../helpers/glsl/distort.vert.glsl.js';\n\nclass DistortMaterialImpl extends MeshPhysicalMaterial {\n  constructor(parameters = {}) {\n    super(parameters);\n    this.setValues(parameters);\n    this._time = {\n      value: 0\n    };\n    this._distort = {\n      value: 0.4\n    };\n    this._radius = {\n      value: 1\n    };\n  }\n\n  onBeforeCompile(shader) {\n    shader.uniforms.time = this._time;\n    shader.uniforms.radius = this._radius;\n    shader.uniforms.distort = this._distort;\n    shader.vertexShader = `\n      uniform float time;\n      uniform float radius;\n      uniform float distort;\n      ${distort}\n      ${shader.vertexShader}\n    `;\n    shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', `\n        float updateTime = time / 50.0;\n        float noise = snoise(vec3(position / 2.0 + updateTime * 5.0));\n        vec3 transformed = vec3(position * (noise * pow(distort, 2.0) + radius));\n        `);\n  }\n\n  get time() {\n    return this._time.value;\n  }\n\n  set time(v) {\n    this._time.value = v;\n  }\n\n  get distort() {\n    return this._distort.value;\n  }\n\n  set distort(v) {\n    this._distort.value = v;\n  }\n\n  get radius() {\n    return this._radius.value;\n  }\n\n  set radius(v) {\n    this._radius.value = v;\n  }\n\n}\n\nconst MeshDistortMaterial = /*#__PURE__*/React.forwardRef(({\n  speed = 1,\n  ...props\n}, ref) => {\n  const [material] = React.useState(() => new DistortMaterialImpl());\n  useFrame(state => material && (material.time = state.clock.getElapsedTime() * speed));\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\n\nexport { MeshDistortMaterial };\n", "var distort = \"#define GLSLIFY 1\\nvec3 mod289(vec3 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 mod289(vec4 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 permute(vec4 x){return mod289(((x*34.0)+1.0)*x);}vec4 taylorInvSqrt(vec4 r){return 1.79284291400159-0.85373472095314*r;}float snoise(vec3 v){const vec2 C=vec2(1.0/6.0,1.0/3.0);const vec4 D=vec4(0.0,0.5,1.0,2.0);vec3 i=floor(v+dot(v,C.yyy));vec3 x0=v-i+dot(i,C.xxx);vec3 g=step(x0.yzx,x0.xyz);vec3 l=1.0-g;vec3 i1=min(g.xyz,l.zxy);vec3 i2=max(g.xyz,l.zxy);vec3 x1=x0-i1+C.xxx;vec3 x2=x0-i2+C.yyy;vec3 x3=x0-D.yyy;i=mod289(i);vec4 p=permute(permute(permute(i.z+vec4(0.0,i1.z,i2.z,1.0))+i.y+vec4(0.0,i1.y,i2.y,1.0))+i.x+vec4(0.0,i1.x,i2.x,1.0));float n_=0.142857142857;vec3 ns=n_*D.wyz-D.xzx;vec4 j=p-49.0*floor(p*ns.z*ns.z);vec4 x_=floor(j*ns.z);vec4 y_=floor(j-7.0*x_);vec4 x=x_*ns.x+ns.yyyy;vec4 y=y_*ns.x+ns.yyyy;vec4 h=1.0-abs(x)-abs(y);vec4 b0=vec4(x.xy,y.xy);vec4 b1=vec4(x.zw,y.zw);vec4 s0=floor(b0)*2.0+1.0;vec4 s1=floor(b1)*2.0+1.0;vec4 sh=-step(h,vec4(0.0));vec4 a0=b0.xzyw+s0.xzyw*sh.xxyy;vec4 a1=b1.xzyw+s1.xzyw*sh.zzww;vec3 p0=vec3(a0.xy,h.x);vec3 p1=vec3(a0.zw,h.y);vec3 p2=vec3(a1.xy,h.z);vec3 p3=vec3(a1.zw,h.w);vec4 norm=taylorInvSqrt(vec4(dot(p0,p0),dot(p1,p1),dot(p2,p2),dot(p3,p3)));p0*=norm.x;p1*=norm.y;p2*=norm.z;p3*=norm.w;vec4 m=max(0.6-vec4(dot(x0,x0),dot(x1,x1),dot(x2,x2),dot(x3,x3)),0.0);m=m*m;return 42.0*dot(m*m,vec4(dot(p0,x0),dot(p1,x1),dot(p2,x2),dot(p3,x3)));}\"; // eslint-disable-line\n\nexport { distort as default };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { MeshStandardMaterial } from 'three';\nimport { useFrame } from '@react-three/fiber';\n\nclass WobbleMaterialImpl extends MeshStandardMaterial {\n  constructor(parameters = {}) {\n    super(parameters);\n    this.setValues(parameters);\n    this._time = {\n      value: 0\n    };\n    this._factor = {\n      value: 1\n    };\n  }\n\n  onBeforeCompile(shader) {\n    shader.uniforms.time = this._time;\n    shader.uniforms.factor = this._factor;\n    shader.vertexShader = `\n      uniform float time;\n      uniform float factor;\n      ${shader.vertexShader}\n    `;\n    shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', `float theta = sin( time + position.y ) / 2.0 * factor;\n        float c = cos( theta );\n        float s = sin( theta );\n        mat3 m = mat3( c, 0, s, 0, 1, 0, -s, 0, c );\n        vec3 transformed = vec3( position ) * m;\n        vNormal = vNormal * m;`);\n  }\n\n  get time() {\n    return this._time.value;\n  }\n\n  set time(v) {\n    this._time.value = v;\n  }\n\n  get factor() {\n    return this._factor.value;\n  }\n\n  set factor(v) {\n    this._factor.value = v;\n  }\n\n}\n\nconst MeshWobbleMaterial = /*#__PURE__*/React.forwardRef(({\n  speed = 1,\n  ...props\n}, ref) => {\n  const [material] = React.useState(() => new WobbleMaterialImpl());\n  useFrame(state => material && (material.time = state.clock.getElapsedTime() * speed));\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\n\nexport { MeshWobbleMaterial };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Plane, Vector3, Matrix4, Vector4, PerspectiveCamera, LinearFilter, HalfFloatType, WebGLRenderTarget, DepthTexture, DepthFormat, UnsignedShortType } from 'three';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { BlurPass } from '../materials/BlurPass.js';\nimport { MeshReflectorMaterial as MeshReflectorMaterial$1 } from '../materials/MeshReflectorMaterial.js';\n\nextend({\n  MeshReflectorMaterialImpl: MeshReflectorMaterial$1\n});\nconst MeshReflectorMaterial = /*#__PURE__*/React.forwardRef(({\n  mixBlur = 0,\n  mixStrength = 1,\n  resolution = 256,\n  blur = [0, 0],\n  minDepthThreshold = 0.9,\n  maxDepthThreshold = 1,\n  depthScale = 0,\n  depthToBlurRatioBias = 0.25,\n  mirror = 0,\n  distortion = 1,\n  mixContrast = 1,\n  distortionMap,\n  reflectorOffset = 0,\n  ...props\n}, ref) => {\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const scene = useThree(({\n    scene\n  }) => scene);\n  blur = Array.isArray(blur) ? blur : [blur, blur];\n  const hasBlur = blur[0] + blur[1] > 0;\n  const materialRef = React.useRef(null);\n  const [reflectorPlane] = React.useState(() => new Plane());\n  const [normal] = React.useState(() => new Vector3());\n  const [reflectorWorldPosition] = React.useState(() => new Vector3());\n  const [cameraWorldPosition] = React.useState(() => new Vector3());\n  const [rotationMatrix] = React.useState(() => new Matrix4());\n  const [lookAtPosition] = React.useState(() => new Vector3(0, 0, -1));\n  const [clipPlane] = React.useState(() => new Vector4());\n  const [view] = React.useState(() => new Vector3());\n  const [target] = React.useState(() => new Vector3());\n  const [q] = React.useState(() => new Vector4());\n  const [textureMatrix] = React.useState(() => new Matrix4());\n  const [virtualCamera] = React.useState(() => new PerspectiveCamera());\n  const beforeRender = React.useCallback(() => {\n    var _materialRef$current;\n\n    // TODO: As of R3f 7-8 this should be __r3f.parent\n    const parent = materialRef.current.parent || ((_materialRef$current = materialRef.current) == null ? void 0 : _materialRef$current.__r3f.parent);\n    if (!parent) return;\n    reflectorWorldPosition.setFromMatrixPosition(parent.matrixWorld);\n    cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\n    rotationMatrix.extractRotation(parent.matrixWorld);\n    normal.set(0, 0, 1);\n    normal.applyMatrix4(rotationMatrix);\n    reflectorWorldPosition.addScaledVector(normal, reflectorOffset);\n    view.subVectors(reflectorWorldPosition, cameraWorldPosition); // Avoid rendering when reflector is facing away\n\n    if (view.dot(normal) > 0) return;\n    view.reflect(normal).negate();\n    view.add(reflectorWorldPosition);\n    rotationMatrix.extractRotation(camera.matrixWorld);\n    lookAtPosition.set(0, 0, -1);\n    lookAtPosition.applyMatrix4(rotationMatrix);\n    lookAtPosition.add(cameraWorldPosition);\n    target.subVectors(reflectorWorldPosition, lookAtPosition);\n    target.reflect(normal).negate();\n    target.add(reflectorWorldPosition);\n    virtualCamera.position.copy(view);\n    virtualCamera.up.set(0, 1, 0);\n    virtualCamera.up.applyMatrix4(rotationMatrix);\n    virtualCamera.up.reflect(normal);\n    virtualCamera.lookAt(target);\n    virtualCamera.far = camera.far; // Used in WebGLBackground\n\n    virtualCamera.updateMatrixWorld();\n    virtualCamera.projectionMatrix.copy(camera.projectionMatrix); // Update the texture matrix\n\n    textureMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n    textureMatrix.multiply(virtualCamera.projectionMatrix);\n    textureMatrix.multiply(virtualCamera.matrixWorldInverse);\n    textureMatrix.multiply(parent.matrixWorld); // Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\n    // Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\n\n    reflectorPlane.setFromNormalAndCoplanarPoint(normal, reflectorWorldPosition);\n    reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse);\n    clipPlane.set(reflectorPlane.normal.x, reflectorPlane.normal.y, reflectorPlane.normal.z, reflectorPlane.constant);\n    const projectionMatrix = virtualCamera.projectionMatrix;\n    q.x = (Math.sign(clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];\n    q.y = (Math.sign(clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];\n    q.z = -1.0;\n    q.w = (1.0 + projectionMatrix.elements[10]) / projectionMatrix.elements[14]; // Calculate the scaled plane vector\n\n    clipPlane.multiplyScalar(2.0 / clipPlane.dot(q)); // Replacing the third row of the projection matrix\n\n    projectionMatrix.elements[2] = clipPlane.x;\n    projectionMatrix.elements[6] = clipPlane.y;\n    projectionMatrix.elements[10] = clipPlane.z + 1.0;\n    projectionMatrix.elements[14] = clipPlane.w;\n  }, [camera, reflectorOffset]);\n  const [fbo1, fbo2, blurpass, reflectorProps] = React.useMemo(() => {\n    const parameters = {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      encoding: gl.outputEncoding,\n      type: HalfFloatType\n    };\n    const fbo1 = new WebGLRenderTarget(resolution, resolution, parameters);\n    fbo1.depthBuffer = true;\n    fbo1.depthTexture = new DepthTexture(resolution, resolution);\n    fbo1.depthTexture.format = DepthFormat;\n    fbo1.depthTexture.type = UnsignedShortType;\n    const fbo2 = new WebGLRenderTarget(resolution, resolution, parameters);\n    const blurpass = new BlurPass({\n      gl,\n      resolution,\n      width: blur[0],\n      height: blur[1],\n      minDepthThreshold,\n      maxDepthThreshold,\n      depthScale,\n      depthToBlurRatioBias\n    });\n    const reflectorProps = {\n      mirror,\n      textureMatrix,\n      mixBlur,\n      tDiffuse: fbo1.texture,\n      tDepth: fbo1.depthTexture,\n      tDiffuseBlur: fbo2.texture,\n      hasBlur,\n      mixStrength,\n      minDepthThreshold,\n      maxDepthThreshold,\n      depthScale,\n      depthToBlurRatioBias,\n      distortion,\n      distortionMap,\n      mixContrast,\n      'defines-USE_BLUR': hasBlur ? '' : undefined,\n      'defines-USE_DEPTH': depthScale > 0 ? '' : undefined,\n      'defines-USE_DISTORTION': distortionMap ? '' : undefined\n    };\n    return [fbo1, fbo2, blurpass, reflectorProps];\n  }, [gl, blur, textureMatrix, resolution, mirror, hasBlur, mixBlur, mixStrength, minDepthThreshold, maxDepthThreshold, depthScale, depthToBlurRatioBias, distortion, distortionMap, mixContrast]);\n  useFrame(() => {\n    var _materialRef$current2;\n\n    // TODO: As of R3f 7-8 this should be __r3f.parent\n    const parent = materialRef.current.parent || ((_materialRef$current2 = materialRef.current) == null ? void 0 : _materialRef$current2.__r3f.parent);\n    if (!parent) return;\n    parent.visible = false;\n    const currentXrEnabled = gl.xr.enabled;\n    const currentShadowAutoUpdate = gl.shadowMap.autoUpdate;\n    beforeRender();\n    gl.xr.enabled = false;\n    gl.shadowMap.autoUpdate = false;\n    gl.setRenderTarget(fbo1);\n    gl.state.buffers.depth.setMask(true);\n    if (!gl.autoClear) gl.clear();\n    gl.render(scene, virtualCamera);\n    if (hasBlur) blurpass.render(gl, fbo1, fbo2);\n    gl.xr.enabled = currentXrEnabled;\n    gl.shadowMap.autoUpdate = currentShadowAutoUpdate;\n    parent.visible = true;\n    gl.setRenderTarget(null);\n  });\n  return /*#__PURE__*/React.createElement(\"meshReflectorMaterialImpl\", _extends({\n    attach: \"material\" // Defines can't be updated dynamically, so we need to recreate the material\n    ,\n    key: 'key' + reflectorProps['defines-USE_BLUR'] + reflectorProps['defines-USE_DEPTH'] + reflectorProps['defines-USE_DISTORTION'],\n    ref: mergeRefs([materialRef, ref])\n  }, reflectorProps, props));\n});\n\nexport { MeshReflectorMaterial };\n", "import { ShaderMaterial, Uniform, Vector2, NoBlending } from 'three';\n\nclass ConvolutionMaterial extends ShaderMaterial {\n  constructor(texelSize = new Vector2()) {\n    super({\n      uniforms: {\n        inputBuffer: new Uniform(null),\n        depthBuffer: new Uniform(null),\n        resolution: new Uniform(new Vector2()),\n        texelSize: new Uniform(new Vector2()),\n        halfTexelSize: new Uniform(new Vector2()),\n        kernel: new Uniform(0.0),\n        scale: new Uniform(1.0),\n        cameraNear: new Uniform(0.0),\n        cameraFar: new Uniform(1.0),\n        minDepthThreshold: new Uniform(0.0),\n        maxDepthThreshold: new Uniform(1.0),\n        depthScale: new Uniform(0.0),\n        depthToBlurRatioBias: new Uniform(0.25)\n      },\n      fragmentShader: `#include <common>\n        #include <dithering_pars_fragment>      \n        uniform sampler2D inputBuffer;\n        uniform sampler2D depthBuffer;\n        uniform float cameraNear;\n        uniform float cameraFar;\n        uniform float minDepthThreshold;\n        uniform float maxDepthThreshold;\n        uniform float depthScale;\n        uniform float depthToBlurRatioBias;\n        varying vec2 vUv;\n        varying vec2 vUv0;\n        varying vec2 vUv1;\n        varying vec2 vUv2;\n        varying vec2 vUv3;\n\n        void main() {\n          float depthFactor = 0.0;\n          \n          #ifdef USE_DEPTH\n            vec4 depth = texture2D(depthBuffer, vUv);\n            depthFactor = smoothstep(minDepthThreshold, maxDepthThreshold, 1.0-(depth.r * depth.a));\n            depthFactor *= depthScale;\n            depthFactor = max(0.0, min(1.0, depthFactor + 0.25));\n          #endif\n          \n          vec4 sum = texture2D(inputBuffer, mix(vUv0, vUv, depthFactor));\n          sum += texture2D(inputBuffer, mix(vUv1, vUv, depthFactor));\n          sum += texture2D(inputBuffer, mix(vUv2, vUv, depthFactor));\n          sum += texture2D(inputBuffer, mix(vUv3, vUv, depthFactor));\n          gl_FragColor = sum * 0.25 ;\n\n          #include <dithering_fragment>\n          #include <tonemapping_fragment>\n          #include <encodings_fragment>\n        }`,\n      vertexShader: `uniform vec2 texelSize;\n        uniform vec2 halfTexelSize;\n        uniform float kernel;\n        uniform float scale;\n        varying vec2 vUv;\n        varying vec2 vUv0;\n        varying vec2 vUv1;\n        varying vec2 vUv2;\n        varying vec2 vUv3;\n\n        void main() {\n          vec2 uv = position.xy * 0.5 + 0.5;\n          vUv = uv;\n\n          vec2 dUv = (texelSize * vec2(kernel) + halfTexelSize) * scale;\n          vUv0 = vec2(uv.x - dUv.x, uv.y + dUv.y);\n          vUv1 = vec2(uv.x + dUv.x, uv.y + dUv.y);\n          vUv2 = vec2(uv.x + dUv.x, uv.y - dUv.y);\n          vUv3 = vec2(uv.x - dUv.x, uv.y - dUv.y);\n\n          gl_Position = vec4(position.xy, 1.0, 1.0);\n        }`,\n      blending: NoBlending,\n      depthWrite: false,\n      depthTest: false\n    });\n    this.toneMapped = false;\n    this.setTexelSize(texelSize.x, texelSize.y);\n    this.kernel = new Float32Array([0.0, 1.0, 2.0, 2.0, 3.0]);\n  }\n\n  setTexelSize(x, y) {\n    this.uniforms.texelSize.value.set(x, y);\n    this.uniforms.halfTexelSize.value.set(x, y).multiplyScalar(0.5);\n  }\n\n  setResolution(resolution) {\n    this.uniforms.resolution.value.copy(resolution);\n  }\n\n}\n\nexport { ConvolutionMaterial };\n", "import { WebGLRenderTarget, LinearFilter, Vector2, Scene, Camera, BufferGeometry, BufferAttribute, Mesh } from 'three';\nimport { ConvolutionMaterial } from './ConvolutionMaterial.js';\n\nclass BlurPass {\n  constructor({\n    gl,\n    resolution,\n    width = 500,\n    height = 500,\n    minDepthThreshold = 0,\n    maxDepthThreshold = 1,\n    depthScale = 0,\n    depthToBlurRatioBias = 0.25\n  }) {\n    this.renderToScreen = false;\n    this.renderTargetA = new WebGLRenderTarget(resolution, resolution, {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      stencilBuffer: false,\n      depthBuffer: false,\n      encoding: gl.outputEncoding\n    });\n    this.renderTargetB = this.renderTargetA.clone();\n    this.convolutionMaterial = new ConvolutionMaterial();\n    this.convolutionMaterial.setTexelSize(1.0 / width, 1.0 / height);\n    this.convolutionMaterial.setResolution(new Vector2(width, height));\n    this.scene = new Scene();\n    this.camera = new Camera();\n    this.convolutionMaterial.uniforms.minDepthThreshold.value = minDepthThreshold;\n    this.convolutionMaterial.uniforms.maxDepthThreshold.value = maxDepthThreshold;\n    this.convolutionMaterial.uniforms.depthScale.value = depthScale;\n    this.convolutionMaterial.uniforms.depthToBlurRatioBias.value = depthToBlurRatioBias;\n    this.convolutionMaterial.defines.USE_DEPTH = depthScale > 0;\n    const vertices = new Float32Array([-1, -1, 0, 3, -1, 0, -1, 3, 0]);\n    const uvs = new Float32Array([0, 0, 2, 0, 0, 2]);\n    const geometry = new BufferGeometry();\n    geometry.setAttribute('position', new BufferAttribute(vertices, 3));\n    geometry.setAttribute('uv', new BufferAttribute(uvs, 2));\n    this.screen = new Mesh(geometry, this.convolutionMaterial);\n    this.screen.frustumCulled = false;\n    this.scene.add(this.screen);\n  }\n\n  render(renderer, inputBuffer, outputBuffer) {\n    const scene = this.scene;\n    const camera = this.camera;\n    const renderTargetA = this.renderTargetA;\n    const renderTargetB = this.renderTargetB;\n    let material = this.convolutionMaterial;\n    let uniforms = material.uniforms;\n    uniforms.depthBuffer.value = inputBuffer.depthTexture;\n    const kernel = material.kernel;\n    let lastRT = inputBuffer;\n    let destRT;\n    let i, l; // Apply the multi-pass blur.\n\n    for (i = 0, l = kernel.length - 1; i < l; ++i) {\n      // Alternate between targets.\n      destRT = (i & 1) === 0 ? renderTargetA : renderTargetB;\n      uniforms.kernel.value = kernel[i];\n      uniforms.inputBuffer.value = lastRT.texture;\n      renderer.setRenderTarget(destRT);\n      renderer.render(scene, camera);\n      lastRT = destRT;\n    }\n\n    uniforms.kernel.value = kernel[i];\n    uniforms.inputBuffer.value = lastRT.texture;\n    renderer.setRenderTarget(this.renderToScreen ? null : outputBuffer);\n    renderer.render(scene, camera);\n  }\n\n}\n\nexport { BlurPass };\n", "import { MeshStandardMaterial } from 'three';\n\nclass MeshReflectorMaterial extends MeshStandardMaterial {\n  constructor(parameters = {}) {\n    super(parameters);\n    this._tDepth = {\n      value: null\n    };\n    this._distortionMap = {\n      value: null\n    };\n    this._tDiffuse = {\n      value: null\n    };\n    this._tDiffuseBlur = {\n      value: null\n    };\n    this._textureMatrix = {\n      value: null\n    };\n    this._hasBlur = {\n      value: false\n    };\n    this._mirror = {\n      value: 0.0\n    };\n    this._mixBlur = {\n      value: 0.0\n    };\n    this._blurStrength = {\n      value: 0.5\n    };\n    this._minDepthThreshold = {\n      value: 0.9\n    };\n    this._maxDepthThreshold = {\n      value: 1\n    };\n    this._depthScale = {\n      value: 0\n    };\n    this._depthToBlurRatioBias = {\n      value: 0.25\n    };\n    this._distortion = {\n      value: 1\n    };\n    this._mixContrast = {\n      value: 1.0\n    };\n    this.setValues(parameters);\n  }\n\n  onBeforeCompile(shader) {\n    var _shader$defines;\n\n    if (!((_shader$defines = shader.defines) != null && _shader$defines.USE_UV)) {\n      shader.defines.USE_UV = '';\n    }\n\n    shader.uniforms.hasBlur = this._hasBlur;\n    shader.uniforms.tDiffuse = this._tDiffuse;\n    shader.uniforms.tDepth = this._tDepth;\n    shader.uniforms.distortionMap = this._distortionMap;\n    shader.uniforms.tDiffuseBlur = this._tDiffuseBlur;\n    shader.uniforms.textureMatrix = this._textureMatrix;\n    shader.uniforms.mirror = this._mirror;\n    shader.uniforms.mixBlur = this._mixBlur;\n    shader.uniforms.mixStrength = this._blurStrength;\n    shader.uniforms.minDepthThreshold = this._minDepthThreshold;\n    shader.uniforms.maxDepthThreshold = this._maxDepthThreshold;\n    shader.uniforms.depthScale = this._depthScale;\n    shader.uniforms.depthToBlurRatioBias = this._depthToBlurRatioBias;\n    shader.uniforms.distortion = this._distortion;\n    shader.uniforms.mixContrast = this._mixContrast;\n    shader.vertexShader = `\n        uniform mat4 textureMatrix;\n        varying vec4 my_vUv;\n      ${shader.vertexShader}`;\n    shader.vertexShader = shader.vertexShader.replace('#include <project_vertex>', `#include <project_vertex>\n        my_vUv = textureMatrix * vec4( position, 1.0 );\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );`);\n    shader.fragmentShader = `\n        uniform sampler2D tDiffuse;\n        uniform sampler2D tDiffuseBlur;\n        uniform sampler2D tDepth;\n        uniform sampler2D distortionMap;\n        uniform float distortion;\n        uniform float cameraNear;\n\t\t\t  uniform float cameraFar;\n        uniform bool hasBlur;\n        uniform float mixBlur;\n        uniform float mirror;\n        uniform float mixStrength;\n        uniform float minDepthThreshold;\n        uniform float maxDepthThreshold;\n        uniform float mixContrast;\n        uniform float depthScale;\n        uniform float depthToBlurRatioBias;\n        varying vec4 my_vUv;\n        ${shader.fragmentShader}`;\n    shader.fragmentShader = shader.fragmentShader.replace('#include <emissivemap_fragment>', `#include <emissivemap_fragment>\n\n      float distortionFactor = 0.0;\n      #ifdef USE_DISTORTION\n        distortionFactor = texture2D(distortionMap, vUv).r * distortion;\n      #endif\n\n      vec4 new_vUv = my_vUv;\n      new_vUv.x += distortionFactor;\n      new_vUv.y += distortionFactor;\n\n      vec4 base = texture2DProj(tDiffuse, new_vUv);\n      vec4 blur = texture2DProj(tDiffuseBlur, new_vUv);\n\n      vec4 merge = base;\n\n      #ifdef USE_NORMALMAP\n        vec2 normal_uv = vec2(0.0);\n        vec4 normalColor = texture2D(normalMap, vUv * normalScale);\n        vec3 my_normal = normalize( vec3( normalColor.r * 2.0 - 1.0, normalColor.b,  normalColor.g * 2.0 - 1.0 ) );\n        vec3 coord = new_vUv.xyz / new_vUv.w;\n        normal_uv = coord.xy + coord.z * my_normal.xz * 0.05;\n        vec4 base_normal = texture2D(tDiffuse, normal_uv);\n        vec4 blur_normal = texture2D(tDiffuseBlur, normal_uv);\n        merge = base_normal;\n        blur = blur_normal;\n      #endif\n\n      float depthFactor = 0.0001;\n      float blurFactor = 0.0;\n\n      #ifdef USE_DEPTH\n        vec4 depth = texture2DProj(tDepth, new_vUv);\n        depthFactor = smoothstep(minDepthThreshold, maxDepthThreshold, 1.0-(depth.r * depth.a));\n        depthFactor *= depthScale;\n        depthFactor = max(0.0001, min(1.0, depthFactor));\n\n        #ifdef USE_BLUR\n          blur = blur * min(1.0, depthFactor + depthToBlurRatioBias);\n          merge = merge * min(1.0, depthFactor + 0.5);\n        #else\n          merge = merge * depthFactor;\n        #endif\n\n      #endif\n\n      float reflectorRoughnessFactor = roughness;\n      #ifdef USE_ROUGHNESSMAP\n        vec4 reflectorTexelRoughness = texture2D( roughnessMap, vUv );\n        reflectorRoughnessFactor *= reflectorTexelRoughness.g;\n      #endif\n\n      #ifdef USE_BLUR\n        blurFactor = min(1.0, mixBlur * reflectorRoughnessFactor);\n        merge = mix(merge, blur, blurFactor);\n      #endif\n\n      vec4 newMerge = vec4(0.0, 0.0, 0.0, 1.0);\n      newMerge.r = (merge.r - 0.5) * mixContrast + 0.5;\n      newMerge.g = (merge.g - 0.5) * mixContrast + 0.5;\n      newMerge.b = (merge.b - 0.5) * mixContrast + 0.5;\n\n      diffuseColor.rgb = diffuseColor.rgb * ((1.0 - min(1.0, mirror)) + newMerge.rgb * mixStrength);\n      `);\n  }\n\n  get tDiffuse() {\n    return this._tDiffuse.value;\n  }\n\n  set tDiffuse(v) {\n    this._tDiffuse.value = v;\n  }\n\n  get tDepth() {\n    return this._tDepth.value;\n  }\n\n  set tDepth(v) {\n    this._tDepth.value = v;\n  }\n\n  get distortionMap() {\n    return this._distortionMap.value;\n  }\n\n  set distortionMap(v) {\n    this._distortionMap.value = v;\n  }\n\n  get tDiffuseBlur() {\n    return this._tDiffuseBlur.value;\n  }\n\n  set tDiffuseBlur(v) {\n    this._tDiffuseBlur.value = v;\n  }\n\n  get textureMatrix() {\n    return this._textureMatrix.value;\n  }\n\n  set textureMatrix(v) {\n    this._textureMatrix.value = v;\n  }\n\n  get hasBlur() {\n    return this._hasBlur.value;\n  }\n\n  set hasBlur(v) {\n    this._hasBlur.value = v;\n  }\n\n  get mirror() {\n    return this._mirror.value;\n  }\n\n  set mirror(v) {\n    this._mirror.value = v;\n  }\n\n  get mixBlur() {\n    return this._mixBlur.value;\n  }\n\n  set mixBlur(v) {\n    this._mixBlur.value = v;\n  }\n\n  get mixStrength() {\n    return this._blurStrength.value;\n  }\n\n  set mixStrength(v) {\n    this._blurStrength.value = v;\n  }\n\n  get minDepthThreshold() {\n    return this._minDepthThreshold.value;\n  }\n\n  set minDepthThreshold(v) {\n    this._minDepthThreshold.value = v;\n  }\n\n  get maxDepthThreshold() {\n    return this._maxDepthThreshold.value;\n  }\n\n  set maxDepthThreshold(v) {\n    this._maxDepthThreshold.value = v;\n  }\n\n  get depthScale() {\n    return this._depthScale.value;\n  }\n\n  set depthScale(v) {\n    this._depthScale.value = v;\n  }\n\n  get depthToBlurRatioBias() {\n    return this._depthToBlurRatioBias.value;\n  }\n\n  set depthToBlurRatioBias(v) {\n    this._depthToBlurRatioBias.value = v;\n  }\n\n  get distortion() {\n    return this._distortion.value;\n  }\n\n  set distortion(v) {\n    this._distortion.value = v;\n  }\n\n  get mixContrast() {\n    return this._mixContrast.value;\n  }\n\n  set mixContrast(v) {\n    this._mixContrast.value = v;\n  }\n\n}\n\nexport { MeshReflectorMaterial };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useRef, useMemo, useLayoutEffect } from 'react';\nimport { extend, useThree } from '@react-three/fiber';\nimport { MeshBVH, SAH } from 'three-mesh-bvh';\nimport { MeshRefractionMaterial as MeshRefractionMaterial$1 } from '../materials/MeshRefractionMaterial.js';\n\nconst isCubeTexture = def => def && def.isCubeTexture;\n\nfunction MeshRefractionMaterial({\n  aberrationStrength = 0,\n  fastChroma = true,\n  envMap,\n  ...props\n}) {\n  extend({\n    MeshRefractionMaterial: MeshRefractionMaterial$1\n  });\n  const material = useRef();\n  const {\n    size\n  } = useThree();\n  const defines = useMemo(() => {\n    var _ref, _envMap$image$;\n\n    const temp = {}; // Sampler2D and SamplerCube need different defines\n\n    const isCubeMap = isCubeTexture(envMap);\n    const w = (_ref = isCubeMap ? (_envMap$image$ = envMap.image[0]) == null ? void 0 : _envMap$image$.width : envMap.image.width) !== null && _ref !== void 0 ? _ref : 1024;\n    const cubeSize = w / 4;\n\n    const _lodMax = Math.floor(Math.log2(cubeSize));\n\n    const _cubeSize = Math.pow(2, _lodMax);\n\n    const width = 3 * Math.max(_cubeSize, 16 * 7);\n    const height = 4 * _cubeSize;\n    if (isCubeMap) temp.ENVMAP_TYPE_CUBEM = '';\n    temp.CUBEUV_TEXEL_WIDTH = `${1.0 / width}`;\n    temp.CUBEUV_TEXEL_HEIGHT = `${1.0 / height}`;\n    temp.CUBEUV_MAX_MIP = `${_lodMax}.0`; // Add defines from chromatic aberration\n\n    if (aberrationStrength > 0) temp.CHROMATIC_ABERRATIONS = '';\n    if (fastChroma) temp.FAST_CHROMA = '';\n    return temp;\n  }, [aberrationStrength, fastChroma]);\n  useLayoutEffect(() => {\n    var _material$current, _material$current$__r, _material$current$__r2;\n\n    // Get the geometry of this materials parent\n    const geometry = (_material$current = material.current) == null ? void 0 : (_material$current$__r = _material$current.__r3f) == null ? void 0 : (_material$current$__r2 = _material$current$__r.parent) == null ? void 0 : _material$current$__r2.geometry; // Update the BVH\n\n    if (geometry) material.current.bvh.updateFrom(new MeshBVH(geometry.toNonIndexed(), {\n      lazyGeneration: false,\n      strategy: SAH\n    }));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"meshRefractionMaterial\", _extends({\n    // @ts-ignore\n    key: JSON.stringify(defines) // @ts-ignore\n    ,\n    defines: defines,\n    ref: material,\n    resolution: [size.width, size.height],\n    aberrationStrength: aberrationStrength,\n    envMap: envMap\n  }, props));\n}\n\nexport { MeshRefractionMaterial };\n", "import * as THREE from 'three';\nimport { shaderMaterial } from '../core/shaderMaterial.js';\nimport { shaderStructs, shaderIntersectFunction, MeshBVHUniformStruct } from 'three-mesh-bvh';\n\n// Author: N8Programs\nconst MeshRefractionMaterial = shaderMaterial({\n  envMap: null,\n  bounces: 3,\n  ior: 2.4,\n  correctMips: true,\n  aberrationStrength: 0.01,\n  fresnel: 0,\n  bvh: new MeshBVHUniformStruct(),\n  color: new THREE.Color('white'),\n  resolution: new THREE.Vector2()\n},\n/*glsl*/\n`\n  #ifndef USE_COLOR\n    uniform vec3 color;\n  #endif\n  varying vec3 vWorldPosition;  \n  varying vec3 vNormal;\n  varying mat4 projectionMatrixInv;\n  varying mat4 viewMatrixInv;\n  varying vec3 viewDirection;\n  varying mat4 vInstanceMatrix;\n  varying vec3 vColor;\n  \n  void main() {        \n    vec4 transformedNormal = vec4(normal, 0.0);\n    vec4 transformedPosition = vec4(position, 1.0);\n    #ifdef USE_INSTANCING\n      vInstanceMatrix = instanceMatrix;\n      transformedNormal = instanceMatrix * transformedNormal;\n      transformedPosition = instanceMatrix * transformedPosition;\n    #else\n      vInstanceMatrix = mat4(1.0);\n    #endif\n\n    vColor = color;\n    #ifdef USE_INSTANCING_COLOR\n      vColor *= instanceColor.rgb;\n    #endif\n  \n    projectionMatrixInv = inverse(projectionMatrix);\n    viewMatrixInv = inverse(viewMatrix);\n\n    vWorldPosition = (modelMatrix * transformedPosition).xyz;\n    vNormal = normalize((viewMatrixInv * vec4(normalMatrix * transformedNormal.xyz, 0.0)).xyz);\n    viewDirection = normalize(vWorldPosition - cameraPosition);\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * transformedPosition;\n  }`,\n/*glsl*/\n`\n  #define ENVMAP_TYPE_CUBE_UV\n  precision highp isampler2D;\n  precision highp usampler2D;\n  varying vec3 vWorldPosition;\n  varying vec3 vNormal;\n    \n  #ifdef ENVMAP_TYPE_CUBEM\n    uniform samplerCube envMap;\n  #else\n    uniform sampler2D envMap;\n  #endif\n    \n  uniform float bounces;\n  ${shaderStructs}\n  ${shaderIntersectFunction}\n  uniform BVH bvh;\n  uniform float ior;\n  uniform bool correctMips;\n  uniform vec2 resolution;\n  uniform float fresnel;\n  uniform mat4 modelMatrix;\n    \n  uniform float aberrationStrength;\n  varying mat4 projectionMatrixInv;\n  varying mat4 viewMatrixInv;\n  varying vec3 viewDirection;  \n  varying mat4 vInstanceMatrix;\n  varying vec3 vColor;\n  \n  float fresnelFunc(vec3 viewDirection, vec3 worldNormal) {\n    return pow( 1.0 + dot( viewDirection, worldNormal), 10.0 );\n  }\n    \n  vec3 totalInternalReflection(vec3 ro, vec3 rd, vec3 normal, float ior, mat4 modelMatrixInverse) {\n    vec3 rayOrigin = ro;\n    vec3 rayDirection = rd;\n    rayDirection = refract(rayDirection, normal, 1.0 / ior);\n    rayOrigin = vWorldPosition + rayDirection * 0.001;\n    rayOrigin = (modelMatrixInverse * vec4(rayOrigin, 1.0)).xyz;\n    rayDirection = normalize((modelMatrixInverse * vec4(rayDirection, 0.0)).xyz);\n    for(float i = 0.0; i < bounces; i++) {\n      uvec4 faceIndices = uvec4( 0u );\n      vec3 faceNormal = vec3( 0.0, 0.0, 1.0 );\n      vec3 barycoord = vec3( 0.0 );\n      float side = 1.0;\n      float dist = 0.0;\n      bvhIntersectFirstHit( bvh, rayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist );\n      vec3 hitPos = rayOrigin + rayDirection * max(dist - 0.001, 0.0);      \n      vec3 tempDir = refract(rayDirection, faceNormal, ior);\n      if (length(tempDir) != 0.0) {\n        rayDirection = tempDir;\n        break;\n      }\n      rayDirection = reflect(rayDirection, faceNormal);\n      rayOrigin = hitPos + rayDirection * 0.01;\n    }\n    rayDirection = normalize((modelMatrix * vec4(rayDirection, 0.0)).xyz);\n    return rayDirection;\n  }\n    \n  #include <common>\n  #include <cube_uv_reflection_fragment>\n    \n  #ifdef ENVMAP_TYPE_CUBEM\n    vec4 textureGradient(samplerCube envMap, vec3 rayDirection, vec3 directionCamPerfect) {\n      return textureGrad(envMap, rayDirection, dFdx(correctMips ? directionCamPerfect: rayDirection), dFdy(correctMips ? directionCamPerfect: rayDirection));\n    }\n  #else\n    vec4 textureGradient(sampler2D envMap, vec3 rayDirection, vec3 directionCamPerfect) {\n      vec2 uvv = equirectUv( rayDirection );\n      vec2 smoothUv = equirectUv( directionCamPerfect );\n      return textureGrad(envMap, uvv, dFdx(correctMips ? smoothUv : uvv), dFdy(correctMips ? smoothUv : uvv));\n    }\n  #endif\n  \n  void main() {\n    mat4 modelMatrixInverse = inverse(modelMatrix * vInstanceMatrix);\n    vec2 uv = gl_FragCoord.xy / resolution;\n    vec3 directionCamPerfect = (projectionMatrixInv * vec4(uv * 2.0 - 1.0, 0.0, 1.0)).xyz;\n    directionCamPerfect = (viewMatrixInv * vec4(directionCamPerfect, 0.0)).xyz;\n    directionCamPerfect = normalize(directionCamPerfect);\n    vec3 normal = vNormal;\n    vec3 rayOrigin = cameraPosition;\n    vec3 rayDirection = normalize(vWorldPosition - cameraPosition);\n    vec3 finalColor;\n    #ifdef CHROMATIC_ABERRATIONS\n      vec3 rayDirectionG = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior, 1.0), modelMatrixInverse);\n      #ifdef FAST_CHROMA \n        vec3 rayDirectionR = normalize(rayDirectionG + 1.0 * vec3(aberrationStrength / 2.0));\n        vec3 rayDirectionB = normalize(rayDirectionG - 1.0 * vec3(aberrationStrength / 2.0));\n      #else\n        vec3 rayDirectionR = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior * (1.0 - aberrationStrength), 1.0), modelMatrixInverse);\n        vec3 rayDirectionB = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior * (1.0 + aberrationStrength), 1.0), modelMatrixInverse);\n      #endif\n      float finalColorR = textureGradient(envMap, rayDirectionR, directionCamPerfect).r;\n      float finalColorG = textureGradient(envMap, rayDirectionG, directionCamPerfect).g;\n      float finalColorB = textureGradient(envMap, rayDirectionB, directionCamPerfect).b;\n      finalColor = vec3(finalColorR, finalColorG, finalColorB) * vColor;\n    #else\n      rayDirection = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior, 1.0), modelMatrixInverse);\n      finalColor = textureGradient(envMap, rayDirection, directionCamPerfect).rgb;    \n      finalColor *= vColor;\n    #endif\n    float nFresnel = fresnelFunc(viewDirection, normal) * fresnel;\n    gl_FragColor = vec4(mix(finalColor, vec3(1.0), nFresnel), 1.0);      \n    #include <tonemapping_fragment>\n    #include <encodings_fragment>\n  }`);\n\nexport { MeshRefractionMaterial };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\n\nclass PointMaterialImpl extends THREE.PointsMaterial {\n  constructor(props) {\n    super(props);\n\n    this.onBeforeCompile = (shader, renderer) => {\n      const {\n        isWebGL2\n      } = renderer.capabilities;\n      shader.fragmentShader = shader.fragmentShader.replace('#include <output_fragment>', `\n        ${!isWebGL2 ? '#extension GL_OES_standard_derivatives : enable\\n#include <output_fragment>' : '#include <output_fragment>'}\n      vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n      float r = dot(cxy, cxy);\n      float delta = fwidth(r);     \n      float mask = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n      gl_FragColor = vec4(gl_FragColor.rgb, mask * gl_FragColor.a );\n      `);\n    };\n  }\n\n}\nconst PointMaterial = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const [material] = React.useState(() => new PointMaterialImpl(null));\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({}, props, {\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }));\n});\n\nexport { PointMaterial, PointMaterialImpl };\n", "import * as THREE from 'three';\n\nconst pcss = ({\n  frustum = 3.75,\n  size = 0.005,\n  near = 9.5,\n  samples = 17,\n  rings = 11\n} = {}) => `#define LIGHT_WORLD_SIZE ${size}\n#define LIGHT_FRUSTUM_WIDTH ${frustum}\n#define LIGHT_SIZE_UV (LIGHT_WORLD_SIZE / LIGHT_FRUSTUM_WIDTH)\n#define NEAR_PLANE ${near}\n\n#define NUM_SAMPLES ${samples}\n#define NUM_RINGS ${rings}\n#define BLOCKER_SEARCH_NUM_SAMPLES NUM_SAMPLES\n#define PCF_NUM_SAMPLES NUM_SAMPLES\n\nvec2 poissonDisk[NUM_SAMPLES];\n\nvoid initPoissonSamples(const in vec2 randomSeed) {\n  float ANGLE_STEP = PI2 * float(NUM_RINGS) / float(NUM_SAMPLES);\n  float INV_NUM_SAMPLES = 1.0 / float(NUM_SAMPLES);\n  float angle = rand(randomSeed) * PI2;\n  float radius = INV_NUM_SAMPLES;\n  float radiusStep = radius;\n  for (int i = 0; i < NUM_SAMPLES; i++) {\n    poissonDisk[i] = vec2(cos(angle), sin(angle)) * pow(radius, 0.75);\n    radius += radiusStep;\n    angle += ANGLE_STEP;\n  }\n}\n\nfloat penumbraSize(const in float zReceiver, const in float zBlocker) { // Parallel plane estimation\n  return (zReceiver - zBlocker) / zBlocker;\n}\n\nfloat findBlocker(sampler2D shadowMap, const in vec2 uv, const in float zReceiver) {\n  float searchRadius = LIGHT_SIZE_UV * (zReceiver - NEAR_PLANE) / zReceiver;\n  float blockerDepthSum = 0.0;\n  int numBlockers = 0;\n  for (int i = 0; i < BLOCKER_SEARCH_NUM_SAMPLES; i++) {\n    float shadowMapDepth = unpackRGBAToDepth(texture2D(shadowMap, uv + poissonDisk[i] * searchRadius));\n    if (shadowMapDepth < zReceiver) {\n      blockerDepthSum += shadowMapDepth;\n      numBlockers++;\n    }\n  }\n  if (numBlockers == 0) return -1.0;\n  return blockerDepthSum / float(numBlockers);\n}\n\nfloat PCF_Filter(sampler2D shadowMap, vec2 uv, float zReceiver, float filterRadius) {\n  float sum = 0.0;\n  for (int i = 0; i < PCF_NUM_SAMPLES; i++) {\n    float depth = unpackRGBAToDepth(texture2D(shadowMap, uv + poissonDisk[ i ] * filterRadius));\n    if (zReceiver <= depth) sum += 1.0;\n  }\n  for (int i = 0; i < PCF_NUM_SAMPLES; i++) {\n    float depth = unpackRGBAToDepth(texture2D(shadowMap, uv + -poissonDisk[ i ].yx * filterRadius));\n    if (zReceiver <= depth) sum += 1.0;\n  }\n  return sum / (2.0 * float(PCF_NUM_SAMPLES));\n}\n\nfloat PCSS(sampler2D shadowMap, vec4 coords) {\n  vec2 uv = coords.xy;\n  float zReceiver = coords.z; // Assumed to be eye-space z in this code\n  initPoissonSamples(uv);\n  float avgBlockerDepth = findBlocker(shadowMap, uv, zReceiver);\n  if (avgBlockerDepth == -1.0) return 1.0;\n  float penumbraRatio = penumbraSize(zReceiver, avgBlockerDepth);\n  float filterRadius = penumbraRatio * LIGHT_SIZE_UV * NEAR_PLANE / zReceiver;\n  return PCF_Filter(shadowMap, uv, zReceiver, filterRadius);\n}`;\n\nlet deployed = false;\nconst softShadows = props => {\n  // Avoid adding the effect twice, which may happen in HMR scenarios\n  if (!deployed) {\n    deployed = true;\n    let shader = THREE.ShaderChunk.shadowmap_pars_fragment;\n    shader = shader.replace('#ifdef USE_SHADOWMAP', '#ifdef USE_SHADOWMAP\\n' + pcss({ ...props\n    }));\n    shader = shader.replace('#if defined( SHADOWMAP_TYPE_PCF )', '\\nreturn PCSS(shadowMap, shadowCoord);\\n#if defined( SHADOWMAP_TYPE_PCF )');\n    THREE.ShaderChunk.shadowmap_pars_fragment = shader;\n  }\n};\n\nexport { softShadows };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\n\nfunction create(type) {\n  const El = type + 'Geometry';\n  return /*#__PURE__*/React.forwardRef(({\n    args,\n    children,\n    ...props\n  }, ref) => /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(El, {\n    attach: \"geometry\",\n    args: args\n  }), children));\n}\n\nconst Box = create('box');\nconst Circle = create('circle');\nconst Cone = create('cone');\nconst Cylinder = create('cylinder');\nconst Sphere = create('sphere');\nconst Plane = create('plane');\nconst Tube = create('tube');\nconst Torus = create('torus');\nconst TorusKnot = create('torusKnot');\nconst Tetrahedron = create('tetrahedron');\nconst Ring = create('ring');\nconst Polyhedron = create('polyhedron');\nconst Icosahedron = create('icosahedron');\nconst Octahedron = create('octahedron');\nconst Dodecahedron = create('dodecahedron');\nconst Extrude = create('extrude');\nconst Lathe = create('lathe');\nconst Capsule = create('capsule');\n\nexport { Box, Capsule, Circle, Cone, Cylinder, Dodecahedron, Extrude, Icosahedron, Lathe, Octahedron, Plane, Polyhedron, Ring, Sphere, Tetrahedron, Torus, TorusKnot, Tube };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Shape } from 'three';\n\nconst eps = 0.00001;\n\nfunction createShape(width, height, radius0) {\n  const shape = new Shape();\n  const radius = radius0 - eps;\n  shape.absarc(eps, eps, eps, -Math.PI / 2, -Math.PI, true);\n  shape.absarc(eps, height - radius * 2, eps, Math.PI, Math.PI / 2, true);\n  shape.absarc(width - radius * 2, height - radius * 2, eps, Math.PI / 2, 0, true);\n  shape.absarc(width - radius * 2, eps, eps, 0, -Math.PI / 2, true);\n  return shape;\n}\n\nconst RoundedBox = /*#__PURE__*/React.forwardRef(function RoundedBox({\n  args: [width = 1, height = 1, depth = 1] = [],\n  radius = 0.05,\n  steps = 1,\n  smoothness = 4,\n  children,\n  ...rest\n}, ref) {\n  const shape = React.useMemo(() => createShape(width, height, radius), [width, height, radius]);\n  const params = React.useMemo(() => ({\n    depth: depth - radius * 2,\n    bevelEnabled: true,\n    bevelSegments: smoothness * 2,\n    steps,\n    bevelSize: radius - eps,\n    bevelThickness: radius,\n    curveSegments: smoothness\n  }), [depth, radius, smoothness]);\n  const geomRef = React.useRef();\n  React.useLayoutEffect(() => {\n    if (geomRef.current) {\n      geomRef.current.center();\n    }\n  }, [shape, params]);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref\n  }, rest), /*#__PURE__*/React.createElement(\"extrudeGeometry\", {\n    ref: geomRef,\n    args: [shape, params]\n  }), children);\n});\n\nexport { RoundedBox };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\n\nfunction createScreenQuadGeometry() {\n  const geometry = new THREE.BufferGeometry();\n  const vertices = new Float32Array([-1, -1, 3, -1, -1, 3]);\n  geometry.setAttribute('position', new THREE.BufferAttribute(vertices, 2));\n  return geometry;\n}\n\nconst ScreenQuad = /*#__PURE__*/React.forwardRef(function ScreenQuad({\n  children,\n  ...restProps\n}, ref) {\n  const geometry = React.useMemo(createScreenQuadGeometry, []);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref,\n    geometry: geometry,\n    frustumCulled: false\n  }, restProps), children);\n});\n\nexport { ScreenQuad };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { Box3, Vector3, Sphere } from 'three';\nimport * as React from 'react';\n\nconst Center = /*#__PURE__*/React.forwardRef(function Center({\n  children,\n  disableX,\n  disableY,\n  disableZ,\n  left,\n  right,\n  top,\n  bottom,\n  front,\n  back,\n  onCentered,\n  precise = true,\n  ...props\n}, fRef) {\n  const ref = React.useRef(null);\n  const outer = React.useRef(null);\n  const inner = React.useRef(null);\n  React.useLayoutEffect(() => {\n    outer.current.matrixWorld.identity();\n    const box3 = new Box3().setFromObject(inner.current, precise);\n    const center = new Vector3();\n    const sphere = new Sphere();\n    const width = box3.max.x - box3.min.x;\n    const height = box3.max.y - box3.min.y;\n    const depth = box3.max.z - box3.min.z;\n    box3.getCenter(center);\n    box3.getBoundingSphere(sphere);\n    const vAlign = top ? height / 2 : bottom ? -height / 2 : 0;\n    const hAlign = left ? -width / 2 : right ? width / 2 : 0;\n    const dAlign = front ? depth / 2 : back ? -depth / 2 : 0;\n    outer.current.position.set(disableX ? 0 : -center.x + hAlign, disableY ? 0 : -center.y + vAlign, disableZ ? 0 : -center.z + dAlign);\n\n    if (typeof onCentered !== 'undefined') {\n      onCentered({\n        parent: ref.current.parent,\n        container: ref.current,\n        width,\n        height,\n        depth,\n        boundingBox: box3,\n        boundingSphere: sphere,\n        center: center,\n        verticalAlignment: vAlign,\n        horizontalAlignment: hAlign,\n        depthAlignment: dAlign\n      });\n    }\n  }, [children]);\n  React.useImperativeHandle(fRef, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(\"group\", {\n    ref: outer\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: inner\n  }, children)));\n});\n\nexport { Center };\n", "import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nconst isOrthographic = def => def && def.isOrthographicCamera;\n\nconst isBox3 = def => def && def.isBox3;\n\nconst context = /*#__PURE__*/React.createContext(null);\nfunction Bounds({\n  children,\n  damping = 6,\n  fit,\n  clip,\n  observe,\n  margin = 1.2,\n  eps = 0.01,\n  onFit\n}) {\n  const ref = React.useRef(null);\n  const {\n    camera,\n    invalidate,\n    size,\n    controls: controlsImpl\n  } = useThree();\n  const controls = controlsImpl;\n  const onFitRef = React.useRef(onFit);\n  onFitRef.current = onFit;\n\n  function equals(a, b) {\n    return Math.abs(a.x - b.x) < eps && Math.abs(a.y - b.y) < eps && Math.abs(a.z - b.z) < eps;\n  }\n\n  function damp(v, t, lambda, delta) {\n    v.x = THREE.MathUtils.damp(v.x, t.x, lambda, delta);\n    v.y = THREE.MathUtils.damp(v.y, t.y, lambda, delta);\n    v.z = THREE.MathUtils.damp(v.z, t.z, lambda, delta);\n  }\n\n  const [current] = React.useState(() => ({\n    animating: false,\n    focus: new THREE.Vector3(),\n    camera: new THREE.Vector3(),\n    zoom: 1\n  }));\n  const [goal] = React.useState(() => ({\n    focus: new THREE.Vector3(),\n    camera: new THREE.Vector3(),\n    zoom: 1\n  }));\n  const [box] = React.useState(() => new THREE.Box3());\n  const api = React.useMemo(() => {\n    function getSize() {\n      const size = box.getSize(new THREE.Vector3());\n      const center = box.getCenter(new THREE.Vector3());\n      const maxSize = Math.max(size.x, size.y, size.z);\n      const fitHeightDistance = isOrthographic(camera) ? maxSize * 4 : maxSize / (2 * Math.atan(Math.PI * camera.fov / 360));\n      const fitWidthDistance = isOrthographic(camera) ? maxSize * 4 : fitHeightDistance / camera.aspect;\n      const distance = margin * Math.max(fitHeightDistance, fitWidthDistance);\n      return {\n        box,\n        size,\n        center,\n        distance\n      };\n    }\n\n    return {\n      getSize,\n\n      refresh(object) {\n        if (isBox3(object)) box.copy(object);else {\n          const target = object || ref.current;\n          target.updateWorldMatrix(true, true);\n          box.setFromObject(target);\n        }\n\n        if (box.isEmpty()) {\n          const max = camera.position.length() || 10;\n          box.setFromCenterAndSize(new THREE.Vector3(), new THREE.Vector3(max, max, max));\n        }\n\n        if ((controls == null ? void 0 : controls.constructor.name) === 'OrthographicTrackballControls') {\n          // Put camera on a sphere along which it should move\n          const {\n            distance\n          } = getSize();\n          const direction = camera.position.clone().sub(controls.target).normalize().multiplyScalar(distance);\n          const newPos = controls.target.clone().add(direction);\n          camera.position.copy(newPos);\n        }\n\n        return this;\n      },\n\n      clip() {\n        const {\n          distance\n        } = getSize();\n        if (controls) controls.maxDistance = distance * 10;\n        camera.near = distance / 100;\n        camera.far = distance * 100;\n        camera.updateProjectionMatrix();\n        if (controls) controls.update();\n        invalidate();\n        return this;\n      },\n\n      to({\n        position,\n        target\n      }) {\n        current.camera.copy(camera.position);\n        const {\n          center\n        } = getSize();\n        goal.camera.set(...position);\n\n        if (target) {\n          goal.focus.set(...target);\n        } else {\n          goal.focus.copy(center);\n        }\n\n        if (damping) {\n          current.animating = true;\n        } else {\n          camera.position.set(...position);\n        }\n\n        return this;\n      },\n\n      fit() {\n        current.camera.copy(camera.position);\n        if (controls) current.focus.copy(controls.target);\n        const {\n          center,\n          distance\n        } = getSize();\n        const direction = center.clone().sub(camera.position).normalize().multiplyScalar(distance);\n        goal.camera.copy(center).sub(direction);\n        goal.focus.copy(center);\n\n        if (isOrthographic(camera)) {\n          current.zoom = camera.zoom;\n          let maxHeight = 0,\n              maxWidth = 0;\n          const vertices = [new THREE.Vector3(box.min.x, box.min.y, box.min.z), new THREE.Vector3(box.min.x, box.max.y, box.min.z), new THREE.Vector3(box.min.x, box.min.y, box.max.z), new THREE.Vector3(box.min.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.min.z), new THREE.Vector3(box.max.x, box.min.y, box.max.z), new THREE.Vector3(box.max.x, box.min.y, box.min.z)]; // Transform the center and each corner to camera space\n\n          center.applyMatrix4(camera.matrixWorldInverse);\n\n          for (const v of vertices) {\n            v.applyMatrix4(camera.matrixWorldInverse);\n            maxHeight = Math.max(maxHeight, Math.abs(v.y - center.y));\n            maxWidth = Math.max(maxWidth, Math.abs(v.x - center.x));\n          }\n\n          maxHeight *= 2;\n          maxWidth *= 2;\n          const zoomForHeight = (camera.top - camera.bottom) / maxHeight;\n          const zoomForWidth = (camera.right - camera.left) / maxWidth;\n          goal.zoom = Math.min(zoomForHeight, zoomForWidth) / margin;\n\n          if (!damping) {\n            camera.zoom = goal.zoom;\n            camera.updateProjectionMatrix();\n          }\n        }\n\n        if (damping) {\n          current.animating = true;\n        } else {\n          camera.position.copy(goal.camera);\n          camera.lookAt(goal.focus);\n\n          if (controls) {\n            controls.target.copy(goal.focus);\n            controls.update();\n          }\n        }\n\n        if (onFitRef.current) onFitRef.current(this.getSize());\n        invalidate();\n        return this;\n      }\n\n    };\n  }, [box, camera, controls, margin, damping, invalidate]);\n  React.useLayoutEffect(() => {\n    if (controls) {\n      // Try to prevent drag hijacking\n      const callback = () => current.animating = false;\n\n      controls.addEventListener('start', callback);\n      return () => controls.removeEventListener('start', callback);\n    }\n  }, [controls]); // Scale pointer on window resize\n\n  const count = React.useRef(0);\n  React.useLayoutEffect(() => {\n    if (observe || count.current++ === 0) {\n      api.refresh();\n      if (fit) api.fit();\n      if (clip) api.clip();\n    }\n  }, [size, clip, fit, observe, camera, controls]);\n  useFrame((state, delta) => {\n    if (current.animating) {\n      damp(current.focus, goal.focus, damping, delta);\n      damp(current.camera, goal.camera, damping, delta);\n      current.zoom = THREE.MathUtils.damp(current.zoom, goal.zoom, damping, delta);\n      camera.position.copy(current.camera);\n\n      if (isOrthographic(camera)) {\n        camera.zoom = current.zoom;\n        camera.updateProjectionMatrix();\n      }\n\n      if (!controls) {\n        camera.lookAt(current.focus);\n      } else {\n        controls.target.copy(current.focus);\n        controls.update();\n      }\n\n      invalidate();\n      if (isOrthographic(camera) && !(Math.abs(current.zoom - goal.zoom) < eps)) return;\n      if (!isOrthographic(camera) && !equals(current.camera, goal.camera)) return;\n      if (controls && !equals(current.focus, goal.focus)) return;\n      current.animating = false;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n}\nfunction useBounds() {\n  return React.useContext(context);\n}\n\nexport { Bounds, useBounds };\n", "import * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { SimplexNoise } from 'three-stdlib';\n\nconst CameraShake = /*#__PURE__*/React.forwardRef(({\n  intensity = 1,\n  decay,\n  decayRate = 0.65,\n  maxYaw = 0.1,\n  maxPitch = 0.1,\n  maxRoll = 0.1,\n  yawFrequency = 0.1,\n  pitchFrequency = 0.1,\n  rollFrequency = 0.1\n}, ref) => {\n  const camera = useThree(state => state.camera);\n  const defaultControls = useThree(state => state.controls);\n  const intensityRef = React.useRef(intensity);\n  const initialRotation = React.useRef(camera.rotation.clone());\n  const [yawNoise] = React.useState(() => new SimplexNoise());\n  const [pitchNoise] = React.useState(() => new SimplexNoise());\n  const [rollNoise] = React.useState(() => new SimplexNoise());\n\n  const constrainIntensity = () => {\n    if (intensityRef.current < 0 || intensityRef.current > 1) {\n      intensityRef.current = intensityRef.current < 0 ? 0 : 1;\n    }\n  };\n\n  React.useImperativeHandle(ref, () => ({\n    getIntensity: () => intensityRef.current,\n    setIntensity: val => {\n      intensityRef.current = val;\n      constrainIntensity();\n    }\n  }), []);\n  React.useEffect(() => {\n    if (defaultControls) {\n      const callback = () => void (initialRotation.current = camera.rotation.clone());\n\n      defaultControls.addEventListener('change', callback);\n      callback();\n      return () => void defaultControls.removeEventListener('change', callback);\n    }\n  }, [camera, defaultControls]);\n  useFrame((state, delta) => {\n    const shake = Math.pow(intensityRef.current, 2);\n    const yaw = maxYaw * shake * yawNoise.noise(state.clock.elapsedTime * yawFrequency, 1);\n    const pitch = maxPitch * shake * pitchNoise.noise(state.clock.elapsedTime * pitchFrequency, 1);\n    const roll = maxRoll * shake * rollNoise.noise(state.clock.elapsedTime * rollFrequency, 1);\n    camera.rotation.set(initialRotation.current.x + pitch, initialRotation.current.y + yaw, initialRotation.current.z + roll);\n\n    if (decay && intensityRef.current > 0) {\n      intensityRef.current -= decayRate * delta;\n      constrainIntensity();\n    }\n  });\n  return null;\n});\n\nexport { CameraShake };\n", "import * as React from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport * as THREE from 'three';\n\nconst Float = /*#__PURE__*/React.forwardRef(({\n  children,\n  speed = 1,\n  rotationIntensity = 1,\n  floatIntensity = 1,\n  floatingRange = [-0.1, 0.1],\n  ...props\n}, forwardRef) => {\n  const ref = React.useRef(null);\n  const offset = React.useRef(Math.random() * 10000);\n  useFrame(state => {\n    var _floatingRange$, _floatingRange$2;\n\n    const t = offset.current + state.clock.getElapsedTime();\n    ref.current.rotation.x = Math.cos(t / 4 * speed) / 8 * rotationIntensity;\n    ref.current.rotation.y = Math.sin(t / 4 * speed) / 8 * rotationIntensity;\n    ref.current.rotation.z = Math.sin(t / 4 * speed) / 20 * rotationIntensity;\n    let yPosition = Math.sin(t / 4 * speed) / 10;\n    yPosition = THREE.MathUtils.mapLinear(yPosition, -0.1, 0.1, (_floatingRange$ = floatingRange == null ? void 0 : floatingRange[0]) !== null && _floatingRange$ !== void 0 ? _floatingRange$ : -0.1, (_floatingRange$2 = floatingRange == null ? void 0 : floatingRange[1]) !== null && _floatingRange$2 !== void 0 ? _floatingRange$2 : 0.1);\n    ref.current.position.y = yPosition * floatIntensity;\n  });\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"group\", {\n    ref: mergeRefs([ref, forwardRef])\n  }, children));\n});\n\nexport { Float };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Environment } from './Environment.js';\nimport { ContactShadows } from './ContactShadows.js';\nimport { Center } from './Center.js';\nimport { AccumulativeShadows, RandomizedLight } from './AccumulativeShadows.js';\nimport { Bounds, useBounds } from './Bounds.js';\n\nconst presets = {\n  rembrandt: {\n    main: [1, 2, 1],\n    fill: [-2, -0.5, -2]\n  },\n  portrait: {\n    main: [-1, 2, 0.5],\n    fill: [-1, 0.5, -1.5]\n  },\n  upfront: {\n    main: [0, 2, 1],\n    fill: [-1, 0.5, -1.5]\n  },\n  soft: {\n    main: [-2, 4, 4],\n    fill: [-1, 0.5, -1.5]\n  }\n};\n\nfunction Refit({\n  radius,\n  adjustCamera\n}) {\n  const api = useBounds();\n  React.useEffect(() => {\n    if (adjustCamera) api.refresh().clip().fit();\n  }, [radius, adjustCamera]);\n  return null;\n}\n\nfunction Stage({\n  children,\n  center,\n  adjustCamera = true,\n  intensity = 0.5,\n  shadows = 'contact',\n  environment = 'city',\n  preset = 'rembrandt',\n  ...props\n}) {\n  var _bias, _normalBias, _size, _offset, _amount, _radius, _ambient, _intensity;\n\n  const config = typeof preset === 'string' ? presets[preset] : preset;\n  const [{\n    radius,\n    height\n  }, set] = React.useState({\n    radius: 0,\n    width: 0,\n    height: 0,\n    depth: 0\n  });\n  const shadowBias = (_bias = shadows == null ? void 0 : shadows.bias) !== null && _bias !== void 0 ? _bias : -0.0001;\n  const normalBias = (_normalBias = shadows == null ? void 0 : shadows.normalBias) !== null && _normalBias !== void 0 ? _normalBias : 0;\n  const shadowSize = (_size = shadows == null ? void 0 : shadows.size) !== null && _size !== void 0 ? _size : 1024;\n  const shadowOffset = (_offset = shadows == null ? void 0 : shadows.offset) !== null && _offset !== void 0 ? _offset : 0;\n  const contactShadow = shadows === 'contact' || (shadows == null ? void 0 : shadows.type) === 'contact';\n  const accumulativeShadow = shadows === 'accumulative' || (shadows == null ? void 0 : shadows.type) === 'accumulative';\n  const shadowSpread = { ...(typeof shadows === 'object' ? shadows : {})\n  };\n  const environmentProps = !environment ? null : typeof environment === 'string' ? {\n    preset: environment\n  } : environment;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ambientLight\", {\n    intensity: intensity / 3\n  }), /*#__PURE__*/React.createElement(\"spotLight\", {\n    penumbra: 1,\n    position: [config.main[0] * radius, config.main[1] * radius, config.main[2] * radius],\n    intensity: intensity * 2,\n    castShadow: !!shadows,\n    \"shadow-bias\": shadowBias,\n    \"shadow-normalBias\": normalBias,\n    \"shadow-mapSize\": shadowSize\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    position: [config.fill[0] * radius, config.fill[1] * radius, config.fill[2] * radius],\n    intensity: intensity\n  }), /*#__PURE__*/React.createElement(Bounds, _extends({\n    fit: !!adjustCamera,\n    clip: !!adjustCamera,\n    margin: Number(adjustCamera),\n    observe: true\n  }, props), /*#__PURE__*/React.createElement(Refit, {\n    radius: radius,\n    adjustCamera: adjustCamera\n  }), /*#__PURE__*/React.createElement(Center, _extends({}, center, {\n    position: [0, shadowOffset / 2, 0],\n    onCentered: props => {\n      const {\n        width,\n        height,\n        depth,\n        boundingSphere\n      } = props;\n      set({\n        radius: boundingSphere.radius,\n        width,\n        height,\n        depth\n      });\n      if (center != null && center.onCentered) center.onCentered(props);\n    }\n  }), children)), /*#__PURE__*/React.createElement(\"group\", {\n    position: [0, -height / 2 - shadowOffset / 2, 0]\n  }, contactShadow && /*#__PURE__*/React.createElement(ContactShadows, _extends({\n    scale: radius * 4,\n    far: radius,\n    blur: 2\n  }, shadowSpread)), accumulativeShadow && /*#__PURE__*/React.createElement(AccumulativeShadows, _extends({\n    temporal: true,\n    frames: 100,\n    alphaTest: 0.9,\n    toneMapped: true,\n    scale: radius * 4\n  }, shadowSpread), /*#__PURE__*/React.createElement(RandomizedLight, {\n    amount: (_amount = shadowSpread.amount) !== null && _amount !== void 0 ? _amount : 8,\n    radius: (_radius = shadowSpread.radius) !== null && _radius !== void 0 ? _radius : radius,\n    ambient: (_ambient = shadowSpread.ambient) !== null && _ambient !== void 0 ? _ambient : 0.5,\n    intensity: (_intensity = shadowSpread.intensity) !== null && _intensity !== void 0 ? _intensity : 1,\n    position: [config.main[0] * radius, config.main[1] * radius, config.main[2] * radius],\n    size: radius * 4,\n    bias: -shadowBias,\n    mapSize: shadowSize\n  }))), environment && /*#__PURE__*/React.createElement(Environment, environmentProps));\n}\n\nexport { Stage };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree, useLoader, useFrame, createPortal, extend } from '@react-three/fiber';\nimport { CubeReflectionMapping, EquirectangularReflectionMapping, sRGBEncoding, LinearEncoding, Scene, WebGLCubeRenderTarget, HalfFloatType, CubeTextureLoader } from 'three';\nimport { RGBELoader, GroundProjectedEnv } from 'three-stdlib';\nimport { presetsObj } from '../helpers/environment-assets.js';\n\nconst CUBEMAP_ROOT = 'https://market-assets.fra1.cdn.digitaloceanspaces.com/market-assets/hdris/';\n\nconst isRef = obj => obj.current && obj.current.isScene;\n\nconst resolveScene = scene => isRef(scene) ? scene.current : scene;\n\nfunction setEnvProps(background, scene, defaultScene, texture, blur = 0) {\n  const target = resolveScene(scene || defaultScene);\n  const oldbg = target.background;\n  const oldenv = target.environment; // @ts-ignore\n\n  const oldBlur = target.backgroundBlurriness || 0;\n  if (background !== 'only') target.environment = texture;\n  if (background) target.background = texture; // @ts-ignore\n\n  if (background && target.backgroundBlurriness !== undefined) target.backgroundBlurriness = blur;\n  return () => {\n    if (background !== 'only') target.environment = oldenv;\n    if (background) target.background = oldbg; // @ts-ignore\n\n    if (background && target.backgroundBlurriness !== undefined) target.backgroundBlurriness = oldBlur;\n  };\n}\n\nfunction EnvironmentMap({\n  scene,\n  background = false,\n  blur,\n  map\n}) {\n  const defaultScene = useThree(state => state.scene);\n  React.useLayoutEffect(() => {\n    if (map) return setEnvProps(background, scene, defaultScene, map, blur);\n  }, [defaultScene, scene, map, background, blur]);\n  return null;\n}\nfunction useEnvironment({\n  files = ['/px.png', '/nx.png', '/py.png', '/ny.png', '/pz.png', '/nz.png'],\n  path = '',\n  preset = undefined,\n  encoding = undefined,\n  extensions\n}) {\n  if (preset) {\n    if (!(preset in presetsObj)) throw new Error('Preset must be one of: ' + Object.keys(presetsObj).join(', '));\n    files = presetsObj[preset];\n    path = CUBEMAP_ROOT;\n  }\n\n  const isCubeMap = Array.isArray(files);\n  const loader = isCubeMap ? CubeTextureLoader : RGBELoader;\n  const loaderResult = useLoader( // @ts-expect-error\n  loader, isCubeMap ? [files] : files, loader => {\n    loader.setPath(path);\n    if (extensions) extensions(loader);\n  });\n  const texture = isCubeMap ? // @ts-ignore\n  loaderResult[0] : loaderResult;\n  texture.mapping = isCubeMap ? CubeReflectionMapping : EquirectangularReflectionMapping;\n  texture.encoding = (encoding !== null && encoding !== void 0 ? encoding : isCubeMap) ? sRGBEncoding : LinearEncoding;\n  return texture;\n}\nfunction EnvironmentCube({\n  background = false,\n  scene,\n  blur,\n  ...rest\n}) {\n  const texture = useEnvironment(rest);\n  const defaultScene = useThree(state => state.scene);\n  React.useLayoutEffect(() => {\n    return setEnvProps(background, scene, defaultScene, texture, blur);\n  }, [texture, background, scene, defaultScene, blur]);\n  return null;\n}\nfunction EnvironmentPortal({\n  children,\n  near = 1,\n  far = 1000,\n  resolution = 256,\n  frames = 1,\n  map,\n  background = false,\n  blur,\n  scene,\n  files,\n  path,\n  preset = undefined,\n  extensions\n}) {\n  const gl = useThree(state => state.gl);\n  const defaultScene = useThree(state => state.scene);\n  const camera = React.useRef(null);\n  const [virtualScene] = React.useState(() => new Scene());\n  const fbo = React.useMemo(() => {\n    const fbo = new WebGLCubeRenderTarget(resolution);\n    fbo.texture.type = HalfFloatType;\n    return fbo;\n  }, [resolution]);\n  React.useLayoutEffect(() => {\n    if (frames === 1) camera.current.update(gl, virtualScene);\n    return setEnvProps(background, scene, defaultScene, fbo.texture, blur);\n  }, [children, virtualScene, fbo.texture, scene, defaultScene, background, frames, gl]);\n  let count = 1;\n  useFrame(() => {\n    if (frames === Infinity || count < frames) {\n      camera.current.update(gl, virtualScene);\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal( /*#__PURE__*/React.createElement(React.Fragment, null, children, /*#__PURE__*/React.createElement(\"cubeCamera\", {\n    ref: camera,\n    args: [near, far, fbo]\n  }), files || preset ? /*#__PURE__*/React.createElement(EnvironmentCube, {\n    background: true,\n    files: files,\n    preset: preset,\n    path: path,\n    extensions: extensions\n  }) : map ? /*#__PURE__*/React.createElement(EnvironmentMap, {\n    background: true,\n    map: map,\n    extensions: extensions\n  }) : null), virtualScene));\n}\n\nfunction EnvironmentGround(props) {\n  var _props$ground, _props$ground2, _scale, _props$ground3;\n\n  const textureDefault = useEnvironment(props);\n  const texture = props.map || textureDefault;\n  React.useMemo(() => extend({\n    GroundProjectedEnvImpl: GroundProjectedEnv\n  }), []);\n  const args = React.useMemo(() => [texture], [texture]);\n  const height = (_props$ground = props.ground) == null ? void 0 : _props$ground.height;\n  const radius = (_props$ground2 = props.ground) == null ? void 0 : _props$ground2.radius;\n  const scale = (_scale = (_props$ground3 = props.ground) == null ? void 0 : _props$ground3.scale) !== null && _scale !== void 0 ? _scale : 1000;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EnvironmentMap, _extends({}, props, {\n    map: texture\n  })), /*#__PURE__*/React.createElement(\"groundProjectedEnvImpl\", {\n    args: args,\n    scale: scale,\n    height: height,\n    radius: radius\n  }));\n}\n\nfunction Environment(props) {\n  return props.ground ? /*#__PURE__*/React.createElement(EnvironmentGround, props) : props.map ? /*#__PURE__*/React.createElement(EnvironmentMap, props) : props.children ? /*#__PURE__*/React.createElement(EnvironmentPortal, props) : /*#__PURE__*/React.createElement(EnvironmentCube, props);\n}\n\nexport { Environment, EnvironmentCube, EnvironmentMap, EnvironmentPortal, useEnvironment };\n", "const presetsObj = {\n  sunset: 'venice/venice_sunset_1k.hdr',\n  dawn: 'kiara/kiara_1_dawn_1k.hdr',\n  night: 'dikhololo/dikhololo_night_1k.hdr',\n  warehouse: 'empty-wharehouse/empty_warehouse_01_1k.hdr',\n  forest: 'forrest-slope/forest_slope_1k.hdr',\n  apartment: 'lebombo/lebombo_1k.hdr',\n  studio: 'studio-small-3/studio_small_03_1k.hdr',\n  city: 'potsdamer-platz/potsdamer_platz_1k.hdr',\n  park: 'rooitou/rooitou_park_1k.hdr',\n  lobby: 'st-fagans/st_fagans_interior_1k.hdr'\n};\n\nexport { presetsObj };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { HorizontalBlurShader, VerticalBlurShader } from 'three-stdlib';\n\nconst ContactShadows = /*#__PURE__*/React.forwardRef(({\n  scale = 10,\n  frames = Infinity,\n  opacity = 1,\n  width = 1,\n  height = 1,\n  blur = 1,\n  far = 10,\n  resolution = 512,\n  smooth = true,\n  color = '#000000',\n  depthWrite = false,\n  renderOrder,\n  ...props\n}, ref) => {\n  const scene = useThree(state => state.scene);\n  const gl = useThree(state => state.gl);\n  const shadowCamera = React.useRef(null);\n  width = width * (Array.isArray(scale) ? scale[0] : scale || 1);\n  height = height * (Array.isArray(scale) ? scale[1] : scale || 1);\n  const [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur] = React.useMemo(() => {\n    const renderTarget = new THREE.WebGLRenderTarget(resolution, resolution);\n    const renderTargetBlur = new THREE.WebGLRenderTarget(resolution, resolution);\n    renderTargetBlur.texture.generateMipmaps = renderTarget.texture.generateMipmaps = false;\n    const planeGeometry = new THREE.PlaneGeometry(width, height).rotateX(Math.PI / 2);\n    const blurPlane = new THREE.Mesh(planeGeometry);\n    const depthMaterial = new THREE.MeshDepthMaterial();\n    depthMaterial.depthTest = depthMaterial.depthWrite = false;\n\n    depthMaterial.onBeforeCompile = shader => {\n      shader.uniforms = { ...shader.uniforms,\n        ucolor: {\n          value: new THREE.Color(color)\n        }\n      };\n      shader.fragmentShader = shader.fragmentShader.replace(`void main() {`, //\n      `uniform vec3 ucolor;\n           void main() {\n          `);\n      shader.fragmentShader = shader.fragmentShader.replace('vec4( vec3( 1.0 - fragCoordZ ), opacity );', // Colorize the shadow, multiply by the falloff so that the center can remain darker\n      'vec4( ucolor * fragCoordZ * 2.0, ( 1.0 - fragCoordZ ) * 1.0 );');\n    };\n\n    const horizontalBlurMaterial = new THREE.ShaderMaterial(HorizontalBlurShader);\n    const verticalBlurMaterial = new THREE.ShaderMaterial(VerticalBlurShader);\n    verticalBlurMaterial.depthTest = horizontalBlurMaterial.depthTest = false;\n    return [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur];\n  }, [resolution, width, height, scale, color]);\n\n  const blurShadows = blur => {\n    blurPlane.visible = true;\n    blurPlane.material = horizontalBlurMaterial;\n    horizontalBlurMaterial.uniforms.tDiffuse.value = renderTarget.texture;\n    horizontalBlurMaterial.uniforms.h.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTargetBlur);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.material = verticalBlurMaterial;\n    verticalBlurMaterial.uniforms.tDiffuse.value = renderTargetBlur.texture;\n    verticalBlurMaterial.uniforms.v.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTarget);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.visible = false;\n  };\n\n  let count = 0;\n  useFrame(() => {\n    if (shadowCamera.current && (frames === Infinity || count < frames)) {\n      const initialBackground = scene.background;\n      scene.background = null;\n      const initialOverrideMaterial = scene.overrideMaterial;\n      scene.overrideMaterial = depthMaterial;\n      gl.setRenderTarget(renderTarget);\n      gl.render(scene, shadowCamera.current);\n      scene.overrideMaterial = initialOverrideMaterial;\n      blurShadows(blur);\n      if (smooth) blurShadows(blur * 0.4);\n      gl.setRenderTarget(null);\n      scene.background = initialBackground;\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    \"rotation-x\": Math.PI / 2\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    renderOrder: renderOrder,\n    geometry: planeGeometry,\n    scale: [1, -1, 1],\n    rotation: [-Math.PI / 2, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    map: renderTarget.texture,\n    \"map-encoding\": gl.outputEncoding,\n    transparent: true,\n    opacity: opacity,\n    depthWrite: depthWrite\n  })), /*#__PURE__*/React.createElement(\"orthographicCamera\", {\n    ref: shadowCamera,\n    args: [-width / 2, width / 2, height / 2, -height / 2, 0, far]\n  }));\n});\n\nexport { ContactShadows };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { shaderMaterial } from './shaderMaterial.js';\n\nfunction isLight(object) {\n  return object.isLight;\n}\n\nfunction isGeometry(object) {\n  return !!object.geometry;\n}\n\nconst accumulativeContext = /*#__PURE__*/React.createContext(null);\nconst SoftShadowMaterial = shaderMaterial({\n  color: new THREE.Color(),\n  blend: 2.0,\n  alphaTest: 0.75,\n  opacity: 0,\n  map: null\n}, `varying vec2 vUv;\n   void main() {\n     gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);\n     vUv = uv;\n   }`, `varying vec2 vUv;\n   uniform sampler2D map;\n   uniform vec3 color;\n   uniform float opacity;\n   uniform float alphaTest;\n   uniform float blend;\n   void main() {\n     vec4 sampledDiffuseColor = texture2D(map, vUv);\n     gl_FragColor = vec4(color * sampledDiffuseColor.r * blend, max(0.0, (1.0 - (sampledDiffuseColor.r + sampledDiffuseColor.g + sampledDiffuseColor.b) / alphaTest)) * opacity);\n     #include <tonemapping_fragment>\n     #include <encodings_fragment>\n   }`);\nconst DiscardMaterial = shaderMaterial({}, 'void main() { gl_Position = vec4((uv - 0.5) * 2.0, 1.0, 1.0); }', 'void main() { discard; }');\nconst AccumulativeShadows = /*#__PURE__*/React.forwardRef(({\n  children,\n  temporal,\n  frames = 40,\n  limit = Infinity,\n  blend = 20,\n  scale = 10,\n  opacity = 1,\n  alphaTest = 0.75,\n  color = 'black',\n  colorBlend = 2,\n  resolution = 1024,\n  toneMapped = true,\n  ...props\n}, forwardRef) => {\n  extend({\n    SoftShadowMaterial\n  });\n  const gl = useThree(state => state.gl);\n  const scene = useThree(state => state.scene);\n  const camera = useThree(state => state.camera);\n  const gPlane = React.useRef(null);\n  const gLights = React.useRef(null);\n  const [plm] = React.useState(() => new ProgressiveLightMap(gl, scene, resolution));\n  React.useLayoutEffect(() => {\n    plm.configure(gPlane.current);\n  }, []);\n  const api = React.useMemo(() => ({\n    lights: new Map(),\n    temporal: !!temporal,\n    frames: Math.max(2, frames),\n    blend: Math.max(2, frames === Infinity ? blend : frames),\n    count: 0,\n    getMesh: () => gPlane.current,\n    reset: () => {\n      // Clear buffers, reset opacities, set frame count to 0\n      plm.clear();\n      const material = gPlane.current.material;\n      material.opacity = 0;\n      material.alphaTest = 0;\n      api.count = 0;\n    },\n    update: (frames = 1) => {\n      // Adapt the opacity-blend ratio to the number of frames\n      const material = gPlane.current.material;\n\n      if (!api.temporal) {\n        material.opacity = opacity;\n        material.alphaTest = alphaTest;\n      } else {\n        material.opacity = Math.min(opacity, material.opacity + opacity / api.blend);\n        material.alphaTest = Math.min(alphaTest, material.alphaTest + alphaTest / api.blend);\n      } // Switch accumulative lights on\n\n\n      gLights.current.visible = true; // Collect scene lights and meshes\n\n      plm.prepare(); // Update the lightmap and the accumulative lights\n\n      for (let i = 0; i < frames; i++) {\n        api.lights.forEach(light => light.update());\n        plm.update(camera, api.blend);\n      } // Switch lights off\n\n\n      gLights.current.visible = false; // Restore lights and meshes\n\n      plm.finish();\n    }\n  }), [plm, camera, scene, temporal, frames, blend, opacity, alphaTest]);\n  React.useLayoutEffect(() => {\n    // Reset internals, buffers, ...\n    api.reset(); // Update lightmap\n\n    if (!api.temporal && api.frames !== Infinity) api.update(api.blend);\n  }); // Expose api, allow children to set itself as the main light source\n\n  React.useImperativeHandle(forwardRef, () => api, [api]);\n  useFrame(() => {\n    if ((api.temporal || api.frames === Infinity) && api.count < api.frames && api.count < limit) {\n      api.update();\n      api.count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"group\", {\n    traverse: () => null,\n    ref: gLights\n  }, /*#__PURE__*/React.createElement(accumulativeContext.Provider, {\n    value: api\n  }, children)), /*#__PURE__*/React.createElement(\"mesh\", {\n    receiveShadow: true,\n    ref: gPlane,\n    scale: scale,\n    rotation: [-Math.PI / 2, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", null), /*#__PURE__*/React.createElement(\"softShadowMaterial\", {\n    transparent: true,\n    depthWrite: false,\n    toneMapped: toneMapped,\n    color: color,\n    blend: colorBlend,\n    map: plm.progressiveLightMap2.texture\n  })));\n});\nconst RandomizedLight = /*#__PURE__*/React.forwardRef(({\n  castShadow = true,\n  bias = 0.001,\n  mapSize = 512,\n  size = 5,\n  near = 0.5,\n  far = 500,\n  frames = 1,\n  position = [0, 0, 0],\n  radius = 1,\n  amount = 8,\n  intensity = 1,\n  ambient = 0.5,\n  ...props\n}, forwardRef) => {\n  const gLights = React.useRef(null);\n  const length = new THREE.Vector3(...position).length();\n  const parent = React.useContext(accumulativeContext);\n  const update = React.useCallback(() => {\n    let light;\n\n    if (gLights.current) {\n      for (let l = 0; l < gLights.current.children.length; l++) {\n        light = gLights.current.children[l];\n\n        if (Math.random() > ambient) {\n          light.position.set(position[0] + THREE.MathUtils.randFloatSpread(radius), position[1] + THREE.MathUtils.randFloatSpread(radius), position[2] + THREE.MathUtils.randFloatSpread(radius));\n        } else {\n          let lambda = Math.acos(2 * Math.random() - 1) - Math.PI / 2.0;\n          let phi = 2 * Math.PI * Math.random();\n          light.position.set(Math.cos(lambda) * Math.cos(phi) * length, Math.abs(Math.cos(lambda) * Math.sin(phi) * length), Math.sin(lambda) * length);\n        }\n      }\n    }\n  }, [radius, ambient, length, ...position]);\n  const api = React.useMemo(() => ({\n    update\n  }), [update]);\n  React.useImperativeHandle(forwardRef, () => api, [api]);\n  React.useLayoutEffect(() => {\n    const group = gLights.current;\n    if (parent) parent.lights.set(group.uuid, api);\n    return () => void parent.lights.delete(group.uuid);\n  }, [parent, api]);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: gLights\n  }, props), Array.from({\n    length: amount\n  }, (_, index) => /*#__PURE__*/React.createElement(\"directionalLight\", {\n    key: index,\n    castShadow: castShadow,\n    \"shadow-bias\": bias,\n    \"shadow-mapSize\": [mapSize, mapSize],\n    intensity: intensity / amount\n  }, /*#__PURE__*/React.createElement(\"orthographicCamera\", {\n    attach: \"shadow-camera\",\n    args: [-size, size, size, -size, near, far]\n  }))));\n}); // Based on \"Progressive Light Map Accumulator\", by [zalo](https://github.com/zalo/)\n\nclass ProgressiveLightMap {\n  constructor(renderer, scene, res = 1024) {\n    this.renderer = renderer;\n    this.res = res;\n    this.scene = scene;\n    this.buffer1Active = false;\n    this.lights = [];\n    this.meshes = [];\n    this.object = null; // Create the Progressive LightMap Texture\n\n    const format = /(Android|iPad|iPhone|iPod)/g.test(navigator.userAgent) ? THREE.HalfFloatType : THREE.FloatType;\n    this.progressiveLightMap1 = new THREE.WebGLRenderTarget(this.res, this.res, {\n      type: format,\n      encoding: renderer.outputEncoding\n    });\n    this.progressiveLightMap2 = new THREE.WebGLRenderTarget(this.res, this.res, {\n      type: format,\n      encoding: renderer.outputEncoding\n    }); // Inject some spicy new logic into a standard phong material\n\n    this.discardMat = new DiscardMaterial();\n    this.targetMat = new THREE.MeshPhongMaterial({\n      shininess: 0\n    });\n    this.previousShadowMap = {\n      value: this.progressiveLightMap1.texture\n    };\n    this.averagingWindow = {\n      value: 100\n    };\n\n    this.targetMat.onBeforeCompile = shader => {\n      // Vertex Shader: Set Vertex Positions to the Unwrapped UV Positions\n      shader.vertexShader = 'varying vec2 vUv;\\n' + shader.vertexShader.slice(0, -1) + 'vUv = uv; gl_Position = vec4((uv - 0.5) * 2.0, 1.0, 1.0); }'; // Fragment Shader: Set Pixels to average in the Previous frame's Shadows\n\n      const bodyStart = shader.fragmentShader.indexOf('void main() {');\n      shader.fragmentShader = shader.fragmentShader.replace('#include <clipping_planes_pars_fragment>', '#include <clipping_planes_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n');\n      shader.fragmentShader = 'varying vec2 vUv;\\n' + shader.fragmentShader.slice(0, bodyStart) + '\tuniform sampler2D previousShadowMap;\\n\tuniform float averagingWindow;\\n' + shader.fragmentShader.slice(bodyStart - 1, -1) + `\\nvec3 texelOld = texture2D(previousShadowMap, vUv).rgb;\n        gl_FragColor.rgb = mix(texelOld, gl_FragColor.rgb, 1.0/averagingWindow);\n      }`; // Set the Previous Frame's Texture Buffer and Averaging Window\n\n      shader.uniforms.previousShadowMap = this.previousShadowMap;\n      shader.uniforms.averagingWindow = this.averagingWindow;\n    };\n  }\n\n  clear() {\n    this.renderer.setRenderTarget(this.progressiveLightMap1);\n    this.renderer.clear();\n    this.renderer.setRenderTarget(this.progressiveLightMap2);\n    this.renderer.clear();\n    this.lights = [];\n    this.meshes = [];\n    this.scene.traverse(object => {\n      if (isGeometry(object)) {\n        this.meshes.push({\n          object,\n          material: object.material\n        });\n      } else if (isLight(object)) {\n        this.lights.push({\n          object,\n          intensity: object.intensity\n        });\n      }\n    });\n  }\n\n  prepare() {\n    this.lights.forEach(light => light.object.intensity = 0);\n    this.meshes.forEach(mesh => mesh.object.material = this.discardMat);\n  }\n\n  finish() {\n    this.lights.forEach(light => light.object.intensity = light.intensity);\n    this.meshes.forEach(mesh => mesh.object.material = mesh.material);\n  }\n\n  configure(object) {\n    this.object = object;\n  }\n\n  update(camera, blendWindow = 100) {\n    if (!this.object) return; // Set each object's material to the UV Unwrapped Surface Mapping Version\n\n    this.averagingWindow.value = blendWindow;\n    this.object.material = this.targetMat; // Ping-pong two surface buffers for reading/writing\n\n    const activeMap = this.buffer1Active ? this.progressiveLightMap1 : this.progressiveLightMap2;\n    const inactiveMap = this.buffer1Active ? this.progressiveLightMap2 : this.progressiveLightMap1; // Render the object's surface maps\n\n    const oldBg = this.scene.background;\n    this.scene.background = null;\n    this.renderer.setRenderTarget(activeMap);\n    this.previousShadowMap.value = inactiveMap.texture;\n    this.buffer1Active = !this.buffer1Active;\n    this.renderer.render(this.scene, camera);\n    this.renderer.setRenderTarget(null);\n    this.scene.background = oldBg;\n  }\n\n}\n\nexport { AccumulativeShadows, RandomizedLight, accumulativeContext };\n", "import * as React from 'react';\n\nconst easeInExpo = x => x === 0 ? 0 : Math.pow(2, 10 * x - 10);\n\nfunction Backdrop({\n  children,\n  floor = 0.25,\n  segments = 20,\n  receiveShadow,\n  ...props\n}) {\n  const ref = React.useRef(null);\n  React.useLayoutEffect(() => {\n    let i = 0;\n    const offset = segments / segments / 2;\n    const position = ref.current.attributes.position;\n\n    for (let x = 0; x < segments + 1; x++) {\n      for (let y = 0; y < segments + 1; y++) {\n        position.setXYZ(i++, x / segments - offset + (x === 0 ? -floor : 0), y / segments - offset, easeInExpo(x / segments));\n      }\n    }\n\n    position.needsUpdate = true;\n    ref.current.computeVertexNormals();\n  }, [segments, floor]);\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"mesh\", {\n    receiveShadow: receiveShadow,\n    rotation: [-Math.PI / 2, 0, Math.PI / 2]\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    ref: ref,\n    args: [1, 1, segments, segments]\n  }), children));\n}\n\nexport { Backdrop };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Color, DoubleSide } from 'three';\n\nconst Shadow = /*#__PURE__*/React.forwardRef(({\n  fog = false,\n  renderOrder,\n  depthWrite = false,\n  colorStop = 0.0,\n  color = 'black',\n  opacity = 0.5,\n  ...props\n}, ref) => {\n  const canvas = React.useMemo(() => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 128;\n    canvas.height = 128;\n    const context = canvas.getContext('2d');\n    const gradient = context.createRadialGradient(canvas.width / 2, canvas.height / 2, 0, canvas.width / 2, canvas.height / 2, canvas.width / 2);\n    gradient.addColorStop(colorStop, new Color(color).getStyle());\n    gradient.addColorStop(1, 'rgba(0,0,0,0)');\n    context.fillStyle = gradient;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    return canvas;\n  }, [color, colorStop]);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    renderOrder: renderOrder,\n    ref: ref,\n    \"rotation-x\": -Math.PI / 2\n  }, props), /*#__PURE__*/React.createElement(\"planeGeometry\", null), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    opacity: opacity,\n    fog: fog,\n    depthWrite: depthWrite,\n    side: DoubleSide\n  }, /*#__PURE__*/React.createElement(\"canvasTexture\", {\n    attach: \"map\",\n    args: [canvas]\n  })));\n});\n\nexport { Shadow };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Plane, Vector3, Matrix4, Vector4, PerspectiveCamera, LinearFilter, WebGLRenderTarget, DepthTexture, DepthFormat, UnsignedShortType } from 'three';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { BlurPass } from '../materials/BlurPass.js';\nimport { MeshReflectorMaterial } from '../materials/MeshReflectorMaterial.js';\n\nextend({\n  MeshReflectorMaterial\n});\nconst Reflector = /*#__PURE__*/React.forwardRef(({\n  mixBlur = 0,\n  mixStrength = 0.5,\n  resolution = 256,\n  blur = [0, 0],\n  args = [1, 1],\n  minDepthThreshold = 0.9,\n  maxDepthThreshold = 1,\n  depthScale = 0,\n  depthToBlurRatioBias = 0.25,\n  mirror = 0,\n  children,\n  debug = 0,\n  distortion = 1,\n  mixContrast = 1,\n  distortionMap,\n  ...props\n}, ref) => {\n  React.useEffect(() => {\n    console.warn('Reflector has been deprecated and will be removed next major. Replace it with <MeshReflectorMaterial />!');\n  }, []);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const scene = useThree(({\n    scene\n  }) => scene);\n  blur = Array.isArray(blur) ? blur : [blur, blur];\n  const hasBlur = blur[0] + blur[1] > 0;\n  const meshRef = React.useRef(null);\n  const [reflectorPlane] = React.useState(() => new Plane());\n  const [normal] = React.useState(() => new Vector3());\n  const [reflectorWorldPosition] = React.useState(() => new Vector3());\n  const [cameraWorldPosition] = React.useState(() => new Vector3());\n  const [rotationMatrix] = React.useState(() => new Matrix4());\n  const [lookAtPosition] = React.useState(() => new Vector3(0, 0, -1));\n  const [clipPlane] = React.useState(() => new Vector4());\n  const [view] = React.useState(() => new Vector3());\n  const [target] = React.useState(() => new Vector3());\n  const [q] = React.useState(() => new Vector4());\n  const [textureMatrix] = React.useState(() => new Matrix4());\n  const [virtualCamera] = React.useState(() => new PerspectiveCamera());\n  const beforeRender = React.useCallback(() => {\n    reflectorWorldPosition.setFromMatrixPosition(meshRef.current.matrixWorld);\n    cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\n    rotationMatrix.extractRotation(meshRef.current.matrixWorld);\n    normal.set(0, 0, 1);\n    normal.applyMatrix4(rotationMatrix);\n    view.subVectors(reflectorWorldPosition, cameraWorldPosition); // Avoid rendering when reflector is facing away\n\n    if (view.dot(normal) > 0) return;\n    view.reflect(normal).negate();\n    view.add(reflectorWorldPosition);\n    rotationMatrix.extractRotation(camera.matrixWorld);\n    lookAtPosition.set(0, 0, -1);\n    lookAtPosition.applyMatrix4(rotationMatrix);\n    lookAtPosition.add(cameraWorldPosition);\n    target.subVectors(reflectorWorldPosition, lookAtPosition);\n    target.reflect(normal).negate();\n    target.add(reflectorWorldPosition);\n    virtualCamera.position.copy(view);\n    virtualCamera.up.set(0, 1, 0);\n    virtualCamera.up.applyMatrix4(rotationMatrix);\n    virtualCamera.up.reflect(normal);\n    virtualCamera.lookAt(target);\n    virtualCamera.far = camera.far; // Used in WebGLBackground\n\n    virtualCamera.updateMatrixWorld();\n    virtualCamera.projectionMatrix.copy(camera.projectionMatrix); // Update the texture matrix\n\n    textureMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n    textureMatrix.multiply(virtualCamera.projectionMatrix);\n    textureMatrix.multiply(virtualCamera.matrixWorldInverse);\n    textureMatrix.multiply(meshRef.current.matrixWorld); // Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\n    // Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\n\n    reflectorPlane.setFromNormalAndCoplanarPoint(normal, reflectorWorldPosition);\n    reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse);\n    clipPlane.set(reflectorPlane.normal.x, reflectorPlane.normal.y, reflectorPlane.normal.z, reflectorPlane.constant);\n    const projectionMatrix = virtualCamera.projectionMatrix;\n    q.x = (Math.sign(clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];\n    q.y = (Math.sign(clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];\n    q.z = -1.0;\n    q.w = (1.0 + projectionMatrix.elements[10]) / projectionMatrix.elements[14]; // Calculate the scaled plane vector\n\n    clipPlane.multiplyScalar(2.0 / clipPlane.dot(q)); // Replacing the third row of the projection matrix\n\n    projectionMatrix.elements[2] = clipPlane.x;\n    projectionMatrix.elements[6] = clipPlane.y;\n    projectionMatrix.elements[10] = clipPlane.z + 1.0;\n    projectionMatrix.elements[14] = clipPlane.w;\n  }, []);\n  const [fbo1, fbo2, blurpass, reflectorProps] = React.useMemo(() => {\n    const parameters = {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      encoding: gl.outputEncoding\n    };\n    const fbo1 = new WebGLRenderTarget(resolution, resolution, parameters);\n    fbo1.depthBuffer = true;\n    fbo1.depthTexture = new DepthTexture(resolution, resolution);\n    fbo1.depthTexture.format = DepthFormat;\n    fbo1.depthTexture.type = UnsignedShortType;\n    const fbo2 = new WebGLRenderTarget(resolution, resolution, parameters);\n    const blurpass = new BlurPass({\n      gl,\n      resolution,\n      width: blur[0],\n      height: blur[1],\n      minDepthThreshold,\n      maxDepthThreshold,\n      depthScale,\n      depthToBlurRatioBias\n    });\n    const reflectorProps = {\n      mirror,\n      textureMatrix,\n      mixBlur,\n      tDiffuse: fbo1.texture,\n      tDepth: fbo1.depthTexture,\n      tDiffuseBlur: fbo2.texture,\n      hasBlur,\n      mixStrength,\n      minDepthThreshold,\n      maxDepthThreshold,\n      depthScale,\n      depthToBlurRatioBias,\n      transparent: true,\n      debug,\n      distortion,\n      distortionMap,\n      mixContrast,\n      'defines-USE_BLUR': hasBlur ? '' : undefined,\n      'defines-USE_DEPTH': depthScale > 0 ? '' : undefined,\n      'defines-USE_DISTORTION': distortionMap ? '' : undefined\n    };\n    return [fbo1, fbo2, blurpass, reflectorProps];\n  }, [gl, blur, textureMatrix, resolution, mirror, hasBlur, mixBlur, mixStrength, minDepthThreshold, maxDepthThreshold, depthScale, depthToBlurRatioBias, debug, distortion, distortionMap, mixContrast]);\n  useFrame(() => {\n    if (!(meshRef != null && meshRef.current)) return;\n    meshRef.current.visible = false;\n    const currentXrEnabled = gl.xr.enabled;\n    const currentShadowAutoUpdate = gl.shadowMap.autoUpdate;\n    beforeRender();\n    gl.xr.enabled = false;\n    gl.shadowMap.autoUpdate = false;\n    gl.setRenderTarget(fbo1);\n    gl.state.buffers.depth.setMask(true);\n    if (!gl.autoClear) gl.clear();\n    gl.render(scene, virtualCamera);\n    if (hasBlur) blurpass.render(gl, fbo1, fbo2);\n    gl.xr.enabled = currentXrEnabled;\n    gl.shadowMap.autoUpdate = currentShadowAutoUpdate;\n    meshRef.current.visible = true;\n    gl.setRenderTarget(null);\n  });\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: mergeRefs([meshRef, ref])\n  }, props), /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: args\n  }), children ? children('meshReflectorMaterial', reflectorProps) : /*#__PURE__*/React.createElement(\"meshReflectorMaterial\", reflectorProps));\n});\n\nexport { Reflector };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Vector3, CylinderGeometry, Matrix4, WebGLRenderTarget, RGBAFormat, LinearEncoding, ShaderMaterial, DoubleSide, RepeatWrapping } from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { FullScreenQuad } from 'three-stdlib';\nimport mergeRefs from 'react-merge-refs';\nimport { SpotLightMaterial } from '../materials/SpotLightMaterial.js';\nimport SpotlightShadowShader from '../helpers/glsl/DefaultSpotlightShadowShadows.glsl.js';\n\nconst isSpotLight = child => {\n  return child == null ? void 0 : child.isSpotLight;\n};\n\nfunction VolumetricMesh({\n  opacity = 1,\n  radiusTop,\n  radiusBottom,\n  depthBuffer,\n  color = 'white',\n  distance = 5,\n  angle = 0.15,\n  attenuation = 5,\n  anglePower = 5\n}) {\n  const mesh = React.useRef(null);\n  const size = useThree(state => state.size);\n  const camera = useThree(state => state.camera);\n  const dpr = useThree(state => state.viewport.dpr);\n  const [material] = React.useState(() => new SpotLightMaterial());\n  const [vec] = React.useState(() => new Vector3());\n  radiusTop = radiusTop === undefined ? 0.1 : radiusTop;\n  radiusBottom = radiusBottom === undefined ? angle * 7 : radiusBottom;\n  useFrame(() => {\n    material.uniforms.spotPosition.value.copy(mesh.current.getWorldPosition(vec));\n    mesh.current.lookAt(mesh.current.parent.target.getWorldPosition(vec));\n  });\n  const geom = React.useMemo(() => {\n    const geometry = new CylinderGeometry(radiusTop, radiusBottom, distance, 128, 64, true);\n    geometry.applyMatrix4(new Matrix4().makeTranslation(0, -distance / 2, 0));\n    geometry.applyMatrix4(new Matrix4().makeRotationX(-Math.PI / 2));\n    return geometry;\n  }, [distance, radiusTop, radiusBottom]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: mesh,\n    geometry: geom,\n    raycast: () => null\n  }, /*#__PURE__*/React.createElement(\"primitive\", {\n    object: material,\n    attach: \"material\",\n    \"uniforms-opacity-value\": opacity,\n    \"uniforms-lightColor-value\": color,\n    \"uniforms-attenuation-value\": attenuation,\n    \"uniforms-anglePower-value\": anglePower,\n    \"uniforms-depth-value\": depthBuffer,\n    \"uniforms-cameraNear-value\": camera.near,\n    \"uniforms-cameraFar-value\": camera.far,\n    \"uniforms-resolution-value\": depthBuffer ? [size.width * dpr, size.height * dpr] : [0, 0]\n  })));\n}\n\nfunction useCommon(spotlight, mesh, width, height, distance) {\n  const [[pos, dir]] = React.useState(() => [new Vector3(), new Vector3()]);\n  React.useLayoutEffect(() => {\n    if (isSpotLight(spotlight.current)) {\n      console.log(spotlight.current);\n      spotlight.current.shadow.mapSize.set(width, height);\n      spotlight.current.shadow.needsUpdate = true;\n    } else {\n      throw new Error('SpotlightShadow must be a child of a SpotLight');\n    }\n  }, [spotlight, width, height]);\n  useFrame(() => {\n    if (!spotlight.current) return;\n    const A = spotlight.current.position;\n    const B = spotlight.current.target.position;\n    dir.copy(B).sub(A);\n    var len = dir.length();\n    dir.normalize().multiplyScalar(len * distance);\n    pos.copy(A).add(dir);\n    mesh.current.position.copy(pos);\n    mesh.current.lookAt(spotlight.current.target.position);\n  });\n}\n\nfunction SpotlightShadowWithShader({\n  distance = 0.4,\n  alphaTest = 0.5,\n  map,\n  shader = SpotlightShadowShader,\n  width = 512,\n  height = 512,\n  scale = 1,\n  children,\n  ...rest\n}) {\n  const mesh = React.useRef(null);\n  const spotlight = rest.spotlightRef;\n  const debug = rest.debug;\n  useCommon(spotlight, mesh, width, height, distance);\n  const renderTarget = React.useMemo(() => new WebGLRenderTarget(width, height, {\n    format: RGBAFormat,\n    encoding: LinearEncoding,\n    stencilBuffer: false // depthTexture: null!\n\n  }), [width, height]);\n  const uniforms = React.useRef({\n    uShadowMap: {\n      value: map\n    },\n    uTime: {\n      value: 0\n    }\n  });\n  React.useEffect(() => void (uniforms.current.uShadowMap.value = map), [map]);\n  const fsQuad = React.useMemo(() => new FullScreenQuad(new ShaderMaterial({\n    uniforms: uniforms.current,\n    vertexShader:\n    /* glsl */\n    `\n          varying vec2 vUv;\n\n          void main() {\n            vUv = uv;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n          }\n          `,\n    fragmentShader: shader\n  })), [shader]);\n  React.useEffect(() => () => {\n    fsQuad.material.dispose();\n    fsQuad.dispose();\n  }, [fsQuad]);\n  React.useEffect(() => () => renderTarget.dispose(), [renderTarget]);\n  useFrame(({\n    gl\n  }, dt) => {\n    uniforms.current.uTime.value += dt;\n    gl.setRenderTarget(renderTarget);\n    fsQuad.render(gl);\n    gl.setRenderTarget(null);\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: mesh,\n    scale: scale,\n    castShadow: true\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", null), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    side: DoubleSide,\n    alphaTest: alphaTest,\n    alphaMap: renderTarget.texture,\n    \"alphaMap-wrapS\": RepeatWrapping,\n    \"alphaMap-wrapT\": RepeatWrapping,\n    opacity: debug ? 1 : 0\n  }, children)));\n}\n\nfunction SpotlightShadowWithoutShader({\n  distance = 0.4,\n  alphaTest = 0.5,\n  map,\n  width = 512,\n  height = 512,\n  scale,\n  children,\n  ...rest\n}) {\n  const mesh = React.useRef(null);\n  const spotlight = rest.spotlightRef;\n  const debug = rest.debug;\n  useCommon(spotlight, mesh, width, height, distance);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: mesh,\n    scale: scale,\n    castShadow: true\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", null), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    side: DoubleSide,\n    alphaTest: alphaTest,\n    alphaMap: map,\n    \"alphaMap-wrapS\": RepeatWrapping,\n    \"alphaMap-wrapT\": RepeatWrapping,\n    opacity: debug ? 1 : 0\n  }, children)));\n}\n\nfunction SpotLightShadow(props) {\n  if (props.shader) return /*#__PURE__*/React.createElement(SpotlightShadowWithShader, props);\n  return /*#__PURE__*/React.createElement(SpotlightShadowWithoutShader, props);\n}\nconst SpotLight = /*#__PURE__*/React.forwardRef(({\n  // Volumetric\n  opacity = 1,\n  radiusTop,\n  radiusBottom,\n  depthBuffer,\n  color = 'white',\n  distance = 5,\n  angle = 0.15,\n  attenuation = 5,\n  anglePower = 5,\n  volumetric = true,\n  debug = false,\n  children,\n  ...props\n}, ref) => {\n  const spotlight = React.useRef(null);\n  return /*#__PURE__*/React.createElement(\"group\", null, debug && spotlight.current && /*#__PURE__*/React.createElement(\"spotLightHelper\", {\n    args: [spotlight.current]\n  }), /*#__PURE__*/React.createElement(\"spotLight\", _extends({\n    ref: mergeRefs([ref, spotlight]),\n    angle: angle,\n    color: color,\n    distance: distance,\n    castShadow: true\n  }, props), volumetric && /*#__PURE__*/React.createElement(VolumetricMesh, {\n    debug: debug,\n    opacity: opacity,\n    radiusTop: radiusTop,\n    radiusBottom: radiusBottom,\n    depthBuffer: depthBuffer,\n    color: color,\n    distance: distance,\n    angle: angle,\n    attenuation: attenuation,\n    anglePower: anglePower\n  })), children && /*#__PURE__*/React.cloneElement(children, {\n    spotlightRef: spotlight,\n    debug: debug\n  }));\n});\n\nexport { SpotLight, SpotLightShadow };\n", "import { ShaderMaterial, Vector3, Color, Vector2 } from 'three';\n\nclass SpotLightMaterial extends ShaderMaterial {\n  constructor() {\n    super({\n      uniforms: {\n        depth: {\n          value: null\n        },\n        opacity: {\n          value: 1\n        },\n        attenuation: {\n          value: 2.5\n        },\n        anglePower: {\n          value: 12\n        },\n        spotPosition: {\n          value: new Vector3(0, 0, 0)\n        },\n        lightColor: {\n          value: new Color('white')\n        },\n        cameraNear: {\n          value: 0\n        },\n        cameraFar: {\n          value: 1\n        },\n        resolution: {\n          value: new Vector2(0, 0)\n        }\n      },\n      transparent: true,\n      depthWrite: false,\n      vertexShader:\n      /* glsl */\n      `\n      varying vec3 vNormal;\n      varying vec3 vWorldPosition;\n      varying float vViewZ;\n      varying float vIntensity;\n      uniform vec3 spotPosition;\n      uniform float attenuation;      \n\n      void main() {\n        // compute intensity\n        vNormal = normalize( normalMatrix * normal );\n        vec4 worldPosition\t= modelMatrix * vec4( position, 1.0 );\n        vWorldPosition = worldPosition.xyz;\n        vec4 viewPosition = viewMatrix * worldPosition;\n        vViewZ = viewPosition.z;\n        float intensity\t= distance(worldPosition.xyz, spotPosition) / attenuation;\n        intensity\t= 1.0 - clamp(intensity, 0.0, 1.0);\n        vIntensity = intensity;        \n        // set gl_Position\n        gl_Position\t= projectionMatrix * viewPosition;\n\n      }`,\n      fragmentShader:\n      /* glsl */\n      `\n      #include <packing>\n\n      varying vec3 vNormal;\n      varying vec3 vWorldPosition;\n      uniform vec3 lightColor;\n      uniform vec3 spotPosition;\n      uniform float attenuation;\n      uniform float anglePower;\n      uniform sampler2D depth;\n      uniform vec2 resolution;\n      uniform float cameraNear;\n      uniform float cameraFar;\n      varying float vViewZ;\n      varying float vIntensity;\n      uniform float opacity;\n\n      float readDepth( sampler2D depthSampler, vec2 coord ) {\n        float fragCoordZ = texture2D( depthSampler, coord ).x;\n        float viewZ = perspectiveDepthToViewZ(fragCoordZ, cameraNear, cameraFar);\n        return viewZ;\n      }\n\n      void main() {\n        float d = 1.0;\n        bool isSoft = resolution[0] > 0.0 && resolution[1] > 0.0;\n        if (isSoft) {\n          vec2 sUv = gl_FragCoord.xy / resolution;\n          d = readDepth(depth, sUv);\n        }\n        float intensity = vIntensity;\n        vec3 normal\t= vec3(vNormal.x, vNormal.y, abs(vNormal.z));\n        float angleIntensity\t= pow( dot(normal, vec3(0.0, 0.0, 1.0)), anglePower );\n        intensity\t*= angleIntensity;\n        // fades when z is close to sampled depth, meaning the cone is intersecting existing geometry\n        if (isSoft) {\n          intensity\t*= smoothstep(0., 1., vViewZ - d);\n        }\n        gl_FragColor = vec4(lightColor, intensity * opacity);\n\n        #include <tonemapping_fragment>\n\t      #include <encodings_fragment>\n      }`\n    });\n  }\n\n}\n\nexport { SpotLightMaterial };\n", "var SpotlightShadowShader = \"#define GLSLIFY 1\\nvarying vec2 vUv;uniform sampler2D uShadowMap;uniform float uTime;void main(){vec3 color=texture2D(uShadowMap,vUv).xyz;gl_FragColor=vec4(color,1.);}\"; // eslint-disable-line\n\nexport { SpotlightShadowShader as default };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { applyProps } from '@react-three/fiber';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport mergeRefs from 'react-merge-refs';\n\nconst Lightformer = /*#__PURE__*/React.forwardRef(({\n  args,\n  map,\n  toneMapped = false,\n  color = 'white',\n  form: Form = 'rect',\n  intensity = 1,\n  scale = 1,\n  target,\n  children,\n  ...props\n}, forwardRef) => {\n  // Apply emissive power\n  const ref = React.useRef(null);\n  React.useLayoutEffect(() => {\n    if (!children && !props.material) {\n      applyProps(ref.current.material, {\n        color\n      });\n      ref.current.material.color.multiplyScalar(intensity);\n    }\n  }, [color, intensity, children, props.material]); // Target light\n\n  React.useLayoutEffect(() => {\n    if (target) ref.current.lookAt(Array.isArray(target) ? new THREE.Vector3(...target) : target);\n  }, [target]); // Fix 2-dimensional scale\n\n  scale = Array.isArray(scale) && scale.length === 2 ? [scale[0], scale[1], 1] : scale;\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: mergeRefs([ref, forwardRef]),\n    scale: scale\n  }, props), Form === 'circle' ? /*#__PURE__*/React.createElement(\"ringGeometry\", {\n    args: [0, 1, 64]\n  }) : Form === 'ring' ? /*#__PURE__*/React.createElement(\"ringGeometry\", {\n    args: [0.5, 1, 64]\n  }) : Form === 'rect' ? /*#__PURE__*/React.createElement(\"planeGeometry\", null) : /*#__PURE__*/React.createElement(Form, {\n    args: args\n  }), children ? children : !props.material ? /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    toneMapped: toneMapped,\n    map: map,\n    side: THREE.DoubleSide\n  }) : null);\n});\n\nexport { Lightformer };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Sky as Sky$1 } from 'three-stdlib';\nimport { Vector3 } from 'three';\n\nfunction calcPosFromAngles(inclination, azimuth, vector = new Vector3()) {\n  const theta = Math.PI * (inclination - 0.5);\n  const phi = 2 * Math.PI * (azimuth - 0.5);\n  vector.x = Math.cos(phi);\n  vector.y = Math.sin(theta);\n  vector.z = Math.sin(phi);\n  return vector;\n}\nconst Sky = /*#__PURE__*/React.forwardRef(({\n  inclination = 0.6,\n  azimuth = 0.1,\n  distance = 1000,\n  mieCoefficient = 0.005,\n  mieDirectionalG = 0.8,\n  rayleigh = 0.5,\n  turbidity = 10,\n  sunPosition = calcPosFromAngles(inclination, azimuth),\n  ...props\n}, ref) => {\n  const scale = React.useMemo(() => new Vector3().setScalar(distance), [distance]);\n  const [sky] = React.useState(() => new Sky$1());\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: sky,\n    ref: ref,\n    \"material-uniforms-mieCoefficient-value\": mieCoefficient,\n    \"material-uniforms-mieDirectionalG-value\": mieDirectionalG,\n    \"material-uniforms-rayleigh-value\": rayleigh,\n    \"material-uniforms-sunPosition-value\": sunPosition,\n    \"material-uniforms-turbidity-value\": turbidity,\n    scale: scale\n  }, props));\n});\n\nexport { Sky, calcPosFromAngles };\n", "import * as React from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Color, AdditiveBlending, ShaderMaterial, Vector3, Spherical } from 'three';\n\nclass StarfieldMaterial extends ShaderMaterial {\n  constructor() {\n    super({\n      uniforms: {\n        time: {\n          value: 0.0\n        },\n        fade: {\n          value: 1.0\n        }\n      },\n      vertexShader:\n      /* glsl */\n      `\n      uniform float time;\n      attribute float size;\n      varying vec3 vColor;\n      void main() {\n        vColor = color;\n        vec4 mvPosition = modelViewMatrix * vec4(position, 0.5);\n        gl_PointSize = size * (30.0 / -mvPosition.z) * (3.0 + sin(time + 100.0));\n        gl_Position = projectionMatrix * mvPosition;\n      }`,\n      fragmentShader:\n      /* glsl */\n      `\n      uniform sampler2D pointTexture;\n      uniform float fade;\n      varying vec3 vColor;\n      void main() {\n        float opacity = 1.0;\n        if (fade == 1.0) {\n          float d = distance(gl_PointCoord, vec2(0.5, 0.5));\n          opacity = 1.0 / (1.0 + exp(16.0 * (d - 0.25)));\n        }\n        gl_FragColor = vec4(vColor, opacity);\n\n        #include <tonemapping_fragment>\n\t      #include <encodings_fragment>\n      }`\n    });\n  }\n\n}\n\nconst genStar = r => {\n  return new Vector3().setFromSpherical(new Spherical(r, Math.acos(1 - Math.random() * 2), Math.random() * 2 * Math.PI));\n};\n\nconst Stars = /*#__PURE__*/React.forwardRef(({\n  radius = 100,\n  depth = 50,\n  count = 5000,\n  saturation = 0,\n  factor = 4,\n  fade = false,\n  speed = 1\n}, ref) => {\n  const material = React.useRef();\n  const [position, color, size] = React.useMemo(() => {\n    const positions = [];\n    const colors = [];\n    const sizes = Array.from({\n      length: count\n    }, () => (0.5 + 0.5 * Math.random()) * factor);\n    const color = new Color();\n    let r = radius + depth;\n    const increment = depth / count;\n\n    for (let i = 0; i < count; i++) {\n      r -= increment * Math.random();\n      positions.push(...genStar(r).toArray());\n      color.setHSL(i / count, saturation, 0.9);\n      colors.push(color.r, color.g, color.b);\n    }\n\n    return [new Float32Array(positions), new Float32Array(colors), new Float32Array(sizes)];\n  }, [count, depth, factor, radius, saturation]);\n  useFrame(state => material.current && (material.current.uniforms.time.value = state.clock.getElapsedTime() * speed));\n  const [starfieldMaterial] = React.useState(() => new StarfieldMaterial());\n  return /*#__PURE__*/React.createElement(\"points\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-position\",\n    args: [position, 3]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-color\",\n    args: [color, 3]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-size\",\n    args: [size, 1]\n  })), /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: material,\n    object: starfieldMaterial,\n    attach: \"material\",\n    blending: AdditiveBlending,\n    \"uniforms-fade-value\": fade,\n    depthWrite: false,\n    transparent: true,\n    vertexColors: true\n  }));\n});\n\nexport { Stars };\n", "import * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { Billboard } from './Billboard.js';\nimport { Plane } from './shapes.js';\nimport { useTexture } from './useTexture.js';\n\nconst CLOUD_URL = 'https://rawcdn.githack.com/pmndrs/drei-assets/9225a9f1fbd449d9411125c2f419b843d0308c9f/cloud.png';\nfunction Cloud({\n  opacity = 0.5,\n  speed = 0.4,\n  width = 10,\n  depth = 1.5,\n  segments = 20,\n  texture = CLOUD_URL,\n  color = '#ffffff',\n  depthTest = true,\n  ...props\n}) {\n  const gl = useThree(state => state.gl);\n  const group = React.useRef();\n  const cloudTexture = useTexture(texture);\n  const clouds = React.useMemo(() => [...new Array(segments)].map((_, index) => ({\n    x: width / 2 - Math.random() * width,\n    y: width / 2 - Math.random() * width,\n    scale: 0.4 + Math.sin((index + 1) / segments * Math.PI) * ((0.2 + Math.random()) * 10),\n    density: Math.max(0.2, Math.random()),\n    rotation: Math.max(0.002, 0.005 * Math.random()) * speed\n  })), [width, segments, speed]);\n  useFrame(state => {\n    var _group$current;\n\n    return (_group$current = group.current) == null ? void 0 : _group$current.children.forEach((cloud, index) => {\n      cloud.children[0].rotation.z += clouds[index].rotation;\n      cloud.children[0].scale.setScalar(clouds[index].scale + (1 + Math.sin(state.clock.getElapsedTime() / 10)) / 2 * index / 10);\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"group\", {\n    position: [0, 0, segments / 2 * depth],\n    ref: group\n  }, clouds.map(({\n    x,\n    y,\n    scale,\n    density\n  }, index) => /*#__PURE__*/React.createElement(Billboard, {\n    key: index,\n    position: [x, y, -index * depth]\n  }, /*#__PURE__*/React.createElement(Plane, {\n    scale: scale,\n    rotation: [0, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    map: cloudTexture,\n    \"map-encoding\": gl.outputEncoding,\n    transparent: true,\n    opacity: scale / 6 * density * opacity,\n    depthTest: depthTest,\n    color: color\n  }))))));\n}\n\nexport { Cloud };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { shaderMaterial } from './shaderMaterial.js';\nimport fragShader from '../helpers/glsl/Sparkles.frag.glsl.js';\nimport vertShader from '../helpers/glsl/Sparkles.vert.glsl.js';\n\nconst SparklesMaterial = shaderMaterial({\n  time: 0,\n  pixelRatio: 1\n}, vertShader, fragShader);\n\nconst isFloat32Array = def => def && def.constructor === Float32Array;\n\nconst expandColor = v => [v.r, v.g, v.b];\n\nconst isVector = v => v instanceof THREE.Vector2 || v instanceof THREE.Vector3 || v instanceof THREE.Vector4;\n\nconst normalizeVector = v => {\n  if (Array.isArray(v)) return v;else if (isVector(v)) return v.toArray();\n  return [v, v, v];\n};\n\nfunction usePropAsIsOrAsAttribute(count, prop, setDefault) {\n  return React.useMemo(() => {\n    if (prop !== undefined) {\n      if (isFloat32Array(prop)) {\n        return prop;\n      } else {\n        if (prop instanceof THREE.Color) {\n          const a = Array.from({\n            length: count * 3\n          }, () => expandColor(prop)).flat();\n          return Float32Array.from(a);\n        } else if (isVector(prop) || Array.isArray(prop)) {\n          const a = Array.from({\n            length: count * 3\n          }, () => normalizeVector(prop)).flat();\n          return Float32Array.from(a);\n        }\n\n        return Float32Array.from({\n          length: count\n        }, () => prop);\n      }\n    }\n\n    return Float32Array.from({\n      length: count\n    }, setDefault);\n  }, [prop]);\n}\n\nconst Sparkles = /*#__PURE__*/React.forwardRef(({\n  noise = 1,\n  count = 100,\n  speed = 1,\n  opacity = 1,\n  scale = 1,\n  size,\n  color,\n  ...props\n}, forwardRef) => {\n  React.useMemo(() => extend({\n    SparklesMaterial\n  }), []);\n  const matRef = React.useRef();\n  const dpr = useThree(state => state.viewport.dpr);\n  const positions = React.useMemo(() => Float32Array.from(Array.from({\n    length: count\n  }, () => normalizeVector(scale).map(THREE.MathUtils.randFloatSpread)).flat()), [count, scale]);\n  const sizes = usePropAsIsOrAsAttribute(count, size, Math.random);\n  const opacities = usePropAsIsOrAsAttribute(count, opacity);\n  const speeds = usePropAsIsOrAsAttribute(count, speed);\n  const noises = usePropAsIsOrAsAttribute(count * 3, noise);\n  const colors = usePropAsIsOrAsAttribute(color === undefined ? count * 3 : count, !isFloat32Array(color) ? new THREE.Color(color) : color, () => 1);\n  useFrame(state => matRef.current.uniforms.time.value = state.clock.elapsedTime);\n  return /*#__PURE__*/React.createElement(\"points\", _extends({\n    key: `particle-${count}-${JSON.stringify(scale)}`\n  }, props, {\n    ref: forwardRef\n  }), /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-position\",\n    args: [positions, 3]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-size\",\n    args: [sizes, 1]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-opacity\",\n    args: [opacities, 1]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-speed\",\n    args: [speeds, 1]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-color\",\n    args: [colors, 3]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-noise\",\n    args: [noises, 3]\n  })), /*#__PURE__*/React.createElement(\"sparklesMaterial\", {\n    ref: matRef,\n    transparent: true,\n    pixelRatio: dpr,\n    depthWrite: false\n  }));\n});\n\nexport { Sparkles };\n", "var fragShader = \"#define GLSLIFY 1\\nvarying vec3 vColor;varying float vOpacity;void main(){float distanceToCenter=distance(gl_PointCoord,vec2(0.5));float strength=0.05/distanceToCenter-0.1;gl_FragColor=vec4(vColor,strength*vOpacity);}\"; // eslint-disable-line\n\nexport { fragShader as default };\n", "var vertShader = \"#define GLSLIFY 1\\nuniform float pixelRatio;uniform float time;attribute float size;attribute float speed;attribute float opacity;attribute vec3 noise;attribute vec3 color;varying vec3 vColor;varying float vOpacity;void main(){vec4 modelPosition=modelMatrix*vec4(position,1.0);modelPosition.y+=sin(time*speed+modelPosition.x*noise.x*100.0)*0.2;modelPosition.z+=cos(time*speed+modelPosition.x*noise.y*100.0)*0.2;modelPosition.x+=cos(time*speed+modelPosition.x*noise.z*100.0)*0.2;vec4 viewPosition=viewMatrix*modelPosition;vec4 projectionPostion=projectionMatrix*viewPosition;gl_Position=projectionPostion;gl_PointSize=size*25.*pixelRatio;gl_PointSize*=(1.0/-viewPosition.z);vColor=color;vOpacity=opacity;}\"; // eslint-disable-line\n\nexport { vertShader as default };\n", "import * as React from 'react';\nimport { useTexture } from './useTexture.js';\nimport { suspend } from 'suspend-react';\n\nfunction getFormatString(format) {\n  switch (format) {\n    case 64:\n      return '-64px';\n\n    case 128:\n      return '-128px';\n\n    case 256:\n      return '-256px';\n\n    case 512:\n      return '-512px';\n\n    default:\n      return '';\n  }\n}\n\nconst LIST_URL = 'https://cdn.jsdelivr.net/gh/pmndrs/drei-assets@master/matcaps.json';\nconst MATCAP_ROOT = 'https://rawcdn.githack.com/emmelleppi/matcaps/9b36ccaaf0a24881a39062d05566c9e92be4aa0d';\nfunction useMatcapTexture(id = 0, format = 1024, onLoad) {\n  const matcapList = suspend(() => fetch(LIST_URL).then(res => res.json()), ['matcapList']);\n  const DEFAULT_MATCAP = matcapList[0];\n  const numTot = React.useMemo(() => Object.keys(matcapList).length, []);\n  const fileHash = React.useMemo(() => {\n    if (typeof id === 'string') {\n      return id;\n    } else if (typeof id === 'number') {\n      return matcapList[id];\n    }\n\n    return null;\n  }, [id]);\n  const fileName = `${fileHash || DEFAULT_MATCAP}${getFormatString(format)}.png`;\n  const url = `${MATCAP_ROOT}/${format}/${fileName}`;\n  const matcapTexture = useTexture(url, onLoad);\n  return [matcapTexture, url, numTot];\n}\n\nexport { useMatcapTexture };\n", "import * as React from 'react';\nimport { useTexture } from './useTexture.js';\nimport { RepeatWrapping, Vector2 } from 'three';\nimport { suspend } from 'suspend-react';\n\nconst NORMAL_ROOT = 'https://rawcdn.githack.com/pmndrs/drei-assets/7a3104997e1576f83472829815b00880d88b32fb';\nconst LIST_URL = 'https://cdn.jsdelivr.net/gh/pmndrs/drei-assets@master/normals/normals.json';\nfunction useNormalTexture(id = 0, settings = {}, onLoad) {\n  const {\n    repeat = [1, 1],\n    anisotropy = 1,\n    offset = [0, 0]\n  } = settings;\n  const normalsList = suspend(() => fetch(LIST_URL).then(res => res.json()), ['normalsList']);\n  const numTot = React.useMemo(() => Object.keys(normalsList).length, []);\n  const DEFAULT_NORMAL = normalsList[0];\n  const imageName = normalsList[id] || DEFAULT_NORMAL;\n  const url = `${NORMAL_ROOT}/normals/${imageName}`;\n  const normalTexture = useTexture(url, onLoad);\n  React.useLayoutEffect(() => {\n    if (!normalTexture) return;\n    normalTexture.wrapS = normalTexture.wrapT = RepeatWrapping;\n    normalTexture.repeat = new Vector2(repeat[0], repeat[1]);\n    normalTexture.offset = new Vector2(offset[0], offset[1]);\n    normalTexture.anisotropy = anisotropy;\n  }, [normalTexture, anisotropy, repeat, offset]);\n  return [normalTexture, url, numTot];\n}\n\nexport { useNormalTexture };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\n\nconst _inverseMatrix = /*@__PURE__*/new THREE.Matrix4();\n\nconst _ray = /*@__PURE__*/new THREE.Ray();\n\nconst _sphere = /*@__PURE__*/new THREE.Sphere();\n\nconst _position = /*@__PURE__*/new THREE.Vector3();\n\nclass PositionPoint extends THREE.Group {\n  constructor() {\n    super();\n    this.size = 0;\n    this.color = new THREE.Color('white');\n    this.instance = {\n      current: undefined\n    };\n    this.instanceKey = {\n      current: undefined\n    };\n  } // This will allow the virtual instance have bounds\n\n\n  get geometry() {\n    var _this$instance$curren;\n\n    return (_this$instance$curren = this.instance.current) == null ? void 0 : _this$instance$curren.geometry;\n  }\n\n  raycast(raycaster, intersects) {\n    var _raycaster$params$Poi, _raycaster$params$Poi2;\n\n    const parent = this.instance.current;\n    if (!parent || !parent.geometry) return;\n    const instanceId = parent.userData.instances.indexOf(this.instanceKey); // If the instance wasn't found or exceeds the parents draw range, bail out\n\n    if (instanceId === -1 || instanceId > parent.geometry.drawRange.count) return;\n    const threshold = (_raycaster$params$Poi = (_raycaster$params$Poi2 = raycaster.params.Points) == null ? void 0 : _raycaster$params$Poi2.threshold) !== null && _raycaster$params$Poi !== void 0 ? _raycaster$params$Poi : 1;\n\n    _sphere.set(this.getWorldPosition(_position), threshold);\n\n    if (raycaster.ray.intersectsSphere(_sphere) === false) return;\n\n    _inverseMatrix.copy(parent.matrixWorld).invert();\n\n    _ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);\n\n    const localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n    const localThresholdSq = localThreshold * localThreshold;\n\n    const rayPointDistanceSq = _ray.distanceSqToPoint(_position);\n\n    if (rayPointDistanceSq < localThresholdSq) {\n      const intersectPoint = new THREE.Vector3();\n\n      _ray.closestPointToPoint(_position, intersectPoint);\n\n      intersectPoint.applyMatrix4(this.matrixWorld);\n      const distance = raycaster.ray.origin.distanceTo(intersectPoint);\n      if (distance < raycaster.near || distance > raycaster.far) return;\n      intersects.push({\n        distance: distance,\n        distanceToRay: Math.sqrt(rayPointDistanceSq),\n        point: intersectPoint,\n        index: instanceId,\n        face: null,\n        object: this\n      });\n    }\n  }\n\n}\nlet i, positionRef;\nconst context = /*@__PURE__*/React.createContext(null);\nconst parentMatrix = /*@__PURE__*/new THREE.Matrix4();\nconst position = /*@__PURE__*/new THREE.Vector3();\n/**\n * Instance implementation, relies on react + context to update the attributes based on the children of this component\n */\n\nconst PointsInstances = /*#__PURE__*/React.forwardRef(({\n  children,\n  range,\n  limit = 1000,\n  ...props\n}, ref) => {\n  const parentRef = React.useRef(null);\n  const [refs, setRefs] = React.useState([]);\n  const [[positions, colors, sizes]] = React.useState(() => [new Float32Array(limit * 3), Float32Array.from({\n    length: limit * 3\n  }, () => 1), Float32Array.from({\n    length: limit\n  }, () => 1)]);\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.geometry.attributes.position.needsUpdate = true;\n  });\n  useFrame(() => {\n    parentRef.current.updateMatrix();\n    parentRef.current.updateMatrixWorld();\n    parentMatrix.copy(parentRef.current.matrixWorld).invert();\n    parentRef.current.geometry.drawRange.count = Math.min(limit, range !== undefined ? range : limit, refs.length);\n\n    for (i = 0; i < refs.length; i++) {\n      positionRef = refs[i].current;\n      positionRef.getWorldPosition(position).applyMatrix4(parentMatrix);\n      position.toArray(positions, i * 3);\n      parentRef.current.geometry.attributes.position.needsUpdate = true;\n      positionRef.matrixWorldNeedsUpdate = true;\n      positionRef.color.toArray(colors, i * 3);\n      parentRef.current.geometry.attributes.color.needsUpdate = true;\n      sizes.set([positionRef.size], i);\n      parentRef.current.geometry.attributes.size.needsUpdate = true;\n    }\n  });\n  const api = React.useMemo(() => ({\n    getParent: () => parentRef,\n    subscribe: ref => {\n      setRefs(refs => [...refs, ref]);\n      return () => setRefs(refs => refs.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"points\", _extends({\n    userData: {\n      instances: refs\n    },\n    matrixAutoUpdate: false,\n    ref: mergeRefs([ref, parentRef]),\n    raycast: () => null\n  }, props), /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-position\",\n    count: positions.length / 3,\n    array: positions,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-color\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-size\",\n    count: sizes.length,\n    array: sizes,\n    itemSize: 1,\n    usage: THREE.DynamicDrawUsage\n  })), /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n});\nconst Point = /*#__PURE__*/React.forwardRef(({\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    PositionPoint\n  }), []);\n  const group = React.useRef();\n  const {\n    subscribe,\n    getParent\n  } = React.useContext(context);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"positionPoint\", _extends({\n    instance: getParent(),\n    instanceKey: group,\n    ref: mergeRefs([ref, group])\n  }, props), children);\n});\n/**\n * Buffer implementation, relies on complete buffers of the correct number, leaves it to the user to update them\n */\n\nconst PointsBuffer = /*#__PURE__*/React.forwardRef(({\n  children,\n  positions,\n  colors,\n  sizes,\n  stride = 3,\n  ...props\n}, forwardedRef) => {\n  const pointsRef = React.useRef(null);\n  useFrame(() => {\n    const attr = pointsRef.current.geometry.attributes;\n    attr.position.needsUpdate = true;\n    if (colors) attr.color.needsUpdate = true;\n    if (sizes) attr.size.needsUpdate = true;\n  });\n  return /*#__PURE__*/React.createElement(\"points\", _extends({\n    ref: mergeRefs([forwardedRef, pointsRef])\n  }, props), /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-position\",\n    count: positions.length / stride,\n    array: positions,\n    itemSize: stride,\n    usage: THREE.DynamicDrawUsage\n  }), colors && /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-color\",\n    count: colors.length / stride,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), sizes && /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-size\",\n    count: sizes.length / stride,\n    array: sizes,\n    itemSize: 1,\n    usage: THREE.DynamicDrawUsage\n  })), children);\n});\nconst Points = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  if (props.positions instanceof Float32Array) {\n    return /*#__PURE__*/React.createElement(PointsBuffer, _extends({}, props, {\n      ref: forwardedRef\n    }));\n  } else return /*#__PURE__*/React.createElement(PointsInstances, _extends({}, props, {\n    ref: forwardedRef\n  }));\n});\n\nexport { Point, Points, PointsBuffer, PositionPoint };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport Composer from 'react-composer';\n\nconst _instanceLocalMatrix = /*@__PURE__*/new THREE.Matrix4();\n\nconst _instanceWorldMatrix = /*@__PURE__*/new THREE.Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _mesh = /*@__PURE__*/new THREE.Mesh();\n\nclass PositionMesh extends THREE.Group {\n  constructor() {\n    super();\n    this.color = new THREE.Color('white');\n    this.instance = {\n      current: undefined\n    };\n    this.instanceKey = {\n      current: undefined\n    };\n  } // This will allow the virtual instance have bounds\n\n\n  get geometry() {\n    var _this$instance$curren;\n\n    return (_this$instance$curren = this.instance.current) == null ? void 0 : _this$instance$curren.geometry;\n  } // And this will allow the virtual instance to receive events\n\n\n  raycast(raycaster, intersects) {\n    const parent = this.instance.current;\n    if (!parent) return;\n    if (!parent.geometry || !parent.material) return;\n    _mesh.geometry = parent.geometry;\n    const matrixWorld = parent.matrixWorld;\n    const instanceId = parent.userData.instances.indexOf(this.instanceKey); // If the instance wasn't found or exceeds the parents draw range, bail out\n\n    if (instanceId === -1 || instanceId > parent.count) return; // calculate the world matrix for each instance\n\n    parent.getMatrixAt(instanceId, _instanceLocalMatrix);\n\n    _instanceWorldMatrix.multiplyMatrices(matrixWorld, _instanceLocalMatrix); // the mesh represents this single instance\n\n\n    _mesh.matrixWorld = _instanceWorldMatrix; // raycast side according to instance material\n\n    if (parent.material instanceof THREE.Material) _mesh.material.side = parent.material.side;else _mesh.material.side = parent.material[0].side;\n\n    _mesh.raycast(raycaster, _instanceIntersects); // process the result of raycast\n\n\n    for (let i = 0, l = _instanceIntersects.length; i < l; i++) {\n      const intersect = _instanceIntersects[i];\n      intersect.instanceId = instanceId;\n      intersect.object = this;\n      intersects.push(intersect);\n    }\n\n    _instanceIntersects.length = 0;\n  }\n\n}\n\nconst globalContext = /*@__PURE__*/React.createContext(null);\nconst parentMatrix = /*@__PURE__*/new THREE.Matrix4();\nconst instanceMatrix = /*@__PURE__*/new THREE.Matrix4();\nconst tempMatrix = /*@__PURE__*/new THREE.Matrix4();\nconst translation = /*@__PURE__*/new THREE.Vector3();\nconst rotation = /*@__PURE__*/new THREE.Quaternion();\nconst scale = /*@__PURE__*/new THREE.Vector3();\nconst Instance = /*#__PURE__*/React.forwardRef(({\n  context,\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    PositionMesh\n  }), []);\n  const group = React.useRef();\n  const {\n    subscribe,\n    getParent\n  } = React.useContext(context || globalContext);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"positionMesh\", _extends({\n    instance: getParent(),\n    instanceKey: group,\n    ref: mergeRefs([ref, group])\n  }, props), children);\n});\nconst Instances = /*#__PURE__*/React.forwardRef(({\n  children,\n  range,\n  limit = 1000,\n  frames = Infinity,\n  ...props\n}, ref) => {\n  const [{\n    context,\n    instance\n  }] = React.useState(() => {\n    const context = /*#__PURE__*/React.createContext(null);\n    return {\n      context,\n      instance: /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(Instance, _extends({\n        context: context\n      }, props, {\n        ref: ref\n      })))\n    };\n  });\n  const parentRef = React.useRef(null);\n  const [instances, setInstances] = React.useState([]);\n  const [[matrices, colors]] = React.useState(() => {\n    const mArray = new Float32Array(limit * 16);\n\n    for (let i = 0; i < limit; i++) tempMatrix.identity().toArray(mArray, i * 16);\n\n    return [mArray, new Float32Array([...new Array(limit * 3)].map(() => 1))];\n  });\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.instanceMatrix.needsUpdate = true;\n  });\n  let count = 0;\n  let updateRange = 0;\n  useFrame(() => {\n    if (frames === Infinity || count < frames) {\n      parentRef.current.updateMatrix();\n      parentRef.current.updateMatrixWorld();\n      parentMatrix.copy(parentRef.current.matrixWorld).invert();\n      updateRange = Math.min(limit, range !== undefined ? range : limit, instances.length);\n      parentRef.current.count = updateRange;\n      parentRef.current.instanceMatrix.updateRange.count = updateRange * 16;\n      parentRef.current.instanceColor.updateRange.count = updateRange * 3;\n\n      for (let i = 0; i < instances.length; i++) {\n        const instance = instances[i].current; // Multiply the inverse of the InstancedMesh world matrix or else\n        // Instances will be double-transformed if <Instances> isn't at identity\n\n        instance.matrixWorld.decompose(translation, rotation, scale);\n        instanceMatrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n        instanceMatrix.toArray(matrices, i * 16);\n        parentRef.current.instanceMatrix.needsUpdate = true;\n        instance.color.toArray(colors, i * 3);\n        parentRef.current.instanceColor.needsUpdate = true;\n      }\n\n      count++;\n    }\n  });\n  const api = React.useMemo(() => ({\n    getParent: () => parentRef,\n    subscribe: ref => {\n      setInstances(instances => [...instances, ref]);\n      return () => setInstances(instances => instances.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", _extends({\n    userData: {\n      instances\n    },\n    matrixAutoUpdate: false,\n    ref: mergeRefs([ref, parentRef]),\n    args: [null, null, 0],\n    raycast: () => null\n  }, props), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceMatrix\",\n    count: matrices.length / 16,\n    array: matrices,\n    itemSize: 16,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceColor\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), typeof children === 'function' ? /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children(instance)) : /*#__PURE__*/React.createElement(globalContext.Provider, {\n    value: api\n  }, children));\n});\nconst Merged = /*#__PURE__*/React.forwardRef(function Merged({\n  meshes,\n  children,\n  ...props\n}, ref) {\n  const isArray = Array.isArray(meshes); // Filter out meshes from collections, which may contain non-meshes\n\n  if (!isArray) for (const key of Object.keys(meshes)) if (!meshes[key].isMesh) delete meshes[key];\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(Composer, {\n    components: (isArray ? meshes : Object.values(meshes)).map(({\n      geometry,\n      material\n    }) => /*#__PURE__*/React.createElement(Instances, _extends({\n      key: geometry.uuid,\n      geometry: geometry,\n      material: material\n    }, props)))\n  }, args => isArray ? children(...args) : children(Object.keys(meshes).filter(key => meshes[key].isMesh).reduce((acc, key, i) => ({ ...acc,\n    [key]: args[i]\n  }), {}))));\n});\n\nexport { Instance, Instances, Merged };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport { extend, useFrame } from '@react-three/fiber';\nimport { Line2, LineMaterial, LineSegmentsGeometry } from 'three-stdlib';\n\nconst context = /*#__PURE__*/React.createContext(null);\nconst Segments = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  React.useMemo(() => extend({\n    SegmentObject\n  }), []);\n  const {\n    limit = 1000,\n    lineWidth = 1.0,\n    children,\n    ...rest\n  } = props;\n  const [segments, setSegments] = React.useState([]);\n  const [line] = React.useState(() => new Line2());\n  const [material] = React.useState(() => new LineMaterial());\n  const [geometry] = React.useState(() => new LineSegmentsGeometry());\n  const [resolution] = React.useState(() => new THREE.Vector2(512, 512));\n  const [positions] = React.useState(() => Array(limit * 6).fill(0));\n  const [colors] = React.useState(() => Array(limit * 6).fill(0));\n  const api = React.useMemo(() => ({\n    subscribe: ref => {\n      setSegments(segments => [...segments, ref]);\n      return () => setSegments(segments => segments.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  useFrame(() => {\n    for (let i = 0; i < limit; i++) {\n      var _segments$i;\n\n      const segment = (_segments$i = segments[i]) == null ? void 0 : _segments$i.current;\n\n      if (segment) {\n        positions[i * 6 + 0] = segment.start.x;\n        positions[i * 6 + 1] = segment.start.y;\n        positions[i * 6 + 2] = segment.start.z;\n        positions[i * 6 + 3] = segment.end.x;\n        positions[i * 6 + 4] = segment.end.y;\n        positions[i * 6 + 5] = segment.end.z;\n        colors[i * 6 + 0] = segment.color.r;\n        colors[i * 6 + 1] = segment.color.g;\n        colors[i * 6 + 2] = segment.color.b;\n        colors[i * 6 + 3] = segment.color.r;\n        colors[i * 6 + 4] = segment.color.g;\n        colors[i * 6 + 5] = segment.color.b;\n      }\n    }\n\n    geometry.setColors(colors);\n    geometry.setPositions(positions);\n    line.computeLineDistances();\n  });\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    object: line,\n    ref: forwardedRef\n  }, /*#__PURE__*/React.createElement(\"primitive\", {\n    object: geometry,\n    attach: \"geometry\"\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: material,\n    attach: \"material\",\n    vertexColors: true,\n    resolution: resolution,\n    linewidth: lineWidth\n  }, rest)), /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n});\nclass SegmentObject {\n  constructor() {\n    this.color = new THREE.Color('white');\n    this.start = new THREE.Vector3(0, 0, 0);\n    this.end = new THREE.Vector3(0, 0, 0);\n  }\n\n}\n\nconst normPos = pos => pos instanceof THREE.Vector3 ? pos : new THREE.Vector3(...(typeof pos === 'number' ? [pos, pos, pos] : pos));\n\nconst Segment = /*#__PURE__*/React.forwardRef(({\n  color,\n  start,\n  end\n}, forwardedRef) => {\n  const api = React.useContext(context);\n  if (!api) throw 'Segment must used inside Segments component.';\n  const ref = React.useRef(null);\n  React.useLayoutEffect(() => api.subscribe(ref), []);\n  return /*#__PURE__*/React.createElement(\"segmentObject\", {\n    ref: mergeRefs([ref, forwardedRef]),\n    color: color,\n    start: normPos(start),\n    end: normPos(end)\n  });\n});\n\nexport { Segment, SegmentObject, Segments };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\n\nconst Detailed = /*#__PURE__*/React.forwardRef(({\n  children,\n  distances,\n  ...props\n}, ref) => {\n  const lodRef = React.useRef(null);\n  React.useLayoutEffect(() => {\n    const {\n      current: lod\n    } = lodRef;\n    lod.levels.length = 0;\n    lod.children.forEach((object, index) => lod.levels.push({\n      object,\n      distance: distances[index]\n    }));\n  });\n  useFrame(state => {\n    var _lodRef$current;\n\n    return (_lodRef$current = lodRef.current) == null ? void 0 : _lodRef$current.update(state.camera);\n  });\n  return /*#__PURE__*/React.createElement(\"lOD\", _extends({\n    ref: mergeRefs([lodRef, ref])\n  }, props), children);\n});\n\nexport { Detailed };\n", "import { WebGLCubeRenderTarget, CubeCamera } from 'three';\nimport * as React from 'react';\nimport { useThree } from '@react-three/fiber';\n\nfunction Preload({\n  all,\n  scene,\n  camera\n}) {\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const dCamera = useThree(({\n    camera\n  }) => camera);\n  const dScene = useThree(({\n    scene\n  }) => scene); // Layout effect because it must run before React commits\n\n  React.useLayoutEffect(() => {\n    const invisible = [];\n\n    if (all) {\n      (scene || dScene).traverse(object => {\n        if (object.visible === false) {\n          invisible.push(object);\n          object.visible = true;\n        }\n      });\n    } // Now compile the scene\n\n\n    gl.compile(scene || dScene, camera || dCamera); // And for good measure, hit it with a cube camera\n\n    const cubeRenderTarget = new WebGLCubeRenderTarget(128);\n    const cubeCamera = new CubeCamera(0.01, 100000, cubeRenderTarget);\n    cubeCamera.update(gl, scene || dScene);\n    cubeRenderTarget.dispose(); // Flips these objects back\n\n    invisible.forEach(object => object.visible = false);\n  }, []);\n  return null;\n}\n\nexport { Preload };\n", "import { useEffect } from 'react';\nimport { useThree } from '@react-three/fiber';\n\nfunction BakeShadows() {\n  const gl = useThree(state => state.gl);\n  useEffect(() => {\n    gl.shadowMap.autoUpdate = false;\n    gl.shadowMap.needsUpdate = true;\n    return () => {\n      gl.shadowMap.autoUpdate = gl.shadowMap.needsUpdate = true;\n    };\n  }, [gl.shadowMap]);\n  return null;\n}\n\nexport { BakeShadows };\n", "import { Matrix4, Ray, Sphere, Vector3 } from 'three';\n\nconst _inverseMatrix = new Matrix4();\n\nconst _ray = new Ray();\n\nconst _sphere = new Sphere();\n\nconst _vA = new Vector3();\n\nfunction meshBounds(raycaster, intersects) {\n  const geometry = this.geometry;\n  const material = this.material;\n  const matrixWorld = this.matrixWorld;\n  if (material === undefined) return; // Checking boundingSphere distance to ray\n\n  if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n  _sphere.copy(geometry.boundingSphere);\n\n  _sphere.applyMatrix4(matrixWorld);\n\n  if (raycaster.ray.intersectsSphere(_sphere) === false) return;\n\n  _inverseMatrix.copy(matrixWorld).invert();\n\n  _ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix); // Check boundingBox before continuing\n\n\n  if (geometry.boundingBox !== null && _ray.intersectBox(geometry.boundingBox, _vA) === null) return;\n  intersects.push({\n    distance: _vA.distanceTo(raycaster.ray.origin),\n    point: _vA.clone(),\n    object: this\n  });\n}\n\nexport { meshBounds };\n", "import * as React from 'react';\nimport { useThree } from '@react-three/fiber';\n\nfunction AdaptiveDpr({\n  pixelated\n}) {\n  const gl = useThree(state => state.gl);\n  const active = useThree(state => state.internal.active);\n  const current = useThree(state => state.performance.current);\n  const initialDpr = useThree(state => state.viewport.initialDpr);\n  const setDpr = useThree(state => state.setDpr); // Restore initial pixelratio on unmount\n\n  React.useEffect(() => {\n    const domElement = gl.domElement;\n    return () => {\n      if (active) setDpr(initialDpr);\n      if (pixelated && domElement) domElement.style.imageRendering = 'auto';\n    };\n  }, []); // Set adaptive pixelratio\n\n  React.useEffect(() => {\n    setDpr(current * initialDpr);\n    if (pixelated && gl.domElement) gl.domElement.style.imageRendering = current === 1 ? 'auto' : 'pixelated';\n  }, [current]);\n  return null;\n}\n\nexport { AdaptiveDpr };\n", "import * as React from 'react';\nimport { useThree } from '@react-three/fiber';\n\nfunction AdaptiveEvents() {\n  const get = useThree(state => state.get);\n  const setEvents = useThree(state => state.setEvents);\n  const current = useThree(state => state.performance.current);\n  React.useEffect(() => {\n    const enabled = get().events.enabled;\n    return () => setEvents({\n      enabled\n    });\n  }, []);\n  React.useEffect(() => setEvents({\n    enabled: current === 1\n  }), [current]);\n  return null;\n}\n\nexport { AdaptiveEvents };\n", "import * as React from 'react';\nimport { useState, useContext, useRef, useLayoutEffect, createContext } from 'react';\nimport { useFrame } from '@react-three/fiber';\n\nconst context = /*#__PURE__*/createContext(null);\nfunction PerformanceMonitor({\n  iterations = 10,\n  ms = 250,\n  threshold = 0.75,\n  step = 0.1,\n  factor: _factor = 0.5,\n  flipflops = Infinity,\n  bounds = refreshrate => refreshrate > 100 ? [60, 100] : [40, 60],\n  onIncline,\n  onDecline,\n  onChange,\n  onFallback,\n  children\n}) {\n  const decimalPlacesRatio = Math.pow(10, 0);\n  const [api, _] = useState(() => ({\n    fps: 0,\n    index: 0,\n    factor: _factor,\n    flipped: 0,\n    refreshrate: 0,\n    fallback: false,\n    frames: [],\n    averages: [],\n    subscriptions: new Map(),\n    subscribe: ref => {\n      const key = Symbol();\n      api.subscriptions.set(key, ref.current);\n      return () => void api.subscriptions.delete(key);\n    }\n  }));\n  let lastFactor = 0;\n  useFrame(() => {\n    const {\n      frames,\n      averages\n    } = api; // If the fallback has been reached do not continue running samples\n\n    if (api.fallback) return;\n\n    if (averages.length < iterations) {\n      frames.push(performance.now());\n      const msPassed = frames[frames.length - 1] - frames[0];\n\n      if (msPassed >= ms) {\n        api.fps = Math.round(frames.length / msPassed * 1000 * decimalPlacesRatio) / decimalPlacesRatio;\n        api.refreshrate = Math.max(api.refreshrate, api.fps);\n        averages[api.index++ % iterations] = api.fps;\n\n        if (averages.length === iterations) {\n          const [lower, upper] = bounds(api.refreshrate);\n          const upperBounds = averages.filter(value => value >= upper);\n          const lowerBounds = averages.filter(value => value < lower); // Trigger incline when more than -threshold- avgs exceed the upper bound\n\n          if (upperBounds.length > iterations * threshold) {\n            api.factor = Math.min(1, api.factor + step);\n            api.flipped++;\n            if (onIncline) onIncline(api);\n            api.subscriptions.forEach(value => value.onIncline && value.onIncline(api));\n          } // Trigger decline when more than -threshold- avgs are below the lower bound\n\n\n          if (lowerBounds.length > iterations * threshold) {\n            api.factor = Math.max(0, api.factor - step);\n            api.flipped++;\n            if (onDecline) onDecline(api);\n            api.subscriptions.forEach(value => value.onDecline && value.onDecline(api));\n          }\n\n          if (lastFactor !== api.factor) {\n            lastFactor = api.factor;\n            if (onChange) onChange(api);\n            api.subscriptions.forEach(value => value.onChange && value.onChange(api));\n          }\n\n          if (api.flipped > flipflops && !api.fallback) {\n            api.fallback = true;\n            if (onFallback) onFallback(api);\n            api.subscriptions.forEach(value => value.onFallback && value.onFallback(api));\n          }\n\n          api.averages = []; // Resetting the refreshrate creates more problems than it solves atm\n          // api.refreshrate = 0\n        }\n\n        api.frames = [];\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children);\n}\nfunction usePerformanceMonitor({\n  onIncline,\n  onDecline,\n  onChange,\n  onFallback\n}) {\n  const api = useContext(context);\n  const ref = useRef({\n    onIncline,\n    onDecline,\n    onChange,\n    onFallback\n  });\n  useLayoutEffect(() => {\n    ref.current.onIncline = onIncline;\n    ref.current.onDecline = onDecline;\n    ref.current.onChange = onChange;\n    ref.current.onFallback = onFallback;\n  }, [onIncline, onDecline, onChange, onFallback]);\n  useLayoutEffect(() => api.subscribe(ref), [api]);\n}\n\nexport { PerformanceMonitor, usePerformanceMonitor };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { useThree, createPortal, useFrame } from '@react-three/fiber';\nimport { useFBO } from './useFBO.js';\n\nconst RenderTexture = /*#__PURE__*/React.forwardRef(({\n  children,\n  width,\n  height,\n  samples = 8,\n  renderPriority = 0,\n  eventPriority = 0,\n  frames = Infinity,\n  ...props\n}, forwardRef) => {\n  const {\n    size,\n    viewport\n  } = useThree();\n  const fbo = useFBO((width || size.width) * viewport.dpr, (height || size.height) * viewport.dpr, {\n    samples\n  });\n  const [vScene] = React.useState(() => new THREE.Scene());\n  const compute = React.useCallback((event, state, previous) => {\n    var _fbo$texture, _previous$previousRoo;\n\n    // Since this is only a texture it does not have an easy way to obtain the parent, which we\n    // need to transform event coordinates to local coordinates. We use r3f internals to find the\n    // next Object3D.\n    let parent = (_fbo$texture = fbo.texture) == null ? void 0 : _fbo$texture.__r3f.parent;\n\n    while (parent && !(parent instanceof THREE.Object3D)) {\n      parent = parent.__r3f.parent;\n    }\n\n    if (!parent) return false; // First we call the previous state-onion-layers compute, this is what makes it possible to nest portals\n\n    if (!previous.raycaster.camera) previous.events.compute(event, previous, (_previous$previousRoo = previous.previousRoot) == null ? void 0 : _previous$previousRoo.getState()); // We run a quick check against the parent, if it isn't hit there's no need to raycast at all\n\n    const [intersection] = previous.raycaster.intersectObject(parent);\n    if (!intersection) return false; // We take that hits uv coords, set up this layers raycaster, et voilà, we have raycasting on arbitrary surfaces\n\n    const uv = intersection.uv;\n    if (!uv) return false;\n    state.raycaster.setFromCamera(state.pointer.set(uv.x * 2 - 1, uv.y * 2 - 1), state.camera);\n  }, []);\n  React.useImperativeHandle(forwardRef, () => fbo.texture, [fbo]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal( /*#__PURE__*/React.createElement(Container, {\n    renderPriority: renderPriority,\n    frames: frames,\n    fbo: fbo\n  }, children), vScene, {\n    events: {\n      compute,\n      priority: eventPriority\n    }\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: fbo.texture\n  }, props)));\n}); // The container component has to be separate, it can not be inlined because \"useFrame(state\" when run inside createPortal will return\n// the portals own state which includes user-land overrides (custom cameras etc), but if it is executed in <RenderTexture>'s render function\n// it would return the default state.\n\nfunction Container({\n  frames,\n  renderPriority,\n  children,\n  fbo\n}) {\n  let count = 0;\n  useFrame(state => {\n    if (frames === Infinity || count < frames) {\n      state.gl.setRenderTarget(fbo);\n      state.gl.render(state.scene, state.camera);\n      state.gl.setRenderTarget(null);\n      count++;\n    }\n  }, renderPriority);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\n\nexport { RenderTexture };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\n\nfunction Mask({\n  id = 1,\n  children,\n  colorWrite = false,\n  depthWrite = false,\n  ...props\n}) {\n  const spread = React.useMemo(() => ({\n    colorWrite,\n    depthWrite,\n    stencilWrite: true,\n    stencilRef: id,\n    stencilFunc: THREE.AlwaysStencilFunc,\n    stencilFail: THREE.ReplaceStencilOp,\n    stencilZFail: THREE.ReplaceStencilOp,\n    stencilZPass: THREE.ReplaceStencilOp\n  }), [id, colorWrite, depthWrite]);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    renderOrder: -id\n  }, props), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", spread), typeof children === 'function' ? children(spread) : children);\n}\nfunction useMask(id, inverse = false) {\n  return {\n    stencilWrite: true,\n    stencilRef: id,\n    stencilFunc: inverse ? THREE.NotEqualStencilFunc : THREE.EqualStencilFunc,\n    stencilFail: THREE.KeepStencilOp,\n    stencilZFail: THREE.KeepStencilOp,\n    stencilZPass: THREE.KeepStencilOp\n  };\n}\n\nexport { Mask, useMask };\n", "import * as THREE from 'three';\nimport * as React from 'react';\nimport { useThree, createPortal, useFrame } from '@react-three/fiber';\n\nfunction RenderHud({\n  defaultScene,\n  defaultCamera,\n  renderPriority = 1\n}) {\n  const {\n    gl,\n    scene,\n    camera\n  } = useThree();\n  useFrame(() => {\n    if (renderPriority === 1) {\n      // Clear scene and render the default scene\n      gl.autoClear = true;\n      gl.render(defaultScene, defaultCamera);\n    } // Disable cleaning and render the portal with its own camera\n\n\n    gl.autoClear = false;\n    gl.clearDepth();\n    gl.render(scene, camera);\n  }, renderPriority);\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n}\n\nfunction Hud({\n  children,\n  renderPriority = 1\n}) {\n  const {\n    scene: defaultScene,\n    camera: defaultCamera\n  } = useThree();\n  const [hudScene] = React.useState(() => new THREE.Scene());\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal( /*#__PURE__*/React.createElement(React.Fragment, null, children, /*#__PURE__*/React.createElement(RenderHud, {\n    defaultScene: defaultScene,\n    defaultCamera: defaultCamera,\n    renderPriority: renderPriority\n  })), hudScene, {\n    events: {\n      priority: renderPriority + 1\n    }\n  }));\n}\n\nexport { Hud };\n", "import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, createPortal, useFrame } from '@react-three/fiber';\n\nconst isOrthographicCamera = def => def && def.isOrthographicCamera;\n\nconst col = new THREE.Color();\n/**\n * In `@react-three/fiber` after `v8.0.0` but prior to `v8.1.0`, `state.size` contained only dimension\n * information. After `v8.1.0`, position information (`top`, `left`) was added\n *\n * @todo remove this when drei supports v9 and up\n */\n\nfunction isNonLegacyCanvasSize(size) {\n  return 'top' in size;\n}\n\nfunction computeContainerPosition(canvasSize, trackRect) {\n  const {\n    right,\n    top,\n    left: trackLeft,\n    bottom: trackBottom,\n    width,\n    height\n  } = trackRect;\n  const isOffscreen = trackRect.bottom < 0 || top > canvasSize.height || right < 0 || trackRect.left > canvasSize.width;\n\n  if (isNonLegacyCanvasSize(canvasSize)) {\n    const canvasBottom = canvasSize.top + canvasSize.height;\n    const bottom = canvasBottom - trackBottom;\n    const left = trackLeft - canvasSize.left;\n    return {\n      position: {\n        width,\n        height,\n        left,\n        top,\n        bottom,\n        right\n      },\n      isOffscreen\n    };\n  } // Fall back on old behavior if r3f < 8.1.0\n\n\n  const bottom = canvasSize.height - trackBottom;\n  return {\n    position: {\n      width,\n      height,\n      top,\n      left: trackLeft,\n      bottom,\n      right\n    },\n    isOffscreen\n  };\n}\n\nfunction Container({\n  canvasSize,\n  scene,\n  index,\n  children,\n  frames,\n  rect,\n  track\n}) {\n  const get = useThree(state => state.get);\n  const camera = useThree(state => state.camera);\n  const virtualScene = useThree(state => state.scene);\n  const setEvents = useThree(state => state.setEvents);\n  let frameCount = 0;\n  useFrame(state => {\n    if (frames === Infinity || frameCount <= frames) {\n      var _track$current;\n\n      rect.current = (_track$current = track.current) == null ? void 0 : _track$current.getBoundingClientRect();\n      frameCount++;\n    }\n\n    if (rect.current) {\n      const {\n        position: {\n          left,\n          bottom,\n          width,\n          height\n        },\n        isOffscreen\n      } = computeContainerPosition(canvasSize, rect.current);\n      const aspect = width / height;\n\n      if (isOrthographicCamera(camera)) {\n        if (camera.left !== width / -2 || camera.right !== width / 2 || camera.top !== height / 2 || camera.bottom !== height / -2) {\n          Object.assign(camera, {\n            left: width / -2,\n            right: width / 2,\n            top: height / 2,\n            bottom: height / -2\n          });\n          camera.updateProjectionMatrix();\n        }\n      } else if (camera.aspect !== aspect) {\n        camera.aspect = aspect;\n        camera.updateProjectionMatrix();\n      }\n\n      state.gl.setViewport(left, bottom, width, height);\n      state.gl.setScissor(left, bottom, width, height);\n      state.gl.setScissorTest(true);\n\n      if (isOffscreen) {\n        state.gl.getClearColor(col);\n        state.gl.setClearColor(col, state.gl.getClearAlpha());\n        state.gl.clear(true, true);\n        return;\n      } // When children are present render the portalled scene, otherwise the default scene\n\n\n      state.gl.render(children ? virtualScene : scene, camera);\n    }\n  }, index);\n  React.useEffect(() => {\n    // Connect the event layer to the tracking element\n    const old = get().events.connected;\n    setEvents({\n      connected: track.current\n    });\n    return () => setEvents({\n      connected: old\n    });\n  }, []);\n  React.useEffect(() => {\n    if (isNonLegacyCanvasSize(canvasSize)) {\n      return;\n    }\n\n    console.warn('Detected @react-three/fiber canvas size does not include position information. <View /> may not work as expected. ' + 'Upgrade to @react-three/fiber ^8.1.0 for support.\\n See https://github.com/pmndrs/drei/issues/944');\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\n\nconst View = ({\n  track,\n  index = 1,\n  frames = Infinity,\n  children\n}) => {\n  const rect = React.useRef(null);\n  const {\n    size,\n    scene\n  } = useThree();\n  const [virtualScene] = React.useState(() => new THREE.Scene());\n  const compute = React.useCallback((event, state) => {\n    if (track.current && event.target === track.current) {\n      const {\n        width,\n        height,\n        left,\n        top\n      } = rect.current;\n      const x = event.clientX - left;\n      const y = event.clientY - top;\n      state.pointer.set(x / width * 2 - 1, -(y / height) * 2 + 1);\n      state.raycaster.setFromCamera(state.pointer, state.camera);\n    }\n  }, [rect]);\n  const [ready, toggle] = React.useReducer(() => true, false);\n  React.useEffect(() => {\n    var _track$current2;\n\n    // We need the tracking elements bounds beforehand in order to inject it into the portal\n    rect.current = (_track$current2 = track.current) == null ? void 0 : _track$current2.getBoundingClientRect(); // And now we can proceed\n\n    toggle();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, ready && createPortal( /*#__PURE__*/React.createElement(Container, {\n    canvasSize: size,\n    frames: frames,\n    scene: scene,\n    track: track,\n    rect: rect,\n    index: index\n  }, children), virtualScene, {\n    events: {\n      compute,\n      priority: index\n    },\n    size: {\n      width: rect.current.width,\n      height: rect.current.height\n    }\n  }));\n};\n\nexport { View };\n", "import * as THREE from 'three';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { AxisArrow } from './AxisArrow.js';\nimport { PlaneSlider } from './PlaneSlider.js';\nimport { AxisRotator } from './AxisRotator.js';\nimport { context } from './context.js';\n\nconst tV0 = new THREE.Vector3();\nconst tV1 = new THREE.Vector3();\nconst tV2 = new THREE.Vector3();\n\nconst getPoint2 = (point3, camera, size) => {\n  const widthHalf = size.width / 2;\n  const heightHalf = size.height / 2;\n  camera.updateMatrixWorld(false);\n  const vector = point3.project(camera);\n  vector.x = vector.x * widthHalf + widthHalf;\n  vector.y = -(vector.y * heightHalf) + heightHalf;\n  return vector;\n};\n\nconst getPoint3 = (point2, camera, size, zValue = 1) => {\n  const vector = tV0.set(point2.x / size.width * 2 - 1, -(point2.y / size.height) * 2 + 1, zValue);\n  vector.unproject(camera);\n  return vector;\n};\n\nconst calculateScaleFactor = (point3, radiusPx, camera, size) => {\n  const point2 = getPoint2(tV2.copy(point3), camera, size);\n  let scale = 0;\n\n  for (let i = 0; i < 2; ++i) {\n    const point2off = tV1.copy(point2).setComponent(i, point2.getComponent(i) + radiusPx);\n    const point3off = getPoint3(point2off, camera, size, point2off.z);\n    scale = Math.max(scale, point3.distanceTo(point3off));\n  }\n\n  return scale;\n};\nconst mL0 = new THREE.Matrix4();\nconst mW0 = new THREE.Matrix4();\nconst mP = new THREE.Matrix4();\nconst mPInv = new THREE.Matrix4();\nconst mW = new THREE.Matrix4();\nconst mL = new THREE.Matrix4();\nconst mL0Inv = new THREE.Matrix4();\nconst mdL = new THREE.Matrix4();\nconst bb = new THREE.Box3();\nconst bbObj = new THREE.Box3();\nconst vCenter = new THREE.Vector3();\nconst vSize = new THREE.Vector3();\nconst vAnchorOffset = new THREE.Vector3();\nconst vPosition = new THREE.Vector3();\nconst xDir = new THREE.Vector3(1, 0, 0);\nconst yDir = new THREE.Vector3(0, 1, 0);\nconst zDir = new THREE.Vector3(0, 0, 1);\nconst PivotControls = /*#__PURE__*/React.forwardRef(({\n  matrix,\n  onDragStart,\n  onDrag,\n  onDragEnd,\n  autoTransform = true,\n  anchor,\n  disableAxes = false,\n  disableSliders = false,\n  disableRotations = false,\n  activeAxes = [true, true, true],\n  offset = [0, 0, 0],\n  rotation = [0, 0, 0],\n  scale = 1,\n  lineWidth = 4,\n  fixed = false,\n  translationLimits,\n  rotationLimits,\n  depthTest = true,\n  axisColors = ['#ff2060', '#20df80', '#2080ff'],\n  hoveredColor = '#ffff40',\n  displayValues = true,\n  annotationsClass,\n  opacity = 1,\n  visible = true,\n  userData,\n  children\n}, fRef) => {\n  const invalidate = useThree(state => state.invalidate);\n  const parentRef = React.useRef(null);\n  const ref = React.useRef(null);\n  const gizmoRef = React.useRef(null);\n  const childrenRef = React.useRef(null);\n  const translation = React.useRef([0, 0, 0]);\n  React.useLayoutEffect(() => {\n    if (!anchor) return;\n    childrenRef.current.updateWorldMatrix(true, true);\n    mPInv.copy(childrenRef.current.matrixWorld).invert();\n    bb.makeEmpty();\n    childrenRef.current.traverse(obj => {\n      if (!obj.geometry) return;\n      if (!obj.geometry.boundingBox) obj.geometry.computeBoundingBox();\n      mL.copy(obj.matrixWorld).premultiply(mPInv);\n      bbObj.copy(obj.geometry.boundingBox);\n      bbObj.applyMatrix4(mL);\n      bb.union(bbObj);\n    });\n    vCenter.copy(bb.max).add(bb.min).multiplyScalar(0.5);\n    vSize.copy(bb.max).sub(bb.min).multiplyScalar(0.5);\n    vAnchorOffset.copy(vSize).multiply(new THREE.Vector3(...anchor)).add(vCenter);\n    vPosition.set(...offset).add(vAnchorOffset);\n    gizmoRef.current.position.copy(vPosition);\n    invalidate();\n  });\n  const config = React.useMemo(() => ({\n    onDragStart: props => {\n      mL0.copy(ref.current.matrix);\n      mW0.copy(ref.current.matrixWorld);\n      onDragStart && onDragStart(props);\n      invalidate();\n    },\n    onDrag: mdW => {\n      mP.copy(parentRef.current.matrixWorld);\n      mPInv.copy(mP).invert(); // After applying the delta\n\n      mW.copy(mW0).premultiply(mdW);\n      mL.copy(mW).premultiply(mPInv);\n      mL0Inv.copy(mL0).invert();\n      mdL.copy(mL).multiply(mL0Inv);\n      if (autoTransform) ref.current.matrix.copy(mL);\n      onDrag && onDrag(mL, mdL, mW, mdW);\n      invalidate();\n    },\n    onDragEnd: () => {\n      if (onDragEnd) onDragEnd();\n      invalidate();\n    },\n    translation,\n    translationLimits,\n    rotationLimits,\n    axisColors,\n    hoveredColor,\n    opacity,\n    scale,\n    lineWidth,\n    fixed,\n    displayValues,\n    depthTest,\n    userData,\n    annotationsClass\n  }), [onDragStart, onDrag, onDragEnd, translation, translationLimits, rotationLimits, depthTest, scale, lineWidth, fixed, ...axisColors, hoveredColor, opacity, displayValues, userData, autoTransform, annotationsClass]);\n  const vec = new THREE.Vector3();\n  useFrame(state => {\n    if (fixed) {\n      const sf = calculateScaleFactor(gizmoRef.current.getWorldPosition(vec), scale, state.camera, state.size);\n\n      if (gizmoRef.current) {\n        var _gizmoRef$current, _gizmoRef$current2, _gizmoRef$current3;\n\n        if (((_gizmoRef$current = gizmoRef.current) == null ? void 0 : _gizmoRef$current.scale.x) !== sf || ((_gizmoRef$current2 = gizmoRef.current) == null ? void 0 : _gizmoRef$current2.scale.y) !== sf || ((_gizmoRef$current3 = gizmoRef.current) == null ? void 0 : _gizmoRef$current3.scale.z) !== sf) {\n          gizmoRef.current.scale.setScalar(sf);\n          state.invalidate();\n        }\n      }\n    }\n  });\n  React.useImperativeHandle(fRef, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: config\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: parentRef\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref,\n    matrix: matrix,\n    matrixAutoUpdate: false\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    visible: visible,\n    ref: gizmoRef,\n    position: offset,\n    rotation: rotation\n  }, !disableAxes && activeAxes[0] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 0,\n    direction: xDir\n  }), !disableAxes && activeAxes[1] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 1,\n    direction: yDir\n  }), !disableAxes && activeAxes[2] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 2,\n    direction: zDir\n  }), !disableSliders && activeAxes[0] && activeAxes[1] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 2,\n    dir1: xDir,\n    dir2: yDir\n  }), !disableSliders && activeAxes[0] && activeAxes[2] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 1,\n    dir1: zDir,\n    dir2: xDir\n  }), !disableSliders && activeAxes[2] && activeAxes[1] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 0,\n    dir1: yDir,\n    dir2: zDir\n  }), !disableRotations && activeAxes[0] && activeAxes[1] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 2,\n    dir1: xDir,\n    dir2: yDir\n  }), !disableRotations && activeAxes[0] && activeAxes[2] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 1,\n    dir1: zDir,\n    dir2: xDir\n  }), !disableRotations && activeAxes[2] && activeAxes[1] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 0,\n    dir1: yDir,\n    dir2: zDir\n  })), /*#__PURE__*/React.createElement(\"group\", {\n    ref: childrenRef\n  }, children))));\n});\n\nexport { PivotControls, calculateScaleFactor };\n", "import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line } from '../../core/Line.js';\nimport { Html } from '../Html.js';\nimport { context } from './context.js';\n\nconst vec1 = new THREE.Vector3();\nconst vec2 = new THREE.Vector3();\nconst calculateOffset = (clickPoint, normal, rayStart, rayDir) => {\n  const e1 = normal.dot(normal);\n  const e2 = normal.dot(clickPoint) - normal.dot(rayStart);\n  const e3 = normal.dot(rayDir);\n\n  if (e3 === 0) {\n    return -e2 / e1;\n  }\n\n  vec1.copy(rayDir).multiplyScalar(e1 / e3).sub(normal);\n  vec2.copy(rayDir).multiplyScalar(e2 / e3).add(rayStart).sub(clickPoint);\n  const offset = -vec1.dot(vec2) / vec1.dot(vec1);\n  return offset;\n};\nconst upV = new THREE.Vector3(0, 1, 0);\nconst offsetMatrix = new THREE.Matrix4();\nconst AxisArrow = ({\n  direction,\n  axis\n}) => {\n  const {\n    translation,\n    translationLimits,\n    annotationsClass,\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    displayValues,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const camControls = useThree(state => state.controls);\n  const divRef = React.useRef(null);\n  const objRef = React.useRef(null);\n  const clickInfo = React.useRef(null);\n  const offset0 = React.useRef(0);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const onPointerDown = React.useCallback(e => {\n    if (displayValues) {\n      divRef.current.innerText = `${translation.current[axis].toFixed(2)}`;\n      divRef.current.style.display = 'block';\n    }\n\n    e.stopPropagation();\n    const rotation = new THREE.Matrix4().extractRotation(objRef.current.matrixWorld);\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const dir = direction.clone().applyMatrix4(rotation).normalize();\n    clickInfo.current = {\n      clickPoint,\n      dir\n    };\n    offset0.current = translation.current[axis];\n    onDragStart({\n      component: 'Arrow',\n      axis,\n      origin,\n      directions: [dir]\n    });\n    camControls && (camControls.enabled = false); // @ts-ignore - setPointerCapture is not in the type definition\n\n    e.target.setPointerCapture(e.pointerId);\n  }, [direction, camControls, onDragStart, translation, axis]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        dir\n      } = clickInfo.current;\n      const [min, max] = (translationLimits == null ? void 0 : translationLimits[axis]) || [undefined, undefined];\n      let offset = calculateOffset(clickPoint, dir, e.ray.origin, e.ray.direction);\n\n      if (min !== undefined) {\n        offset = Math.max(offset, min - offset0.current);\n      }\n\n      if (max !== undefined) {\n        offset = Math.min(offset, max - offset0.current);\n      }\n\n      translation.current[axis] = offset0.current + offset;\n\n      if (displayValues) {\n        divRef.current.innerText = `${translation.current[axis].toFixed(2)}`;\n      }\n\n      offsetMatrix.makeTranslation(dir.x * offset, dir.y * offset, dir.z * offset);\n      onDrag(offsetMatrix);\n    }\n  }, [onDrag, isHovered, translation, translationLimits, axis]);\n  const onPointerUp = React.useCallback(e => {\n    if (displayValues) {\n      divRef.current.style.display = 'none';\n    }\n\n    e.stopPropagation();\n    clickInfo.current = null;\n    onDragEnd();\n    camControls && (camControls.enabled = true); // @ts-ignore - releasePointerCapture & PointerEvent#pointerId is not in the type definition\n\n    e.target.releasePointerCapture(e.pointerId);\n  }, [camControls, onDragEnd]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const {\n    cylinderLength,\n    coneWidth,\n    coneLength,\n    matrixL\n  } = React.useMemo(() => {\n    const coneWidth = fixed ? lineWidth / scale * 1.6 : scale / 20;\n    const coneLength = fixed ? 0.2 : scale / 5;\n    const cylinderLength = fixed ? 1 - coneLength : scale - coneLength;\n    const quaternion = new THREE.Quaternion().setFromUnitVectors(upV, direction.clone().normalize());\n    const matrixL = new THREE.Matrix4().makeRotationFromQuaternion(quaternion);\n    return {\n      cylinderLength,\n      coneWidth,\n      coneLength,\n      matrixL\n    };\n  }, [direction, scale, lineWidth, fixed]);\n  const color_ = isHovered ? hoveredColor : axisColors[axis];\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    matrix: matrixL,\n    matrixAutoUpdate: false,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut\n  }, /*#__PURE__*/React.createElement(Html, {\n    position: [0, -coneLength, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    visible: false,\n    position: [0, (cylinderLength + coneLength) / 2.0, 0],\n    userData: userData\n  }, /*#__PURE__*/React.createElement(\"cylinderGeometry\", {\n    args: [coneWidth * 1.4, coneWidth * 1.4, cylinderLength + coneLength, 8, 1]\n  })), /*#__PURE__*/React.createElement(Line, {\n    transparent: true,\n    raycast: () => null,\n    depthTest: depthTest,\n    points: [0, 0, 0, 0, cylinderLength, 0],\n    lineWidth: lineWidth,\n    color: color_,\n    opacity: opacity,\n    polygonOffset: true,\n    renderOrder: 1,\n    polygonOffsetFactor: -10\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    raycast: () => null,\n    position: [0, cylinderLength + coneLength / 2.0, 0],\n    renderOrder: 500\n  }, /*#__PURE__*/React.createElement(\"coneGeometry\", {\n    args: [coneWidth, coneLength, 24, 1]\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    depthTest: depthTest,\n    color: color_,\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10\n  }))));\n};\n\nexport { AxisArrow, calculateOffset };\n", "import * as React from 'react';\n\nconst context = /*#__PURE__*/React.createContext(null);\n\nexport { context };\n", "import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line } from '../../core/Line.js';\nimport { Html } from '../Html.js';\nimport { context } from './context.js';\n\nconst decomposeIntoBasis = (e1, e2, offset) => {\n  const i1 = Math.abs(e1.x) >= Math.abs(e1.y) && Math.abs(e1.x) >= Math.abs(e1.z) ? 0 : Math.abs(e1.y) >= Math.abs(e1.x) && Math.abs(e1.y) >= Math.abs(e1.z) ? 1 : 2;\n  const e2DegrowthOrder = [0, 1, 2].sort((a, b) => Math.abs(e2.getComponent(b)) - Math.abs(e2.getComponent(a)));\n  const i2 = i1 === e2DegrowthOrder[0] ? e2DegrowthOrder[1] : e2DegrowthOrder[0];\n  const a1 = e1.getComponent(i1);\n  const a2 = e1.getComponent(i2);\n  const b1 = e2.getComponent(i1);\n  const b2 = e2.getComponent(i2);\n  const c1 = offset.getComponent(i1);\n  const c2 = offset.getComponent(i2);\n  const y = (c2 - c1 * (a2 / a1)) / (b2 - b1 * (a2 / a1));\n  const x = (c1 - y * b1) / a1;\n  return [x, y];\n};\n\nconst ray = new THREE.Ray();\nconst intersection = new THREE.Vector3();\nconst offsetMatrix = new THREE.Matrix4();\nconst PlaneSlider = ({\n  dir1,\n  dir2,\n  axis\n}) => {\n  const {\n    translation,\n    translationLimits,\n    annotationsClass,\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    displayValues,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const camControls = useThree(state => state.controls);\n  const divRef = React.useRef(null);\n  const objRef = React.useRef(null);\n  const clickInfo = React.useRef(null);\n  const offsetX0 = React.useRef(0);\n  const offsetY0 = React.useRef(0);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const onPointerDown = React.useCallback(e => {\n    if (displayValues) {\n      divRef.current.innerText = `${translation.current[(axis + 1) % 3].toFixed(2)}, ${translation.current[(axis + 2) % 3].toFixed(2)}`;\n      divRef.current.style.display = 'block';\n    }\n\n    e.stopPropagation();\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const e1 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 0).normalize();\n    const e2 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 1).normalize();\n    const normal = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 2).normalize();\n    const plane = new THREE.Plane().setFromNormalAndCoplanarPoint(normal, origin);\n    clickInfo.current = {\n      clickPoint,\n      e1,\n      e2,\n      plane\n    };\n    offsetX0.current = translation.current[(axis + 1) % 3];\n    offsetY0.current = translation.current[(axis + 2) % 3];\n    onDragStart({\n      component: 'Slider',\n      axis,\n      origin,\n      directions: [e1, e2, normal]\n    });\n    camControls && (camControls.enabled = false); // @ts-ignore\n\n    e.target.setPointerCapture(e.pointerId);\n  }, [camControls, onDragStart, axis]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        e1,\n        e2,\n        plane\n      } = clickInfo.current;\n      const [minX, maxX] = (translationLimits == null ? void 0 : translationLimits[(axis + 1) % 3]) || [undefined, undefined];\n      const [minY, maxY] = (translationLimits == null ? void 0 : translationLimits[(axis + 2) % 3]) || [undefined, undefined];\n      ray.copy(e.ray);\n      ray.intersectPlane(plane, intersection);\n      ray.direction.negate();\n      ray.intersectPlane(plane, intersection);\n      intersection.sub(clickPoint);\n      let [offsetX, offsetY] = decomposeIntoBasis(e1, e2, intersection);\n      /* let offsetY = (intersection.y - (intersection.x * e1.y) / e1.x) / (e2.y - (e2.x * e1.y) / e1.x)\n      let offsetX = (intersection.x - offsetY * e2.x) / e1.x */\n\n      if (minX !== undefined) {\n        offsetX = Math.max(offsetX, minX - offsetX0.current);\n      }\n\n      if (maxX !== undefined) {\n        offsetX = Math.min(offsetX, maxX - offsetX0.current);\n      }\n\n      if (minY !== undefined) {\n        offsetY = Math.max(offsetY, minY - offsetY0.current);\n      }\n\n      if (maxY !== undefined) {\n        offsetY = Math.min(offsetY, maxY - offsetY0.current);\n      }\n\n      translation.current[(axis + 1) % 3] = offsetX0.current + offsetX;\n      translation.current[(axis + 2) % 3] = offsetY0.current + offsetY;\n\n      if (displayValues) {\n        divRef.current.innerText = `${translation.current[(axis + 1) % 3].toFixed(2)}, ${translation.current[(axis + 2) % 3].toFixed(2)}`;\n      }\n\n      offsetMatrix.makeTranslation(offsetX * e1.x + offsetY * e2.x, offsetX * e1.y + offsetY * e2.y, offsetX * e1.z + offsetY * e2.z);\n      onDrag(offsetMatrix);\n    }\n  }, [onDrag, isHovered, translation, translationLimits, axis]);\n  const onPointerUp = React.useCallback(e => {\n    if (displayValues) {\n      divRef.current.style.display = 'none';\n    }\n\n    e.stopPropagation();\n    clickInfo.current = null;\n    onDragEnd();\n    camControls && (camControls.enabled = true); // @ts-ignore\n\n    e.target.releasePointerCapture(e.pointerId);\n  }, [camControls, onDragEnd]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const matrixL = React.useMemo(() => {\n    const dir1N = dir1.clone().normalize();\n    const dir2N = dir2.clone().normalize();\n    return new THREE.Matrix4().makeBasis(dir1N, dir2N, dir1N.clone().cross(dir2N));\n  }, [dir1, dir2]);\n  const pos1 = fixed ? 1 / 7 : scale / 7;\n  const length = fixed ? 0.225 : scale * 0.225;\n  const color = isHovered ? hoveredColor : axisColors[axis];\n  const points = React.useMemo(() => [new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, length, 0), new THREE.Vector3(length, length, 0), new THREE.Vector3(length, 0, 0), new THREE.Vector3(0, 0, 0)], [length]);\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef,\n    matrix: matrixL,\n    matrixAutoUpdate: false\n  }, /*#__PURE__*/React.createElement(Html, {\n    position: [0, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(\"group\", {\n    position: [pos1 * 1.7, pos1 * 1.7, 0]\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    visible: true,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut,\n    scale: length,\n    userData: userData\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", null), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    depthTest: depthTest,\n    color: color,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    side: THREE.DoubleSide\n  })), /*#__PURE__*/React.createElement(Line, {\n    position: [-length / 2, -length / 2, 0],\n    transparent: true,\n    depthTest: depthTest,\n    points: points,\n    lineWidth: lineWidth,\n    color: color,\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    userData: userData\n  })));\n};\n\nexport { PlaneSlider };\n", "import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line } from '../../core/Line.js';\nimport { Html } from '../Html.js';\nimport clamp from 'lodash.clamp';\nimport { context } from './context.js';\n\nconst clickDir = new THREE.Vector3();\nconst intersectionDir = new THREE.Vector3();\n\nconst toDegrees = radians => radians * 180 / Math.PI;\n\nconst toRadians = degrees => degrees * Math.PI / 180;\n\nconst calculateAngle = (clickPoint, intersectionPoint, origin, e1, e2) => {\n  clickDir.copy(clickPoint).sub(origin);\n  intersectionDir.copy(intersectionPoint).sub(origin);\n  const dote1e1 = e1.dot(e1);\n  const dote2e2 = e2.dot(e2);\n  const uClick = clickDir.dot(e1) / dote1e1;\n  const vClick = clickDir.dot(e2) / dote2e2;\n  const uIntersection = intersectionDir.dot(e1) / dote1e1;\n  const vIntersection = intersectionDir.dot(e2) / dote2e2;\n  const angleClick = Math.atan2(vClick, uClick);\n  const angleIntersection = Math.atan2(vIntersection, uIntersection);\n  return angleIntersection - angleClick;\n};\n\nconst fmod = (num, denom) => {\n  let k = Math.floor(num / denom);\n  k = k < 0 ? k + 1 : k;\n  return num - k * denom;\n};\n\nconst minimizeAngle = angle => {\n  let result = fmod(angle, 2 * Math.PI);\n\n  if (Math.abs(result) < 1e-6) {\n    return 0.0;\n  }\n\n  if (result < 0.0) {\n    result += 2 * Math.PI;\n  }\n\n  return result;\n};\n\nconst rotMatrix = new THREE.Matrix4();\nconst posNew = new THREE.Vector3();\nconst ray = new THREE.Ray();\nconst intersection = new THREE.Vector3();\nconst AxisRotator = ({\n  dir1,\n  dir2,\n  axis\n}) => {\n  const {\n    rotationLimits,\n    annotationsClass,\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    displayValues,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const camControls = useThree(state => state.controls);\n  const divRef = React.useRef(null);\n  const objRef = React.useRef(null);\n  const angle0 = React.useRef(0);\n  const angle = React.useRef(0);\n  const clickInfo = React.useRef(null);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const onPointerDown = React.useCallback(e => {\n    if (displayValues) {\n      divRef.current.innerText = `${toDegrees(angle.current).toFixed(0)}º`;\n      divRef.current.style.display = 'block';\n    }\n\n    e.stopPropagation();\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const e1 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 0).normalize();\n    const e2 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 1).normalize();\n    const normal = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 2).normalize();\n    const plane = new THREE.Plane().setFromNormalAndCoplanarPoint(normal, origin);\n    clickInfo.current = {\n      clickPoint,\n      origin,\n      e1,\n      e2,\n      normal,\n      plane\n    };\n    onDragStart({\n      component: 'Rotator',\n      axis,\n      origin,\n      directions: [e1, e2, normal]\n    });\n    camControls && (camControls.enabled = false); // @ts-ignore\n\n    e.target.setPointerCapture(e.pointerId);\n  }, [camControls, onDragStart, axis]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        origin,\n        e1,\n        e2,\n        normal,\n        plane\n      } = clickInfo.current;\n      const [min, max] = (rotationLimits == null ? void 0 : rotationLimits[axis]) || [undefined, undefined];\n      ray.copy(e.ray);\n      ray.intersectPlane(plane, intersection);\n      ray.direction.negate();\n      ray.intersectPlane(plane, intersection);\n      let deltaAngle = calculateAngle(clickPoint, intersection, origin, e1, e2);\n      let degrees = toDegrees(deltaAngle); // @ts-ignore\n\n      if (e.shiftKey) {\n        degrees = Math.round(degrees / 10) * 10;\n        deltaAngle = toRadians(degrees);\n      }\n\n      if (min !== undefined && max !== undefined && max - min < 2 * Math.PI) {\n        deltaAngle = minimizeAngle(deltaAngle);\n        deltaAngle = deltaAngle > Math.PI ? deltaAngle - 2 * Math.PI : deltaAngle;\n        deltaAngle = clamp(deltaAngle, min - angle0.current, max - angle0.current);\n        angle.current = angle0.current + deltaAngle;\n      } else {\n        angle.current = minimizeAngle(angle0.current + deltaAngle);\n        angle.current = angle.current > Math.PI ? angle.current - 2 * Math.PI : angle.current;\n      }\n\n      if (displayValues) {\n        degrees = toDegrees(angle.current);\n        divRef.current.innerText = `${degrees.toFixed(0)}º`;\n      }\n\n      rotMatrix.makeRotationAxis(normal, deltaAngle);\n      posNew.copy(origin).applyMatrix4(rotMatrix).sub(origin).negate();\n      rotMatrix.setPosition(posNew);\n      onDrag(rotMatrix);\n    }\n  }, [onDrag, isHovered, rotationLimits, axis]);\n  const onPointerUp = React.useCallback(e => {\n    if (displayValues) {\n      divRef.current.style.display = 'none';\n    }\n\n    e.stopPropagation();\n    angle0.current = angle.current;\n    clickInfo.current = null;\n    onDragEnd();\n    camControls && (camControls.enabled = true); // @ts-ignore\n\n    e.target.releasePointerCapture(e.pointerId);\n  }, [camControls, onDragEnd]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const matrixL = React.useMemo(() => {\n    const dir1N = dir1.clone().normalize();\n    const dir2N = dir2.clone().normalize();\n    return new THREE.Matrix4().makeBasis(dir1N, dir2N, dir1N.clone().cross(dir2N));\n  }, [dir1, dir2]);\n  const r = fixed ? 0.65 : scale * 0.65;\n  const arc = React.useMemo(() => {\n    const segments = 32;\n    const points = [];\n\n    for (let j = 0; j <= segments; j++) {\n      const angle = j * (Math.PI / 2) / segments;\n      points.push(new THREE.Vector3(Math.cos(angle) * r, Math.sin(angle) * r, 0));\n    }\n\n    return points;\n  }, [r]);\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut,\n    matrix: matrixL,\n    matrixAutoUpdate: false\n  }, /*#__PURE__*/React.createElement(Html, {\n    position: [r, r, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(Line, {\n    points: arc,\n    lineWidth: lineWidth * 4,\n    visible: false,\n    userData: userData\n  }), /*#__PURE__*/React.createElement(Line, {\n    transparent: true,\n    raycast: () => null,\n    depthTest: depthTest,\n    points: arc,\n    lineWidth: lineWidth,\n    color: isHovered ? hoveredColor : axisColors[axis],\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10\n  }));\n};\n\nexport { AxisRotator };\n"],
  "mappings": "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",
  "names": ["matrix", "i", "f", "eps", "target", "styles", "isOrthographicCamera", "scale", "React", "target", "i", "React", "React", "React", "ReactDOM", "context", "eps", "target", "state", "distance", "React", "rotation", "React", "context", "key", "React", "i", "context", "React", "Billboard", "React", "React", "React", "Line", "isArray", "QuadraticBezierLine", "start", "end", "mid", "segments", "points", "React", "CubicBezierLine", "React", "CatmullRomLine", "i", "React", "camera", "React", "i", "entry", "Text", "invalidate", "React", "import_react", "React", "target", "React", "colors", "context", "i", "texture", "React", "v", "import_react", "scale", "React", "React", "target", "i", "forwardRef", "React", "setBuffer", "position", "dummy", "i", "React", "React", "pick", "forwardRef", "object", "React", "MarchingCubes", "React", "position", "rotation", "scale", "target", "React", "import_react", "React", "effect", "React", "React", "target", "OrthographicCamera", "set", "camera", "size", "React", "isFunction", "PerspectiveCamera", "set", "camera", "size", "React", "CubeCamera", "scene", "gl", "fbo", "React", "DeviceOrientationControls", "React", "FlyControls", "React", "MapControls", "React", "OrbitControls", "performance", "React", "TrackballControls", "performance", "React", "import_react", "ArcballControls", "performance", "import_lodash", "React", "TransformControls", "pick", "omit", "onChange", "onMouseDown", "onMouseUp", "onObjectChange", "React", "PointerLockControls", "React", "FirstPersonControls", "React", "React", "raycast", "size", "gl", "scene", "invalidate", "raycast", "OrthographicCamera", "React", "context", "raycast", "position", "React", "scale", "rotation", "context", "raycast", "React", "import_react", "import_react", "texture", "React", "React", "StatsImpl", "React", "v", "React", "React", "target", "i", "i", "target", "leftBounds", "i", "areIntersecting", "closestPointLineToLine", "v2", "temp1", "temp2", "closestPointsSegmentToSegment", "sphereIntersectTriangle", "i", "target", "i2", "matrix", "i", "v", "i2", "target", "xyzFields", "ray", "position", "intersection", "ray", "i", "intersection", "i", "i2", "ray", "_box1", "_box2", "shapecast", "nodeIndex32", "nodeIndex16", "uint16Array", "uint32Array", "temp", "obb", "obb2", "intersectsGeometry", "i", "i2", "target", "i", "byteOffset", "ray", "box", "contained", "target", "boundingBox", "i", "i", "i", "position", "React", "context", "Context", "i", "React", "React", "temp", "React", "position", "React", "boundingBox", "import_react", "i", "React", "React", "v", "React", "v", "React", "i", "v", "MeshReflectorMaterial", "gl", "camera", "scene", "target", "fbo1", "fbo2", "blurpass", "reflectorProps", "React", "import_react", "MeshRefractionMaterial", "temp", "React", "React", "create", "Sphere", "Plane", "React", "RoundedBox", "React", "ScreenQuad", "React", "Center", "React", "context", "eps", "v", "size", "target", "position", "React", "React", "forwardRef", "React", "React", "target", "extensions", "loader", "fbo", "scale", "React", "scale", "renderTarget", "renderTargetBlur", "planeGeometry", "blurPlane", "depthMaterial", "horizontalBlurMaterial", "verticalBlurMaterial", "blur", "React", "scale", "forwardRef", "frames", "i", "position", "props", "height", "React", "i", "position", "React", "canvas", "context", "React", "gl", "camera", "scene", "target", "fbo1", "fbo2", "blurpass", "reflectorProps", "React", "scale", "React", "scale", "target", "forwardRef", "React", "Sky", "scale", "React", "position", "colors", "color", "i", "React", "scale", "Plane", "React", "v", "scale", "forwardRef", "colors", "React", "React", "LIST_URL", "React", "context", "colors", "ref", "refs", "React", "i", "globalContext", "parentMatrix", "tempMatrix", "context", "props", "ref", "colors", "instance", "instances", "Merged", "isArray", "React", "context", "colors", "segments", "i", "React", "React", "gl", "camera", "scene", "import_react", "_inverseMatrix", "_ray", "_sphere", "React", "React", "React", "import_react", "context", "React", "forwardRef", "intersection", "React", "React", "React", "bottom", "Container", "React", "React", "React", "context", "translation", "scale", "context", "rotation", "coneWidth", "coneLength", "cylinderLength", "matrixL", "React", "ray", "offsetMatrix", "translation", "scale", "context", "React", "import_lodash", "intersectionPoint", "ray", "intersection", "scale", "context", "clamp", "angle", "scale", "i", "matrix", "rotation", "translation", "context"]
}
